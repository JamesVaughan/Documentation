{"Name":"HybridPSOGD","PropertyMetaInfo":[{"Attributes":[],"PropertyInfo":{"Name":"Name","AssemblyName":"TMG.Estimation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","ClassName":"TMG.Estimation.AI.HybridPSOGD","Signature":"System.String Name","Signature2":"System.String Name","MemberType":16,"GenericArguments":null}},{"Attributes":[],"PropertyInfo":{"Name":"Progress","AssemblyName":"TMG.Estimation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","ClassName":"TMG.Estimation.AI.HybridPSOGD","Signature":"Single Progress","Signature2":"System.Single Progress","MemberType":16,"GenericArguments":null}},{"Attributes":[],"PropertyInfo":{"Name":"ProgressColour","AssemblyName":"TMG.Estimation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","ClassName":"TMG.Estimation.AI.HybridPSOGD","Signature":"System.Tuple`3[System.Byte,System.Byte,System.Byte] ProgressColour","Signature2":"System.Tuple`3[[System.Byte, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Byte, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.Byte, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]] ProgressColour","MemberType":16,"GenericArguments":null}}],"ModuleInfo":{"Description":"Provides a hybrid between a PSO and a Gradient Descent algorithm.  First we use a PSO in order to find a near optimized point. \r\nOnce we have a near optimal point we continue to explore the space with a the GD algorithm to further optimize.","IconURI":null,"Name":null,"DocURL":null,"TypeId":"XTMF.ModuleInformationAttribute, XTMFInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"}}