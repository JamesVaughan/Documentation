### YamlMime:ManagedReference
items:
- uid: XTMF.Testing.ArbitraryParameterParserTest
  commentId: T:XTMF.Testing.ArbitraryParameterParserTest
  id: ArbitraryParameterParserTest
  parent: XTMF.Testing
  children:
  - XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing
  - XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing
  - XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing
  - XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing
  - XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing
  - XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing
  - XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing
  langs:
  - csharp
  - vb
  name: ArbitraryParameterParserTest
  nameWithType: ArbitraryParameterParserTest
  fullName: XTMF.Testing.ArbitraryParameterParserTest
  type: Class
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ArbitraryParameterParserTest
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 23
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestClass]

      public class ArbitraryParameterParserTest
    content.vb: >-
      <TestClass>

      Public Class ArbitraryParameterParserTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing
  id: TestCharParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestCharParsing()
  nameWithType: ArbitraryParameterParserTest.TestCharParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestCharParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 26
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestCharParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestCharParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing
  id: TestDateTimeParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestDateTimeParsing()
  nameWithType: ArbitraryParameterParserTest.TestDateTimeParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestDateTimeParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 42
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestDateTimeParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestDateTimeParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing
  id: TestFloatParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestFloatParsing()
  nameWithType: ArbitraryParameterParserTest.TestFloatParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestFloatParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 58
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestFloatParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestFloatParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing
  id: TestIntegerParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestIntegerParsing()
  nameWithType: ArbitraryParameterParserTest.TestIntegerParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestIntegerParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 74
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestIntegerParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestIntegerParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing
  id: TestStringParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestStringParsing()
  nameWithType: ArbitraryParameterParserTest.TestStringParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestStringParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 90
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestStringParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestStringParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing
  id: TestTestStructParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestTestStructParsing()
  nameWithType: ArbitraryParameterParserTest.TestTestStructParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestTestStructParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 106
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestTestStructParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestTestStructParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing
  commentId: M:XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing
  id: TestXTMFTimeParsing
  parent: XTMF.Testing.ArbitraryParameterParserTest
  langs:
  - csharp
  - vb
  name: TestXTMFTimeParsing()
  nameWithType: ArbitraryParameterParserTest.TestXTMFTimeParsing()
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing()
  type: Method
  source:
    remote:
      path: Code/XTMFTesting/ArbitraryParameterParserTest.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestXTMFTimeParsing
    path: ../../../XTMF/XTMF/Code/XTMFTesting/ArbitraryParameterParserTest.cs
    startLine: 122
  assemblies:
  - XTMFTesting
  namespace: XTMF.Testing
  syntax:
    content: >-
      [TestMethod]

      public void TestXTMFTimeParsing()
    content.vb: >-
      <TestMethod>

      Public Sub TestXTMFTimeParsing
  overload: XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF.Testing
  commentId: N:XTMF.Testing
  name: XTMF.Testing
  nameWithType: XTMF.Testing
  fullName: XTMF.Testing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing
  name: TestCharParsing
  nameWithType: ArbitraryParameterParserTest.TestCharParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestCharParsing
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing
  name: TestDateTimeParsing
  nameWithType: ArbitraryParameterParserTest.TestDateTimeParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestDateTimeParsing
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing
  name: TestFloatParsing
  nameWithType: ArbitraryParameterParserTest.TestFloatParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestFloatParsing
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing
  name: TestIntegerParsing
  nameWithType: ArbitraryParameterParserTest.TestIntegerParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestIntegerParsing
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing
  name: TestStringParsing
  nameWithType: ArbitraryParameterParserTest.TestStringParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestStringParsing
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing
  name: TestTestStructParsing
  nameWithType: ArbitraryParameterParserTest.TestTestStructParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestTestStructParsing
- uid: XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing*
  commentId: Overload:XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing
  name: TestXTMFTimeParsing
  nameWithType: ArbitraryParameterParserTest.TestXTMFTimeParsing
  fullName: XTMF.Testing.ArbitraryParameterParserTest.TestXTMFTimeParsing
