### YamlMime:ManagedReference
items:
- uid: XTMF.LinkedParametersModel
  commentId: T:XTMF.LinkedParametersModel
  id: LinkedParametersModel
  parent: XTMF
  children:
  - XTMF.LinkedParametersModel.#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.ILinkedParameter})
  - XTMF.LinkedParametersModel.Count
  - XTMF.LinkedParametersModel.GetContained(XTMF.ParameterModel)
  - XTMF.LinkedParametersModel.GetLinkedParameters
  - XTMF.LinkedParametersModel.GetRealLinkedParameters
  - XTMF.LinkedParametersModel.LinkedParameterRemoved
  - XTMF.LinkedParametersModel.NewLinkedParameter(System.String,System.String@)
  - XTMF.LinkedParametersModel.OnPropertyChanged(System.String)
  - XTMF.LinkedParametersModel.PropertyChanged
  - XTMF.LinkedParametersModel.RemoveLinkedParameter(XTMF.LinkedParameterModel,System.String@)
  langs:
  - csharp
  - vb
  name: LinkedParametersModel
  nameWithType: LinkedParametersModel
  fullName: XTMF.LinkedParametersModel
  type: Class
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkedParametersModel
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 33
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe LinkedParametersModel provides a clean interface into the operations of LinkedParameters for editing.\n"
  example: []
  syntax:
    content: 'public class LinkedParametersModel : INotifyPropertyChanged'
    content.vb: >-
      Public Class LinkedParametersModel
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.LinkedParametersModel.GetRealLinkedParameters
  commentId: M:XTMF.LinkedParametersModel.GetRealLinkedParameters
  id: GetRealLinkedParameters
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: GetRealLinkedParameters()
  nameWithType: LinkedParametersModel.GetRealLinkedParameters()
  fullName: XTMF.LinkedParametersModel.GetRealLinkedParameters()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetRealLinkedParameters
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 41
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<ILinkedParameter> GetRealLinkedParameters()
    return:
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
    content.vb: Public Function GetRealLinkedParameters As List(Of ILinkedParameter)
  overload: XTMF.LinkedParametersModel.GetRealLinkedParameters*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.LinkedParametersModel.PropertyChanged
  commentId: E:XTMF.LinkedParametersModel.PropertyChanged
  id: PropertyChanged
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: LinkedParametersModel.PropertyChanged
  fullName: XTMF.LinkedParametersModel.PropertyChanged
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PropertyChanged
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 46
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.LinkedParametersModel.LinkedParameterRemoved
  commentId: E:XTMF.LinkedParametersModel.LinkedParameterRemoved
  id: LinkedParameterRemoved
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: LinkedParameterRemoved
  nameWithType: LinkedParametersModel.LinkedParameterRemoved
  fullName: XTMF.LinkedParametersModel.LinkedParameterRemoved
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkedParameterRemoved
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 48
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event CollectionChangeEventHandler LinkedParameterRemoved
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
    content.vb: Public Event LinkedParameterRemoved As CollectionChangeEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.LinkedParametersModel.#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.ILinkedParameter})
  commentId: M:XTMF.LinkedParametersModel.#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.ILinkedParameter})
  id: '#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.ILinkedParameter})'
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: LinkedParametersModel(ModelSystemEditingSession, ModelSystemModel, List<ILinkedParameter>)
  nameWithType: LinkedParametersModel.LinkedParametersModel(ModelSystemEditingSession, ModelSystemModel, List<ILinkedParameter>)
  fullName: XTMF.LinkedParametersModel.LinkedParametersModel(XTMF.ModelSystemEditingSession, XTMF.ModelSystemModel, System.Collections.Generic.List<XTMF.ILinkedParameter>)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 50
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public LinkedParametersModel(ModelSystemEditingSession session, ModelSystemModel modelSystem, List<ILinkedParameter> realLinkedParameters)
    parameters:
    - id: session
      type: XTMF.ModelSystemEditingSession
    - id: modelSystem
      type: XTMF.ModelSystemModel
    - id: realLinkedParameters
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
    content.vb: Public Sub New(session As ModelSystemEditingSession, modelSystem As ModelSystemModel, realLinkedParameters As List(Of ILinkedParameter))
  overload: XTMF.LinkedParametersModel.#ctor*
  nameWithType.vb: LinkedParametersModel.LinkedParametersModel(ModelSystemEditingSession, ModelSystemModel, List(Of ILinkedParameter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.LinkedParametersModel.LinkedParametersModel(XTMF.ModelSystemEditingSession, XTMF.ModelSystemModel, System.Collections.Generic.List(Of XTMF.ILinkedParameter))
  name.vb: LinkedParametersModel(ModelSystemEditingSession, ModelSystemModel, List(Of ILinkedParameter))
- uid: XTMF.LinkedParametersModel.NewLinkedParameter(System.String,System.String@)
  commentId: M:XTMF.LinkedParametersModel.NewLinkedParameter(System.String,System.String@)
  id: NewLinkedParameter(System.String,System.String@)
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: NewLinkedParameter(String, ref String)
  nameWithType: LinkedParametersModel.NewLinkedParameter(String, ref String)
  fullName: XTMF.LinkedParametersModel.NewLinkedParameter(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NewLinkedParameter
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 75
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a new Linked Parameter with the given name\n"
  example: []
  syntax:
    content: public bool NewLinkedParameter(string name, ref string error)
    parameters:
    - id: name
      type: System.String
      description: The name of the linked parameter
    - id: error
      type: System.String
      description: If an error occurs this will contain a message to describe it.
    return:
      type: System.Boolean
      description: True if it executed successfully
    content.vb: Public Function NewLinkedParameter(name As String, ByRef error As String) As Boolean
  overload: XTMF.LinkedParametersModel.NewLinkedParameter*
  nameWithType.vb: LinkedParametersModel.NewLinkedParameter(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.LinkedParametersModel.NewLinkedParameter(System.String, ByRef System.String)
  name.vb: NewLinkedParameter(String, ByRef String)
- uid: XTMF.LinkedParametersModel.GetContained(XTMF.ParameterModel)
  commentId: M:XTMF.LinkedParametersModel.GetContained(XTMF.ParameterModel)
  id: GetContained(XTMF.ParameterModel)
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: GetContained(ParameterModel)
  nameWithType: LinkedParametersModel.GetContained(ParameterModel)
  fullName: XTMF.LinkedParametersModel.GetContained(XTMF.ParameterModel)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetContained
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 106
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public LinkedParameterModel GetContained(ParameterModel parameterModel)
    parameters:
    - id: parameterModel
      type: XTMF.ParameterModel
    return:
      type: XTMF.LinkedParameterModel
    content.vb: Public Function GetContained(parameterModel As ParameterModel) As LinkedParameterModel
  overload: XTMF.LinkedParametersModel.GetContained*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.LinkedParametersModel.RemoveLinkedParameter(XTMF.LinkedParameterModel,System.String@)
  commentId: M:XTMF.LinkedParametersModel.RemoveLinkedParameter(XTMF.LinkedParameterModel,System.String@)
  id: RemoveLinkedParameter(XTMF.LinkedParameterModel,System.String@)
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: RemoveLinkedParameter(LinkedParameterModel, ref String)
  nameWithType: LinkedParametersModel.RemoveLinkedParameter(LinkedParameterModel, ref String)
  fullName: XTMF.LinkedParametersModel.RemoveLinkedParameter(XTMF.LinkedParameterModel, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RemoveLinkedParameter
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 117
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRemove a linked parameter from the linked parameters\n"
  example: []
  syntax:
    content: public bool RemoveLinkedParameter(LinkedParameterModel linkedParameter, ref string error)
    parameters:
    - id: linkedParameter
      type: XTMF.LinkedParameterModel
      description: The linked parameter to remove
    - id: error
      type: System.String
      description: If an error occurs this will contain a message to describe it.
    return:
      type: System.Boolean
      description: If the command was successful or not.
    content.vb: Public Function RemoveLinkedParameter(linkedParameter As LinkedParameterModel, ByRef error As String) As Boolean
  overload: XTMF.LinkedParametersModel.RemoveLinkedParameter*
  nameWithType.vb: LinkedParametersModel.RemoveLinkedParameter(LinkedParameterModel, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.LinkedParametersModel.RemoveLinkedParameter(XTMF.LinkedParameterModel, ByRef System.String)
  name.vb: RemoveLinkedParameter(LinkedParameterModel, ByRef String)
- uid: XTMF.LinkedParametersModel.GetLinkedParameters
  commentId: M:XTMF.LinkedParametersModel.GetLinkedParameters
  id: GetLinkedParameters
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: GetLinkedParameters()
  nameWithType: LinkedParametersModel.GetLinkedParameters()
  fullName: XTMF.LinkedParametersModel.GetLinkedParameters()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetLinkedParameters
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 176
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRetrieve the linked parameters as they currently stand\n"
  example: []
  syntax:
    content: public ObservableCollection<LinkedParameterModel> GetLinkedParameters()
    return:
      type: System.Collections.ObjectModel.ObservableCollection{XTMF.LinkedParameterModel}
      description: A list of the linked parameters
    content.vb: Public Function GetLinkedParameters As ObservableCollection(Of LinkedParameterModel)
  overload: XTMF.LinkedParametersModel.GetLinkedParameters*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.LinkedParametersModel.Count
  commentId: P:XTMF.LinkedParametersModel.Count
  id: Count
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: LinkedParametersModel.Count
  fullName: XTMF.LinkedParametersModel.Count
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Count
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 182
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe number of linked parameters in the mode.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: Number of Linked parameters
    content.vb: Public ReadOnly Property Count As Integer
  overload: XTMF.LinkedParametersModel.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.LinkedParametersModel.OnPropertyChanged(System.String)
  commentId: M:XTMF.LinkedParametersModel.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: XTMF.LinkedParametersModel
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: LinkedParametersModel.OnPropertyChanged(String)
  fullName: XTMF.LinkedParametersModel.OnPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/LinkedParametersModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OnPropertyChanged
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/LinkedParametersModel.cs
    startLine: 217
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: >-
      [NotifyPropertyChangedInvocator]

      protected virtual void OnPropertyChanged(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
    content.vb: >-
      <NotifyPropertyChangedInvocator>

      Protected Overridable Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: XTMF.LinkedParametersModel.OnPropertyChanged*
  attributes:
  - type: XTMF.Annotations.NotifyPropertyChangedInvocatorAttribute
    ctor: XTMF.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: XTMF.LinkedParametersModel.GetRealLinkedParameters*
  commentId: Overload:XTMF.LinkedParametersModel.GetRealLinkedParameters
  name: GetRealLinkedParameters
  nameWithType: LinkedParametersModel.GetRealLinkedParameters
  fullName: XTMF.LinkedParametersModel.GetRealLinkedParameters
- uid: System.Collections.Generic.List{XTMF.ILinkedParameter}
  commentId: T:System.Collections.Generic.List{XTMF.ILinkedParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ILinkedParameter>
  nameWithType: List<ILinkedParameter>
  fullName: System.Collections.Generic.List<XTMF.ILinkedParameter>
  nameWithType.vb: List(Of ILinkedParameter)
  fullName.vb: System.Collections.Generic.List(Of XTMF.ILinkedParameter)
  name.vb: List(Of ILinkedParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel.CollectionChangeEventHandler
  commentId: T:System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: XTMF.LinkedParametersModel.#ctor*
  commentId: Overload:XTMF.LinkedParametersModel.#ctor
  name: LinkedParametersModel
  nameWithType: LinkedParametersModel.LinkedParametersModel
  fullName: XTMF.LinkedParametersModel.LinkedParametersModel
- uid: XTMF.ModelSystemEditingSession
  commentId: T:XTMF.ModelSystemEditingSession
  parent: XTMF
  name: ModelSystemEditingSession
  nameWithType: ModelSystemEditingSession
  fullName: XTMF.ModelSystemEditingSession
- uid: XTMF.ModelSystemModel
  commentId: T:XTMF.ModelSystemModel
  parent: XTMF
  name: ModelSystemModel
  nameWithType: ModelSystemModel
  fullName: XTMF.ModelSystemModel
- uid: XTMF.LinkedParametersModel.NewLinkedParameter*
  commentId: Overload:XTMF.LinkedParametersModel.NewLinkedParameter
  name: NewLinkedParameter
  nameWithType: LinkedParametersModel.NewLinkedParameter
  fullName: XTMF.LinkedParametersModel.NewLinkedParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.LinkedParametersModel.GetContained*
  commentId: Overload:XTMF.LinkedParametersModel.GetContained
  name: GetContained
  nameWithType: LinkedParametersModel.GetContained
  fullName: XTMF.LinkedParametersModel.GetContained
- uid: XTMF.ParameterModel
  commentId: T:XTMF.ParameterModel
  parent: XTMF
  name: ParameterModel
  nameWithType: ParameterModel
  fullName: XTMF.ParameterModel
- uid: XTMF.LinkedParameterModel
  commentId: T:XTMF.LinkedParameterModel
  parent: XTMF
  name: LinkedParameterModel
  nameWithType: LinkedParameterModel
  fullName: XTMF.LinkedParameterModel
- uid: XTMF.LinkedParametersModel.RemoveLinkedParameter*
  commentId: Overload:XTMF.LinkedParametersModel.RemoveLinkedParameter
  name: RemoveLinkedParameter
  nameWithType: LinkedParametersModel.RemoveLinkedParameter
  fullName: XTMF.LinkedParametersModel.RemoveLinkedParameter
- uid: XTMF.LinkedParametersModel.GetLinkedParameters*
  commentId: Overload:XTMF.LinkedParametersModel.GetLinkedParameters
  name: GetLinkedParameters
  nameWithType: LinkedParametersModel.GetLinkedParameters
  fullName: XTMF.LinkedParametersModel.GetLinkedParameters
- uid: System.Collections.ObjectModel.ObservableCollection{XTMF.LinkedParameterModel}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{XTMF.LinkedParameterModel}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<LinkedParameterModel>
  nameWithType: ObservableCollection<LinkedParameterModel>
  fullName: System.Collections.ObjectModel.ObservableCollection<XTMF.LinkedParameterModel>
  nameWithType.vb: ObservableCollection(Of LinkedParameterModel)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of XTMF.LinkedParameterModel)
  name.vb: ObservableCollection(Of LinkedParameterModel)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.LinkedParameterModel
    name: LinkedParameterModel
    nameWithType: LinkedParameterModel
    fullName: XTMF.LinkedParameterModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.LinkedParameterModel
    name: LinkedParameterModel
    nameWithType: LinkedParameterModel
    fullName: XTMF.LinkedParameterModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: XTMF.LinkedParametersModel.Count*
  commentId: Overload:XTMF.LinkedParametersModel.Count
  name: Count
  nameWithType: LinkedParametersModel.Count
  fullName: XTMF.LinkedParametersModel.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.LinkedParametersModel.OnPropertyChanged*
  commentId: Overload:XTMF.LinkedParametersModel.OnPropertyChanged
  name: OnPropertyChanged
  nameWithType: LinkedParametersModel.OnPropertyChanged
  fullName: XTMF.LinkedParametersModel.OnPropertyChanged
