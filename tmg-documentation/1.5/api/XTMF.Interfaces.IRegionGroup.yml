### YamlMime:ManagedReference
items:
- uid: XTMF.Interfaces.IRegionGroup
  commentId: T:XTMF.Interfaces.IRegionGroup
  id: IRegionGroup
  parent: XTMF.Interfaces
  children:
  - XTMF.Interfaces.IRegionGroup.Modules
  - XTMF.Interfaces.IRegionGroup.Name
  langs:
  - csharp
  - vb
  name: IRegionGroup
  nameWithType: IRegionGroup
  fullName: XTMF.Interfaces.IRegionGroup
  type: Interface
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IRegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IRegionGroup
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Interfaces/IRegionGroup.cs
    startLine: 8
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Interfaces
  syntax:
    content: public interface IRegionGroup
    content.vb: Public Interface IRegionGroup
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: XTMF.Interfaces.IRegionGroup.Name
  commentId: P:XTMF.Interfaces.IRegionGroup.Name
  id: Name
  parent: XTMF.Interfaces.IRegionGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IRegionGroup.Name
  fullName: XTMF.Interfaces.IRegionGroup.Name
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IRegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Interfaces/IRegionGroup.cs
    startLine: 10
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Interfaces
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: XTMF.Interfaces.IRegionGroup.Name*
  modifiers.csharp:
  - get
  - set
- uid: XTMF.Interfaces.IRegionGroup.Modules
  commentId: P:XTMF.Interfaces.IRegionGroup.Modules
  id: Modules
  parent: XTMF.Interfaces.IRegionGroup
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: IRegionGroup.Modules
  fullName: XTMF.Interfaces.IRegionGroup.Modules
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IRegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Modules
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Interfaces/IRegionGroup.cs
    startLine: 12
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Interfaces
  syntax:
    content: List<IModelSystemStructure> Modules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.IModelSystemStructure}
    content.vb: Property Modules As List(Of IModelSystemStructure)
  overload: XTMF.Interfaces.IRegionGroup.Modules*
  modifiers.csharp:
  - get
  - set
references:
- uid: XTMF.Interfaces
  commentId: N:XTMF.Interfaces
  name: XTMF.Interfaces
  nameWithType: XTMF.Interfaces
  fullName: XTMF.Interfaces
- uid: XTMF.Interfaces.IRegionGroup.Name*
  commentId: Overload:XTMF.Interfaces.IRegionGroup.Name
  name: Name
  nameWithType: IRegionGroup.Name
  fullName: XTMF.Interfaces.IRegionGroup.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.Interfaces.IRegionGroup.Modules*
  commentId: Overload:XTMF.Interfaces.IRegionGroup.Modules
  name: Modules
  nameWithType: IRegionGroup.Modules
  fullName: XTMF.Interfaces.IRegionGroup.Modules
- uid: System.Collections.Generic.List{XTMF.IModelSystemStructure}
  commentId: T:System.Collections.Generic.List{XTMF.IModelSystemStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModelSystemStructure>
  nameWithType: List<IModelSystemStructure>
  fullName: System.Collections.Generic.List<XTMF.IModelSystemStructure>
  nameWithType.vb: List(Of IModelSystemStructure)
  fullName.vb: System.Collections.Generic.List(Of XTMF.IModelSystemStructure)
  name.vb: List(Of IModelSystemStructure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
