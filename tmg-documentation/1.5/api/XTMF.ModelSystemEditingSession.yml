### YamlMime:ManagedReference
items:
- uid: XTMF.ModelSystemEditingSession
  commentId: T:XTMF.ModelSystemEditingSession
  id: ModelSystemEditingSession
  parent: XTMF
  children:
  - XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ModelSystem)
  - XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.Int32)
  - XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.String)
  - XTMF.ModelSystemEditingSession.CancelRun(XTMF.XTMFRun)
  - XTMF.ModelSystemEditingSession.CanRedo
  - XTMF.ModelSystemEditingSession.CanRun
  - XTMF.ModelSystemEditingSession.CanUndo
  - XTMF.ModelSystemEditingSession.Close(System.String@)
  - XTMF.ModelSystemEditingSession.CloseWillTerminate
  - XTMF.ModelSystemEditingSession.CommandExecuted
  - XTMF.ModelSystemEditingSession.Configuration
  - XTMF.ModelSystemEditingSession.CopyOnRedo
  - XTMF.ModelSystemEditingSession.CopyOnUndo
  - XTMF.ModelSystemEditingSession.Dispose
  - XTMF.ModelSystemEditingSession.EditingModelSystem
  - XTMF.ModelSystemEditingSession.EditingProject
  - XTMF.ModelSystemEditingSession.ExecuteCombinedCommands(System.String,System.Action)
  - XTMF.ModelSystemEditingSession.ExecuteDelayedRun(XTMF.XTMFRun,System.DateTime)
  - XTMF.ModelSystemEditingSession.ExecuteRun(XTMF.XTMFRun,System.Boolean)
  - XTMF.ModelSystemEditingSession.Finalize
  - XTMF.ModelSystemEditingSession.GetModelSystemStructureModel(XTMF.ModelSystemStructure)
  - XTMF.ModelSystemEditingSession.GetParent(XTMF.ModelSystemStructureModel)
  - XTMF.ModelSystemEditingSession.GetPreviousRunNames
  - XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync
  - XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructure)
  - XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructureModel)
  - XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes(System.Type[])
  - XTMF.ModelSystemEditingSession.GetValidModules(XTMF.ModelSystemStructureModel)
  - XTMF.ModelSystemEditingSession.HasChanged
  - XTMF.ModelSystemEditingSession.IsValidRunName(System.String)
  - XTMF.ModelSystemEditingSession.ModelSystemModel
  - XTMF.ModelSystemEditingSession.Name
  - XTMF.ModelSystemEditingSession.NameChanged
  - XTMF.ModelSystemEditingSession.PreviousRunName
  - XTMF.ModelSystemEditingSession.ProjectEditingSession
  - XTMF.ModelSystemEditingSession.ProjectWasExternallySaved
  - XTMF.ModelSystemEditingSession.Redo(System.String@)
  - XTMF.ModelSystemEditingSession.ReorderQueuedRun(XTMF.XTMFRun,System.Int32)
  - XTMF.ModelSystemEditingSession.RevertToLastSave(System.String@)
  - XTMF.ModelSystemEditingSession.Run(System.String,System.String@,System.Boolean,System.Boolean,System.Boolean)
  - XTMF.ModelSystemEditingSession.RunCommand(XTMF.Editing.XTMFCommand,System.String@)
  - XTMF.ModelSystemEditingSession.RunNameExists(System.String)
  - XTMF.ModelSystemEditingSession.Runtime
  - XTMF.ModelSystemEditingSession.Save(System.String@)
  - XTMF.ModelSystemEditingSession.SaveAs(System.String,System.String@)
  - XTMF.ModelSystemEditingSession.Saved
  - XTMF.ModelSystemEditingSession.SaveRelease
  - XTMF.ModelSystemEditingSession.SaveWait
  - XTMF.ModelSystemEditingSession.SessionClosed
  - XTMF.ModelSystemEditingSession.Undo(System.String@)
  langs:
  - csharp
  - vb
  name: ModelSystemEditingSession
  nameWithType: ModelSystemEditingSession
  fullName: XTMF.ModelSystemEditingSession
  type: Class
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemEditingSession
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 32
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: 'public sealed class ModelSystemEditingSession : IDisposable'
    content.vb: >-
      Public NotInheritable Class ModelSystemEditingSession
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: XTMF.ModelSystemEditingSession.Runtime
  commentId: P:XTMF.ModelSystemEditingSession.Runtime
  id: Runtime
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Runtime
  nameWithType: ModelSystemEditingSession.Runtime
  fullName: XTMF.ModelSystemEditingSession.Runtime
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Runtime
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 52
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe runtime we are in\n"
  example: []
  syntax:
    content: public XTMFRuntime Runtime { get; }
    parameters: []
    return:
      type: XTMF.XTMFRuntime
    content.vb: Public ReadOnly Property Runtime As XTMFRuntime
  overload: XTMF.ModelSystemEditingSession.Runtime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.GetPreviousRunNames
  commentId: M:XTMF.ModelSystemEditingSession.GetPreviousRunNames
  id: GetPreviousRunNames
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetPreviousRunNames()
  nameWithType: ModelSystemEditingSession.GetPreviousRunNames()
  fullName: XTMF.ModelSystemEditingSession.GetPreviousRunNames()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetPreviousRunNames
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 56
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<string> GetPreviousRunNames()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function GetPreviousRunNames As List(Of String)
  overload: XTMF.ModelSystemEditingSession.GetPreviousRunNames*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync
  commentId: M:XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync
  id: GetPreviousRunNamesAsync
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetPreviousRunNamesAsync()
  nameWithType: ModelSystemEditingSession.GetPreviousRunNamesAsync()
  fullName: XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetPreviousRunNamesAsync
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 71
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Task<List<string>> GetPreviousRunNamesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
    content.vb: Public Function GetPreviousRunNamesAsync As Task(Of List(Of String))
  overload: XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ModelSystem)
  commentId: M:XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ModelSystem)
  id: '#ctor(XTMF.XTMFRuntime,XTMF.ModelSystem)'
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ModelSystemEditingSession(XTMFRuntime, ModelSystem)
  nameWithType: ModelSystemEditingSession.ModelSystemEditingSession(XTMFRuntime, ModelSystem)
  fullName: XTMF.ModelSystemEditingSession.ModelSystemEditingSession(XTMF.XTMFRuntime, XTMF.ModelSystem)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 87
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a new session to edit a model system\n"
  example: []
  syntax:
    content: public ModelSystemEditingSession(XTMFRuntime runtime, ModelSystem modelSystem)
    parameters:
    - id: runtime
      type: XTMF.XTMFRuntime
    - id: modelSystem
      type: XTMF.ModelSystem
      description: The model system to edit
    content.vb: Public Sub New(runtime As XTMFRuntime, modelSystem As ModelSystem)
  overload: XTMF.ModelSystemEditingSession.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.Int32)
  commentId: M:XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.Int32)
  id: '#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.Int32)'
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ModelSystemEditingSession(XTMFRuntime, ProjectEditingSession, Int32)
  nameWithType: ModelSystemEditingSession.ModelSystemEditingSession(XTMFRuntime, ProjectEditingSession, Int32)
  fullName: XTMF.ModelSystemEditingSession.ModelSystemEditingSession(XTMF.XTMFRuntime, XTMF.ProjectEditingSession, System.Int32)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 101
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a new editing session to edit a project&apos;s model system\n"
  example: []
  syntax:
    content: public ModelSystemEditingSession(XTMFRuntime runtime, ProjectEditingSession ProjectEditingSession, int modelSystemIndex)
    parameters:
    - id: runtime
      type: XTMF.XTMFRuntime
    - id: ProjectEditingSession
      type: XTMF.ProjectEditingSession
      description: The editing session to read from
    - id: modelSystemIndex
      type: System.Int32
      description: The model system&apos;s index inside of the project
    content.vb: Public Sub New(runtime As XTMFRuntime, ProjectEditingSession As ProjectEditingSession, modelSystemIndex As Integer)
  overload: XTMF.ModelSystemEditingSession.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.String)
  commentId: M:XTMF.ModelSystemEditingSession.#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.String)
  id: '#ctor(XTMF.XTMFRuntime,XTMF.ProjectEditingSession,System.String)'
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ModelSystemEditingSession(XTMFRuntime, ProjectEditingSession, String)
  nameWithType: ModelSystemEditingSession.ModelSystemEditingSession(XTMFRuntime, ProjectEditingSession, String)
  fullName: XTMF.ModelSystemEditingSession.ModelSystemEditingSession(XTMF.XTMFRuntime, XTMF.ProjectEditingSession, System.String)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 117
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a model editing session for a previous run.  This will be read-only!\n"
  example: []
  syntax:
    content: public ModelSystemEditingSession(XTMFRuntime runtime, ProjectEditingSession projectSession, string runFile)
    parameters:
    - id: runtime
      type: XTMF.XTMFRuntime
      description: A link to the XTMFRuntime
    - id: projectSession
      type: XTMF.ProjectEditingSession
      description: The project this is for.
    - id: runFile
      type: System.String
      description: The location of the previous run.
    content.vb: Public Sub New(runtime As XTMFRuntime, projectSession As ProjectEditingSession, runFile As String)
  overload: XTMF.ModelSystemEditingSession.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.ProjectEditingSession
  commentId: P:XTMF.ModelSystemEditingSession.ProjectEditingSession
  id: ProjectEditingSession
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ProjectEditingSession
  nameWithType: ModelSystemEditingSession.ProjectEditingSession
  fullName: XTMF.ModelSystemEditingSession.ProjectEditingSession
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectEditingSession
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 125
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ProjectEditingSession ProjectEditingSession { get; }
    parameters: []
    return:
      type: XTMF.ProjectEditingSession
    content.vb: Public ReadOnly Property ProjectEditingSession As ProjectEditingSession
  overload: XTMF.ModelSystemEditingSession.ProjectEditingSession*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.CanRun
  commentId: P:XTMF.ModelSystemEditingSession.CanRun
  id: CanRun
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CanRun
  nameWithType: ModelSystemEditingSession.CanRun
  fullName: XTMF.ModelSystemEditingSession.CanRun
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CanRun
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 132
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nLets you know if the model system is able to run.\n"
  example: []
  syntax:
    content: public bool CanRun { get; }
    parameters: []
    return:
      type: System.Boolean
      description: If you can run this model system.
    content.vb: Public ReadOnly Property CanRun As Boolean
  overload: XTMF.ModelSystemEditingSession.CanRun*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.EditingProject
  commentId: P:XTMF.ModelSystemEditingSession.EditingProject
  id: EditingProject
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: EditingProject
  nameWithType: ModelSystemEditingSession.EditingProject
  fullName: XTMF.ModelSystemEditingSession.EditingProject
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EditingProject
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 138
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nIs the session editing a model system inside of a project?\n"
  example: []
  syntax:
    content: public bool EditingProject { get; }
    parameters: []
    return:
      type: System.Boolean
      description: If it is a project, true.
    content.vb: Public ReadOnly Property EditingProject As Boolean
  overload: XTMF.ModelSystemEditingSession.EditingProject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.EditingModelSystem
  commentId: P:XTMF.ModelSystemEditingSession.EditingModelSystem
  id: EditingModelSystem
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: EditingModelSystem
  nameWithType: ModelSystemEditingSession.EditingModelSystem
  fullName: XTMF.ModelSystemEditingSession.EditingModelSystem
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EditingModelSystem
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 144
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nIs the session editing a model system that is not in a project?\n"
  example: []
  syntax:
    content: public bool EditingModelSystem { get; }
    parameters: []
    return:
      type: System.Boolean
      description: If it is not a project, true.
    content.vb: Public ReadOnly Property EditingModelSystem As Boolean
  overload: XTMF.ModelSystemEditingSession.EditingModelSystem*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.ModelSystemModel
  commentId: P:XTMF.ModelSystemEditingSession.ModelSystemModel
  id: ModelSystemModel
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ModelSystemModel
  nameWithType: ModelSystemEditingSession.ModelSystemModel
  fullName: XTMF.ModelSystemEditingSession.ModelSystemModel
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemModel
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 149
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe model system&apos;s model that we will interact with.\n"
  example: []
  syntax:
    content: public ModelSystemModel ModelSystemModel { get; }
    parameters: []
    return:
      type: XTMF.ModelSystemModel
    content.vb: Public ReadOnly Property ModelSystemModel As ModelSystemModel
  overload: XTMF.ModelSystemEditingSession.ModelSystemModel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.Configuration
  commentId: P:XTMF.ModelSystemEditingSession.Configuration
  id: Configuration
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ModelSystemEditingSession.Configuration
  fullName: XTMF.ModelSystemEditingSession.Configuration
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Configuration
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 151
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IConfiguration Configuration { get; }
    parameters: []
    return:
      type: XTMF.IConfiguration
    content.vb: Public ReadOnly Property Configuration As IConfiguration
  overload: XTMF.ModelSystemEditingSession.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.HasChanged
  commentId: P:XTMF.ModelSystemEditingSession.HasChanged
  id: HasChanged
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: HasChanged
  nameWithType: ModelSystemEditingSession.HasChanged
  fullName: XTMF.ModelSystemEditingSession.HasChanged
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HasChanged
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 156
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nContains if the model system has changed since the last save.\n"
  example: []
  syntax:
    content: public bool HasChanged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasChanged As Boolean
  overload: XTMF.ModelSystemEditingSession.HasChanged*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.CloseWillTerminate
  commentId: P:XTMF.ModelSystemEditingSession.CloseWillTerminate
  id: CloseWillTerminate
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CloseWillTerminate
  nameWithType: ModelSystemEditingSession.CloseWillTerminate
  fullName: XTMF.ModelSystemEditingSession.CloseWillTerminate
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CloseWillTerminate
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 161
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis will return true if closing a window will terminate this session.\n"
  example: []
  syntax:
    content: public bool CloseWillTerminate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CloseWillTerminate As Boolean
  overload: XTMF.ModelSystemEditingSession.CloseWillTerminate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.Name
  commentId: P:XTMF.ModelSystemEditingSession.Name
  id: Name
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModelSystemEditingSession.Name
  fullName: XTMF.ModelSystemEditingSession.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 177
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: XTMF.ModelSystemEditingSession.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.CanUndo
  commentId: P:XTMF.ModelSystemEditingSession.CanUndo
  id: CanUndo
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CanUndo
  nameWithType: ModelSystemEditingSession.CanUndo
  fullName: XTMF.ModelSystemEditingSession.CanUndo
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CanUndo
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 179
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool CanUndo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanUndo As Boolean
  overload: XTMF.ModelSystemEditingSession.CanUndo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.CanRedo
  commentId: P:XTMF.ModelSystemEditingSession.CanRedo
  id: CanRedo
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CanRedo
  nameWithType: ModelSystemEditingSession.CanRedo
  fullName: XTMF.ModelSystemEditingSession.CanRedo
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CanRedo
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 190
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool CanRedo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanRedo As Boolean
  overload: XTMF.ModelSystemEditingSession.CanRedo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemEditingSession.PreviousRunName
  commentId: P:XTMF.ModelSystemEditingSession.PreviousRunName
  id: PreviousRunName
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: PreviousRunName
  nameWithType: ModelSystemEditingSession.PreviousRunName
  fullName: XTMF.ModelSystemEditingSession.PreviousRunName
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PreviousRunName
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 201
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string PreviousRunName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PreviousRunName As String
  overload: XTMF.ModelSystemEditingSession.PreviousRunName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.Dispose
  commentId: M:XTMF.ModelSystemEditingSession.Dispose
  id: Dispose
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ModelSystemEditingSession.Dispose()
  fullName: XTMF.ModelSystemEditingSession.Dispose()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 203
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: XTMF.ModelSystemEditingSession.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.GetValidModules(XTMF.ModelSystemStructureModel)
  commentId: M:XTMF.ModelSystemEditingSession.GetValidModules(XTMF.ModelSystemStructureModel)
  id: GetValidModules(XTMF.ModelSystemStructureModel)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetValidModules(ModelSystemStructureModel)
  nameWithType: ModelSystemEditingSession.GetValidModules(ModelSystemStructureModel)
  fullName: XTMF.ModelSystemEditingSession.GetValidModules(XTMF.ModelSystemStructureModel)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetValidModules
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 213
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet the available types for the selected module\n"
  example: []
  syntax:
    content: public List<Type> GetValidModules(ModelSystemStructureModel selectedModule)
    parameters:
    - id: selectedModule
      type: XTMF.ModelSystemStructureModel
      description: The module to find the valid types for
    return:
      type: System.Collections.Generic.List{System.Type}
      description: A list of the allowed types.
    content.vb: Public Function GetValidModules(selectedModule As ModelSystemStructureModel) As List(Of Type)
  overload: XTMF.ModelSystemEditingSession.GetValidModules*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.CopyOnUndo
  commentId: M:XTMF.ModelSystemEditingSession.CopyOnUndo
  id: CopyOnUndo
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CopyOnUndo()
  nameWithType: ModelSystemEditingSession.CopyOnUndo()
  fullName: XTMF.ModelSystemEditingSession.CopyOnUndo()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CopyOnUndo
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 219
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<XTMFCommand> CopyOnUndo()
    return:
      type: System.Collections.Generic.List{XTMF.Editing.XTMFCommand}
    content.vb: Public Function CopyOnUndo As List(Of XTMFCommand)
  overload: XTMF.ModelSystemEditingSession.CopyOnUndo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.CopyOnRedo
  commentId: M:XTMF.ModelSystemEditingSession.CopyOnRedo
  id: CopyOnRedo
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CopyOnRedo()
  nameWithType: ModelSystemEditingSession.CopyOnRedo()
  fullName: XTMF.ModelSystemEditingSession.CopyOnRedo()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CopyOnRedo
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 224
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<XTMFCommand> CopyOnRedo()
    return:
      type: System.Collections.Generic.List{XTMF.Editing.XTMFCommand}
    content.vb: Public Function CopyOnRedo As List(Of XTMFCommand)
  overload: XTMF.ModelSystemEditingSession.CopyOnRedo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.ProjectWasExternallySaved
  commentId: E:XTMF.ModelSystemEditingSession.ProjectWasExternallySaved
  id: ProjectWasExternallySaved
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ProjectWasExternallySaved
  nameWithType: ModelSystemEditingSession.ProjectWasExternallySaved
  fullName: XTMF.ModelSystemEditingSession.ProjectWasExternallySaved
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectWasExternallySaved
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 233
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis event fires when the project containing this model system\nwas saved externally\n"
  example: []
  syntax:
    content: public event EventHandler<ProjectWasExternallySavedEventArgs> ProjectWasExternallySaved
    return:
      type: System.EventHandler{XTMF.ProjectWasExternallySavedEventArgs}
    content.vb: Public Event ProjectWasExternallySaved As EventHandler(Of ProjectWasExternallySavedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.Saved
  commentId: E:XTMF.ModelSystemEditingSession.Saved
  id: Saved
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Saved
  nameWithType: ModelSystemEditingSession.Saved
  fullName: XTMF.ModelSystemEditingSession.Saved
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Saved
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 235
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event EventHandler Saved
    return:
      type: System.EventHandler
    content.vb: Public Event Saved As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.SessionClosed
  commentId: E:XTMF.ModelSystemEditingSession.SessionClosed
  id: SessionClosed
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: SessionClosed
  nameWithType: ModelSystemEditingSession.SessionClosed
  fullName: XTMF.ModelSystemEditingSession.SessionClosed
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SessionClosed
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 247
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis event occurs when no references are left to this editing session.\n"
  example: []
  syntax:
    content: public event EventHandler SessionClosed
    return:
      type: System.EventHandler
    content.vb: Public Event SessionClosed As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.SaveWait
  commentId: M:XTMF.ModelSystemEditingSession.SaveWait
  id: SaveWait
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: SaveWait()
  nameWithType: ModelSystemEditingSession.SaveWait()
  fullName: XTMF.ModelSystemEditingSession.SaveWait()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveWait
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 249
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SaveWait()
    return:
      type: System.Boolean
    content.vb: Public Function SaveWait As Boolean
  overload: XTMF.ModelSystemEditingSession.SaveWait*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.SaveRelease
  commentId: M:XTMF.ModelSystemEditingSession.SaveRelease
  id: SaveRelease
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: SaveRelease()
  nameWithType: ModelSystemEditingSession.SaveRelease()
  fullName: XTMF.ModelSystemEditingSession.SaveRelease()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveRelease
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 254
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void SaveRelease()
    content.vb: Public Sub SaveRelease
  overload: XTMF.ModelSystemEditingSession.SaveRelease*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.Run(System.String,System.String@,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:XTMF.ModelSystemEditingSession.Run(System.String,System.String@,System.Boolean,System.Boolean,System.Boolean)
  id: Run(System.String,System.String@,System.Boolean,System.Boolean,System.Boolean)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Run(String, ref String, Boolean, Boolean, Boolean)
  nameWithType: ModelSystemEditingSession.Run(String, ref String, Boolean, Boolean, Boolean)
  fullName: XTMF.ModelSystemEditingSession.Run(System.String, ref System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 306
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRun the model if it is contained inside of a project.\n"
  example: []
  syntax:
    content: public XTMFRun Run(string runName, ref string error, bool overwrite = false, bool executeNow = true, bool forceLocal = false)
    parameters:
    - id: runName
      type: System.String
      description: ''
    - id: error
      type: System.String
      description: A message in case of error
    - id: overwrite
      type: System.Boolean
    - id: executeNow
      type: System.Boolean
      description: Should the run start executing now or wait for all other runs to finish first?
    - id: forceLocal
      type: System.Boolean
      description: Execute in the local process, overriding default behaviour.
    return:
      type: XTMF.XTMFRun
      description: A reference to the run.
    content.vb: Public Function Run(runName As String, ByRef error As String, overwrite As Boolean = False, executeNow As Boolean = True, forceLocal As Boolean = False) As XTMFRun
  overload: XTMF.ModelSystemEditingSession.Run*
  nameWithType.vb: ModelSystemEditingSession.Run(String, ByRef String, Boolean, Boolean, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.Run(System.String, ByRef System.String, System.Boolean, System.Boolean, System.Boolean)
  name.vb: Run(String, ByRef String, Boolean, Boolean, Boolean)
- uid: XTMF.ModelSystemEditingSession.ExecuteRun(XTMF.XTMFRun,System.Boolean)
  commentId: M:XTMF.ModelSystemEditingSession.ExecuteRun(XTMF.XTMFRun,System.Boolean)
  id: ExecuteRun(XTMF.XTMFRun,System.Boolean)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ExecuteRun(XTMFRun, Boolean)
  nameWithType: ModelSystemEditingSession.ExecuteRun(XTMFRun, Boolean)
  fullName: XTMF.ModelSystemEditingSession.ExecuteRun(XTMF.XTMFRun, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExecuteRun
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 370
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public void ExecuteRun(XTMFRun run, bool executeNow)
    parameters:
    - id: run
      type: XTMF.XTMFRun
      description: ''
    - id: executeNow
      type: System.Boolean
      description: ''
    content.vb: Public Sub ExecuteRun(run As XTMFRun, executeNow As Boolean)
  overload: XTMF.ModelSystemEditingSession.ExecuteRun*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.ReorderQueuedRun(XTMF.XTMFRun,System.Int32)
  commentId: M:XTMF.ModelSystemEditingSession.ReorderQueuedRun(XTMF.XTMFRun,System.Int32)
  id: ReorderQueuedRun(XTMF.XTMFRun,System.Int32)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ReorderQueuedRun(XTMFRun, Int32)
  nameWithType: ModelSystemEditingSession.ReorderQueuedRun(XTMFRun, Int32)
  fullName: XTMF.ModelSystemEditingSession.ReorderQueuedRun(XTMF.XTMFRun, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReorderQueuedRun
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 380
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nReorders a queued run - inserts the passed run into the new Queue index.\n"
  example: []
  syntax:
    content: public void ReorderQueuedRun(XTMFRun run, int newQueueIndex)
    parameters:
    - id: run
      type: XTMF.XTMFRun
      description: ''
    - id: newQueueIndex
      type: System.Int32
      description: ''
    content.vb: Public Sub ReorderQueuedRun(run As XTMFRun, newQueueIndex As Integer)
  overload: XTMF.ModelSystemEditingSession.ReorderQueuedRun*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.ExecuteDelayedRun(XTMF.XTMFRun,System.DateTime)
  commentId: M:XTMF.ModelSystemEditingSession.ExecuteDelayedRun(XTMF.XTMFRun,System.DateTime)
  id: ExecuteDelayedRun(XTMF.XTMFRun,System.DateTime)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ExecuteDelayedRun(XTMFRun, DateTime)
  nameWithType: ModelSystemEditingSession.ExecuteDelayedRun(XTMFRun, DateTime)
  fullName: XTMF.ModelSystemEditingSession.ExecuteDelayedRun(XTMF.XTMFRun, System.DateTime)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExecuteDelayedRun
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 390
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public void ExecuteDelayedRun(XTMFRun run, DateTime delayedStartTime)
    parameters:
    - id: run
      type: XTMF.XTMFRun
      description: ''
    - id: delayedStartTime
      type: System.DateTime
      description: ''
    content.vb: Public Sub ExecuteDelayedRun(run As XTMFRun, delayedStartTime As Date)
  overload: XTMF.ModelSystemEditingSession.ExecuteDelayedRun*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.NameChanged
  commentId: E:XTMF.ModelSystemEditingSession.NameChanged
  id: NameChanged
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: NameChanged
  nameWithType: ModelSystemEditingSession.NameChanged
  fullName: XTMF.ModelSystemEditingSession.NameChanged
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NameChanged
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 427
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event PropertyChangedEventHandler NameChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event NameChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.Save(System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.Save(System.String@)
  id: Save(System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Save(ref String)
  nameWithType: ModelSystemEditingSession.Save(ref String)
  fullName: XTMF.ModelSystemEditingSession.Save(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 434
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nSave the session.\n"
  example: []
  syntax:
    content: public bool Save(ref string error)
    parameters:
    - id: error
      type: System.String
      description: If there is an error it will provide a message as to why.
    return:
      type: System.Boolean
      description: If we were able to save or not.
    content.vb: Public Function Save(ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.Save*
  nameWithType.vb: ModelSystemEditingSession.Save(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.Save(ByRef System.String)
  name.vb: Save(ByRef String)
- uid: XTMF.ModelSystemEditingSession.ExecuteCombinedCommands(System.String,System.Action)
  commentId: M:XTMF.ModelSystemEditingSession.ExecuteCombinedCommands(System.String,System.Action)
  id: ExecuteCombinedCommands(System.String,System.Action)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: ExecuteCombinedCommands(String, Action)
  nameWithType: ModelSystemEditingSession.ExecuteCombinedCommands(String, Action)
  fullName: XTMF.ModelSystemEditingSession.ExecuteCombinedCommands(System.String, System.Action)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExecuteCombinedCommands
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 449
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void ExecuteCombinedCommands(string name, Action combinedCommandContext)
    parameters:
    - id: name
      type: System.String
    - id: combinedCommandContext
      type: System.Action
    content.vb: Public Sub ExecuteCombinedCommands(name As String, combinedCommandContext As Action)
  overload: XTMF.ModelSystemEditingSession.ExecuteCombinedCommands*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.RunCommand(XTMF.Editing.XTMFCommand,System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.RunCommand(XTMF.Editing.XTMFCommand,System.String@)
  id: RunCommand(XTMF.Editing.XTMFCommand,System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: RunCommand(XTMFCommand, ref String)
  nameWithType: ModelSystemEditingSession.RunCommand(XTMFCommand, ref String)
  fullName: XTMF.ModelSystemEditingSession.RunCommand(XTMF.Editing.XTMFCommand, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunCommand
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 499
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool RunCommand(XTMFCommand command, ref string error)
    parameters:
    - id: command
      type: XTMF.Editing.XTMFCommand
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RunCommand(command As XTMFCommand, ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.RunCommand*
  nameWithType.vb: ModelSystemEditingSession.RunCommand(XTMFCommand, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.RunCommand(XTMF.Editing.XTMFCommand, ByRef System.String)
  name.vb: RunCommand(XTMFCommand, ByRef String)
- uid: XTMF.ModelSystemEditingSession.RunNameExists(System.String)
  commentId: M:XTMF.ModelSystemEditingSession.RunNameExists(System.String)
  id: RunNameExists(System.String)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: RunNameExists(String)
  nameWithType: ModelSystemEditingSession.RunNameExists(String)
  fullName: XTMF.ModelSystemEditingSession.RunNameExists(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunNameExists
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 535
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nChecks to see if the run directory already exists with the given name\n"
  example: []
  syntax:
    content: public bool RunNameExists(string runName)
    parameters:
    - id: runName
      type: System.String
      description: The run name to check
    return:
      type: System.Boolean
      description: True if the directory already exists, false otherwise
    content.vb: Public Function RunNameExists(runName As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.RunNameExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.IsValidRunName(System.String)
  commentId: M:XTMF.ModelSystemEditingSession.IsValidRunName(System.String)
  id: IsValidRunName(System.String)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: IsValidRunName(String)
  nameWithType: ModelSystemEditingSession.IsValidRunName(String)
  fullName: XTMF.ModelSystemEditingSession.IsValidRunName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsValidRunName
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 551
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nChecks for validitiy of the passed run name\n"
  example: []
  syntax:
    content: public bool IsValidRunName(string runName)
    parameters:
    - id: runName
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsValidRunName(runName As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.IsValidRunName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.CommandExecuted
  commentId: E:XTMF.ModelSystemEditingSession.CommandExecuted
  id: CommandExecuted
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CommandExecuted
  nameWithType: ModelSystemEditingSession.CommandExecuted
  fullName: XTMF.ModelSystemEditingSession.CommandExecuted
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CommandExecuted
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 559
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis event occurs whenever a command is executed, undone, or redone\n"
  example: []
  syntax:
    content: public event EventHandler CommandExecuted
    return:
      type: System.EventHandler
    content.vb: Public Event CommandExecuted As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.SaveAs(System.String,System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.SaveAs(System.String,System.String@)
  id: SaveAs(System.String,System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: SaveAs(String, ref String)
  nameWithType: ModelSystemEditingSession.SaveAs(String, ref String)
  fullName: XTMF.ModelSystemEditingSession.SaveAs(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveAs
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 561
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SaveAs(string modelSystemName, ref string error)
    parameters:
    - id: modelSystemName
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SaveAs(modelSystemName As String, ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.SaveAs*
  nameWithType.vb: ModelSystemEditingSession.SaveAs(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.SaveAs(System.String, ByRef System.String)
  name.vb: SaveAs(String, ByRef String)
- uid: XTMF.ModelSystemEditingSession.Undo(System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.Undo(System.String@)
  id: Undo(System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Undo(ref String)
  nameWithType: ModelSystemEditingSession.Undo(ref String)
  fullName: XTMF.ModelSystemEditingSession.Undo(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Undo
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 576
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nUndo the last command\n"
  example: []
  syntax:
    content: public bool Undo(ref string error)
    parameters:
    - id: error
      type: System.String
      description: The reason it failed
    return:
      type: System.Boolean
    content.vb: Public Function Undo(ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.Undo*
  nameWithType.vb: ModelSystemEditingSession.Undo(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.Undo(ByRef System.String)
  name.vb: Undo(ByRef String)
- uid: XTMF.ModelSystemEditingSession.Redo(System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.Redo(System.String@)
  id: Redo(System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Redo(ref String)
  nameWithType: ModelSystemEditingSession.Redo(ref String)
  fullName: XTMF.ModelSystemEditingSession.Redo(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Redo
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 605
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRedo the last undone command\n"
  example: []
  syntax:
    content: public bool Redo(ref string error)
    parameters:
    - id: error
      type: System.String
      description: The reason why it failed
    return:
      type: System.Boolean
    content.vb: Public Function Redo(ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.Redo*
  nameWithType.vb: ModelSystemEditingSession.Redo(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.Redo(ByRef System.String)
  name.vb: Redo(ByRef String)
- uid: XTMF.ModelSystemEditingSession.Close(System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.Close(System.String@)
  id: Close(System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Close(ref String)
  nameWithType: ModelSystemEditingSession.Close(ref String)
  fullName: XTMF.ModelSystemEditingSession.Close(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Close
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 635
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nClose the editing session\n"
  example: []
  syntax:
    content: public bool Close(ref string error)
    parameters:
    - id: error
      type: System.String
      description: The reason why we were unable to close.
    return:
      type: System.Boolean
      description: True if the model system is saved.
    content.vb: Public Function Close(ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.Close*
  nameWithType.vb: ModelSystemEditingSession.Close(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.Close(ByRef System.String)
  name.vb: Close(ByRef String)
- uid: XTMF.ModelSystemEditingSession.Finalize
  commentId: M:XTMF.ModelSystemEditingSession.Finalize
  id: Finalize
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ModelSystemEditingSession.Finalize()
  fullName: XTMF.ModelSystemEditingSession.Finalize()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Finalize
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 702
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: XTMF.ModelSystemEditingSession.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructureModel)
  commentId: M:XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructureModel)
  id: GetRoot(XTMF.ModelSystemStructureModel)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetRoot(ModelSystemStructureModel)
  nameWithType: ModelSystemEditingSession.GetRoot(ModelSystemStructureModel)
  fullName: XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructureModel)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetRoot
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 707
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModelSystemStructureModel GetRoot(ModelSystemStructureModel currentModule)
    parameters:
    - id: currentModule
      type: XTMF.ModelSystemStructureModel
    return:
      type: XTMF.ModelSystemStructureModel
    content.vb: Public Function GetRoot(currentModule As ModelSystemStructureModel) As ModelSystemStructureModel
  overload: XTMF.ModelSystemEditingSession.GetRoot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructure)
  commentId: M:XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructure)
  id: GetRoot(XTMF.ModelSystemStructure)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetRoot(ModelSystemStructure)
  nameWithType: ModelSystemEditingSession.GetRoot(ModelSystemStructure)
  fullName: XTMF.ModelSystemEditingSession.GetRoot(XTMF.ModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetRoot
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 713
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModelSystemStructureModel GetRoot(ModelSystemStructure currentModule)
    parameters:
    - id: currentModule
      type: XTMF.ModelSystemStructure
    return:
      type: XTMF.ModelSystemStructureModel
    content.vb: Public Function GetRoot(currentModule As ModelSystemStructure) As ModelSystemStructureModel
  overload: XTMF.ModelSystemEditingSession.GetRoot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.GetParent(XTMF.ModelSystemStructureModel)
  commentId: M:XTMF.ModelSystemEditingSession.GetParent(XTMF.ModelSystemStructureModel)
  id: GetParent(XTMF.ModelSystemStructureModel)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetParent(ModelSystemStructureModel)
  nameWithType: ModelSystemEditingSession.GetParent(ModelSystemStructureModel)
  fullName: XTMF.ModelSystemEditingSession.GetParent(XTMF.ModelSystemStructureModel)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetParent
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 718
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModelSystemStructureModel GetParent(ModelSystemStructureModel currentModule)
    parameters:
    - id: currentModule
      type: XTMF.ModelSystemStructureModel
    return:
      type: XTMF.ModelSystemStructureModel
    content.vb: Public Function GetParent(currentModule As ModelSystemStructureModel) As ModelSystemStructureModel
  overload: XTMF.ModelSystemEditingSession.GetParent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.GetModelSystemStructureModel(XTMF.ModelSystemStructure)
  commentId: M:XTMF.ModelSystemEditingSession.GetModelSystemStructureModel(XTMF.ModelSystemStructure)
  id: GetModelSystemStructureModel(XTMF.ModelSystemStructure)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetModelSystemStructureModel(ModelSystemStructure)
  nameWithType: ModelSystemEditingSession.GetModelSystemStructureModel(ModelSystemStructure)
  fullName: XTMF.ModelSystemEditingSession.GetModelSystemStructureModel(XTMF.ModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetModelSystemStructureModel
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 724
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModelSystemStructureModel GetModelSystemStructureModel(ModelSystemStructure modelSystemStructure)
    parameters:
    - id: modelSystemStructure
      type: XTMF.ModelSystemStructure
    return:
      type: XTMF.ModelSystemStructureModel
    content.vb: Public Function GetModelSystemStructureModel(modelSystemStructure As ModelSystemStructure) As ModelSystemStructureModel
  overload: XTMF.ModelSystemEditingSession.GetModelSystemStructureModel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes(System.Type[])
  commentId: M:XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes(System.Type[])
  id: GetValidGenericVariableTypes(System.Type[])
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: GetValidGenericVariableTypes(Type[])
  nameWithType: ModelSystemEditingSession.GetValidGenericVariableTypes(Type[])
  fullName: XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes(System.Type[])
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetValidGenericVariableTypes
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 729
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ICollection<Type> GetValidGenericVariableTypes(Type[] conditions)
    parameters:
    - id: conditions
      type: System.Type[]
    return:
      type: System.Collections.Generic.ICollection{System.Type}
    content.vb: Public Function GetValidGenericVariableTypes(conditions As Type()) As ICollection(Of Type)
  overload: XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes*
  nameWithType.vb: ModelSystemEditingSession.GetValidGenericVariableTypes(Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes(System.Type())
  name.vb: GetValidGenericVariableTypes(Type())
- uid: XTMF.ModelSystemEditingSession.CancelRun(XTMF.XTMFRun)
  commentId: M:XTMF.ModelSystemEditingSession.CancelRun(XTMF.XTMFRun)
  id: CancelRun(XTMF.XTMFRun)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: CancelRun(XTMFRun)
  nameWithType: ModelSystemEditingSession.CancelRun(XTMFRun)
  fullName: XTMF.ModelSystemEditingSession.CancelRun(XTMF.XTMFRun)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CancelRun
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 734
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void CancelRun(XTMFRun run)
    parameters:
    - id: run
      type: XTMF.XTMFRun
    content.vb: Public Sub CancelRun(run As XTMFRun)
  overload: XTMF.ModelSystemEditingSession.CancelRun*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemEditingSession.RevertToLastSave(System.String@)
  commentId: M:XTMF.ModelSystemEditingSession.RevertToLastSave(System.String@)
  id: RevertToLastSave(System.String@)
  parent: XTMF.ModelSystemEditingSession
  langs:
  - csharp
  - vb
  name: RevertToLastSave(ref String)
  nameWithType: ModelSystemEditingSession.RevertToLastSave(ref String)
  fullName: XTMF.ModelSystemEditingSession.RevertToLastSave(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ModelSystemEditingSession.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RevertToLastSave
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/ModelSystemEditingSession.cs
    startLine: 739
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool RevertToLastSave(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RevertToLastSave(ByRef error As String) As Boolean
  overload: XTMF.ModelSystemEditingSession.RevertToLastSave*
  nameWithType.vb: ModelSystemEditingSession.RevertToLastSave(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemEditingSession.RevertToLastSave(ByRef System.String)
  name.vb: RevertToLastSave(ByRef String)
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.ModelSystemEditingSession.Runtime*
  commentId: Overload:XTMF.ModelSystemEditingSession.Runtime
  name: Runtime
  nameWithType: ModelSystemEditingSession.Runtime
  fullName: XTMF.ModelSystemEditingSession.Runtime
- uid: XTMF.XTMFRuntime
  commentId: T:XTMF.XTMFRuntime
  parent: XTMF
  name: XTMFRuntime
  nameWithType: XTMFRuntime
  fullName: XTMF.XTMFRuntime
- uid: XTMF.ModelSystemEditingSession.GetPreviousRunNames*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetPreviousRunNames
  name: GetPreviousRunNames
  nameWithType: ModelSystemEditingSession.GetPreviousRunNames
  fullName: XTMF.ModelSystemEditingSession.GetPreviousRunNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync
  name: GetPreviousRunNamesAsync
  nameWithType: ModelSystemEditingSession.GetPreviousRunNamesAsync
  fullName: XTMF.ModelSystemEditingSession.GetPreviousRunNamesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<String>>
  nameWithType: Task<List<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<System.String>>
  nameWithType.vb: Task(Of List(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of System.String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: XTMF.ModelSystemEditingSession.#ctor*
  commentId: Overload:XTMF.ModelSystemEditingSession.#ctor
  name: ModelSystemEditingSession
  nameWithType: ModelSystemEditingSession.ModelSystemEditingSession
  fullName: XTMF.ModelSystemEditingSession.ModelSystemEditingSession
- uid: XTMF.ModelSystem
  commentId: T:XTMF.ModelSystem
  parent: XTMF
  name: ModelSystem
  nameWithType: ModelSystem
  fullName: XTMF.ModelSystem
- uid: XTMF.ProjectEditingSession
  commentId: T:XTMF.ProjectEditingSession
  parent: XTMF
  name: ProjectEditingSession
  nameWithType: ProjectEditingSession
  fullName: XTMF.ProjectEditingSession
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ModelSystemEditingSession.ProjectEditingSession*
  commentId: Overload:XTMF.ModelSystemEditingSession.ProjectEditingSession
  name: ProjectEditingSession
  nameWithType: ModelSystemEditingSession.ProjectEditingSession
  fullName: XTMF.ModelSystemEditingSession.ProjectEditingSession
- uid: XTMF.ModelSystemEditingSession.CanRun*
  commentId: Overload:XTMF.ModelSystemEditingSession.CanRun
  name: CanRun
  nameWithType: ModelSystemEditingSession.CanRun
  fullName: XTMF.ModelSystemEditingSession.CanRun
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ModelSystemEditingSession.EditingProject*
  commentId: Overload:XTMF.ModelSystemEditingSession.EditingProject
  name: EditingProject
  nameWithType: ModelSystemEditingSession.EditingProject
  fullName: XTMF.ModelSystemEditingSession.EditingProject
- uid: XTMF.ModelSystemEditingSession.EditingModelSystem*
  commentId: Overload:XTMF.ModelSystemEditingSession.EditingModelSystem
  name: EditingModelSystem
  nameWithType: ModelSystemEditingSession.EditingModelSystem
  fullName: XTMF.ModelSystemEditingSession.EditingModelSystem
- uid: XTMF.ModelSystemEditingSession.ModelSystemModel*
  commentId: Overload:XTMF.ModelSystemEditingSession.ModelSystemModel
  name: ModelSystemModel
  nameWithType: ModelSystemEditingSession.ModelSystemModel
  fullName: XTMF.ModelSystemEditingSession.ModelSystemModel
- uid: XTMF.ModelSystemModel
  commentId: T:XTMF.ModelSystemModel
  parent: XTMF
  name: ModelSystemModel
  nameWithType: ModelSystemModel
  fullName: XTMF.ModelSystemModel
- uid: XTMF.ModelSystemEditingSession.Configuration*
  commentId: Overload:XTMF.ModelSystemEditingSession.Configuration
  name: Configuration
  nameWithType: ModelSystemEditingSession.Configuration
  fullName: XTMF.ModelSystemEditingSession.Configuration
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: XTMF.ModelSystemEditingSession.HasChanged*
  commentId: Overload:XTMF.ModelSystemEditingSession.HasChanged
  name: HasChanged
  nameWithType: ModelSystemEditingSession.HasChanged
  fullName: XTMF.ModelSystemEditingSession.HasChanged
- uid: XTMF.ModelSystemEditingSession.CloseWillTerminate*
  commentId: Overload:XTMF.ModelSystemEditingSession.CloseWillTerminate
  name: CloseWillTerminate
  nameWithType: ModelSystemEditingSession.CloseWillTerminate
  fullName: XTMF.ModelSystemEditingSession.CloseWillTerminate
- uid: XTMF.ModelSystemEditingSession.Name*
  commentId: Overload:XTMF.ModelSystemEditingSession.Name
  name: Name
  nameWithType: ModelSystemEditingSession.Name
  fullName: XTMF.ModelSystemEditingSession.Name
- uid: XTMF.ModelSystemEditingSession.CanUndo*
  commentId: Overload:XTMF.ModelSystemEditingSession.CanUndo
  name: CanUndo
  nameWithType: ModelSystemEditingSession.CanUndo
  fullName: XTMF.ModelSystemEditingSession.CanUndo
- uid: XTMF.ModelSystemEditingSession.CanRedo*
  commentId: Overload:XTMF.ModelSystemEditingSession.CanRedo
  name: CanRedo
  nameWithType: ModelSystemEditingSession.CanRedo
  fullName: XTMF.ModelSystemEditingSession.CanRedo
- uid: XTMF.ModelSystemEditingSession.PreviousRunName*
  commentId: Overload:XTMF.ModelSystemEditingSession.PreviousRunName
  name: PreviousRunName
  nameWithType: ModelSystemEditingSession.PreviousRunName
  fullName: XTMF.ModelSystemEditingSession.PreviousRunName
- uid: XTMF.ModelSystemEditingSession.Dispose*
  commentId: Overload:XTMF.ModelSystemEditingSession.Dispose
  name: Dispose
  nameWithType: ModelSystemEditingSession.Dispose
  fullName: XTMF.ModelSystemEditingSession.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemEditingSession.GetValidModules*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetValidModules
  name: GetValidModules
  nameWithType: ModelSystemEditingSession.GetValidModules
  fullName: XTMF.ModelSystemEditingSession.GetValidModules
- uid: XTMF.ModelSystemStructureModel
  commentId: T:XTMF.ModelSystemStructureModel
  parent: XTMF
  name: ModelSystemStructureModel
  nameWithType: ModelSystemStructureModel
  fullName: XTMF.ModelSystemStructureModel
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemEditingSession.CopyOnUndo*
  commentId: Overload:XTMF.ModelSystemEditingSession.CopyOnUndo
  name: CopyOnUndo
  nameWithType: ModelSystemEditingSession.CopyOnUndo
  fullName: XTMF.ModelSystemEditingSession.CopyOnUndo
- uid: System.Collections.Generic.List{XTMF.Editing.XTMFCommand}
  commentId: T:System.Collections.Generic.List{XTMF.Editing.XTMFCommand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<XTMFCommand>
  nameWithType: List<XTMFCommand>
  fullName: System.Collections.Generic.List<XTMF.Editing.XTMFCommand>
  nameWithType.vb: List(Of XTMFCommand)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Editing.XTMFCommand)
  name.vb: List(Of XTMFCommand)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Editing.XTMFCommand
    name: XTMFCommand
    nameWithType: XTMFCommand
    fullName: XTMF.Editing.XTMFCommand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Editing.XTMFCommand
    name: XTMFCommand
    nameWithType: XTMFCommand
    fullName: XTMF.Editing.XTMFCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemEditingSession.CopyOnRedo*
  commentId: Overload:XTMF.ModelSystemEditingSession.CopyOnRedo
  name: CopyOnRedo
  nameWithType: ModelSystemEditingSession.CopyOnRedo
  fullName: XTMF.ModelSystemEditingSession.CopyOnRedo
- uid: System.EventHandler{XTMF.ProjectWasExternallySavedEventArgs}
  commentId: T:System.EventHandler{XTMF.ProjectWasExternallySavedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProjectWasExternallySavedEventArgs>
  nameWithType: EventHandler<ProjectWasExternallySavedEventArgs>
  fullName: System.EventHandler<XTMF.ProjectWasExternallySavedEventArgs>
  nameWithType.vb: EventHandler(Of ProjectWasExternallySavedEventArgs)
  fullName.vb: System.EventHandler(Of XTMF.ProjectWasExternallySavedEventArgs)
  name.vb: EventHandler(Of ProjectWasExternallySavedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ProjectWasExternallySavedEventArgs
    name: ProjectWasExternallySavedEventArgs
    nameWithType: ProjectWasExternallySavedEventArgs
    fullName: XTMF.ProjectWasExternallySavedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ProjectWasExternallySavedEventArgs
    name: ProjectWasExternallySavedEventArgs
    nameWithType: ProjectWasExternallySavedEventArgs
    fullName: XTMF.ProjectWasExternallySavedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: XTMF.ModelSystemEditingSession.SaveWait*
  commentId: Overload:XTMF.ModelSystemEditingSession.SaveWait
  name: SaveWait
  nameWithType: ModelSystemEditingSession.SaveWait
  fullName: XTMF.ModelSystemEditingSession.SaveWait
- uid: XTMF.ModelSystemEditingSession.SaveRelease*
  commentId: Overload:XTMF.ModelSystemEditingSession.SaveRelease
  name: SaveRelease
  nameWithType: ModelSystemEditingSession.SaveRelease
  fullName: XTMF.ModelSystemEditingSession.SaveRelease
- uid: XTMF.ModelSystemEditingSession.Run*
  commentId: Overload:XTMF.ModelSystemEditingSession.Run
  name: Run
  nameWithType: ModelSystemEditingSession.Run
  fullName: XTMF.ModelSystemEditingSession.Run
- uid: XTMF.XTMFRun
  commentId: T:XTMF.XTMFRun
  parent: XTMF
  name: XTMFRun
  nameWithType: XTMFRun
  fullName: XTMF.XTMFRun
- uid: XTMF.ModelSystemEditingSession.ExecuteRun*
  commentId: Overload:XTMF.ModelSystemEditingSession.ExecuteRun
  name: ExecuteRun
  nameWithType: ModelSystemEditingSession.ExecuteRun
  fullName: XTMF.ModelSystemEditingSession.ExecuteRun
- uid: XTMF.ModelSystemEditingSession.ReorderQueuedRun*
  commentId: Overload:XTMF.ModelSystemEditingSession.ReorderQueuedRun
  name: ReorderQueuedRun
  nameWithType: ModelSystemEditingSession.ReorderQueuedRun
  fullName: XTMF.ModelSystemEditingSession.ReorderQueuedRun
- uid: XTMF.ModelSystemEditingSession.ExecuteDelayedRun*
  commentId: Overload:XTMF.ModelSystemEditingSession.ExecuteDelayedRun
  name: ExecuteDelayedRun
  nameWithType: ModelSystemEditingSession.ExecuteDelayedRun
  fullName: XTMF.ModelSystemEditingSession.ExecuteDelayedRun
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: XTMF.ModelSystemEditingSession.Save*
  commentId: Overload:XTMF.ModelSystemEditingSession.Save
  name: Save
  nameWithType: ModelSystemEditingSession.Save
  fullName: XTMF.ModelSystemEditingSession.Save
- uid: XTMF.ModelSystemEditingSession.ExecuteCombinedCommands*
  commentId: Overload:XTMF.ModelSystemEditingSession.ExecuteCombinedCommands
  name: ExecuteCombinedCommands
  nameWithType: ModelSystemEditingSession.ExecuteCombinedCommands
  fullName: XTMF.ModelSystemEditingSession.ExecuteCombinedCommands
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: XTMF.ModelSystemEditingSession.RunCommand*
  commentId: Overload:XTMF.ModelSystemEditingSession.RunCommand
  name: RunCommand
  nameWithType: ModelSystemEditingSession.RunCommand
  fullName: XTMF.ModelSystemEditingSession.RunCommand
- uid: XTMF.Editing.XTMFCommand
  commentId: T:XTMF.Editing.XTMFCommand
  parent: XTMF.Editing
  name: XTMFCommand
  nameWithType: XTMFCommand
  fullName: XTMF.Editing.XTMFCommand
- uid: XTMF.Editing
  commentId: N:XTMF.Editing
  name: XTMF.Editing
  nameWithType: XTMF.Editing
  fullName: XTMF.Editing
- uid: XTMF.ModelSystemEditingSession.RunNameExists*
  commentId: Overload:XTMF.ModelSystemEditingSession.RunNameExists
  name: RunNameExists
  nameWithType: ModelSystemEditingSession.RunNameExists
  fullName: XTMF.ModelSystemEditingSession.RunNameExists
- uid: XTMF.ModelSystemEditingSession.IsValidRunName*
  commentId: Overload:XTMF.ModelSystemEditingSession.IsValidRunName
  name: IsValidRunName
  nameWithType: ModelSystemEditingSession.IsValidRunName
  fullName: XTMF.ModelSystemEditingSession.IsValidRunName
- uid: XTMF.ModelSystemEditingSession.SaveAs*
  commentId: Overload:XTMF.ModelSystemEditingSession.SaveAs
  name: SaveAs
  nameWithType: ModelSystemEditingSession.SaveAs
  fullName: XTMF.ModelSystemEditingSession.SaveAs
- uid: XTMF.ModelSystemEditingSession.Undo*
  commentId: Overload:XTMF.ModelSystemEditingSession.Undo
  name: Undo
  nameWithType: ModelSystemEditingSession.Undo
  fullName: XTMF.ModelSystemEditingSession.Undo
- uid: XTMF.ModelSystemEditingSession.Redo*
  commentId: Overload:XTMF.ModelSystemEditingSession.Redo
  name: Redo
  nameWithType: ModelSystemEditingSession.Redo
  fullName: XTMF.ModelSystemEditingSession.Redo
- uid: XTMF.ModelSystemEditingSession.Close*
  commentId: Overload:XTMF.ModelSystemEditingSession.Close
  name: Close
  nameWithType: ModelSystemEditingSession.Close
  fullName: XTMF.ModelSystemEditingSession.Close
- uid: XTMF.ModelSystemEditingSession.Finalize*
  commentId: Overload:XTMF.ModelSystemEditingSession.Finalize
  name: Finalize
  nameWithType: ModelSystemEditingSession.Finalize
  fullName: XTMF.ModelSystemEditingSession.Finalize
- uid: XTMF.ModelSystemEditingSession.GetRoot*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetRoot
  name: GetRoot
  nameWithType: ModelSystemEditingSession.GetRoot
  fullName: XTMF.ModelSystemEditingSession.GetRoot
- uid: XTMF.ModelSystemStructure
  commentId: T:XTMF.ModelSystemStructure
  parent: XTMF
  name: ModelSystemStructure
  nameWithType: ModelSystemStructure
  fullName: XTMF.ModelSystemStructure
- uid: XTMF.ModelSystemEditingSession.GetParent*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetParent
  name: GetParent
  nameWithType: ModelSystemEditingSession.GetParent
  fullName: XTMF.ModelSystemEditingSession.GetParent
- uid: XTMF.ModelSystemEditingSession.GetModelSystemStructureModel*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetModelSystemStructureModel
  name: GetModelSystemStructureModel
  nameWithType: ModelSystemEditingSession.GetModelSystemStructureModel
  fullName: XTMF.ModelSystemEditingSession.GetModelSystemStructureModel
- uid: XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes*
  commentId: Overload:XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes
  name: GetValidGenericVariableTypes
  nameWithType: ModelSystemEditingSession.GetValidGenericVariableTypes
  fullName: XTMF.ModelSystemEditingSession.GetValidGenericVariableTypes
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection{System.Type}
  commentId: T:System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  nameWithType.vb: ICollection(Of Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type)
  name.vb: ICollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemEditingSession.CancelRun*
  commentId: Overload:XTMF.ModelSystemEditingSession.CancelRun
  name: CancelRun
  nameWithType: ModelSystemEditingSession.CancelRun
  fullName: XTMF.ModelSystemEditingSession.CancelRun
- uid: XTMF.ModelSystemEditingSession.RevertToLastSave*
  commentId: Overload:XTMF.ModelSystemEditingSession.RevertToLastSave
  name: RevertToLastSave
  nameWithType: ModelSystemEditingSession.RevertToLastSave
  fullName: XTMF.ModelSystemEditingSession.RevertToLastSave
