### YamlMime:ManagedReference
items:
- uid: XTMF.Time
  commentId: T:XTMF.Time
  id: Time
  parent: XTMF
  children:
  - XTMF.Time.#ctor(System.DateTime)
  - XTMF.Time.#ctor(System.Single)
  - XTMF.Time.#ctor(System.String)
  - XTMF.Time.CompareTo(XTMF.Time)
  - XTMF.Time.EndOfDay
  - XTMF.Time.Equals(System.Object)
  - XTMF.Time.FromMinutes(System.Single)
  - XTMF.Time.GetHashCode
  - XTMF.Time.Hours
  - XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time)
  - XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@)
  - XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@,XTMF.Time@)
  - XTMF.Time.Minutes
  - XTMF.Time.OneHour
  - XTMF.Time.OneQuantum
  - XTMF.Time.op_Addition(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_Division(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_Equality(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_GreaterThan(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_GreaterThanOrEqual(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_Implicit(System.DateTime)~XTMF.Time
  - XTMF.Time.op_Implicit(XTMF.Time)~System.DateTime
  - XTMF.Time.op_Inequality(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_LessThan(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_LessThanOrEqual(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_Multiply(System.Single,XTMF.Time)
  - XTMF.Time.op_Subtraction(XTMF.Time,XTMF.Time)
  - XTMF.Time.op_UnaryNegation(XTMF.Time)
  - XTMF.Time.Seconds
  - XTMF.Time.StartOfDay
  - XTMF.Time.ToFloat
  - XTMF.Time.ToMinutes
  - XTMF.Time.ToString
  - XTMF.Time.TryParse(System.String,XTMF.Time@)
  - XTMF.Time.TryParse(System.String@,System.String,XTMF.Time@)
  - XTMF.Time.Zero
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
  type: Struct
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Time
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 26
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nSimple Time Struct for holding simple time data.\n"
  example: []
  syntax:
    content: 'public struct Time : IComparable<Time>'
    content.vb: >-
      Public Structure Time
          Implements IComparable(Of Time)
  implements:
  - System.IComparable{XTMF.Time}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: XTMF.Time.EndOfDay
  commentId: F:XTMF.Time.EndOfDay
  id: EndOfDay
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: EndOfDay
  nameWithType: Time.EndOfDay
  fullName: XTMF.Time.EndOfDay
  type: Field
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EndOfDay
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 28
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time EndOfDay
    return:
      type: XTMF.Time
    content.vb: Public Shared EndOfDay As Time
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.OneQuantum
  commentId: F:XTMF.Time.OneQuantum
  id: OneQuantum
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: OneQuantum
  nameWithType: Time.OneQuantum
  fullName: XTMF.Time.OneQuantum
  type: Field
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OneQuantum
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 30
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time OneQuantum
    return:
      type: XTMF.Time
    content.vb: Public Shared OneQuantum As Time
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.StartOfDay
  commentId: F:XTMF.Time.StartOfDay
  id: StartOfDay
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: StartOfDay
  nameWithType: Time.StartOfDay
  fullName: XTMF.Time.StartOfDay
  type: Field
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartOfDay
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 32
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time StartOfDay
    return:
      type: XTMF.Time
    content.vb: Public Shared StartOfDay As Time
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.#ctor(System.Single)
  commentId: M:XTMF.Time.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Time(Single)
  nameWithType: Time.Time(Single)
  fullName: XTMF.Time.Time(System.Single)
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 44
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nConverts the given float time in format HH.MM to\nthis class representation\n"
  example: []
  syntax:
    content: public Time(float time)
    parameters:
    - id: time
      type: System.Single
      description: ''
    content.vb: Public Sub New(time As Single)
  overload: XTMF.Time.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Time.#ctor(System.DateTime)
  commentId: M:XTMF.Time.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Time(DateTime)
  nameWithType: Time.Time(DateTime)
  fullName: XTMF.Time.Time(System.DateTime)
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 51
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public Time(DateTime time)
    parameters:
    - id: time
      type: System.DateTime
    content.vb: Public Sub New(time As Date)
  overload: XTMF.Time.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Time.#ctor(System.String)
  commentId: M:XTMF.Time.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Time(String)
  nameWithType: Time.Time(String)
  fullName: XTMF.Time.Time(System.String)
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 61
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nCreates a TashaTime given the string representation\nExample 4:25:00 4 hours 25 minutes and 0 seconds\n"
  example: []
  syntax:
    content: public Time(string time)
    parameters:
    - id: time
      type: System.String
      description: ''
    content.vb: Public Sub New(time As String)
  overload: XTMF.Time.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Time.OneHour
  commentId: P:XTMF.Time.OneHour
  id: OneHour
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: OneHour
  nameWithType: Time.OneHour
  fullName: XTMF.Time.OneHour
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OneHour
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 69
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time OneHour { get; }
    parameters: []
    return:
      type: XTMF.Time
    content.vb: Public Shared ReadOnly Property OneHour As Time
  overload: XTMF.Time.OneHour*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: XTMF.Time.Zero
  commentId: P:XTMF.Time.Zero
  id: Zero
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Time.Zero
  fullName: XTMF.Time.Zero
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Zero
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 71
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time Zero { get; }
    parameters: []
    return:
      type: XTMF.Time
    content.vb: Public Shared ReadOnly Property Zero As Time
  overload: XTMF.Time.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: XTMF.Time.Hours
  commentId: P:XTMF.Time.Hours
  id: Hours
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Hours
  nameWithType: Time.Hours
  fullName: XTMF.Time.Hours
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Hours
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 76
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe number of Hours this Time Object represents\n"
  example: []
  syntax:
    content: public int Hours { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Hours As Integer
  overload: XTMF.Time.Hours*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Time.Minutes
  commentId: P:XTMF.Time.Minutes
  id: Minutes
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Minutes
  nameWithType: Time.Minutes
  fullName: XTMF.Time.Minutes
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Minutes
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 92
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public int Minutes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Minutes As Integer
  overload: XTMF.Time.Minutes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Time.Seconds
  commentId: P:XTMF.Time.Seconds
  id: Seconds
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Seconds
  nameWithType: Time.Seconds
  fullName: XTMF.Time.Seconds
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Seconds
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 108
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe number of seconds this Time Object Represents\n"
  example: []
  syntax:
    content: public int Seconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Seconds As Integer
  overload: XTMF.Time.Seconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Time.FromMinutes(System.Single)
  commentId: M:XTMF.Time.FromMinutes(System.Single)
  id: FromMinutes(System.Single)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: FromMinutes(Single)
  nameWithType: Time.FromMinutes(Single)
  fullName: XTMF.Time.FromMinutes(System.Single)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FromMinutes
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 122
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time FromMinutes(float result)
    parameters:
    - id: result
      type: System.Single
    return:
      type: XTMF.Time
    content.vb: Public Shared Function FromMinutes(result As Single) As Time
  overload: XTMF.Time.FromMinutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_Implicit(XTMF.Time)~System.DateTime
  commentId: M:XTMF.Time.op_Implicit(XTMF.Time)~System.DateTime
  id: op_Implicit(XTMF.Time)~System.DateTime
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Implicit(Time to DateTime)
  nameWithType: Time.Implicit(Time to DateTime)
  fullName: XTMF.Time.Implicit(XTMF.Time to System.DateTime)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Implicit
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 127
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static implicit operator DateTime(Time t)
    parameters:
    - id: t
      type: XTMF.Time
    return:
      type: System.DateTime
    content.vb: Public Shared Widening Operator CType(t As Time) As Date
  overload: XTMF.Time.op_Implicit*
  nameWithType.vb: Time.Widening(Time to DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Time.Widening(XTMF.Time to System.DateTime)
  name.vb: Widening(Time to DateTime)
- uid: XTMF.Time.op_Implicit(System.DateTime)~XTMF.Time
  commentId: M:XTMF.Time.op_Implicit(System.DateTime)~XTMF.Time
  id: op_Implicit(System.DateTime)~XTMF.Time
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Implicit(DateTime to Time)
  nameWithType: Time.Implicit(DateTime to Time)
  fullName: XTMF.Time.Implicit(System.DateTime to XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Implicit
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 132
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static implicit operator Time(DateTime t)
    parameters:
    - id: t
      type: System.DateTime
    return:
      type: XTMF.Time
    content.vb: Public Shared Widening Operator CType(t As Date) As Time
  overload: XTMF.Time.op_Implicit*
  nameWithType.vb: Time.Widening(DateTime to Time)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Time.Widening(System.DateTime to XTMF.Time)
  name.vb: Widening(DateTime to Time)
- uid: XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time)
  id: Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Intersection(Time, Time, Time, Time)
  nameWithType: Time.Intersection(Time, Time, Time, Time)
  fullName: XTMF.Time.Intersection(XTMF.Time, XTMF.Time, XTMF.Time, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Intersection
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 137
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static bool Intersection(Time start1, Time end1, Time start2, Time end2)
    parameters:
    - id: start1
      type: XTMF.Time
    - id: end1
      type: XTMF.Time
    - id: start2
      type: XTMF.Time
    - id: end2
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Shared Function Intersection(start1 As Time, end1 As Time, start2 As Time, end2 As Time) As Boolean
  overload: XTMF.Time.Intersection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@)
  commentId: M:XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@)
  id: Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Intersection(Time, Time, Time, Time, out Time)
  nameWithType: Time.Intersection(Time, Time, Time, Time, out Time)
  fullName: XTMF.Time.Intersection(XTMF.Time, XTMF.Time, XTMF.Time, XTMF.Time, out XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Intersection
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 143
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static bool Intersection(Time start1, Time end1, Time start2, Time end2, out Time intersection)
    parameters:
    - id: start1
      type: XTMF.Time
    - id: end1
      type: XTMF.Time
    - id: start2
      type: XTMF.Time
    - id: end2
      type: XTMF.Time
    - id: intersection
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Shared Function Intersection(start1 As Time, end1 As Time, start2 As Time, end2 As Time, ByRef intersection As Time) As Boolean
  overload: XTMF.Time.Intersection*
  nameWithType.vb: Time.Intersection(Time, Time, Time, Time, ByRef Time)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Time.Intersection(XTMF.Time, XTMF.Time, XTMF.Time, XTMF.Time, ByRef XTMF.Time)
  name.vb: Intersection(Time, Time, Time, Time, ByRef Time)
- uid: XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@,XTMF.Time@)
  commentId: M:XTMF.Time.Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@,XTMF.Time@)
  id: Intersection(XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time,XTMF.Time@,XTMF.Time@)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Intersection(Time, Time, Time, Time, out Time, out Time)
  nameWithType: Time.Intersection(Time, Time, Time, Time, out Time, out Time)
  fullName: XTMF.Time.Intersection(XTMF.Time, XTMF.Time, XTMF.Time, XTMF.Time, out XTMF.Time, out XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Intersection
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 168
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static bool Intersection(Time start1, Time end1, Time start2, Time end2, out Time intersectionStart, out Time intersectionEnd)
    parameters:
    - id: start1
      type: XTMF.Time
    - id: end1
      type: XTMF.Time
    - id: start2
      type: XTMF.Time
    - id: end2
      type: XTMF.Time
    - id: intersectionStart
      type: XTMF.Time
    - id: intersectionEnd
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Shared Function Intersection(start1 As Time, end1 As Time, start2 As Time, end2 As Time, ByRef intersectionStart As Time, ByRef intersectionEnd As Time) As Boolean
  overload: XTMF.Time.Intersection*
  nameWithType.vb: Time.Intersection(Time, Time, Time, Time, ByRef Time, ByRef Time)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Time.Intersection(XTMF.Time, XTMF.Time, XTMF.Time, XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time)
  name.vb: Intersection(Time, Time, Time, Time, ByRef Time, ByRef Time)
- uid: XTMF.Time.op_Subtraction(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_Subtraction(XTMF.Time,XTMF.Time)
  id: op_Subtraction(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Subtraction(Time, Time)
  nameWithType: Time.Subtraction(Time, Time)
  fullName: XTMF.Time.Subtraction(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Subtraction
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 200
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static Time operator -(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: XTMF.Time
      description: ''
    content.vb: Public Shared Operator -(t1 As Time, t2 As Time) As Time
  overload: XTMF.Time.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_UnaryNegation(XTMF.Time)
  commentId: M:XTMF.Time.op_UnaryNegation(XTMF.Time)
  id: op_UnaryNegation(XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: UnaryNegation(Time)
  nameWithType: Time.UnaryNegation(Time)
  fullName: XTMF.Time.UnaryNegation(XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_UnaryNegation
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 205
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static Time operator -(Time t1)
    parameters:
    - id: t1
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Shared Operator -(t1 As Time) As Time
  overload: XTMF.Time.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_Inequality(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_Inequality(XTMF.Time,XTMF.Time)
  id: op_Inequality(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Inequality(Time, Time)
  nameWithType: Time.Inequality(Time, Time)
  fullName: XTMF.Time.Inequality(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Inequality
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 216
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator !=(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator <>(t1 As Time, t2 As Time) As Boolean
  overload: XTMF.Time.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_Multiply(System.Single,XTMF.Time)
  commentId: M:XTMF.Time.op_Multiply(System.Single,XTMF.Time)
  id: op_Multiply(System.Single,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Multiply(Single, Time)
  nameWithType: Time.Multiply(Single, Time)
  fullName: XTMF.Time.Multiply(System.Single, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Multiply
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 227
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static Time operator *(float percent, Time time)
    parameters:
    - id: percent
      type: System.Single
      description: ''
    - id: time
      type: XTMF.Time
      description: ''
    return:
      type: XTMF.Time
      description: ''
    content.vb: Public Shared Operator *(percent As Single, time As Time) As Time
  overload: XTMF.Time.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_Division(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_Division(XTMF.Time,XTMF.Time)
  id: op_Division(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Division(Time, Time)
  nameWithType: Time.Division(Time, Time)
  fullName: XTMF.Time.Division(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Division
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 238
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static float operator /(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Operator /(t1 As Time, t2 As Time) As Single
  overload: XTMF.Time.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_Addition(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_Addition(XTMF.Time,XTMF.Time)
  id: op_Addition(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Addition(Time, Time)
  nameWithType: Time.Addition(Time, Time)
  fullName: XTMF.Time.Addition(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Addition
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 253
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static Time operator +(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: XTMF.Time
      description: ''
    content.vb: Public Shared Operator +(t1 As Time, t2 As Time) As Time
  overload: XTMF.Time.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_LessThan(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_LessThan(XTMF.Time,XTMF.Time)
  id: op_LessThan(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: LessThan(Time, Time)
  nameWithType: Time.LessThan(Time, Time)
  fullName: XTMF.Time.LessThan(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_LessThan
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 265
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator <(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator <(t1 As Time, t2 As Time) As Boolean
  overload: XTMF.Time.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_LessThanOrEqual(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_LessThanOrEqual(XTMF.Time,XTMF.Time)
  id: op_LessThanOrEqual(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Time, Time)
  nameWithType: Time.LessThanOrEqual(Time, Time)
  fullName: XTMF.Time.LessThanOrEqual(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_LessThanOrEqual
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 277
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator <=(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator <=(t1 As Time, t2 As Time) As Boolean
  overload: XTMF.Time.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_Equality(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_Equality(XTMF.Time,XTMF.Time)
  id: op_Equality(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Equality(Time, Time)
  nameWithType: Time.Equality(Time, Time)
  fullName: XTMF.Time.Equality(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Equality
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 289
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator ==(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator =(t1 As Time, t2 As Time) As Boolean
  overload: XTMF.Time.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_GreaterThan(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_GreaterThan(XTMF.Time,XTMF.Time)
  id: op_GreaterThan(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: GreaterThan(Time, Time)
  nameWithType: Time.GreaterThan(Time, Time)
  fullName: XTMF.Time.GreaterThan(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_GreaterThan
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 301
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator>(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator>(t1 As Time, t2 As Time) As Boolean
  overload: XTMF.Time.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.op_GreaterThanOrEqual(XTMF.Time,XTMF.Time)
  commentId: M:XTMF.Time.op_GreaterThanOrEqual(XTMF.Time,XTMF.Time)
  id: op_GreaterThanOrEqual(XTMF.Time,XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Time, Time)
  nameWithType: Time.GreaterThanOrEqual(Time, Time)
  fullName: XTMF.Time.GreaterThanOrEqual(XTMF.Time, XTMF.Time)
  type: Operator
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_GreaterThanOrEqual
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 313
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator >=(Time t1, Time t2)
    parameters:
    - id: t1
      type: XTMF.Time
      description: ''
    - id: t2
      type: XTMF.Time
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator >=(t1 As Time, t2 As Time) As Boolean
  overload: XTMF.Time.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Time.TryParse(System.String,XTMF.Time@)
  commentId: M:XTMF.Time.TryParse(System.String,XTMF.Time@)
  id: TryParse(System.String,XTMF.Time@)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: TryParse(String, out Time)
  nameWithType: Time.TryParse(String, out Time)
  fullName: XTMF.Time.TryParse(System.String, out XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TryParse
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 319
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static bool TryParse(string timeString, out Time time)
    parameters:
    - id: timeString
      type: System.String
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(timeString As String, ByRef time As Time) As Boolean
  overload: XTMF.Time.TryParse*
  nameWithType.vb: Time.TryParse(String, ByRef Time)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Time.TryParse(System.String, ByRef XTMF.Time)
  name.vb: TryParse(String, ByRef Time)
- uid: XTMF.Time.TryParse(System.String@,System.String,XTMF.Time@)
  commentId: M:XTMF.Time.TryParse(System.String@,System.String,XTMF.Time@)
  id: TryParse(System.String@,System.String,XTMF.Time@)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: TryParse(ref String, String, out Time)
  nameWithType: Time.TryParse(ref String, String, out Time)
  fullName: XTMF.Time.TryParse(ref System.String, System.String, out XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TryParse
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 325
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public static bool TryParse(ref string error, string timeString, out Time time)
    parameters:
    - id: error
      type: System.String
    - id: timeString
      type: System.String
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(ByRef error As String, timeString As String, ByRef time As Time) As Boolean
  overload: XTMF.Time.TryParse*
  nameWithType.vb: Time.TryParse(ByRef String, String, ByRef Time)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Time.TryParse(ByRef System.String, System.String, ByRef XTMF.Time)
  name.vb: TryParse(ByRef String, String, ByRef Time)
- uid: XTMF.Time.CompareTo(XTMF.Time)
  commentId: M:XTMF.Time.CompareTo(XTMF.Time)
  id: CompareTo(XTMF.Time)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: CompareTo(Time)
  nameWithType: Time.CompareTo(Time)
  fullName: XTMF.Time.CompareTo(XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CompareTo
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 554
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public int CompareTo(Time other)
    parameters:
    - id: other
      type: XTMF.Time
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Time) As Integer
  overload: XTMF.Time.CompareTo*
  implements:
  - System.IComparable{XTMF.Time}.CompareTo(XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Time.Equals(System.Object)
  commentId: M:XTMF.Time.Equals(System.Object)
  id: Equals(System.Object)
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Time.Equals(Object)
  fullName: XTMF.Time.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Equals
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 560
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: XTMF.Time.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: XTMF.Time.GetHashCode
  commentId: M:XTMF.Time.GetHashCode
  id: GetHashCode
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Time.GetHashCode()
  fullName: XTMF.Time.GetHashCode()
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetHashCode
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 572
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: XTMF.Time.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: XTMF.Time.ToFloat
  commentId: M:XTMF.Time.ToFloat
  id: ToFloat
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: ToFloat()
  nameWithType: Time.ToFloat()
  fullName: XTMF.Time.ToFloat()
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToFloat
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 581
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public float ToFloat()
    return:
      type: System.Single
      description: ''
    content.vb: Public Function ToFloat As Single
  overload: XTMF.Time.ToFloat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Time.ToMinutes
  commentId: M:XTMF.Time.ToMinutes
  id: ToMinutes
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: ToMinutes()
  nameWithType: Time.ToMinutes()
  fullName: XTMF.Time.ToMinutes()
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToMinutes
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 586
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public float ToMinutes()
    return:
      type: System.Single
    content.vb: Public Function ToMinutes As Single
  overload: XTMF.Time.ToMinutes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Time.ToString
  commentId: M:XTMF.Time.ToString
  id: ToString
  parent: XTMF.Time
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Time.ToString()
  fullName: XTMF.Time.ToString()
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Time.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToString
    path: ../../../XTMF/XTMF/Code/XTMFInterfaces/Time.cs
    startLine: 596
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: XTMF.Time.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.IComparable{XTMF.Time}
  commentId: T:System.IComparable{XTMF.Time}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Time>
  nameWithType: IComparable<Time>
  fullName: System.IComparable<XTMF.Time>
  nameWithType.vb: IComparable(Of Time)
  fullName.vb: System.IComparable(Of XTMF.Time)
  name.vb: IComparable(Of Time)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: XTMF.Time.#ctor*
  commentId: Overload:XTMF.Time.#ctor
  name: Time
  nameWithType: Time.Time
  fullName: XTMF.Time.Time
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.Time.OneHour*
  commentId: Overload:XTMF.Time.OneHour
  name: OneHour
  nameWithType: Time.OneHour
  fullName: XTMF.Time.OneHour
- uid: XTMF.Time.Zero*
  commentId: Overload:XTMF.Time.Zero
  name: Zero
  nameWithType: Time.Zero
  fullName: XTMF.Time.Zero
- uid: XTMF.Time.Hours*
  commentId: Overload:XTMF.Time.Hours
  name: Hours
  nameWithType: Time.Hours
  fullName: XTMF.Time.Hours
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.Time.Minutes*
  commentId: Overload:XTMF.Time.Minutes
  name: Minutes
  nameWithType: Time.Minutes
  fullName: XTMF.Time.Minutes
- uid: XTMF.Time.Seconds*
  commentId: Overload:XTMF.Time.Seconds
  name: Seconds
  nameWithType: Time.Seconds
  fullName: XTMF.Time.Seconds
- uid: XTMF.Time.FromMinutes*
  commentId: Overload:XTMF.Time.FromMinutes
  name: FromMinutes
  nameWithType: Time.FromMinutes
  fullName: XTMF.Time.FromMinutes
- uid: XTMF.Time.op_Implicit*
  commentId: Overload:XTMF.Time.op_Implicit
  name: Implicit
  nameWithType: Time.Implicit
  fullName: XTMF.Time.Implicit
  nameWithType.vb: Time.Widening
  fullName.vb: XTMF.Time.Widening
  name.vb: Widening
- uid: XTMF.Time.Intersection*
  commentId: Overload:XTMF.Time.Intersection
  name: Intersection
  nameWithType: Time.Intersection
  fullName: XTMF.Time.Intersection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Time.op_Subtraction*
  commentId: Overload:XTMF.Time.op_Subtraction
  name: Subtraction
  nameWithType: Time.Subtraction
  fullName: XTMF.Time.Subtraction
- uid: XTMF.Time.op_UnaryNegation*
  commentId: Overload:XTMF.Time.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Time.UnaryNegation
  fullName: XTMF.Time.UnaryNegation
- uid: XTMF.Time.op_Inequality*
  commentId: Overload:XTMF.Time.op_Inequality
  name: Inequality
  nameWithType: Time.Inequality
  fullName: XTMF.Time.Inequality
- uid: XTMF.Time.op_Multiply*
  commentId: Overload:XTMF.Time.op_Multiply
  name: Multiply
  nameWithType: Time.Multiply
  fullName: XTMF.Time.Multiply
- uid: XTMF.Time.op_Division*
  commentId: Overload:XTMF.Time.op_Division
  name: Division
  nameWithType: Time.Division
  fullName: XTMF.Time.Division
- uid: XTMF.Time.op_Addition*
  commentId: Overload:XTMF.Time.op_Addition
  name: Addition
  nameWithType: Time.Addition
  fullName: XTMF.Time.Addition
- uid: XTMF.Time.op_LessThan*
  commentId: Overload:XTMF.Time.op_LessThan
  name: LessThan
  nameWithType: Time.LessThan
  fullName: XTMF.Time.LessThan
- uid: XTMF.Time.op_LessThanOrEqual*
  commentId: Overload:XTMF.Time.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: Time.LessThanOrEqual
  fullName: XTMF.Time.LessThanOrEqual
- uid: XTMF.Time.op_Equality*
  commentId: Overload:XTMF.Time.op_Equality
  name: Equality
  nameWithType: Time.Equality
  fullName: XTMF.Time.Equality
- uid: XTMF.Time.op_GreaterThan*
  commentId: Overload:XTMF.Time.op_GreaterThan
  name: GreaterThan
  nameWithType: Time.GreaterThan
  fullName: XTMF.Time.GreaterThan
- uid: XTMF.Time.op_GreaterThanOrEqual*
  commentId: Overload:XTMF.Time.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: Time.GreaterThanOrEqual
  fullName: XTMF.Time.GreaterThanOrEqual
- uid: XTMF.Time.TryParse*
  commentId: Overload:XTMF.Time.TryParse
  name: TryParse
  nameWithType: Time.TryParse
  fullName: XTMF.Time.TryParse
- uid: XTMF.Time.CompareTo*
  commentId: Overload:XTMF.Time.CompareTo
  name: CompareTo
  nameWithType: Time.CompareTo
  fullName: XTMF.Time.CompareTo
- uid: System.IComparable{XTMF.Time}.CompareTo(XTMF.Time)
  commentId: M:System.IComparable{XTMF.Time}.CompareTo(XTMF.Time)
  parent: System.IComparable{XTMF.Time}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Time)
  nameWithType: IComparable<Time>.CompareTo(Time)
  fullName: System.IComparable<XTMF.Time>.CompareTo(XTMF.Time)
  nameWithType.vb: IComparable(Of Time).CompareTo(Time)
  fullName.vb: System.IComparable(Of XTMF.Time).CompareTo(XTMF.Time)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Time>.CompareTo
    fullName: System.IComparable<XTMF.Time>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Time).CompareTo
    fullName: System.IComparable(Of XTMF.Time).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Time.Equals*
  commentId: Overload:XTMF.Time.Equals
  name: Equals
  nameWithType: Time.Equals
  fullName: XTMF.Time.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Time.GetHashCode*
  commentId: Overload:XTMF.Time.GetHashCode
  name: GetHashCode
  nameWithType: Time.GetHashCode
  fullName: XTMF.Time.GetHashCode
- uid: XTMF.Time.ToFloat*
  commentId: Overload:XTMF.Time.ToFloat
  name: ToFloat
  nameWithType: Time.ToFloat
  fullName: XTMF.Time.ToFloat
- uid: XTMF.Time.ToMinutes*
  commentId: Overload:XTMF.Time.ToMinutes
  name: ToMinutes
  nameWithType: Time.ToMinutes
  fullName: XTMF.Time.ToMinutes
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Time.ToString*
  commentId: Overload:XTMF.Time.ToString
  name: ToString
  nameWithType: Time.ToString
  fullName: XTMF.Time.ToString
