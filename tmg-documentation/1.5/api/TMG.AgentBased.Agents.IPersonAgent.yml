### YamlMime:ManagedReference
items:
- uid: TMG.AgentBased.Agents.IPersonAgent
  commentId: T:TMG.AgentBased.Agents.IPersonAgent
  id: IPersonAgent
  parent: TMG.AgentBased.Agents
  children:
  - TMG.AgentBased.Agents.IPersonAgent.Activities
  - TMG.AgentBased.Agents.IPersonAgent.TripChains
  langs:
  - csharp
  - vb
  name: IPersonAgent
  nameWithType: IPersonAgent
  fullName: TMG.AgentBased.Agents.IPersonAgent
  type: Interface
  source:
    remote:
      path: Code/TMGInterfaces/AgentBased/IPersonAgent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IPersonAgent
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/AgentBased/IPersonAgent.cs
    startLine: 23
  assemblies:
  - TMGInterfaces
  namespace: TMG.AgentBased.Agents
  syntax:
    content: 'public interface IPersonAgent : IPerson'
    content.vb: >-
      Public Interface IPersonAgent
          Inherits IPerson
  inheritedMembers:
  - TMG.IPerson.Age
  - TMG.IPerson.DriversLicense
  - TMG.IPerson.EmploymentStatus
  - TMG.IPerson.ExpansionFactor
  - TMG.IPerson.Household
  - TMG.IPerson.Occupation
  - TMG.IPerson.SchoolZone
  - TMG.IPerson.StudentStatus
  - TMG.IPerson.WorkZone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TMG.AgentBased.Agents.IPersonAgent.Activities
  commentId: P:TMG.AgentBased.Agents.IPersonAgent.Activities
  id: Activities
  parent: TMG.AgentBased.Agents.IPersonAgent
  langs:
  - csharp
  - vb
  name: Activities
  nameWithType: IPersonAgent.Activities
  fullName: TMG.AgentBased.Agents.IPersonAgent.Activities
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/AgentBased/IPersonAgent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Activities
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/AgentBased/IPersonAgent.cs
    startLine: 25
  assemblies:
  - TMGInterfaces
  namespace: TMG.AgentBased.Agents
  syntax:
    content: List<IActivity> Activities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TMG.AgentBased.Tours.IActivity}
    content.vb: ReadOnly Property Activities As List(Of IActivity)
  overload: TMG.AgentBased.Agents.IPersonAgent.Activities*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: TMG.AgentBased.Agents.IPersonAgent.TripChains
  commentId: P:TMG.AgentBased.Agents.IPersonAgent.TripChains
  id: TripChains
  parent: TMG.AgentBased.Agents.IPersonAgent
  langs:
  - csharp
  - vb
  name: TripChains
  nameWithType: IPersonAgent.TripChains
  fullName: TMG.AgentBased.Agents.IPersonAgent.TripChains
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/AgentBased/IPersonAgent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TripChains
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/AgentBased/IPersonAgent.cs
    startLine: 27
  assemblies:
  - TMGInterfaces
  namespace: TMG.AgentBased.Agents
  syntax:
    content: List<ITripChain> TripChains { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TMG.AgentBased.Tours.ITripChain}
    content.vb: ReadOnly Property TripChains As List(Of ITripChain)
  overload: TMG.AgentBased.Agents.IPersonAgent.TripChains*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: TMG.AgentBased.Agents
  commentId: N:TMG.AgentBased.Agents
  name: TMG.AgentBased.Agents
  nameWithType: TMG.AgentBased.Agents
  fullName: TMG.AgentBased.Agents
- uid: TMG.IPerson.Age
  commentId: P:TMG.IPerson.Age
  parent: TMG.IPerson
  name: Age
  nameWithType: IPerson.Age
  fullName: TMG.IPerson.Age
- uid: TMG.IPerson.DriversLicense
  commentId: P:TMG.IPerson.DriversLicense
  parent: TMG.IPerson
  name: DriversLicense
  nameWithType: IPerson.DriversLicense
  fullName: TMG.IPerson.DriversLicense
- uid: TMG.IPerson.EmploymentStatus
  commentId: P:TMG.IPerson.EmploymentStatus
  parent: TMG.IPerson
  name: EmploymentStatus
  nameWithType: IPerson.EmploymentStatus
  fullName: TMG.IPerson.EmploymentStatus
- uid: TMG.IPerson.ExpansionFactor
  commentId: P:TMG.IPerson.ExpansionFactor
  parent: TMG.IPerson
  name: ExpansionFactor
  nameWithType: IPerson.ExpansionFactor
  fullName: TMG.IPerson.ExpansionFactor
- uid: TMG.IPerson.Household
  commentId: P:TMG.IPerson.Household
  parent: TMG.IPerson
  name: Household
  nameWithType: IPerson.Household
  fullName: TMG.IPerson.Household
- uid: TMG.IPerson.Occupation
  commentId: P:TMG.IPerson.Occupation
  parent: TMG.IPerson
  name: Occupation
  nameWithType: IPerson.Occupation
  fullName: TMG.IPerson.Occupation
- uid: TMG.IPerson.SchoolZone
  commentId: P:TMG.IPerson.SchoolZone
  parent: TMG.IPerson
  name: SchoolZone
  nameWithType: IPerson.SchoolZone
  fullName: TMG.IPerson.SchoolZone
- uid: TMG.IPerson.StudentStatus
  commentId: P:TMG.IPerson.StudentStatus
  parent: TMG.IPerson
  name: StudentStatus
  nameWithType: IPerson.StudentStatus
  fullName: TMG.IPerson.StudentStatus
- uid: TMG.IPerson.WorkZone
  commentId: P:TMG.IPerson.WorkZone
  parent: TMG.IPerson
  name: WorkZone
  nameWithType: IPerson.WorkZone
  fullName: TMG.IPerson.WorkZone
- uid: TMG.IPerson
  commentId: T:TMG.IPerson
  parent: TMG
  name: IPerson
  nameWithType: IPerson
  fullName: TMG.IPerson
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.AgentBased.Agents.IPersonAgent.Activities*
  commentId: Overload:TMG.AgentBased.Agents.IPersonAgent.Activities
  name: Activities
  nameWithType: IPersonAgent.Activities
  fullName: TMG.AgentBased.Agents.IPersonAgent.Activities
- uid: System.Collections.Generic.List{TMG.AgentBased.Tours.IActivity}
  commentId: T:System.Collections.Generic.List{TMG.AgentBased.Tours.IActivity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IActivity>
  nameWithType: List<IActivity>
  fullName: System.Collections.Generic.List<TMG.AgentBased.Tours.IActivity>
  nameWithType.vb: List(Of IActivity)
  fullName.vb: System.Collections.Generic.List(Of TMG.AgentBased.Tours.IActivity)
  name.vb: List(Of IActivity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.AgentBased.Tours.IActivity
    name: IActivity
    nameWithType: IActivity
    fullName: TMG.AgentBased.Tours.IActivity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.AgentBased.Tours.IActivity
    name: IActivity
    nameWithType: IActivity
    fullName: TMG.AgentBased.Tours.IActivity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.AgentBased.Agents.IPersonAgent.TripChains*
  commentId: Overload:TMG.AgentBased.Agents.IPersonAgent.TripChains
  name: TripChains
  nameWithType: IPersonAgent.TripChains
  fullName: TMG.AgentBased.Agents.IPersonAgent.TripChains
- uid: System.Collections.Generic.List{TMG.AgentBased.Tours.ITripChain}
  commentId: T:System.Collections.Generic.List{TMG.AgentBased.Tours.ITripChain}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ITripChain>
  nameWithType: List<ITripChain>
  fullName: System.Collections.Generic.List<TMG.AgentBased.Tours.ITripChain>
  nameWithType.vb: List(Of ITripChain)
  fullName.vb: System.Collections.Generic.List(Of TMG.AgentBased.Tours.ITripChain)
  name.vb: List(Of ITripChain)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.AgentBased.Tours.ITripChain
    name: ITripChain
    nameWithType: ITripChain
    fullName: TMG.AgentBased.Tours.ITripChain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.AgentBased.Tours.ITripChain
    name: ITripChain
    nameWithType: ITripChain
    fullName: TMG.AgentBased.Tours.ITripChain
  - name: )
    nameWithType: )
    fullName: )
