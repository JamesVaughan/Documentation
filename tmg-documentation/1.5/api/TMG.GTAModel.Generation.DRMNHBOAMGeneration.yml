### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  commentId: T:TMG.GTAModel.Generation.DRMNHBOAMGeneration
  id: DRMNHBOAMGeneration
  parent: TMG.GTAModel.Generation
  children:
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDriveModeName
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDrivePath
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.DemographicParameterSetIndex
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.HomeBasedOtherPurposeName
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained(TMG.IPerson)
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.ModeChoiceParameterSetIndex
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionConstantsParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentGeneralParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentManufacturingParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentProfessionalParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentSalesParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherDriveParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherOtherParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolDriveParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolOtherParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkDriveParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkOtherParameter
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionNumbers
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.Root
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation(System.String@)
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.SchoolPurposeName
  - TMG.GTAModel.Generation.DRMNHBOAMGeneration.WorkPurposeName
  langs:
  - csharp
  - vb
  name: DRMNHBOAMGeneration
  nameWithType: DRMNHBOAMGeneration
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  type: Class
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DRMNHBOAMGeneration
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: 'public class DRMNHBOAMGeneration : IDemographicCategoryGeneration, IGeneration, IDemographicCategory, IModule'
    content.vb: >-
      Public Class DRMNHBOAMGeneration
          Implements IDemographicCategoryGeneration, IGeneration, IDemographicCategory, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.IDemographicCategoryGeneration
  - TMG.IGeneration
  - TMG.IDemographicCategory
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDriveModeName
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDriveModeName
  id: AutoDriveModeName
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: AutoDriveModeName
  nameWithType: DRMNHBOAMGeneration.AutoDriveModeName
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDriveModeName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoDriveModeName
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Auto Drive Name", "ADrive", "The name of the auto drive mode.")]

      public string AutoDriveModeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Auto Drive Name", "ADrive", "The name of the auto drive mode.")>

      Public AutoDriveModeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto Drive Name
    - type: System.String
      value: ADrive
    - type: System.String
      value: The name of the auto drive mode.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDrivePath
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDrivePath
  id: AutoDrivePath
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: AutoDrivePath
  nameWithType: DRMNHBOAMGeneration.AutoDrivePath
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.AutoDrivePath
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoDrivePath
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 34
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public List<int> AutoDrivePath
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public AutoDrivePath As List(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.DemographicParameterSetIndex
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.DemographicParameterSetIndex
  id: DemographicParameterSetIndex
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: DemographicParameterSetIndex
  nameWithType: DRMNHBOAMGeneration.DemographicParameterSetIndex
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.DemographicParameterSetIndex
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DemographicParameterSetIndex
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 37
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Demographic Parameter Set Index", 0, "The 0 indexed index of parameters to use when calculating utility")]

      public int DemographicParameterSetIndex
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Demographic Parameter Set Index", 0, "The 0 indexed index of parameters to use when calculating utility")>

      Public DemographicParameterSetIndex As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demographic Parameter Set Index
    - type: System.Int32
      value: 0
    - type: System.String
      value: The 0 indexed index of parameters to use when calculating utility
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.HomeBasedOtherPurposeName
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.HomeBasedOtherPurposeName
  id: HomeBasedOtherPurposeName
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: HomeBasedOtherPurposeName
  nameWithType: DRMNHBOAMGeneration.HomeBasedOtherPurposeName
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.HomeBasedOtherPurposeName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HomeBasedOtherPurposeName
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 40
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("HBO Purpose Name", "HBO", "The name of the work purpose.")]

      public string HomeBasedOtherPurposeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("HBO Purpose Name", "HBO", "The name of the work purpose.")>

      Public HomeBasedOtherPurposeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: HBO Purpose Name
    - type: System.String
      value: HBO
    - type: System.String
      value: The name of the work purpose.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ModeChoiceParameterSetIndex
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.ModeChoiceParameterSetIndex
  id: ModeChoiceParameterSetIndex
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: ModeChoiceParameterSetIndex
  nameWithType: DRMNHBOAMGeneration.ModeChoiceParameterSetIndex
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ModeChoiceParameterSetIndex
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModeChoiceParameterSetIndex
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 43
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("ModeChoice Parameter Set Index", 0, "The 0 indexed index of parameters to use when calculating utility")]

      public int ModeChoiceParameterSetIndex
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("ModeChoice Parameter Set Index", 0, "The 0 indexed index of parameters to use when calculating utility")>

      Public ModeChoiceParameterSetIndex As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: ModeChoice Parameter Set Index
    - type: System.Int32
      value: 0
    - type: System.String
      value: The 0 indexed index of parameters to use when calculating utility
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionConstantsParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionConstantsParameter
  id: RegionConstantsParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionConstantsParameter
  nameWithType: DRMNHBOAMGeneration.RegionConstantsParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionConstantsParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionConstantsParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 46
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Constant Parameters", "1.591954326,-2.812772298,-2.203225809,-34.79059286", typeof(FloatList), "The region parameters for Auto Times.")]

      public FloatList RegionConstantsParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Constant Parameters", "1.591954326,-2.812772298,-2.203225809,-34.79059286", GetType(FloatList), "The region parameters for Auto Times.")>

      Public RegionConstantsParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Constant Parameters
    - type: System.String
      value: 1.591954326,-2.812772298,-2.203225809,-34.79059286
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for Auto Times.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentGeneralParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentGeneralParameter
  id: RegionEmploymentGeneralParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionEmploymentGeneralParameter
  nameWithType: DRMNHBOAMGeneration.RegionEmploymentGeneralParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentGeneralParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionEmploymentGeneralParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 49
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region General Parameters", "0,0,0,0", typeof(FloatList), "The region parameters for the General Employment.")]

      public FloatList RegionEmploymentGeneralParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region General Parameters", "0,0,0,0", GetType(FloatList), "The region parameters for the General Employment.")>

      Public RegionEmploymentGeneralParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region General Parameters
    - type: System.String
      value: 0,0,0,0
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the General Employment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentManufacturingParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentManufacturingParameter
  id: RegionEmploymentManufacturingParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionEmploymentManufacturingParameter
  nameWithType: DRMNHBOAMGeneration.RegionEmploymentManufacturingParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentManufacturingParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionEmploymentManufacturingParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Manufacturing Parameters", "0.097629818,0.208416925,0.096070043,0.162521643", typeof(FloatList), "The region parameters for the Manufacturing Employment.")]

      public FloatList RegionEmploymentManufacturingParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Manufacturing Parameters", "0.097629818,0.208416925,0.096070043,0.162521643", GetType(FloatList), "The region parameters for the Manufacturing Employment.")>

      Public RegionEmploymentManufacturingParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Manufacturing Parameters
    - type: System.String
      value: 0.097629818,0.208416925,0.096070043,0.162521643
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Manufacturing Employment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentProfessionalParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentProfessionalParameter
  id: RegionEmploymentProfessionalParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionEmploymentProfessionalParameter
  nameWithType: DRMNHBOAMGeneration.RegionEmploymentProfessionalParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentProfessionalParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionEmploymentProfessionalParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 55
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Professional Parameters", "0,0,0,0", typeof(FloatList), "The region parameters for the Professional Employment.")]

      public FloatList RegionEmploymentProfessionalParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Professional Parameters", "0,0,0,0", GetType(FloatList), "The region parameters for the Professional Employment.")>

      Public RegionEmploymentProfessionalParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Professional Parameters
    - type: System.String
      value: 0,0,0,0
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Professional Employment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentSalesParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentSalesParameter
  id: RegionEmploymentSalesParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionEmploymentSalesParameter
  nameWithType: DRMNHBOAMGeneration.RegionEmploymentSalesParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionEmploymentSalesParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionEmploymentSalesParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 58
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Sales Parameters", "0,0,0,0", typeof(FloatList), "The region parameters for the Sales Employment.")]

      public FloatList RegionEmploymentSalesParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Sales Parameters", "0,0,0,0", GetType(FloatList), "The region parameters for the Sales Employment.")>

      Public RegionEmploymentSalesParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Sales Parameters
    - type: System.String
      value: 0,0,0,0
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Sales Employment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherDriveParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherDriveParameter
  id: RegionHomeOtherDriveParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionHomeOtherDriveParameter
  nameWithType: DRMNHBOAMGeneration.RegionHomeOtherDriveParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherDriveParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionHomeOtherDriveParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 61
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Home-Other Drive Parameters", "0.899332965,0.801837132,0.680872577,0.752931716", typeof(FloatList), "The region parameters for the Population.")]

      public FloatList RegionHomeOtherDriveParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Home-Other Drive Parameters", "0.899332965,0.801837132,0.680872577,0.752931716", GetType(FloatList), "The region parameters for the Population.")>

      Public RegionHomeOtherDriveParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Home-Other Drive Parameters
    - type: System.String
      value: 0.899332965,0.801837132,0.680872577,0.752931716
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Population.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherOtherParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherOtherParameter
  id: RegionHomeOtherOtherParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionHomeOtherOtherParameter
  nameWithType: DRMNHBOAMGeneration.RegionHomeOtherOtherParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeOtherOtherParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionHomeOtherOtherParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 64
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Home-Other Other Parameters", "0.155969455,0.190094001,0.573941756,0.882749914", typeof(FloatList), "The region parameters for the Population.")]

      public FloatList RegionHomeOtherOtherParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Home-Other Other Parameters", "0.155969455,0.190094001,0.573941756,0.882749914", GetType(FloatList), "The region parameters for the Population.")>

      Public RegionHomeOtherOtherParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Home-Other Other Parameters
    - type: System.String
      value: 0.155969455,0.190094001,0.573941756,0.882749914
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Population.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolDriveParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolDriveParameter
  id: RegionHomeSchoolDriveParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionHomeSchoolDriveParameter
  nameWithType: DRMNHBOAMGeneration.RegionHomeSchoolDriveParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolDriveParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionHomeSchoolDriveParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 67
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Home-School Drive Parameters", "0,0,0,0", typeof(FloatList), "The region parameters for the Population.")]

      public FloatList RegionHomeSchoolDriveParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Home-School Drive Parameters", "0,0,0,0", GetType(FloatList), "The region parameters for the Population.")>

      Public RegionHomeSchoolDriveParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Home-School Drive Parameters
    - type: System.String
      value: 0,0,0,0
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Population.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolOtherParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolOtherParameter
  id: RegionHomeSchoolOtherParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionHomeSchoolOtherParameter
  nameWithType: DRMNHBOAMGeneration.RegionHomeSchoolOtherParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeSchoolOtherParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionHomeSchoolOtherParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 70
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Home-School Other Parameters", "0.010840853,0.056333868,0.094647873,0.063186155", typeof(FloatList), "The region parameters for the Population.")]

      public FloatList RegionHomeSchoolOtherParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Home-School Other Parameters", "0.010840853,0.056333868,0.094647873,0.063186155", GetType(FloatList), "The region parameters for the Population.")>

      Public RegionHomeSchoolOtherParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Home-School Other Parameters
    - type: System.String
      value: 0.010840853,0.056333868,0.094647873,0.063186155
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Population.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkDriveParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkDriveParameter
  id: RegionHomeWorkDriveParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionHomeWorkDriveParameter
  nameWithType: DRMNHBOAMGeneration.RegionHomeWorkDriveParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkDriveParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionHomeWorkDriveParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 73
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Home-Work Drive Parameters", "0,0,0,0", typeof(FloatList), "The region parameters for the Population.")]

      public FloatList RegionHomeWorkDriveParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Home-Work Drive Parameters", "0,0,0,0", GetType(FloatList), "The region parameters for the Population.")>

      Public RegionHomeWorkDriveParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Home-Work Drive Parameters
    - type: System.String
      value: 0,0,0,0
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Population.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkOtherParameter
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkOtherParameter
  id: RegionHomeWorkOtherParameter
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionHomeWorkOtherParameter
  nameWithType: DRMNHBOAMGeneration.RegionHomeWorkOtherParameter
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionHomeWorkOtherParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionHomeWorkOtherParameter
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 76
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Home-Work Other Parameters", "0,0,0,0", typeof(FloatList), "The region parameters for the Population.")]

      public FloatList RegionHomeWorkOtherParameter
    return:
      type: TMG.GTAModel.DataUtility.FloatList
    content.vb: >-
      <RunParameter("Region Home-Work Other Parameters", "0,0,0,0", GetType(FloatList), "The region parameters for the Population.")>

      Public RegionHomeWorkOtherParameter As FloatList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Home-Work Other Parameters
    - type: System.String
      value: 0,0,0,0
    - type: System.Type
      value: TMG.GTAModel.DataUtility.FloatList
    - type: System.String
      value: The region parameters for the Population.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionNumbers
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionNumbers
  id: RegionNumbers
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RegionNumbers
  nameWithType: DRMNHBOAMGeneration.RegionNumbers
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RegionNumbers
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionNumbers
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 79
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Region Numbers", "1,2,3,4", typeof(NumberList), "The space to be reading region parameters in from.\r\nThis is used as an inverse lookup for the parameters.")]

      public NumberList RegionNumbers
    return:
      type: TMG.GTAModel.DataUtility.NumberList
    content.vb: >-
      <RunParameter("Region Numbers", "1,2,3,4", GetType(NumberList), "The space to be reading region parameters in from." & vbCrLf & "This is used as an inverse lookup for the parameters.")>

      Public RegionNumbers As NumberList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Region Numbers
    - type: System.String
      value: 1,2,3,4
    - type: System.Type
      value: TMG.GTAModel.DataUtility.NumberList
    - type: System.String
      value: >-
        The space to be reading region parameters in from.

        This is used as an inverse lookup for the parameters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Root
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Root
  id: Root
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: DRMNHBOAMGeneration.Root
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 82
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public IDemographic4StepModelSystemTemplate Root
    return:
      type: TMG.IDemographic4StepModelSystemTemplate
    content.vb: Public Root As IDemographic4StepModelSystemTemplate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.SchoolPurposeName
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.SchoolPurposeName
  id: SchoolPurposeName
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: SchoolPurposeName
  nameWithType: DRMNHBOAMGeneration.SchoolPurposeName
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.SchoolPurposeName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SchoolPurposeName
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 85
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("School Purpose Name", "School", "The name of the school purpose.")]

      public string SchoolPurposeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("School Purpose Name", "School", "The name of the school purpose.")>

      Public SchoolPurposeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: School Purpose Name
    - type: System.String
      value: School
    - type: System.String
      value: The name of the school purpose.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.WorkPurposeName
  commentId: F:TMG.GTAModel.Generation.DRMNHBOAMGeneration.WorkPurposeName
  id: WorkPurposeName
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: WorkPurposeName
  nameWithType: DRMNHBOAMGeneration.WorkPurposeName
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.WorkPurposeName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WorkPurposeName
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 88
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: >-
      [RunParameter("Work Purpose Name", "Work", "The name of the work purpose.")]

      public string WorkPurposeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Work Purpose Name", "Work", "The name of the work purpose.")>

      Public WorkPurposeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Work Purpose Name
    - type: System.String
      value: Work
    - type: System.String
      value: The name of the work purpose.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name
  commentId: P:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name
  id: Name
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DRMNHBOAMGeneration.Name
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 99
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress
  commentId: P:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress
  id: Progress
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: DRMNHBOAMGeneration.Progress
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 105
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour
  commentId: P:TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: DRMNHBOAMGeneration.ProgressColour
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 110
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  commentId: M:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  id: Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: Generate(SparseArray<Single>, SparseArray<Single>)
  nameWithType: DRMNHBOAMGeneration.Generate(SparseArray<Single>, SparseArray<Single>)
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate(Datastructure.SparseArray<System.Single>, Datastructure.SparseArray<System.Single>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Generate
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 115
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public void Generate(SparseArray<float> production, SparseArray<float> attractions)
    parameters:
    - id: production
      type: Datastructure.SparseArray{System.Single}
    - id: attractions
      type: Datastructure.SparseArray{System.Single}
    content.vb: Public Sub Generate(production As SparseArray(Of Single), attractions As SparseArray(Of Single))
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate*
  implements:
  - TMG.IGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  nameWithType.vb: DRMNHBOAMGeneration.Generate(SparseArray(Of Single), SparseArray(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate(Datastructure.SparseArray(Of System.Single), Datastructure.SparseArray(Of System.Single))
  name.vb: Generate(SparseArray(Of Single), SparseArray(Of Single))
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory
  commentId: M:TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory
  id: InitializeDemographicCategory
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: InitializeDemographicCategory()
  nameWithType: DRMNHBOAMGeneration.InitializeDemographicCategory()
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InitializeDemographicCategory
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 150
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public void InitializeDemographicCategory()
    content.vb: Public Sub InitializeDemographicCategory
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory*
  implements:
  - TMG.IDemographicCategory.InitializeDemographicCategory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained(TMG.IPerson)
  commentId: M:TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained(TMG.IPerson)
  id: IsContained(TMG.IPerson)
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: IsContained(IPerson)
  nameWithType: DRMNHBOAMGeneration.IsContained(IPerson)
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained(TMG.IPerson)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsContained
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 155
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public bool IsContained(IPerson person)
    parameters:
    - id: person
      type: TMG.IPerson
    return:
      type: System.Boolean
    content.vb: Public Function IsContained(person As IPerson) As Boolean
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained*
  implements:
  - TMG.IDemographicCategory.IsContained(TMG.IPerson)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Generation.DRMNHBOAMGeneration
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: DRMNHBOAMGeneration.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/Generation/DRMNHBOAMGeneration.cs
    startLine: 160
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Generation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: DRMNHBOAMGeneration.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.Generation
  commentId: N:TMG.GTAModel.Generation
  name: TMG.GTAModel.Generation
  nameWithType: TMG.GTAModel.Generation
  fullName: TMG.GTAModel.Generation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.IDemographicCategoryGeneration
  commentId: T:TMG.IDemographicCategoryGeneration
  parent: TMG
  name: IDemographicCategoryGeneration
  nameWithType: IDemographicCategoryGeneration
  fullName: TMG.IDemographicCategoryGeneration
- uid: TMG.IGeneration
  commentId: T:TMG.IGeneration
  parent: TMG
  name: IGeneration
  nameWithType: IGeneration
  fullName: TMG.IGeneration
- uid: TMG.IDemographicCategory
  commentId: T:TMG.IDemographicCategory
  parent: TMG
  name: IDemographicCategory
  nameWithType: IDemographicCategory
  fullName: TMG.IDemographicCategory
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.DataUtility.FloatList
  commentId: T:TMG.GTAModel.DataUtility.FloatList
  parent: TMG.GTAModel.DataUtility
  name: FloatList
  nameWithType: FloatList
  fullName: TMG.GTAModel.DataUtility.FloatList
- uid: TMG.GTAModel.DataUtility
  commentId: N:TMG.GTAModel.DataUtility
  name: TMG.GTAModel.DataUtility
  nameWithType: TMG.GTAModel.DataUtility
  fullName: TMG.GTAModel.DataUtility
- uid: TMG.GTAModel.DataUtility.NumberList
  commentId: T:TMG.GTAModel.DataUtility.NumberList
  parent: TMG.GTAModel.DataUtility
  name: NumberList
  nameWithType: NumberList
  fullName: TMG.GTAModel.DataUtility.NumberList
- uid: TMG.IDemographic4StepModelSystemTemplate
  commentId: T:TMG.IDemographic4StepModelSystemTemplate
  parent: TMG
  name: IDemographic4StepModelSystemTemplate
  nameWithType: IDemographic4StepModelSystemTemplate
  fullName: TMG.IDemographic4StepModelSystemTemplate
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name
  name: Name
  nameWithType: DRMNHBOAMGeneration.Name
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress
  name: Progress
  nameWithType: DRMNHBOAMGeneration.Progress
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour
  name: ProgressColour
  nameWithType: DRMNHBOAMGeneration.ProgressColour
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate
  name: Generate
  nameWithType: DRMNHBOAMGeneration.Generate
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.Generate
- uid: TMG.IGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  commentId: M:TMG.IGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  parent: TMG.IGeneration
  isExternal: true
  name: Generate(SparseArray<Single>, SparseArray<Single>)
  nameWithType: IGeneration.Generate(SparseArray<Single>, SparseArray<Single>)
  fullName: TMG.IGeneration.Generate(Datastructure.SparseArray<System.Single>, Datastructure.SparseArray<System.Single>)
  nameWithType.vb: IGeneration.Generate(SparseArray(Of Single), SparseArray(Of Single))
  fullName.vb: TMG.IGeneration.Generate(Datastructure.SparseArray(Of System.Single), Datastructure.SparseArray(Of System.Single))
  name.vb: Generate(SparseArray(Of Single), SparseArray(Of Single))
  spec.csharp:
  - uid: TMG.IGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
    name: Generate
    nameWithType: IGeneration.Generate
    fullName: TMG.IGeneration.Generate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
    name: Generate
    nameWithType: IGeneration.Generate
    fullName: TMG.IGeneration.Generate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseArray{System.Single}
  commentId: T:Datastructure.SparseArray{System.Single}
  parent: Datastructure
  definition: Datastructure.SparseArray`1
  name: SparseArray<Single>
  nameWithType: SparseArray<Single>
  fullName: Datastructure.SparseArray<System.Single>
  nameWithType.vb: SparseArray(Of Single)
  fullName.vb: Datastructure.SparseArray(Of System.Single)
  name.vb: SparseArray(Of Single)
  spec.csharp:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseArray`1
  commentId: T:Datastructure.SparseArray`1
  name: SparseArray<T>
  nameWithType: SparseArray<T>
  fullName: Datastructure.SparseArray<T>
  nameWithType.vb: SparseArray(Of T)
  fullName.vb: Datastructure.SparseArray(Of T)
  name.vb: SparseArray(Of T)
  spec.csharp:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory
  name: InitializeDemographicCategory
  nameWithType: DRMNHBOAMGeneration.InitializeDemographicCategory
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.InitializeDemographicCategory
- uid: TMG.IDemographicCategory.InitializeDemographicCategory
  commentId: M:TMG.IDemographicCategory.InitializeDemographicCategory
  parent: TMG.IDemographicCategory
  name: InitializeDemographicCategory()
  nameWithType: IDemographicCategory.InitializeDemographicCategory()
  fullName: TMG.IDemographicCategory.InitializeDemographicCategory()
  spec.csharp:
  - uid: TMG.IDemographicCategory.InitializeDemographicCategory
    name: InitializeDemographicCategory
    nameWithType: IDemographicCategory.InitializeDemographicCategory
    fullName: TMG.IDemographicCategory.InitializeDemographicCategory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IDemographicCategory.InitializeDemographicCategory
    name: InitializeDemographicCategory
    nameWithType: IDemographicCategory.InitializeDemographicCategory
    fullName: TMG.IDemographicCategory.InitializeDemographicCategory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained
  name: IsContained
  nameWithType: DRMNHBOAMGeneration.IsContained
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.IsContained
- uid: TMG.IDemographicCategory.IsContained(TMG.IPerson)
  commentId: M:TMG.IDemographicCategory.IsContained(TMG.IPerson)
  parent: TMG.IDemographicCategory
  name: IsContained(IPerson)
  nameWithType: IDemographicCategory.IsContained(IPerson)
  fullName: TMG.IDemographicCategory.IsContained(TMG.IPerson)
  spec.csharp:
  - uid: TMG.IDemographicCategory.IsContained(TMG.IPerson)
    name: IsContained
    nameWithType: IDemographicCategory.IsContained
    fullName: TMG.IDemographicCategory.IsContained
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IPerson
    name: IPerson
    nameWithType: IPerson
    fullName: TMG.IPerson
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IDemographicCategory.IsContained(TMG.IPerson)
    name: IsContained
    nameWithType: IDemographicCategory.IsContained
    fullName: TMG.IDemographicCategory.IsContained
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IPerson
    name: IPerson
    nameWithType: IPerson
    fullName: TMG.IPerson
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IPerson
  commentId: T:TMG.IPerson
  parent: TMG
  name: IPerson
  nameWithType: IPerson
  fullName: TMG.IPerson
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation
  name: RuntimeValidation
  nameWithType: DRMNHBOAMGeneration.RuntimeValidation
  fullName: TMG.GTAModel.Generation.DRMNHBOAMGeneration.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
