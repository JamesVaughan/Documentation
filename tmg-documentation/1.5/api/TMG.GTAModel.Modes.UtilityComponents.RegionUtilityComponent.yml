### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  commentId: T:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  id: RegionUtilityComponent
  parent: TMG.GTAModel.Modes.UtilityComponents
  children:
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsBoth
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsNone
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsOne
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ExclusiveOr
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.InvalidRegions
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained(TMG.IZone,TMG.IZone)
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationDifferent
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationSame
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Root
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation(System.String@)
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation(System.String@)
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName
  - TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ValidRegions
  langs:
  - csharp
  - vb
  name: RegionUtilityComponent
  nameWithType: RegionUtilityComponent
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  type: Class
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionUtilityComponent
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 26
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: 'public abstract class RegionUtilityComponent : IUtilityComponent, IModule'
    content.vb: >-
      Public MustInherit Class RegionUtilityComponent
          Implements IUtilityComponent, IModule
  inheritance:
  - System.Object
  derivedClasses:
  - TMG.GTAModel.Modes.UtilityComponents.RegionCheckedAIVTT
  - TMG.GTAModel.Modes.UtilityComponents.RegionCheckedTripComponentData
  - TMG.GTAModel.Modes.UtilityComponents.RegionConstantUtilityComponent
  - TMG.GTAModel.Modes.UtilityComponents.RegionIVTTUtilityComponent
  - TMG.GTAModel.Modes.UtilityComponents.RegionPDUtilityComponent
  - TMG.GTAModel.Modes.UtilityComponents.RegionStraightLineDistanceUtilityComponent
  - TMG.GTAModel.Modes.UtilityComponents.RegionTravelCostComponent
  - TMG.GTAModel.Modes.UtilityComponents.RegionWaitUtilityComponent
  - TMG.GTAModel.Modes.UtilityComponents.RegionWalkUtilityComponent
  implements:
  - TMG.Modes.IUtilityComponent
  - XTMF.IModule
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsBoth
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsBoth
  id: ContainsBoth
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ContainsBoth
  nameWithType: RegionUtilityComponent.ContainsBoth
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsBoth
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ContainsBoth
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Contains Both", false, "Will apply if both of the origin/destination are in the region.  Only one Contains can be set to true.")]

      public bool ContainsBoth
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Contains Both", False, "Will apply if both of the origin/destination are in the region.  Only one Contains can be set to true.")>

      Public ContainsBoth As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Contains Both
    - type: System.Boolean
      value: false
    - type: System.String
      value: Will apply if both of the origin/destination are in the region.  Only one Contains can be set to true.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsNone
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsNone
  id: ContainsNone
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ContainsNone
  nameWithType: RegionUtilityComponent.ContainsNone
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsNone
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ContainsNone
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Contains None", false, "Will apply if neither the origin or destination are in the specified regions.  Only one Contains can be set to true.")]

      public bool ContainsNone
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Contains None", False, "Will apply if neither the origin or destination are in the specified regions.  Only one Contains can be set to true.")>

      Public ContainsNone As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Contains None
    - type: System.Boolean
      value: false
    - type: System.String
      value: Will apply if neither the origin or destination are in the specified regions.  Only one Contains can be set to true.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsOne
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsOne
  id: ContainsOne
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ContainsOne
  nameWithType: RegionUtilityComponent.ContainsOne
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ContainsOne
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ContainsOne
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Contains One", true, "Will apply if either of the origin/destination are in the region.  Only one Contains can be set to true.")]

      public bool ContainsOne
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Contains One", True, "Will apply if either of the origin/destination are in the region.  Only one Contains can be set to true.")>

      Public ContainsOne As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Contains One
    - type: System.Boolean
      value: true
    - type: System.String
      value: Will apply if either of the origin/destination are in the region.  Only one Contains can be set to true.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ExclusiveOr
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ExclusiveOr
  id: ExclusiveOr
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ExclusiveOr
  nameWithType: RegionUtilityComponent.ExclusiveOr
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ExclusiveOr
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExclusiveOr
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Exlusive OR", false, "Only one of the origin/destination can be in the region?  Only one Contains can be set to true.")]

      public bool ExclusiveOr
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Exlusive OR", False, "Only one of the origin/destination can be in the region?  Only one Contains can be set to true.")>

      Public ExclusiveOr As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Exlusive OR
    - type: System.Boolean
      value: false
    - type: System.String
      value: Only one of the origin/destination can be in the region?  Only one Contains can be set to true.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.InvalidRegions
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.InvalidRegions
  id: InvalidRegions
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: InvalidRegions
  nameWithType: RegionUtilityComponent.InvalidRegions
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.InvalidRegions
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InvalidRegions
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Invalid Regions", "", typeof(RangeSet), "A set of ranges for region numbers that will automatically exclude this utility Component.")]

      public RangeSet InvalidRegions
    return:
      type: Datastructure.RangeSet
    content.vb: >-
      <RunParameter("Invalid Regions", "", GetType(RangeSet), "A set of ranges for region numbers that will automatically exclude this utility Component.")>

      Public InvalidRegions As RangeSet
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Invalid Regions
    - type: System.String
      value: ''
    - type: System.Type
      value: Datastructure.RangeSet
    - type: System.String
      value: A set of ranges for region numbers that will automatically exclude this utility Component.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationDifferent
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationDifferent
  id: OriginDestinationDifferent
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: OriginDestinationDifferent
  nameWithType: RegionUtilityComponent.OriginDestinationDifferent
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationDifferent
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OriginDestinationDifferent
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Must be different", false, "If true, the regions must be different from eachother.")]

      public bool OriginDestinationDifferent
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Must be different", False, "If true, the regions must be different from eachother.")>

      Public OriginDestinationDifferent As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Must be different
    - type: System.Boolean
      value: false
    - type: System.String
      value: If true, the regions must be different from eachother.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationSame
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationSame
  id: OriginDestinationSame
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: OriginDestinationSame
  nameWithType: RegionUtilityComponent.OriginDestinationSame
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.OriginDestinationSame
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OriginDestinationSame
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Must be same", false, "If true, the regions must be the same.")]

      public bool OriginDestinationSame
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Must be same", False, "If true, the regions must be the same.")>

      Public OriginDestinationSame As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Must be same
    - type: System.Boolean
      value: false
    - type: System.String
      value: If true, the regions must be the same.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Root
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Root
  id: Root
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: RegionUtilityComponent.Root
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ValidRegions
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ValidRegions
  id: ValidRegions
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ValidRegions
  nameWithType: RegionUtilityComponent.ValidRegions
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ValidRegions
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidRegions
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Valid Regions", "1", typeof(RangeSet), "A set of ranges for region numbers that will trigger this utility component to be included.")]

      public RangeSet ValidRegions
    return:
      type: Datastructure.RangeSet
    content.vb: >-
      <RunParameter("Valid Regions", "1", GetType(RangeSet), "A set of ranges for region numbers that will trigger this utility component to be included.")>

      Public ValidRegions As RangeSet
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Valid Regions
    - type: System.String
      value: "1"
    - type: System.Type
      value: Datastructure.RangeSet
    - type: System.String
      value: A set of ranges for region numbers that will trigger this utility component to be included.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name
  id: Name
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RegionUtilityComponent.Name
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 65
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress
  id: Progress
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: RegionUtilityComponent.Progress
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 71
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: RegionUtilityComponent.ProgressColour
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 76
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName
  id: UtilityComponentName
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: UtilityComponentName
  nameWithType: RegionUtilityComponent.UtilityComponentName
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UtilityComponentName
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 81
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Component Name", "", "The name of this Utility Component.  This name should be unique for each mode.")]

      public string UtilityComponentName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Component Name", "", "The name of this Utility Component.  This name should be unique for each mode.")>

      Public Property UtilityComponentName As String
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName*
  implements:
  - TMG.Modes.IUtilityComponent.UtilityComponentName
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Component Name
    - type: System.String
      value: ''
    - type: System.String
      value: The name of this Utility Component.  This name should be unique for each mode.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  id: CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: CalculateV(IZone, IZone, Time)
  nameWithType: RegionUtilityComponent.CalculateV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CalculateV
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 84
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public abstract float CalculateV(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public MustOverride Function CalculateV(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV*
  implements:
  - TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: RegionUtilityComponent.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 86
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: RegionUtilityComponent.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString
  id: ToString
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RegionUtilityComponent.ToString()
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToString
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 117
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained(TMG.IZone,TMG.IZone)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained(TMG.IZone,TMG.IZone)
  id: IsContained(TMG.IZone,TMG.IZone)
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: IsContained(IZone, IZone)
  nameWithType: RegionUtilityComponent.IsContained(IZone, IZone)
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained(TMG.IZone, TMG.IZone)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsContained
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 128
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  summary: "\nCall this to see if the given origin/destination should be accepted.\n"
  example: []
  syntax:
    content: protected virtual bool IsContained(IZone origin, IZone destination)
    parameters:
    - id: origin
      type: TMG.IZone
      description: The zone the trip starts at
    - id: destination
      type: TMG.IZone
      description: The zone the trip ends at
    return:
      type: System.Boolean
      description: If the zone pair should have the utility applied
    content.vb: Protected Overridable Function IsContained(origin As IZone, destination As IZone) As Boolean
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation(System.String@)
  id: SubRuntimeValidation(System.String@)
  parent: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent
  langs:
  - csharp
  - vb
  name: SubRuntimeValidation(ref String)
  nameWithType: RegionUtilityComponent.SubRuntimeValidation(ref String)
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SubRuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/Modes/UtilityComponents/RegionUtilityComponent.cs
    startLine: 177
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  summary: "\nRuntime validation of things besides the ContainsX parameters\n"
  example: []
  syntax:
    content: protected abstract bool SubRuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
      description: The error message passed back
    return:
      type: System.Boolean
      description: False if there was an error.
    content.vb: Protected MustOverride Function SubRuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation*
  nameWithType.vb: RegionUtilityComponent.SubRuntimeValidation(ByRef String)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation(ByRef System.String)
  name.vb: SubRuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.Modes.UtilityComponents
  commentId: N:TMG.GTAModel.Modes.UtilityComponents
  name: TMG.GTAModel.Modes.UtilityComponents
  nameWithType: TMG.GTAModel.Modes.UtilityComponents
  fullName: TMG.GTAModel.Modes.UtilityComponents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Modes.IUtilityComponent
  commentId: T:TMG.Modes.IUtilityComponent
  parent: TMG.Modes
  name: IUtilityComponent
  nameWithType: IUtilityComponent
  fullName: TMG.Modes.IUtilityComponent
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Modes
  commentId: N:TMG.Modes
  name: TMG.Modes
  nameWithType: TMG.Modes
  fullName: TMG.Modes
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Datastructure.RangeSet
  commentId: T:Datastructure.RangeSet
  parent: Datastructure
  name: RangeSet
  nameWithType: RangeSet
  fullName: Datastructure.RangeSet
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name
  name: Name
  nameWithType: RegionUtilityComponent.Name
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress
  name: Progress
  nameWithType: RegionUtilityComponent.Progress
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour
  name: ProgressColour
  nameWithType: RegionUtilityComponent.ProgressColour
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName
  name: UtilityComponentName
  nameWithType: RegionUtilityComponent.UtilityComponentName
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.UtilityComponentName
- uid: TMG.Modes.IUtilityComponent.UtilityComponentName
  commentId: P:TMG.Modes.IUtilityComponent.UtilityComponentName
  parent: TMG.Modes.IUtilityComponent
  name: UtilityComponentName
  nameWithType: IUtilityComponent.UtilityComponentName
  fullName: TMG.Modes.IUtilityComponent.UtilityComponentName
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV
  name: CalculateV
  nameWithType: RegionUtilityComponent.CalculateV
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.CalculateV
- uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.Modes.IUtilityComponent
  name: CalculateV(IZone, IZone, Time)
  nameWithType: IUtilityComponent.CalculateV(IZone, IZone, Time)
  fullName: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IUtilityComponent.CalculateV
    fullName: TMG.Modes.IUtilityComponent.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IUtilityComponent.CalculateV
    fullName: TMG.Modes.IUtilityComponent.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation
  name: RuntimeValidation
  nameWithType: RegionUtilityComponent.RuntimeValidation
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString
  name: ToString
  nameWithType: RegionUtilityComponent.ToString
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.ToString
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained
  name: IsContained
  nameWithType: RegionUtilityComponent.IsContained
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.IsContained
- uid: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation
  name: SubRuntimeValidation
  nameWithType: RegionUtilityComponent.SubRuntimeValidation
  fullName: TMG.GTAModel.Modes.UtilityComponents.RegionUtilityComponent.SubRuntimeValidation
