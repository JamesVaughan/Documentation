### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.ModeAggregationAssignment
  commentId: T:TMG.GTAModel.ModeAggregationAssignment
  id: ModeAggregationAssignment
  parent: TMG.GTAModel
  children:
  - TMG.GTAModel.ModeAggregationAssignment.AssingmentParameters
  - TMG.GTAModel.ModeAggregationAssignment.AssingmentToolName
  - TMG.GTAModel.ModeAggregationAssignment.DestinationFiles
  - TMG.GTAModel.ModeAggregationAssignment.Execute(TMG.Emme.Controller)
  - TMG.GTAModel.ModeAggregationAssignment.ExportMatrixNumbers
  - TMG.GTAModel.ModeAggregationAssignment.ExportMatrixToolName
  - TMG.GTAModel.ModeAggregationAssignment.Factor
  - TMG.GTAModel.ModeAggregationAssignment.LoadMatrixToolName
  - TMG.GTAModel.ModeAggregationAssignment.MatrixNumber
  - TMG.GTAModel.ModeAggregationAssignment.ModeNames
  - TMG.GTAModel.ModeAggregationAssignment.Name
  - TMG.GTAModel.ModeAggregationAssignment.Progress
  - TMG.GTAModel.ModeAggregationAssignment.ProgressColour
  - TMG.GTAModel.ModeAggregationAssignment.Root
  - TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation(System.String@)
  - TMG.GTAModel.ModeAggregationAssignment.ScenarioNumber
  - TMG.GTAModel.ModeAggregationAssignment.Tallies
  langs:
  - csharp
  - vb
  name: ModeAggregationAssignment
  nameWithType: ModeAggregationAssignment
  fullName: TMG.GTAModel.ModeAggregationAssignment
  type: Class
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModeAggregationAssignment
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 30
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: 'public class ModeAggregationAssignment : IEmmeTool, IModule'
    content.vb: >-
      Public Class ModeAggregationAssignment
          Implements IEmmeTool, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Emme.IEmmeTool
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.ModeAggregationAssignment.AssingmentParameters
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.AssingmentParameters
  id: AssingmentParameters
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: AssingmentParameters
  nameWithType: ModeAggregationAssignment.AssingmentParameters
  fullName: TMG.GTAModel.ModeAggregationAssignment.AssingmentParameters
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AssingmentParameters
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 37
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Assignment Parameters", "1 31 0 0 None", "The parameters to use for the assignment.")]

      public string AssingmentParameters
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Assignment Parameters", "1 31 0 0 None", "The parameters to use for the assignment.")>

      Public AssingmentParameters As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Assignment Parameters
    - type: System.String
      value: 1 31 0 0 None
    - type: System.String
      value: The parameters to use for the assignment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.AssingmentToolName
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.AssingmentToolName
  id: AssingmentToolName
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: AssingmentToolName
  nameWithType: ModeAggregationAssignment.AssingmentToolName
  fullName: TMG.GTAModel.ModeAggregationAssignment.AssingmentToolName
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AssingmentToolName
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 40
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Assignment Tool Name", "TMG.TMG.RoadAssign", "Should be the name of the tool you want for the assignment.")]

      public string AssingmentToolName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Assignment Tool Name", "TMG.TMG.RoadAssign", "Should be the name of the tool you want for the assignment.")>

      Public AssingmentToolName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Assignment Tool Name
    - type: System.String
      value: TMG.TMG.RoadAssign
    - type: System.String
      value: Should be the name of the tool you want for the assignment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.DestinationFiles
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.DestinationFiles
  id: DestinationFiles
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: DestinationFiles
  nameWithType: ModeAggregationAssignment.DestinationFiles
  fullName: TMG.GTAModel.ModeAggregationAssignment.DestinationFiles
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DestinationFiles
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 43
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Destination Files", "UpdatedData\\AutoTimes.311,UpdatedData\\AutoCosts.311", "The path relative to the Input Directory to copy the emme output to.")]

      public string DestinationFiles
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Destination Files", "UpdatedData\AutoTimes.311,UpdatedData\AutoCosts.311", "The path relative to the Input Directory to copy the emme output to.")>

      Public DestinationFiles As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Destination Files
    - type: System.String
      value: UpdatedData\AutoTimes.311,UpdatedData\AutoCosts.311
    - type: System.String
      value: The path relative to the Input Directory to copy the emme output to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.ExportMatrixNumbers
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.ExportMatrixNumbers
  id: ExportMatrixNumbers
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: ExportMatrixNumbers
  nameWithType: ModeAggregationAssignment.ExportMatrixNumbers
  fullName: TMG.GTAModel.ModeAggregationAssignment.ExportMatrixNumbers
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportMatrixNumbers
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 46
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Export Matrix Numbers", "12,13", "The list of matrix numbers to read from.")]

      public string ExportMatrixNumbers
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Export Matrix Numbers", "12,13", "The list of matrix numbers to read from.")>

      Public ExportMatrixNumbers As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Export Matrix Numbers
    - type: System.String
      value: 12,13
    - type: System.String
      value: The list of matrix numbers to read from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.ExportMatrixToolName
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.ExportMatrixToolName
  id: ExportMatrixToolName
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: ExportMatrixToolName
  nameWithType: ModeAggregationAssignment.ExportMatrixToolName
  fullName: TMG.GTAModel.ModeAggregationAssignment.ExportMatrixToolName
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportMatrixToolName
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 49
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [Parameter("Export Matrix Tool Name", "TMG.TMG.ExportMatrix", "(Should never change from \"TMG.TMG.ExportMatrix\")")]

      public string ExportMatrixToolName
    return:
      type: System.String
    content.vb: >-
      <Parameter("Export Matrix Tool Name", "TMG.TMG.ExportMatrix", "(Should never change from ""TMG.TMG.ExportMatrix"")")>

      Public ExportMatrixToolName As String
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Export Matrix Tool Name
    - type: System.String
      value: TMG.TMG.ExportMatrix
    - type: System.String
      value: (Should never change from "TMG.TMG.ExportMatrix")
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.Factor
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.Factor
  id: Factor
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: Factor
  nameWithType: ModeAggregationAssignment.Factor
  fullName: TMG.GTAModel.ModeAggregationAssignment.Factor
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Factor
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Factor", 0.42F, "What should the factor for this period be?")]

      public float Factor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Factor", 0.42F, "What should the factor for this period be?")>

      Public Factor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Factor
    - type: System.Single
      value: 0.419999987
    - type: System.String
      value: What should the factor for this period be?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.LoadMatrixToolName
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.LoadMatrixToolName
  id: LoadMatrixToolName
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: LoadMatrixToolName
  nameWithType: ModeAggregationAssignment.LoadMatrixToolName
  fullName: TMG.GTAModel.ModeAggregationAssignment.LoadMatrixToolName
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadMatrixToolName
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 55
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [Parameter("Load Matrix Tool Name", "TMG.TMG.LoadMatrix", "(Should never change from \"TMG.TMG.LoadMatrix\")")]

      public string LoadMatrixToolName
    return:
      type: System.String
    content.vb: >-
      <Parameter("Load Matrix Tool Name", "TMG.TMG.LoadMatrix", "(Should never change from ""TMG.TMG.LoadMatrix"")")>

      Public LoadMatrixToolName As String
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Load Matrix Tool Name
    - type: System.String
      value: TMG.TMG.LoadMatrix
    - type: System.String
      value: (Should never change from "TMG.TMG.LoadMatrix")
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.MatrixNumber
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.MatrixNumber
  id: MatrixNumber
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: MatrixNumber
  nameWithType: ModeAggregationAssignment.MatrixNumber
  fullName: TMG.GTAModel.ModeAggregationAssignment.MatrixNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MatrixNumber
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 58
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Matrix Number", 10, "What is the number of the matrix that we need to store into?")]

      public int MatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Matrix Number", 10, "What is the number of the matrix that we need to store into?")>

      Public MatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Matrix Number
    - type: System.Int32
      value: 10
    - type: System.String
      value: What is the number of the matrix that we need to store into?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.ModeNames
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.ModeNames
  id: ModeNames
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: ModeNames
  nameWithType: ModeAggregationAssignment.ModeNames
  fullName: TMG.GTAModel.ModeAggregationAssignment.ModeNames
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModeNames
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 61
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Modes", "Auto", "Ex \"Auto,Taxi,Passenger\" the modes you want to process.")]

      public string ModeNames
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Modes", "Auto", "Ex ""Auto,Taxi,Passenger"" the modes you want to process.")>

      Public ModeNames As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Modes
    - type: System.String
      value: Auto
    - type: System.String
      value: Ex "Auto,Taxi,Passenger" the modes you want to process.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.Root
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.Root
  id: Root
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ModeAggregationAssignment.Root
  fullName: TMG.GTAModel.ModeAggregationAssignment.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 64
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public I4StepModel Root
    return:
      type: TMG.I4StepModel
    content.vb: Public Root As I4StepModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.ScenarioNumber
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.ScenarioNumber
  id: ScenarioNumber
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: ScenarioNumber
  nameWithType: ModeAggregationAssignment.ScenarioNumber
  fullName: TMG.GTAModel.ModeAggregationAssignment.ScenarioNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ScenarioNumber
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 67
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Scenario Number", 1, "What scenario number should we be working with?")]

      public int ScenarioNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Scenario Number", 1, "What scenario number should we be working with?")>

      Public ScenarioNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Scenario Number
    - type: System.Int32
      value: 1
    - type: System.String
      value: What scenario number should we be working with?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.Tallies
  commentId: F:TMG.GTAModel.ModeAggregationAssignment.Tallies
  id: Tallies
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: Tallies
  nameWithType: ModeAggregationAssignment.Tallies
  fullName: TMG.GTAModel.ModeAggregationAssignment.Tallies
  type: Field
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Tallies
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 70
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "Tallies used for counting the number of trips between Origin and Destination", Required = false)]

      public List<IModeAggregationTally> Tallies
    return:
      type: System.Collections.Generic.List{TMG.IModeAggregationTally}
    content.vb: >-
      <SubModelInformation(Description:="Tallies used for counting the number of trips between Origin and Destination", Required:=False)>

      Public Tallies As List(Of IModeAggregationTally)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: Tallies used for counting the number of trips between Origin and Destination
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.Name
  commentId: P:TMG.GTAModel.ModeAggregationAssignment.Name
  id: Name
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModeAggregationAssignment.Name
  fullName: TMG.GTAModel.ModeAggregationAssignment.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 74
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.ModeAggregationAssignment.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.Progress
  commentId: P:TMG.GTAModel.ModeAggregationAssignment.Progress
  id: Progress
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ModeAggregationAssignment.Progress
  fullName: TMG.GTAModel.ModeAggregationAssignment.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 80
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.GTAModel.ModeAggregationAssignment.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.ProgressColour
  commentId: P:TMG.GTAModel.ModeAggregationAssignment.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ModeAggregationAssignment.ProgressColour
  fullName: TMG.GTAModel.ModeAggregationAssignment.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 86
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.ModeAggregationAssignment.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.ModeAggregationAssignment.Execute(TMG.Emme.Controller)
  commentId: M:TMG.GTAModel.ModeAggregationAssignment.Execute(TMG.Emme.Controller)
  id: Execute(TMG.Emme.Controller)
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: Execute(Controller)
  nameWithType: ModeAggregationAssignment.Execute(Controller)
  fullName: TMG.GTAModel.ModeAggregationAssignment.Execute(TMG.Emme.Controller)
  type: Method
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 91
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public bool Execute(Controller controller)
    parameters:
    - id: controller
      type: TMG.Emme.Controller
    return:
      type: System.Boolean
    content.vb: Public Function Execute(controller As Controller) As Boolean
  overload: TMG.GTAModel.ModeAggregationAssignment.Execute*
  implements:
  - TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.ModeAggregationAssignment
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ModeAggregationAssignment.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/ModeAggregationAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/ModeAggregationAssignment.cs
    startLine: 132
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ModeAggregationAssignment.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.IEmmeTool
  commentId: T:TMG.Emme.IEmmeTool
  parent: TMG.Emme
  name: IEmmeTool
  nameWithType: IEmmeTool
  fullName: TMG.Emme.IEmmeTool
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme
  commentId: N:TMG.Emme
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.I4StepModel
  commentId: T:TMG.I4StepModel
  parent: TMG
  name: I4StepModel
  nameWithType: I4StepModel
  fullName: TMG.I4StepModel
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: System.Collections.Generic.List{TMG.IModeAggregationTally}
  commentId: T:System.Collections.Generic.List{TMG.IModeAggregationTally}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModeAggregationTally>
  nameWithType: List<IModeAggregationTally>
  fullName: System.Collections.Generic.List<TMG.IModeAggregationTally>
  nameWithType.vb: List(Of IModeAggregationTally)
  fullName.vb: System.Collections.Generic.List(Of TMG.IModeAggregationTally)
  name.vb: List(Of IModeAggregationTally)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IModeAggregationTally
    name: IModeAggregationTally
    nameWithType: IModeAggregationTally
    fullName: TMG.IModeAggregationTally
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IModeAggregationTally
    name: IModeAggregationTally
    nameWithType: IModeAggregationTally
    fullName: TMG.IModeAggregationTally
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.ModeAggregationAssignment.Name*
  commentId: Overload:TMG.GTAModel.ModeAggregationAssignment.Name
  name: Name
  nameWithType: ModeAggregationAssignment.Name
  fullName: TMG.GTAModel.ModeAggregationAssignment.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.ModeAggregationAssignment.Progress*
  commentId: Overload:TMG.GTAModel.ModeAggregationAssignment.Progress
  name: Progress
  nameWithType: ModeAggregationAssignment.Progress
  fullName: TMG.GTAModel.ModeAggregationAssignment.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.ModeAggregationAssignment.ProgressColour*
  commentId: Overload:TMG.GTAModel.ModeAggregationAssignment.ProgressColour
  name: ProgressColour
  nameWithType: ModeAggregationAssignment.ProgressColour
  fullName: TMG.GTAModel.ModeAggregationAssignment.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.ModeAggregationAssignment.Execute*
  commentId: Overload:TMG.GTAModel.ModeAggregationAssignment.Execute
  name: Execute
  nameWithType: ModeAggregationAssignment.Execute
  fullName: TMG.GTAModel.ModeAggregationAssignment.Execute
- uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  parent: TMG.Emme.IEmmeTool
  name: Execute(Controller)
  nameWithType: IEmmeTool.Execute(Controller)
  fullName: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  spec.csharp:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ModeAggregationAssignment.RuntimeValidation
  fullName: TMG.GTAModel.ModeAggregationAssignment.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
