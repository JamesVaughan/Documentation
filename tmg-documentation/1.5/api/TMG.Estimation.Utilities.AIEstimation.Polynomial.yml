### YamlMime:ManagedReference
items:
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial
  commentId: T:TMG.Estimation.Utilities.AIEstimation.Polynomial
  id: Polynomial
  parent: TMG.Estimation.Utilities.AIEstimation
  children:
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.A
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.B
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.C
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.D
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.E
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.GlobalMinimum
  - TMG.Estimation.Utilities.AIEstimation.Polynomial.X
  langs:
  - csharp
  - vb
  name: Polynomial
  nameWithType: Polynomial
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial
  type: Class
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Polynomial
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 23
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: 'public class Polynomial : TestEquation, IModule'
    content.vb: >-
      Public Class Polynomial
          Inherits TestEquation
          Implements IModule
  inheritance:
  - System.Object
  - TMG.Estimation.Utilities.AIEstimation.TestEquation
  implements:
  - XTMF.IModule
  inheritedMembers:
  - TMG.Estimation.Utilities.AIEstimation.TestEquation.Name
  - TMG.Estimation.Utilities.AIEstimation.TestEquation.Progress
  - TMG.Estimation.Utilities.AIEstimation.TestEquation.ProgressColour
  - TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation(System.String@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.X
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.X
  id: X
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Polynomial.X
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.X
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: X
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 26
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("X", 0F, "The value of x.")]

      public float X
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("X", 0F, "The value of x.")>

      Public X As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: X
    - type: System.Single
      value: 0
    - type: System.String
      value: The value of x.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.A
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.A
  id: A
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: A
  nameWithType: Polynomial.A
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.A
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: A
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 29
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("A", 1F, "The value of A.")]

      public float A
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("A", 1F, "The value of A.")>

      Public A As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: A
    - type: System.Single
      value: 1
    - type: System.String
      value: The value of A.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.B
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.B
  id: B
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: B
  nameWithType: Polynomial.B
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.B
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: B
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 32
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("B", -12F, "The value of B.")]

      public float B
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("B", -12F, "The value of B.")>

      Public B As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: B
    - type: System.Single
      value: -12
    - type: System.String
      value: The value of B.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.C
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.C
  id: C
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: C
  nameWithType: Polynomial.C
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.C
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: C
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 35
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("C", 15F, "The value of C.")]

      public float C
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("C", 15F, "The value of C.")>

      Public C As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: C
    - type: System.Single
      value: 15
    - type: System.String
      value: The value of C.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.D
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.D
  id: D
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: D
  nameWithType: Polynomial.D
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.D
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: D
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 38
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("D", 56F, "The value of D.")]

      public float D
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("D", 56F, "The value of D.")>

      Public D As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: D
    - type: System.Single
      value: 56
    - type: System.String
      value: The value of D.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.E
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.E
  id: E
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: E
  nameWithType: Polynomial.E
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.E
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: E
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 41
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("E", -60F, "The value of E.")]

      public float E
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("E", -60F, "The value of E.")>

      Public E As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: E
    - type: System.Single
      value: -60
    - type: System.String
      value: The value of E.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.GlobalMinimum
  commentId: F:TMG.Estimation.Utilities.AIEstimation.Polynomial.GlobalMinimum
  id: GlobalMinimum
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: GlobalMinimum
  nameWithType: Polynomial.GlobalMinimum
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.GlobalMinimum
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GlobalMinimum
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 44
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: >-
      [RunParameter("Global Minimum", -88.891568, "The minimum value of the function in the given range of X.")]

      public float GlobalMinimum
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Global Minimum", -88.891568, "The minimum value of the function in the given range of X.")>

      Public GlobalMinimum As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Global Minimum
    - type: System.Double
      value: -88.891568000000007
    - type: System.String
      value: The minimum value of the function in the given range of X.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate
  commentId: M:TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate
  id: Evaluate
  parent: TMG.Estimation.Utilities.AIEstimation.Polynomial
  langs:
  - csharp
  - vb
  name: Evaluate()
  nameWithType: Polynomial.Evaluate()
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Evaluate
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/Utilities/AIEstimation/Polynomial.cs
    startLine: 46
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.Utilities.AIEstimation
  syntax:
    content: public override float Evaluate()
    return:
      type: System.Single
    content.vb: Public Overrides Function Evaluate As Single
  overridden: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
  overload: TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TMG.Estimation.Utilities.AIEstimation
  commentId: N:TMG.Estimation.Utilities.AIEstimation
  name: TMG.Estimation.Utilities.AIEstimation
  nameWithType: TMG.Estimation.Utilities.AIEstimation
  fullName: TMG.Estimation.Utilities.AIEstimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Estimation.Utilities.AIEstimation.TestEquation
  commentId: T:TMG.Estimation.Utilities.AIEstimation.TestEquation
  parent: TMG.Estimation.Utilities.AIEstimation
  name: TestEquation
  nameWithType: TestEquation
  fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.Name
  commentId: P:TMG.Estimation.Utilities.AIEstimation.TestEquation.Name
  parent: TMG.Estimation.Utilities.AIEstimation.TestEquation
  name: Name
  nameWithType: TestEquation.Name
  fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.Name
- uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.Progress
  commentId: P:TMG.Estimation.Utilities.AIEstimation.TestEquation.Progress
  parent: TMG.Estimation.Utilities.AIEstimation.TestEquation
  name: Progress
  nameWithType: TestEquation.Progress
  fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.Progress
- uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.ProgressColour
  commentId: P:TMG.Estimation.Utilities.AIEstimation.TestEquation.ProgressColour
  parent: TMG.Estimation.Utilities.AIEstimation.TestEquation
  name: ProgressColour
  nameWithType: TestEquation.ProgressColour
  fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.ProgressColour
- uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation(System.String@)
  commentId: M:TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation(System.String@)
  parent: TMG.Estimation.Utilities.AIEstimation.TestEquation
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: TestEquation.RuntimeValidation(String)
  fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: TestEquation.RuntimeValidation
    fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: TestEquation.RuntimeValidation
    fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
  commentId: M:TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
  parent: TMG.Estimation.Utilities.AIEstimation.TestEquation
  name: Evaluate()
  nameWithType: TestEquation.Evaluate()
  fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate()
  spec.csharp:
  - uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
    name: Evaluate
    nameWithType: TestEquation.Evaluate
    fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
    name: Evaluate
    nameWithType: TestEquation.Evaluate
    fullName: TMG.Estimation.Utilities.AIEstimation.TestEquation.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate*
  commentId: Overload:TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate
  name: Evaluate
  nameWithType: Polynomial.Evaluate
  fullName: TMG.Estimation.Utilities.AIEstimation.Polynomial.Evaluate
