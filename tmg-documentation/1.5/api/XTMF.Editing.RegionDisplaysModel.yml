### YamlMime:ManagedReference
items:
- uid: XTMF.Editing.RegionDisplaysModel
  commentId: T:XTMF.Editing.RegionDisplaysModel
  id: RegionDisplaysModel
  parent: XTMF.Editing
  children:
  - XTMF.Editing.RegionDisplaysModel.#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.ModelSystemStructureModel)
  - XTMF.Editing.RegionDisplaysModel.AddModuleToGroup(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure2,System.String@)
  - XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay(XTMF.RegionDisplay,System.String,System.String@)
  - XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay(System.String,System.String@)
  - XTMF.Editing.RegionDisplaysModel.Model
  - XTMF.Editing.RegionDisplaysModel.OnPropertyChanged(System.String)
  - XTMF.Editing.RegionDisplaysModel.PropertyChanged
  - XTMF.Editing.RegionDisplaysModel.RegionDisplays
  - XTMF.Editing.RegionDisplaysModel.RegionViewGroupsUpdated
  - XTMF.Editing.RegionDisplaysModel.RegionViewsUpdated
  - XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay(XTMF.RegionDisplay,System.String@)
  - XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup(XTMF.RegionGroup,System.String@)
  - XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel
  langs:
  - csharp
  - vb
  name: RegionDisplaysModel
  nameWithType: RegionDisplaysModel
  fullName: XTMF.Editing.RegionDisplaysModel
  type: Class
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDisplaysModel
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 13
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: 'public class RegionDisplaysModel : INotifyPropertyChanged'
    content.vb: >-
      Public Class RegionDisplaysModel
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.Editing.RegionDisplaysModel.PropertyChanged
  commentId: E:XTMF.Editing.RegionDisplaysModel.PropertyChanged
  id: PropertyChanged
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: RegionDisplaysModel.PropertyChanged
  fullName: XTMF.Editing.RegionDisplaysModel.PropertyChanged
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PropertyChanged
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 15
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Editing.RegionDisplaysModel.Model
  commentId: P:XTMF.Editing.RegionDisplaysModel.Model
  id: Model
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: RegionDisplaysModel.Model
  fullName: XTMF.Editing.RegionDisplaysModel.Model
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Model
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 23
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: public ModelSystemModel Model { get; }
    parameters: []
    return:
      type: XTMF.ModelSystemModel
    content.vb: Public ReadOnly Property Model As ModelSystemModel
  overload: XTMF.Editing.RegionDisplaysModel.Model*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Editing.RegionDisplaysModel.RegionViewGroupsUpdated
  commentId: E:XTMF.Editing.RegionDisplaysModel.RegionViewGroupsUpdated
  id: RegionViewGroupsUpdated
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RegionViewGroupsUpdated
  nameWithType: RegionDisplaysModel.RegionViewGroupsUpdated
  fullName: XTMF.Editing.RegionDisplaysModel.RegionViewGroupsUpdated
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionViewGroupsUpdated
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 28
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: public event EventHandler<RegionViewGroupsUpdateEventArgs> RegionViewGroupsUpdated
    return:
      type: System.EventHandler{XTMF.Editing.RegionViewGroupsUpdateEventArgs}
    content.vb: Public Event RegionViewGroupsUpdated As EventHandler(Of RegionViewGroupsUpdateEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Editing.RegionDisplaysModel.RegionViewsUpdated
  commentId: E:XTMF.Editing.RegionDisplaysModel.RegionViewsUpdated
  id: RegionViewsUpdated
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RegionViewsUpdated
  nameWithType: RegionDisplaysModel.RegionViewsUpdated
  fullName: XTMF.Editing.RegionDisplaysModel.RegionViewsUpdated
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionViewsUpdated
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 30
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: public event EventHandler<RegionViewsUpdateEventArgs> RegionViewsUpdated
    return:
      type: System.EventHandler{XTMF.Editing.RegionViewsUpdateEventArgs}
    content.vb: Public Event RegionViewsUpdated As EventHandler(Of RegionViewsUpdateEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Editing.RegionDisplaysModel.RegionDisplays
  commentId: P:XTMF.Editing.RegionDisplaysModel.RegionDisplays
  id: RegionDisplays
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RegionDisplays
  nameWithType: RegionDisplaysModel.RegionDisplays
  fullName: XTMF.Editing.RegionDisplaysModel.RegionDisplays
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDisplays
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 32
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: public ObservableCollection<IRegionDisplay> RegionDisplays { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{XTMF.Interfaces.IRegionDisplay}
    content.vb: Public ReadOnly Property RegionDisplays As ObservableCollection(Of IRegionDisplay)
  overload: XTMF.Editing.RegionDisplaysModel.RegionDisplays*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay(System.String,System.String@)
  commentId: M:XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay(System.String,System.String@)
  id: CreateNewRegionDisplay(System.String,System.String@)
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: CreateNewRegionDisplay(String, ref String)
  nameWithType: RegionDisplaysModel.CreateNewRegionDisplay(String, ref String)
  fullName: XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateNewRegionDisplay
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 49
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  summary: "\nCreates a new Region Display with the specified name and adds it to the model.\n"
  example: []
  syntax:
    content: public bool CreateNewRegionDisplay(string name, ref string error)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Function CreateNewRegionDisplay(name As String, ByRef error As String) As Boolean
  overload: XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay*
  nameWithType.vb: RegionDisplaysModel.CreateNewRegionDisplay(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay(System.String, ByRef System.String)
  name.vb: CreateNewRegionDisplay(String, ByRef String)
- uid: XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay(XTMF.RegionDisplay,System.String@)
  commentId: M:XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay(XTMF.RegionDisplay,System.String@)
  id: RemoveRegionDisplay(XTMF.RegionDisplay,System.String@)
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RemoveRegionDisplay(RegionDisplay, ref String)
  nameWithType: RegionDisplaysModel.RemoveRegionDisplay(RegionDisplay, ref String)
  fullName: XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay(XTMF.RegionDisplay, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RemoveRegionDisplay
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 88
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  summary: "\n\n"
  example: []
  syntax:
    content: public bool RemoveRegionDisplay(RegionDisplay display, ref string error)
    parameters:
    - id: display
      type: XTMF.RegionDisplay
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function RemoveRegionDisplay(display As RegionDisplay, ByRef error As String) As Boolean
  overload: XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay*
  nameWithType.vb: RegionDisplaysModel.RemoveRegionDisplay(RegionDisplay, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay(XTMF.RegionDisplay, ByRef System.String)
  name.vb: RemoveRegionDisplay(RegionDisplay, ByRef String)
- uid: XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup(XTMF.RegionGroup,System.String@)
  commentId: M:XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup(XTMF.RegionGroup,System.String@)
  id: RemoveRegionGroup(XTMF.RegionGroup,System.String@)
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RemoveRegionGroup(RegionGroup, ref String)
  nameWithType: RegionDisplaysModel.RemoveRegionGroup(RegionGroup, ref String)
  fullName: XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup(XTMF.RegionGroup, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RemoveRegionGroup
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 123
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  summary: "\n\n"
  example: []
  syntax:
    content: public bool RemoveRegionGroup(RegionGroup group, ref string error)
    parameters:
    - id: group
      type: XTMF.RegionGroup
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function RemoveRegionGroup(group As RegionGroup, ByRef error As String) As Boolean
  overload: XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup*
  nameWithType.vb: RegionDisplaysModel.RemoveRegionGroup(RegionGroup, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup(XTMF.RegionGroup, ByRef System.String)
  name.vb: RemoveRegionGroup(RegionGroup, ByRef String)
- uid: XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay(XTMF.RegionDisplay,System.String,System.String@)
  commentId: M:XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay(XTMF.RegionDisplay,System.String,System.String@)
  id: CreateNewGroupDisplay(XTMF.RegionDisplay,System.String,System.String@)
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: CreateNewGroupDisplay(RegionDisplay, String, ref String)
  nameWithType: RegionDisplaysModel.CreateNewGroupDisplay(RegionDisplay, String, ref String)
  fullName: XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay(XTMF.RegionDisplay, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateNewGroupDisplay
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 158
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  summary: "\n\n"
  example: []
  syntax:
    content: public bool CreateNewGroupDisplay(RegionDisplay region, string name, ref string error)
    parameters:
    - id: region
      type: XTMF.RegionDisplay
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CreateNewGroupDisplay(region As RegionDisplay, name As String, ByRef error As String) As Boolean
  overload: XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay*
  nameWithType.vb: RegionDisplaysModel.CreateNewGroupDisplay(RegionDisplay, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay(XTMF.RegionDisplay, System.String, ByRef System.String)
  name.vb: CreateNewGroupDisplay(RegionDisplay, String, ByRef String)
- uid: XTMF.Editing.RegionDisplaysModel.AddModuleToGroup(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure2,System.String@)
  commentId: M:XTMF.Editing.RegionDisplaysModel.AddModuleToGroup(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure2,System.String@)
  id: AddModuleToGroup(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure2,System.String@)
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: AddModuleToGroup(IRegionGroup, IModelSystemStructure2, ref String)
  nameWithType: RegionDisplaysModel.AddModuleToGroup(IRegionGroup, IModelSystemStructure2, ref String)
  fullName: XTMF.Editing.RegionDisplaysModel.AddModuleToGroup(XTMF.Interfaces.IRegionGroup, XTMF.IModelSystemStructure2, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddModuleToGroup
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 197
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  summary: "\n\n"
  example: []
  syntax:
    content: public bool AddModuleToGroup(IRegionGroup group, IModelSystemStructure2 module, ref string error)
    parameters:
    - id: group
      type: XTMF.Interfaces.IRegionGroup
      description: ''
    - id: module
      type: XTMF.IModelSystemStructure2
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AddModuleToGroup(group As IRegionGroup, module As IModelSystemStructure2, ByRef error As String) As Boolean
  overload: XTMF.Editing.RegionDisplaysModel.AddModuleToGroup*
  nameWithType.vb: RegionDisplaysModel.AddModuleToGroup(IRegionGroup, IModelSystemStructure2, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Editing.RegionDisplaysModel.AddModuleToGroup(XTMF.Interfaces.IRegionGroup, XTMF.IModelSystemStructure2, ByRef System.String)
  name.vb: AddModuleToGroup(IRegionGroup, IModelSystemStructure2, ByRef String)
- uid: XTMF.Editing.RegionDisplaysModel.#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.ModelSystemStructureModel)
  commentId: M:XTMF.Editing.RegionDisplaysModel.#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.ModelSystemStructureModel)
  id: '#ctor(XTMF.ModelSystemEditingSession,XTMF.ModelSystemModel,System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.ModelSystemStructureModel)'
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RegionDisplaysModel(ModelSystemEditingSession, ModelSystemModel, List<IRegionDisplay>, ModelSystemStructureModel)
  nameWithType: RegionDisplaysModel.RegionDisplaysModel(ModelSystemEditingSession, ModelSystemModel, List<IRegionDisplay>, ModelSystemStructureModel)
  fullName: XTMF.Editing.RegionDisplaysModel.RegionDisplaysModel(XTMF.ModelSystemEditingSession, XTMF.ModelSystemModel, System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>, XTMF.ModelSystemStructureModel)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 232
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  summary: "\n\n"
  example: []
  syntax:
    content: public RegionDisplaysModel(ModelSystemEditingSession session, ModelSystemModel modelSystemModel, List<IRegionDisplay> regionDisplays, ModelSystemStructureModel rootModel = null)
    parameters:
    - id: session
      type: XTMF.ModelSystemEditingSession
      description: ''
    - id: modelSystemModel
      type: XTMF.ModelSystemModel
      description: ''
    - id: regionDisplays
      type: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
      description: ''
    - id: rootModel
      type: XTMF.ModelSystemStructureModel
      description: ''
    content.vb: Public Sub New(session As ModelSystemEditingSession, modelSystemModel As ModelSystemModel, regionDisplays As List(Of IRegionDisplay), rootModel As ModelSystemStructureModel = Nothing)
  overload: XTMF.Editing.RegionDisplaysModel.#ctor*
  nameWithType.vb: RegionDisplaysModel.RegionDisplaysModel(ModelSystemEditingSession, ModelSystemModel, List(Of IRegionDisplay), ModelSystemStructureModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Editing.RegionDisplaysModel.RegionDisplaysModel(XTMF.ModelSystemEditingSession, XTMF.ModelSystemModel, System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay), XTMF.ModelSystemStructureModel)
  name.vb: RegionDisplaysModel(ModelSystemEditingSession, ModelSystemModel, List(Of IRegionDisplay), ModelSystemStructureModel)
- uid: XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel
  commentId: P:XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel
  id: RootModelSystemStructureModel
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: RootModelSystemStructureModel
  nameWithType: RegionDisplaysModel.RootModelSystemStructureModel
  fullName: XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RootModelSystemStructureModel
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 243
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: public ModelSystemStructureModel RootModelSystemStructureModel { get; set; }
    parameters: []
    return:
      type: XTMF.ModelSystemStructureModel
    content.vb: Public Property RootModelSystemStructureModel As ModelSystemStructureModel
  overload: XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Editing.RegionDisplaysModel.OnPropertyChanged(System.String)
  commentId: M:XTMF.Editing.RegionDisplaysModel.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: XTMF.Editing.RegionDisplaysModel
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: RegionDisplaysModel.OnPropertyChanged(String)
  fullName: XTMF.Editing.RegionDisplaysModel.OnPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/RegionDisplaysModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OnPropertyChanged
    path: ../../../XTMF/XTMF/Code/XTMF/Editing/RegionDisplaysModel.cs
    startLine: 245
  assemblies:
  - XTMF
  namespace: XTMF.Editing
  syntax:
    content: >-
      [NotifyPropertyChangedInvocator]

      protected virtual void OnPropertyChanged(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
    content.vb: >-
      <NotifyPropertyChangedInvocator>

      Protected Overridable Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: XTMF.Editing.RegionDisplaysModel.OnPropertyChanged*
  attributes:
  - type: XTMF.Annotations.NotifyPropertyChangedInvocatorAttribute
    ctor: XTMF.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: XTMF.Editing
  commentId: N:XTMF.Editing
  name: XTMF.Editing
  nameWithType: XTMF.Editing
  fullName: XTMF.Editing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: XTMF.Editing.RegionDisplaysModel.Model*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.Model
  name: Model
  nameWithType: RegionDisplaysModel.Model
  fullName: XTMF.Editing.RegionDisplaysModel.Model
- uid: XTMF.ModelSystemModel
  commentId: T:XTMF.ModelSystemModel
  parent: XTMF
  name: ModelSystemModel
  nameWithType: ModelSystemModel
  fullName: XTMF.ModelSystemModel
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.EventHandler{XTMF.Editing.RegionViewGroupsUpdateEventArgs}
  commentId: T:System.EventHandler{XTMF.Editing.RegionViewGroupsUpdateEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<RegionViewGroupsUpdateEventArgs>
  nameWithType: EventHandler<RegionViewGroupsUpdateEventArgs>
  fullName: System.EventHandler<XTMF.Editing.RegionViewGroupsUpdateEventArgs>
  nameWithType.vb: EventHandler(Of RegionViewGroupsUpdateEventArgs)
  fullName.vb: System.EventHandler(Of XTMF.Editing.RegionViewGroupsUpdateEventArgs)
  name.vb: EventHandler(Of RegionViewGroupsUpdateEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Editing.RegionViewGroupsUpdateEventArgs
    name: RegionViewGroupsUpdateEventArgs
    nameWithType: RegionViewGroupsUpdateEventArgs
    fullName: XTMF.Editing.RegionViewGroupsUpdateEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Editing.RegionViewGroupsUpdateEventArgs
    name: RegionViewGroupsUpdateEventArgs
    nameWithType: RegionViewGroupsUpdateEventArgs
    fullName: XTMF.Editing.RegionViewGroupsUpdateEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{XTMF.Editing.RegionViewsUpdateEventArgs}
  commentId: T:System.EventHandler{XTMF.Editing.RegionViewsUpdateEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<RegionViewsUpdateEventArgs>
  nameWithType: EventHandler<RegionViewsUpdateEventArgs>
  fullName: System.EventHandler<XTMF.Editing.RegionViewsUpdateEventArgs>
  nameWithType.vb: EventHandler(Of RegionViewsUpdateEventArgs)
  fullName.vb: System.EventHandler(Of XTMF.Editing.RegionViewsUpdateEventArgs)
  name.vb: EventHandler(Of RegionViewsUpdateEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Editing.RegionViewsUpdateEventArgs
    name: RegionViewsUpdateEventArgs
    nameWithType: RegionViewsUpdateEventArgs
    fullName: XTMF.Editing.RegionViewsUpdateEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Editing.RegionViewsUpdateEventArgs
    name: RegionViewsUpdateEventArgs
    nameWithType: RegionViewsUpdateEventArgs
    fullName: XTMF.Editing.RegionViewsUpdateEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Editing.RegionDisplaysModel.RegionDisplays*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.RegionDisplays
  name: RegionDisplays
  nameWithType: RegionDisplaysModel.RegionDisplays
  fullName: XTMF.Editing.RegionDisplaysModel.RegionDisplays
- uid: System.Collections.ObjectModel.ObservableCollection{XTMF.Interfaces.IRegionDisplay}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{XTMF.Interfaces.IRegionDisplay}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<IRegionDisplay>
  nameWithType: ObservableCollection<IRegionDisplay>
  fullName: System.Collections.ObjectModel.ObservableCollection<XTMF.Interfaces.IRegionDisplay>
  nameWithType.vb: ObservableCollection(Of IRegionDisplay)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of XTMF.Interfaces.IRegionDisplay)
  name.vb: ObservableCollection(Of IRegionDisplay)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay
  name: CreateNewRegionDisplay
  nameWithType: RegionDisplaysModel.CreateNewRegionDisplay
  fullName: XTMF.Editing.RegionDisplaysModel.CreateNewRegionDisplay
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay
  name: RemoveRegionDisplay
  nameWithType: RegionDisplaysModel.RemoveRegionDisplay
  fullName: XTMF.Editing.RegionDisplaysModel.RemoveRegionDisplay
- uid: XTMF.RegionDisplay
  commentId: T:XTMF.RegionDisplay
  parent: XTMF
  name: RegionDisplay
  nameWithType: RegionDisplay
  fullName: XTMF.RegionDisplay
- uid: XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup
  name: RemoveRegionGroup
  nameWithType: RegionDisplaysModel.RemoveRegionGroup
  fullName: XTMF.Editing.RegionDisplaysModel.RemoveRegionGroup
- uid: XTMF.RegionGroup
  commentId: T:XTMF.RegionGroup
  parent: XTMF
  name: RegionGroup
  nameWithType: RegionGroup
  fullName: XTMF.RegionGroup
- uid: XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay
  name: CreateNewGroupDisplay
  nameWithType: RegionDisplaysModel.CreateNewGroupDisplay
  fullName: XTMF.Editing.RegionDisplaysModel.CreateNewGroupDisplay
- uid: XTMF.Editing.RegionDisplaysModel.AddModuleToGroup*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.AddModuleToGroup
  name: AddModuleToGroup
  nameWithType: RegionDisplaysModel.AddModuleToGroup
  fullName: XTMF.Editing.RegionDisplaysModel.AddModuleToGroup
- uid: XTMF.Interfaces.IRegionGroup
  commentId: T:XTMF.Interfaces.IRegionGroup
  parent: XTMF.Interfaces
  name: IRegionGroup
  nameWithType: IRegionGroup
  fullName: XTMF.Interfaces.IRegionGroup
- uid: XTMF.IModelSystemStructure2
  commentId: T:XTMF.IModelSystemStructure2
  parent: XTMF
  name: IModelSystemStructure2
  nameWithType: IModelSystemStructure2
  fullName: XTMF.IModelSystemStructure2
- uid: XTMF.Interfaces
  commentId: N:XTMF.Interfaces
  name: XTMF.Interfaces
  nameWithType: XTMF.Interfaces
  fullName: XTMF.Interfaces
- uid: XTMF.Editing.RegionDisplaysModel.#ctor*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.#ctor
  name: RegionDisplaysModel
  nameWithType: RegionDisplaysModel.RegionDisplaysModel
  fullName: XTMF.Editing.RegionDisplaysModel.RegionDisplaysModel
- uid: XTMF.ModelSystemEditingSession
  commentId: T:XTMF.ModelSystemEditingSession
  parent: XTMF
  name: ModelSystemEditingSession
  nameWithType: ModelSystemEditingSession
  fullName: XTMF.ModelSystemEditingSession
- uid: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  commentId: T:System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRegionDisplay>
  nameWithType: List<IRegionDisplay>
  fullName: System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>
  nameWithType.vb: List(Of IRegionDisplay)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay)
  name.vb: List(Of IRegionDisplay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemStructureModel
  commentId: T:XTMF.ModelSystemStructureModel
  parent: XTMF
  name: ModelSystemStructureModel
  nameWithType: ModelSystemStructureModel
  fullName: XTMF.ModelSystemStructureModel
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel
  name: RootModelSystemStructureModel
  nameWithType: RegionDisplaysModel.RootModelSystemStructureModel
  fullName: XTMF.Editing.RegionDisplaysModel.RootModelSystemStructureModel
- uid: XTMF.Editing.RegionDisplaysModel.OnPropertyChanged*
  commentId: Overload:XTMF.Editing.RegionDisplaysModel.OnPropertyChanged
  name: OnPropertyChanged
  nameWithType: RegionDisplaysModel.OnPropertyChanged
  fullName: XTMF.Editing.RegionDisplaysModel.OnPropertyChanged
