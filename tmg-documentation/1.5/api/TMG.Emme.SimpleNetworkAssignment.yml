### YamlMime:ManagedReference
items:
- uid: TMG.Emme.SimpleNetworkAssignment
  commentId: T:TMG.Emme.SimpleNetworkAssignment
  id: SimpleNetworkAssignment
  parent: TMG.Emme
  children:
  - TMG.Emme.SimpleNetworkAssignment.AutoNetworkName
  - TMG.Emme.SimpleNetworkAssignment.Dispose
  - TMG.Emme.SimpleNetworkAssignment.Dispose(System.Boolean)
  - TMG.Emme.SimpleNetworkAssignment.EmmeAssignmentMacro
  - TMG.Emme.SimpleNetworkAssignment.EmmeDatabank
  - TMG.Emme.SimpleNetworkAssignment.EmmeFlowsFileName
  - TMG.Emme.SimpleNetworkAssignment.EmmeParameters
  - TMG.Emme.SimpleNetworkAssignment.EmmePath
  - TMG.Emme.SimpleNetworkAssignment.EmmeProjectFolder
  - TMG.Emme.SimpleNetworkAssignment.Finalize
  - TMG.Emme.SimpleNetworkAssignment.Flows
  - TMG.Emme.SimpleNetworkAssignment.ModellerPerformanceAnalysis
  - TMG.Emme.SimpleNetworkAssignment.Name
  - TMG.Emme.SimpleNetworkAssignment.Parent
  - TMG.Emme.SimpleNetworkAssignment.Progress
  - TMG.Emme.SimpleNetworkAssignment.ProgressColour
  - TMG.Emme.SimpleNetworkAssignment.RunEMME
  - TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments
  - TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup
  - TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment
  - TMG.Emme.SimpleNetworkAssignment.RunPostAssignments
  - TMG.Emme.SimpleNetworkAssignment.RuntimeValidation(System.String@)
  - TMG.Emme.SimpleNetworkAssignment.StartupMacroArguments
  - TMG.Emme.SimpleNetworkAssignment.StartupMacroName
  - TMG.Emme.SimpleNetworkAssignment.UseModeller
  langs:
  - csharp
  - vb
  name: SimpleNetworkAssignment
  nameWithType: SimpleNetworkAssignment
  fullName: TMG.Emme.SimpleNetworkAssignment
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SimpleNetworkAssignment
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 23
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: 'public class SimpleNetworkAssignment : INetworkAssignment, IModule, IDisposable'
    content.vb: >-
      Public Class SimpleNetworkAssignment
          Implements INetworkAssignment, IModule, IDisposable
  inheritance:
  - System.Object
  implements:
  - TMG.INetworkAssignment
  - XTMF.IModule
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Emme.SimpleNetworkAssignment.AutoNetworkName
  commentId: F:TMG.Emme.SimpleNetworkAssignment.AutoNetworkName
  id: AutoNetworkName
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: AutoNetworkName
  nameWithType: SimpleNetworkAssignment.AutoNetworkName
  fullName: TMG.Emme.SimpleNetworkAssignment.AutoNetworkName
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoNetworkName
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 32
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Auto Network Name", "Auto", "The name of the auto network to use.")]

      public string AutoNetworkName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Auto Network Name", "Auto", "The name of the auto network to use.")>

      Public AutoNetworkName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the auto network to use.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.EmmeAssignmentMacro
  commentId: F:TMG.Emme.SimpleNetworkAssignment.EmmeAssignmentMacro
  id: EmmeAssignmentMacro
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: EmmeAssignmentMacro
  nameWithType: SimpleNetworkAssignment.EmmeAssignmentMacro
  fullName: TMG.Emme.SimpleNetworkAssignment.EmmeAssignmentMacro
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmmeAssignmentMacro
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 35
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Assignment Macro", "TA_test3.mac", "The name of the macro to call to assign to EMME")]

      public string EmmeAssignmentMacro
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Assignment Macro", "TA_test3.mac", "The name of the macro to call to assign to EMME")>

      Public EmmeAssignmentMacro As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Assignment Macro
    - type: System.String
      value: TA_test3.mac
    - type: System.String
      value: The name of the macro to call to assign to EMME
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.EmmeFlowsFileName
  commentId: F:TMG.Emme.SimpleNetworkAssignment.EmmeFlowsFileName
  id: EmmeFlowsFileName
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: EmmeFlowsFileName
  nameWithType: SimpleNetworkAssignment.EmmeFlowsFileName
  fullName: TMG.Emme.SimpleNetworkAssignment.EmmeFlowsFileName
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmmeFlowsFileName
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 38
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Emme Flows File", "C:\\Users\\James\\Documents\\Project\\Macro", "The name of the auto network to use.")]

      public string EmmeFlowsFileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Emme Flows File", "C:\Users\James\Documents\Project\Macro", "The name of the auto network to use.")>

      Public EmmeFlowsFileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Emme Flows File
    - type: System.String
      value: C:\Users\James\Documents\Project\Macro
    - type: System.String
      value: The name of the auto network to use.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.EmmeParameters
  commentId: F:TMG.Emme.SimpleNetworkAssignment.EmmeParameters
  id: EmmeParameters
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: EmmeParameters
  nameWithType: SimpleNetworkAssignment.EmmeParameters
  fullName: TMG.Emme.SimpleNetworkAssignment.EmmeParameters
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmmeParameters
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 41
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Macro Parameters", "1 0 1", "The parameters to the emme macro to call")]

      public string EmmeParameters
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Macro Parameters", "1 0 1", "The parameters to the emme macro to call")>

      Public EmmeParameters As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Macro Parameters
    - type: System.String
      value: 1 0 1
    - type: System.String
      value: The parameters to the emme macro to call
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.EmmeProjectFolder
  commentId: F:TMG.Emme.SimpleNetworkAssignment.EmmeProjectFolder
  id: EmmeProjectFolder
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: EmmeProjectFolder
  nameWithType: SimpleNetworkAssignment.EmmeProjectFolder
  fullName: TMG.Emme.SimpleNetworkAssignment.EmmeProjectFolder
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmmeProjectFolder
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 44
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Emme Project Folder", "C:\\Users\\James\\Documents\\Project\\Macro", "The name of the auto network to use.")]

      public string EmmeProjectFolder
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Emme Project Folder", "C:\Users\James\Documents\Project\Macro", "The name of the auto network to use.")>

      Public EmmeProjectFolder As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Emme Project Folder
    - type: System.String
      value: C:\Users\James\Documents\Project\Macro
    - type: System.String
      value: The name of the auto network to use.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.EmmeDatabank
  commentId: F:TMG.Emme.SimpleNetworkAssignment.EmmeDatabank
  id: EmmeDatabank
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: EmmeDatabank
  nameWithType: SimpleNetworkAssignment.EmmeDatabank
  fullName: TMG.Emme.SimpleNetworkAssignment.EmmeDatabank
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmmeDatabank
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 47
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Emme Databank", "", "The name of the emme databank to work with.  Leave this as empty to select the default.")]

      public string EmmeDatabank
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Emme Databank", "", "The name of the emme databank to work with.  Leave this as empty to select the default.")>

      Public EmmeDatabank As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Emme Databank
    - type: System.String
      value: ''
    - type: System.String
      value: The name of the emme databank to work with.  Leave this as empty to select the default.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.EmmePath
  commentId: F:TMG.Emme.SimpleNetworkAssignment.EmmePath
  id: EmmePath
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: EmmePath
  nameWithType: SimpleNetworkAssignment.EmmePath
  fullName: TMG.Emme.SimpleNetworkAssignment.EmmePath
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmmePath
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 50
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("EmmePath", "", "Optional: The path to an EMME installation directory to use.  This will default to the one in the system's EMMEPath")]

      public string EmmePath
    return:
      type: System.String
    content.vb: >-
      <RunParameter("EmmePath", "", "Optional: The path to an EMME installation directory to use.  This will default to the one in the system's EMMEPath")>

      Public EmmePath As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: EmmePath
    - type: System.String
      value: ''
    - type: System.String
      value: "Optional: The path to an EMME installation directory to use.  This will default to the one in the system's EMMEPath"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.ModellerPerformanceAnalysis
  commentId: F:TMG.Emme.SimpleNetworkAssignment.ModellerPerformanceAnalysis
  id: ModellerPerformanceAnalysis
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: ModellerPerformanceAnalysis
  nameWithType: SimpleNetworkAssignment.ModellerPerformanceAnalysis
  fullName: TMG.Emme.SimpleNetworkAssignment.ModellerPerformanceAnalysis
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModellerPerformanceAnalysis
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 53
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Modeller Performance Test", false, "Store the execution time in the modeller logbook for how long it takes to run the model system.")]

      public bool ModellerPerformanceAnalysis
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Modeller Performance Test", False, "Store the execution time in the modeller logbook for how long it takes to run the model system.")>

      Public ModellerPerformanceAnalysis As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Modeller Performance Test
    - type: System.Boolean
      value: false
    - type: System.String
      value: Store the execution time in the modeller logbook for how long it takes to run the model system.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.Parent
  commentId: F:TMG.Emme.SimpleNetworkAssignment.Parent
  id: Parent
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: SimpleNetworkAssignment.Parent
  fullName: TMG.Emme.SimpleNetworkAssignment.Parent
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parent
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 56
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public I4StepModel Parent
    return:
      type: TMG.I4StepModel
    content.vb: Public Parent As I4StepModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.RunEMME
  commentId: F:TMG.Emme.SimpleNetworkAssignment.RunEMME
  id: RunEMME
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: RunEMME
  nameWithType: SimpleNetworkAssignment.RunEMME
  fullName: TMG.Emme.SimpleNetworkAssignment.RunEMME
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunEMME
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 60
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Run Emme", true, "Run Emme?")]

      public bool RunEMME
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Run Emme", True, "Run Emme?")>

      Public RunEMME As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Run Emme
    - type: System.Boolean
      value: true
    - type: System.String
      value: Run Emme?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.StartupMacroArguments
  commentId: F:TMG.Emme.SimpleNetworkAssignment.StartupMacroArguments
  id: StartupMacroArguments
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: StartupMacroArguments
  nameWithType: SimpleNetworkAssignment.StartupMacroArguments
  fullName: TMG.Emme.SimpleNetworkAssignment.StartupMacroArguments
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartupMacroArguments
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 63
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Startup Macro Parameters", "", "The parameters to use if we have a start-up macro.")]

      public string StartupMacroArguments
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Startup Macro Parameters", "", "The parameters to use if we have a start-up macro.")>

      Public StartupMacroArguments As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Startup Macro Parameters
    - type: System.String
      value: ''
    - type: System.String
      value: The parameters to use if we have a start-up macro.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.StartupMacroName
  commentId: F:TMG.Emme.SimpleNetworkAssignment.StartupMacroName
  id: StartupMacroName
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: StartupMacroName
  nameWithType: SimpleNetworkAssignment.StartupMacroName
  fullName: TMG.Emme.SimpleNetworkAssignment.StartupMacroName
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartupMacroName
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 66
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Startup Macro", "", "The macro to run to start up EMME, leave empty if none.")]

      public string StartupMacroName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Startup Macro", "", "The macro to run to start up EMME, leave empty if none.")>

      Public StartupMacroName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Startup Macro
    - type: System.String
      value: ''
    - type: System.String
      value: The macro to run to start up EMME, leave empty if none.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.UseModeller
  commentId: F:TMG.Emme.SimpleNetworkAssignment.UseModeller
  id: UseModeller
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: UseModeller
  nameWithType: SimpleNetworkAssignment.UseModeller
  fullName: TMG.Emme.SimpleNetworkAssignment.UseModeller
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UseModeller
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 69
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: >-
      [RunParameter("Use Modeller", false, "Switch the Network assignment to use modeller instead of emme macros.")]

      public bool UseModeller
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Use Modeller", False, "Switch the Network assignment to use modeller instead of emme macros.")>

      Public UseModeller As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Use Modeller
    - type: System.Boolean
      value: false
    - type: System.String
      value: Switch the Network assignment to use modeller instead of emme macros.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.Finalize
  commentId: M:TMG.Emme.SimpleNetworkAssignment.Finalize
  id: Finalize
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: SimpleNetworkAssignment.Finalize()
  fullName: TMG.Emme.SimpleNetworkAssignment.Finalize()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Finalize
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 73
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: TMG.Emme.SimpleNetworkAssignment.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.Emme.SimpleNetworkAssignment.Flows
  commentId: P:TMG.Emme.SimpleNetworkAssignment.Flows
  id: Flows
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Flows
  nameWithType: SimpleNetworkAssignment.Flows
  fullName: TMG.Emme.SimpleNetworkAssignment.Flows
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Flows
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 78
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float[][][] Flows { get; set; }
    parameters: []
    return:
      type: System.Single[][][]
    content.vb: Public Property Flows As Single()()()
  overload: TMG.Emme.SimpleNetworkAssignment.Flows*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.Name
  commentId: P:TMG.Emme.SimpleNetworkAssignment.Name
  id: Name
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SimpleNetworkAssignment.Name
  fullName: TMG.Emme.SimpleNetworkAssignment.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 80
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Emme.SimpleNetworkAssignment.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.Progress
  commentId: P:TMG.Emme.SimpleNetworkAssignment.Progress
  id: Progress
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: SimpleNetworkAssignment.Progress
  fullName: TMG.Emme.SimpleNetworkAssignment.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 86
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.Emme.SimpleNetworkAssignment.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.SimpleNetworkAssignment.ProgressColour
  commentId: P:TMG.Emme.SimpleNetworkAssignment.ProgressColour
  id: ProgressColour
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: SimpleNetworkAssignment.ProgressColour
  fullName: TMG.Emme.SimpleNetworkAssignment.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 91
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Emme.SimpleNetworkAssignment.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments
  commentId: M:TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments
  id: RunInitialAssignments
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: RunInitialAssignments()
  nameWithType: SimpleNetworkAssignment.RunInitialAssignments()
  fullName: TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunInitialAssignments
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 96
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public void RunInitialAssignments()
    content.vb: Public Sub RunInitialAssignments
  overload: TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments*
  implements:
  - TMG.INetworkAssignment.RunInitialAssignments
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment
  commentId: M:TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment
  id: RunNetworkAssignment
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: RunNetworkAssignment()
  nameWithType: SimpleNetworkAssignment.RunNetworkAssignment()
  fullName: TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunNetworkAssignment
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 100
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public void RunNetworkAssignment()
    content.vb: Public Sub RunNetworkAssignment
  overload: TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment*
  implements:
  - TMG.INetworkAssignment.RunNetworkAssignment
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.RunPostAssignments
  commentId: M:TMG.Emme.SimpleNetworkAssignment.RunPostAssignments
  id: RunPostAssignments
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: RunPostAssignments()
  nameWithType: SimpleNetworkAssignment.RunPostAssignments()
  fullName: TMG.Emme.SimpleNetworkAssignment.RunPostAssignments()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunPostAssignments
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 127
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public void RunPostAssignments()
    content.vb: Public Sub RunPostAssignments
  overload: TMG.Emme.SimpleNetworkAssignment.RunPostAssignments*
  implements:
  - TMG.INetworkAssignment.RunPostAssignments
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.SimpleNetworkAssignment.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: SimpleNetworkAssignment.RuntimeValidation(ref String)
  fullName: TMG.Emme.SimpleNetworkAssignment.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 131
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Emme.SimpleNetworkAssignment.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: SimpleNetworkAssignment.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.SimpleNetworkAssignment.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup
  commentId: M:TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup
  id: RunModelSystemSetup
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: RunModelSystemSetup()
  nameWithType: SimpleNetworkAssignment.RunModelSystemSetup()
  fullName: TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunModelSystemSetup
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 181
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public void RunModelSystemSetup()
    content.vb: Public Sub RunModelSystemSetup
  overload: TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup*
  implements:
  - TMG.INetworkAssignment.RunModelSystemSetup
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.Dispose
  commentId: M:TMG.Emme.SimpleNetworkAssignment.Dispose
  id: Dispose
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SimpleNetworkAssignment.Dispose()
  fullName: TMG.Emme.SimpleNetworkAssignment.Dispose()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 186
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: TMG.Emme.SimpleNetworkAssignment.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.SimpleNetworkAssignment.Dispose(System.Boolean)
  commentId: M:TMG.Emme.SimpleNetworkAssignment.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TMG.Emme.SimpleNetworkAssignment
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SimpleNetworkAssignment.Dispose(Boolean)
  fullName: TMG.Emme.SimpleNetworkAssignment.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/SimpleNetworkAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/XTMF/Code/TMG.Emme/SimpleNetworkAssignment.cs
    startLine: 192
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: protected virtual void Dispose(bool all)
    parameters:
    - id: all
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(all As Boolean)
  overload: TMG.Emme.SimpleNetworkAssignment.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: TMG.Emme
  commentId: N:TMG.Emme
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.INetworkAssignment
  commentId: T:TMG.INetworkAssignment
  parent: TMG
  name: INetworkAssignment
  nameWithType: INetworkAssignment
  fullName: TMG.INetworkAssignment
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.I4StepModel
  commentId: T:TMG.I4StepModel
  parent: TMG
  name: I4StepModel
  nameWithType: I4StepModel
  fullName: TMG.I4StepModel
- uid: TMG.Emme.SimpleNetworkAssignment.Finalize*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.Finalize
  name: Finalize
  nameWithType: SimpleNetworkAssignment.Finalize
  fullName: TMG.Emme.SimpleNetworkAssignment.Finalize
- uid: TMG.Emme.SimpleNetworkAssignment.Flows*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.Flows
  name: Flows
  nameWithType: SimpleNetworkAssignment.Flows
  fullName: TMG.Emme.SimpleNetworkAssignment.Flows
- uid: System.Single[][][]
  isExternal: true
  name: Single[][][]
  nameWithType: Single[][][]
  fullName: System.Single[][][]
  nameWithType.vb: Single()()()
  fullName.vb: System.Single()()()
  name.vb: Single()()()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Emme.SimpleNetworkAssignment.Name*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.Name
  name: Name
  nameWithType: SimpleNetworkAssignment.Name
  fullName: TMG.Emme.SimpleNetworkAssignment.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.Emme.SimpleNetworkAssignment.Progress*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.Progress
  name: Progress
  nameWithType: SimpleNetworkAssignment.Progress
  fullName: TMG.Emme.SimpleNetworkAssignment.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Emme.SimpleNetworkAssignment.ProgressColour*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.ProgressColour
  name: ProgressColour
  nameWithType: SimpleNetworkAssignment.ProgressColour
  fullName: TMG.Emme.SimpleNetworkAssignment.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments
  name: RunInitialAssignments
  nameWithType: SimpleNetworkAssignment.RunInitialAssignments
  fullName: TMG.Emme.SimpleNetworkAssignment.RunInitialAssignments
- uid: TMG.INetworkAssignment.RunInitialAssignments
  commentId: M:TMG.INetworkAssignment.RunInitialAssignments
  parent: TMG.INetworkAssignment
  name: RunInitialAssignments()
  nameWithType: INetworkAssignment.RunInitialAssignments()
  fullName: TMG.INetworkAssignment.RunInitialAssignments()
  spec.csharp:
  - uid: TMG.INetworkAssignment.RunInitialAssignments
    name: RunInitialAssignments
    nameWithType: INetworkAssignment.RunInitialAssignments
    fullName: TMG.INetworkAssignment.RunInitialAssignments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkAssignment.RunInitialAssignments
    name: RunInitialAssignments
    nameWithType: INetworkAssignment.RunInitialAssignments
    fullName: TMG.INetworkAssignment.RunInitialAssignments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment
  name: RunNetworkAssignment
  nameWithType: SimpleNetworkAssignment.RunNetworkAssignment
  fullName: TMG.Emme.SimpleNetworkAssignment.RunNetworkAssignment
- uid: TMG.INetworkAssignment.RunNetworkAssignment
  commentId: M:TMG.INetworkAssignment.RunNetworkAssignment
  parent: TMG.INetworkAssignment
  name: RunNetworkAssignment()
  nameWithType: INetworkAssignment.RunNetworkAssignment()
  fullName: TMG.INetworkAssignment.RunNetworkAssignment()
  spec.csharp:
  - uid: TMG.INetworkAssignment.RunNetworkAssignment
    name: RunNetworkAssignment
    nameWithType: INetworkAssignment.RunNetworkAssignment
    fullName: TMG.INetworkAssignment.RunNetworkAssignment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkAssignment.RunNetworkAssignment
    name: RunNetworkAssignment
    nameWithType: INetworkAssignment.RunNetworkAssignment
    fullName: TMG.INetworkAssignment.RunNetworkAssignment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.SimpleNetworkAssignment.RunPostAssignments*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.RunPostAssignments
  name: RunPostAssignments
  nameWithType: SimpleNetworkAssignment.RunPostAssignments
  fullName: TMG.Emme.SimpleNetworkAssignment.RunPostAssignments
- uid: TMG.INetworkAssignment.RunPostAssignments
  commentId: M:TMG.INetworkAssignment.RunPostAssignments
  parent: TMG.INetworkAssignment
  name: RunPostAssignments()
  nameWithType: INetworkAssignment.RunPostAssignments()
  fullName: TMG.INetworkAssignment.RunPostAssignments()
  spec.csharp:
  - uid: TMG.INetworkAssignment.RunPostAssignments
    name: RunPostAssignments
    nameWithType: INetworkAssignment.RunPostAssignments
    fullName: TMG.INetworkAssignment.RunPostAssignments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkAssignment.RunPostAssignments
    name: RunPostAssignments
    nameWithType: INetworkAssignment.RunPostAssignments
    fullName: TMG.INetworkAssignment.RunPostAssignments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.SimpleNetworkAssignment.RuntimeValidation*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.RuntimeValidation
  name: RuntimeValidation
  nameWithType: SimpleNetworkAssignment.RuntimeValidation
  fullName: TMG.Emme.SimpleNetworkAssignment.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup
  name: RunModelSystemSetup
  nameWithType: SimpleNetworkAssignment.RunModelSystemSetup
  fullName: TMG.Emme.SimpleNetworkAssignment.RunModelSystemSetup
- uid: TMG.INetworkAssignment.RunModelSystemSetup
  commentId: M:TMG.INetworkAssignment.RunModelSystemSetup
  parent: TMG.INetworkAssignment
  name: RunModelSystemSetup()
  nameWithType: INetworkAssignment.RunModelSystemSetup()
  fullName: TMG.INetworkAssignment.RunModelSystemSetup()
  spec.csharp:
  - uid: TMG.INetworkAssignment.RunModelSystemSetup
    name: RunModelSystemSetup
    nameWithType: INetworkAssignment.RunModelSystemSetup
    fullName: TMG.INetworkAssignment.RunModelSystemSetup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkAssignment.RunModelSystemSetup
    name: RunModelSystemSetup
    nameWithType: INetworkAssignment.RunModelSystemSetup
    fullName: TMG.INetworkAssignment.RunModelSystemSetup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.SimpleNetworkAssignment.Dispose*
  commentId: Overload:TMG.Emme.SimpleNetworkAssignment.Dispose
  name: Dispose
  nameWithType: SimpleNetworkAssignment.Dispose
  fullName: TMG.Emme.SimpleNetworkAssignment.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
