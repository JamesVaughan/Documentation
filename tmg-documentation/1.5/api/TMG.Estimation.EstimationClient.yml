### YamlMime:ManagedReference
items:
- uid: TMG.Estimation.EstimationClient
  commentId: T:TMG.Estimation.EstimationClient
  id: EstimationClient
  parent: TMG.Estimation
  children:
  - TMG.Estimation.EstimationClient.#ctor(XTMF.IConfiguration)
  - TMG.Estimation.EstimationClient.ClientTaskQueue
  - TMG.Estimation.EstimationClient.CurrentTask
  - TMG.Estimation.EstimationClient.ExitRequest
  - TMG.Estimation.EstimationClient.InputBaseDirectory
  - TMG.Estimation.EstimationClient.MainClient
  - TMG.Estimation.EstimationClient.MillisecondsToWait
  - TMG.Estimation.EstimationClient.Name
  - TMG.Estimation.EstimationClient.OutputBaseDirectory
  - TMG.Estimation.EstimationClient.Parameters
  - TMG.Estimation.EstimationClient.Progress
  - TMG.Estimation.EstimationClient.ProgressColour
  - TMG.Estimation.EstimationClient.RequestJobChannel
  - TMG.Estimation.EstimationClient.ResultChannel
  - TMG.Estimation.EstimationClient.RetrieveValue
  - TMG.Estimation.EstimationClient.RuntimeValidation(System.String@)
  - TMG.Estimation.EstimationClient.SendParameterDefinitions
  - TMG.Estimation.EstimationClient.Start
  - TMG.Estimation.EstimationClient.ToHost
  langs:
  - csharp
  - vb
  name: EstimationClient
  nameWithType: EstimationClient
  fullName: TMG.Estimation.EstimationClient
  type: Class
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EstimationClient
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 28
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: 'public class EstimationClient : IEstimationClientModelSystem, IModelSystemTemplate, ISelfContainedModule, IModule'
    content.vb: >-
      Public Class EstimationClient
          Implements IEstimationClientModelSystem, IModelSystemTemplate, ISelfContainedModule, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Estimation.IEstimationClientModelSystem
  - XTMF.IModelSystemTemplate
  - XTMF.ISelfContainedModule
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Estimation.EstimationClient.RequestJobChannel
  commentId: F:TMG.Estimation.EstimationClient.RequestJobChannel
  id: RequestJobChannel
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: RequestJobChannel
  nameWithType: EstimationClient.RequestJobChannel
  fullName: TMG.Estimation.EstimationClient.RequestJobChannel
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RequestJobChannel
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 32
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Request Job Channel", 0, "The channel to use for requesting a new job.")]

      public int RequestJobChannel
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Request Job Channel", 0, "The channel to use for requesting a new job.")>

      Public RequestJobChannel As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Request Job Channel
    - type: System.Int32
      value: 0
    - type: System.String
      value: The channel to use for requesting a new job.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.ResultChannel
  commentId: F:TMG.Estimation.EstimationClient.ResultChannel
  id: ResultChannel
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: ResultChannel
  nameWithType: EstimationClient.ResultChannel
  fullName: TMG.Estimation.EstimationClient.ResultChannel
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ResultChannel
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 35
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Result Channel", 1, "The channel to use to communicate the results of a run.")]

      public int ResultChannel
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Result Channel", 1, "The channel to use to communicate the results of a run.")>

      Public ResultChannel As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Result Channel
    - type: System.Int32
      value: 1
    - type: System.String
      value: The channel to use to communicate the results of a run.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.SendParameterDefinitions
  commentId: F:TMG.Estimation.EstimationClient.SendParameterDefinitions
  id: SendParameterDefinitions
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: SendParameterDefinitions
  nameWithType: EstimationClient.SendParameterDefinitions
  fullName: TMG.Estimation.EstimationClient.SendParameterDefinitions
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SendParameterDefinitions
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 38
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Send Parameter Definitions", -1, "The channel to use for requesting the definitions for parameters.")]

      public int SendParameterDefinitions
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Send Parameter Definitions", -1, "The channel to use for requesting the definitions for parameters.")>

      Public SendParameterDefinitions As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Send Parameter Definitions
    - type: System.Int32
      value: -1
    - type: System.String
      value: The channel to use for requesting the definitions for parameters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.MillisecondsToWait
  commentId: F:TMG.Estimation.EstimationClient.MillisecondsToWait
  id: MillisecondsToWait
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: MillisecondsToWait
  nameWithType: EstimationClient.MillisecondsToWait
  fullName: TMG.Estimation.EstimationClient.MillisecondsToWait
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MillisecondsToWait
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 41
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Wait Time", 1000, "The amount of time(milliseconds) to wait for the host to reply to our request for a new job.")]

      public int MillisecondsToWait
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Wait Time", 1000, "The amount of time(milliseconds) to wait for the host to reply to our request for a new job.")>

      Public MillisecondsToWait As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Wait Time
    - type: System.Int32
      value: 1000
    - type: System.String
      value: The amount of time(milliseconds) to wait for the host to reply to our request for a new job.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.MainClient
  commentId: P:TMG.Estimation.EstimationClient.MainClient
  id: MainClient
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: MainClient
  nameWithType: EstimationClient.MainClient
  fullName: TMG.Estimation.EstimationClient.MainClient
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MainClient
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 43
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The model system to execute to evaluate fitness.")]

      public IModelSystemTemplate MainClient { get; set; }
    parameters: []
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The model system to execute to evaluate fitness.")>

      Public Property MainClient As IModelSystemTemplate
  overload: TMG.Estimation.EstimationClient.MainClient*
  implements:
  - TMG.Estimation.IEstimationClientModelSystem.MainClient
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The model system to execute to evaluate fitness.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.ToHost
  commentId: F:TMG.Estimation.EstimationClient.ToHost
  id: ToHost
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: ToHost
  nameWithType: EstimationClient.ToHost
  fullName: TMG.Estimation.EstimationClient.ToHost
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToHost
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 46
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public IClient ToHost
    return:
      type: XTMF.Networking.IClient
    content.vb: Public ToHost As IClient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.InputBaseDirectory
  commentId: P:TMG.Estimation.EstimationClient.InputBaseDirectory
  id: InputBaseDirectory
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: InputBaseDirectory
  nameWithType: EstimationClient.InputBaseDirectory
  fullName: TMG.Estimation.EstimationClient.InputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InputBaseDirectory
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 48
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public string InputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InputBaseDirectory As String
  overload: TMG.Estimation.EstimationClient.InputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.InputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.OutputBaseDirectory
  commentId: P:TMG.Estimation.EstimationClient.OutputBaseDirectory
  id: OutputBaseDirectory
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: OutputBaseDirectory
  nameWithType: EstimationClient.OutputBaseDirectory
  fullName: TMG.Estimation.EstimationClient.OutputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutputBaseDirectory
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 50
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public string OutputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputBaseDirectory As String
  overload: TMG.Estimation.EstimationClient.OutputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.OutputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.Parameters
  commentId: P:TMG.Estimation.EstimationClient.Parameters
  id: Parameters
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: EstimationClient.Parameters
  fullName: TMG.Estimation.EstimationClient.Parameters
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parameters
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 52
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public ParameterSetting[] Parameters { get; }
    parameters: []
    return:
      type: TMG.Estimation.ParameterSetting[]
    content.vb: Public ReadOnly Property Parameters As ParameterSetting()
  overload: TMG.Estimation.EstimationClient.Parameters*
  implements:
  - TMG.Estimation.IEstimationClientModelSystem.Parameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.EstimationClient.ClientTaskQueue
  commentId: F:TMG.Estimation.EstimationClient.ClientTaskQueue
  id: ClientTaskQueue
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: ClientTaskQueue
  nameWithType: EstimationClient.ClientTaskQueue
  fullName: TMG.Estimation.EstimationClient.ClientTaskQueue
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClientTaskQueue
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 54
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public MessageQueue<ClientTask> ClientTaskQueue
    return:
      type: XTMF.Networking.MessageQueue{TMG.Estimation.ClientTask}
    content.vb: Public ClientTaskQueue As MessageQueue(Of ClientTask)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.CurrentTask
  commentId: P:TMG.Estimation.EstimationClient.CurrentTask
  id: CurrentTask
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: CurrentTask
  nameWithType: EstimationClient.CurrentTask
  fullName: TMG.Estimation.EstimationClient.CurrentTask
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CurrentTask
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 62
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public ClientTask CurrentTask { get; }
    parameters: []
    return:
      type: TMG.Estimation.ClientTask
    content.vb: Public ReadOnly Property CurrentTask As ClientTask
  overload: TMG.Estimation.EstimationClient.CurrentTask*
  implements:
  - TMG.Estimation.IEstimationClientModelSystem.CurrentTask
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.EstimationClient.#ctor(XTMF.IConfiguration)
  commentId: M:TMG.Estimation.EstimationClient.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: EstimationClient(IConfiguration)
  nameWithType: EstimationClient.EstimationClient(IConfiguration)
  fullName: TMG.Estimation.EstimationClient.EstimationClient(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 64
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public EstimationClient(IConfiguration xtmfConfig)
    parameters:
    - id: xtmfConfig
      type: XTMF.IConfiguration
    content.vb: Public Sub New(xtmfConfig As IConfiguration)
  overload: TMG.Estimation.EstimationClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.ExitRequest
  commentId: M:TMG.Estimation.EstimationClient.ExitRequest
  id: ExitRequest
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: ExitRequest()
  nameWithType: EstimationClient.ExitRequest()
  fullName: TMG.Estimation.EstimationClient.ExitRequest()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExitRequest
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 90
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public bool ExitRequest()
    return:
      type: System.Boolean
    content.vb: Public Function ExitRequest As Boolean
  overload: TMG.Estimation.EstimationClient.ExitRequest*
  implements:
  - XTMF.IModelSystemTemplate.ExitRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.Start
  commentId: M:TMG.Estimation.EstimationClient.Start
  id: Start
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: EstimationClient.Start()
  fullName: TMG.Estimation.EstimationClient.Start()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Start
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 96
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TMG.Estimation.EstimationClient.Start*
  implements:
  - XTMF.ISelfContainedModule.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.RetrieveValue
  commentId: P:TMG.Estimation.EstimationClient.RetrieveValue
  id: RetrieveValue
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: RetrieveValue
  nameWithType: EstimationClient.RetrieveValue
  fullName: TMG.Estimation.EstimationClient.RetrieveValue
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RetrieveValue
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 127
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public Func<float> RetrieveValue { get; set; }
    parameters: []
    return:
      type: System.Func{System.Single}
    content.vb: Public Property RetrieveValue As Func(Of Single)
  overload: TMG.Estimation.EstimationClient.RetrieveValue*
  implements:
  - TMG.Estimation.IEstimationClientModelSystem.RetrieveValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.Name
  commentId: P:TMG.Estimation.EstimationClient.Name
  id: Name
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EstimationClient.Name
  fullName: TMG.Estimation.EstimationClient.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 227
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Estimation.EstimationClient.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.EstimationClient.Progress
  commentId: P:TMG.Estimation.EstimationClient.Progress
  id: Progress
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: EstimationClient.Progress
  fullName: TMG.Estimation.EstimationClient.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 229
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.Estimation.EstimationClient.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.EstimationClient.ProgressColour
  commentId: P:TMG.Estimation.EstimationClient.ProgressColour
  id: ProgressColour
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: EstimationClient.ProgressColour
  fullName: TMG.Estimation.EstimationClient.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 231
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Estimation.EstimationClient.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.EstimationClient.RuntimeValidation(System.String@)
  commentId: M:TMG.Estimation.EstimationClient.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Estimation.EstimationClient
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: EstimationClient.RuntimeValidation(ref String)
  fullName: TMG.Estimation.EstimationClient.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/EstimationClient.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/EstimationClient.cs
    startLine: 236
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Estimation.EstimationClient.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: EstimationClient.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Estimation.EstimationClient.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Estimation
  commentId: N:TMG.Estimation
  name: TMG.Estimation
  nameWithType: TMG.Estimation
  fullName: TMG.Estimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Estimation.IEstimationClientModelSystem
  commentId: T:TMG.Estimation.IEstimationClientModelSystem
  parent: TMG.Estimation
  name: IEstimationClientModelSystem
  nameWithType: IEstimationClientModelSystem
  fullName: TMG.Estimation.IEstimationClientModelSystem
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.ISelfContainedModule
  commentId: T:XTMF.ISelfContainedModule
  parent: XTMF
  name: ISelfContainedModule
  nameWithType: ISelfContainedModule
  fullName: XTMF.ISelfContainedModule
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Estimation.EstimationClient.MainClient*
  commentId: Overload:TMG.Estimation.EstimationClient.MainClient
  name: MainClient
  nameWithType: EstimationClient.MainClient
  fullName: TMG.Estimation.EstimationClient.MainClient
- uid: TMG.Estimation.IEstimationClientModelSystem.MainClient
  commentId: P:TMG.Estimation.IEstimationClientModelSystem.MainClient
  parent: TMG.Estimation.IEstimationClientModelSystem
  name: MainClient
  nameWithType: IEstimationClientModelSystem.MainClient
  fullName: TMG.Estimation.IEstimationClientModelSystem.MainClient
- uid: XTMF.Networking.IClient
  commentId: T:XTMF.Networking.IClient
  parent: XTMF.Networking
  name: IClient
  nameWithType: IClient
  fullName: XTMF.Networking.IClient
- uid: XTMF.Networking
  commentId: N:XTMF.Networking
  name: XTMF.Networking
  nameWithType: XTMF.Networking
  fullName: XTMF.Networking
- uid: TMG.Estimation.EstimationClient.InputBaseDirectory*
  commentId: Overload:TMG.Estimation.EstimationClient.InputBaseDirectory
  name: InputBaseDirectory
  nameWithType: EstimationClient.InputBaseDirectory
  fullName: TMG.Estimation.EstimationClient.InputBaseDirectory
- uid: XTMF.IModelSystemTemplate.InputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.InputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  name: InputBaseDirectory
  nameWithType: IModelSystemTemplate.InputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.InputBaseDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Estimation.EstimationClient.OutputBaseDirectory*
  commentId: Overload:TMG.Estimation.EstimationClient.OutputBaseDirectory
  name: OutputBaseDirectory
  nameWithType: EstimationClient.OutputBaseDirectory
  fullName: TMG.Estimation.EstimationClient.OutputBaseDirectory
- uid: XTMF.IModelSystemTemplate.OutputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.OutputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  name: OutputBaseDirectory
  nameWithType: IModelSystemTemplate.OutputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.OutputBaseDirectory
- uid: TMG.Estimation.EstimationClient.Parameters*
  commentId: Overload:TMG.Estimation.EstimationClient.Parameters
  name: Parameters
  nameWithType: EstimationClient.Parameters
  fullName: TMG.Estimation.EstimationClient.Parameters
- uid: TMG.Estimation.IEstimationClientModelSystem.Parameters
  commentId: P:TMG.Estimation.IEstimationClientModelSystem.Parameters
  parent: TMG.Estimation.IEstimationClientModelSystem
  name: Parameters
  nameWithType: IEstimationClientModelSystem.Parameters
  fullName: TMG.Estimation.IEstimationClientModelSystem.Parameters
- uid: TMG.Estimation.ParameterSetting[]
  isExternal: true
  name: ParameterSetting[]
  nameWithType: ParameterSetting[]
  fullName: TMG.Estimation.ParameterSetting[]
  nameWithType.vb: ParameterSetting()
  fullName.vb: TMG.Estimation.ParameterSetting()
  name.vb: ParameterSetting()
  spec.csharp:
  - uid: TMG.Estimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.Estimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Estimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.Estimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: XTMF.Networking.MessageQueue{TMG.Estimation.ClientTask}
  commentId: T:XTMF.Networking.MessageQueue{TMG.Estimation.ClientTask}
  parent: XTMF.Networking
  definition: XTMF.Networking.MessageQueue`1
  name: MessageQueue<ClientTask>
  nameWithType: MessageQueue<ClientTask>
  fullName: XTMF.Networking.MessageQueue<TMG.Estimation.ClientTask>
  nameWithType.vb: MessageQueue(Of ClientTask)
  fullName.vb: XTMF.Networking.MessageQueue(Of TMG.Estimation.ClientTask)
  name.vb: MessageQueue(Of ClientTask)
  spec.csharp:
  - uid: XTMF.Networking.MessageQueue`1
    name: MessageQueue
    nameWithType: MessageQueue
    fullName: XTMF.Networking.MessageQueue
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Estimation.ClientTask
    name: ClientTask
    nameWithType: ClientTask
    fullName: TMG.Estimation.ClientTask
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.Networking.MessageQueue`1
    name: MessageQueue
    nameWithType: MessageQueue
    fullName: XTMF.Networking.MessageQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Estimation.ClientTask
    name: ClientTask
    nameWithType: ClientTask
    fullName: TMG.Estimation.ClientTask
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.MessageQueue`1
  commentId: T:XTMF.Networking.MessageQueue`1
  name: MessageQueue<T>
  nameWithType: MessageQueue<T>
  fullName: XTMF.Networking.MessageQueue<T>
  nameWithType.vb: MessageQueue(Of T)
  fullName.vb: XTMF.Networking.MessageQueue(Of T)
  name.vb: MessageQueue(Of T)
  spec.csharp:
  - uid: XTMF.Networking.MessageQueue`1
    name: MessageQueue
    nameWithType: MessageQueue
    fullName: XTMF.Networking.MessageQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.Networking.MessageQueue`1
    name: MessageQueue
    nameWithType: MessageQueue
    fullName: XTMF.Networking.MessageQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.EstimationClient.CurrentTask*
  commentId: Overload:TMG.Estimation.EstimationClient.CurrentTask
  name: CurrentTask
  nameWithType: EstimationClient.CurrentTask
  fullName: TMG.Estimation.EstimationClient.CurrentTask
- uid: TMG.Estimation.IEstimationClientModelSystem.CurrentTask
  commentId: P:TMG.Estimation.IEstimationClientModelSystem.CurrentTask
  parent: TMG.Estimation.IEstimationClientModelSystem
  name: CurrentTask
  nameWithType: IEstimationClientModelSystem.CurrentTask
  fullName: TMG.Estimation.IEstimationClientModelSystem.CurrentTask
- uid: TMG.Estimation.ClientTask
  commentId: T:TMG.Estimation.ClientTask
  parent: TMG.Estimation
  name: ClientTask
  nameWithType: ClientTask
  fullName: TMG.Estimation.ClientTask
- uid: TMG.Estimation.EstimationClient.#ctor*
  commentId: Overload:TMG.Estimation.EstimationClient.#ctor
  name: EstimationClient
  nameWithType: EstimationClient.EstimationClient
  fullName: TMG.Estimation.EstimationClient.EstimationClient
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: TMG.Estimation.EstimationClient.ExitRequest*
  commentId: Overload:TMG.Estimation.EstimationClient.ExitRequest
  name: ExitRequest
  nameWithType: EstimationClient.ExitRequest
  fullName: TMG.Estimation.EstimationClient.ExitRequest
- uid: XTMF.IModelSystemTemplate.ExitRequest
  commentId: M:XTMF.IModelSystemTemplate.ExitRequest
  parent: XTMF.IModelSystemTemplate
  name: ExitRequest()
  nameWithType: IModelSystemTemplate.ExitRequest()
  fullName: XTMF.IModelSystemTemplate.ExitRequest()
  spec.csharp:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Estimation.EstimationClient.Start*
  commentId: Overload:TMG.Estimation.EstimationClient.Start
  name: Start
  nameWithType: EstimationClient.Start
  fullName: TMG.Estimation.EstimationClient.Start
- uid: XTMF.ISelfContainedModule.Start
  commentId: M:XTMF.ISelfContainedModule.Start
  parent: XTMF.ISelfContainedModule
  name: Start()
  nameWithType: ISelfContainedModule.Start()
  fullName: XTMF.ISelfContainedModule.Start()
  spec.csharp:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.EstimationClient.RetrieveValue*
  commentId: Overload:TMG.Estimation.EstimationClient.RetrieveValue
  name: RetrieveValue
  nameWithType: EstimationClient.RetrieveValue
  fullName: TMG.Estimation.EstimationClient.RetrieveValue
- uid: TMG.Estimation.IEstimationClientModelSystem.RetrieveValue
  commentId: P:TMG.Estimation.IEstimationClientModelSystem.RetrieveValue
  parent: TMG.Estimation.IEstimationClientModelSystem
  name: RetrieveValue
  nameWithType: IEstimationClientModelSystem.RetrieveValue
  fullName: TMG.Estimation.IEstimationClientModelSystem.RetrieveValue
- uid: System.Func{System.Single}
  commentId: T:System.Func{System.Single}
  parent: System
  definition: System.Func`1
  name: Func<Single>
  nameWithType: Func<Single>
  fullName: System.Func<System.Single>
  nameWithType.vb: Func(Of Single)
  fullName.vb: System.Func(Of System.Single)
  name.vb: Func(Of Single)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.EstimationClient.Name*
  commentId: Overload:TMG.Estimation.EstimationClient.Name
  name: Name
  nameWithType: EstimationClient.Name
  fullName: TMG.Estimation.EstimationClient.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.Estimation.EstimationClient.Progress*
  commentId: Overload:TMG.Estimation.EstimationClient.Progress
  name: Progress
  nameWithType: EstimationClient.Progress
  fullName: TMG.Estimation.EstimationClient.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Estimation.EstimationClient.ProgressColour*
  commentId: Overload:TMG.Estimation.EstimationClient.ProgressColour
  name: ProgressColour
  nameWithType: EstimationClient.ProgressColour
  fullName: TMG.Estimation.EstimationClient.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.EstimationClient.RuntimeValidation*
  commentId: Overload:TMG.Estimation.EstimationClient.RuntimeValidation
  name: RuntimeValidation
  nameWithType: EstimationClient.RuntimeValidation
  fullName: TMG.Estimation.EstimationClient.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
