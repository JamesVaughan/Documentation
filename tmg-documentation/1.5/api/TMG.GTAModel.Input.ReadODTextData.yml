### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Input.ReadODTextData
  commentId: T:TMG.GTAModel.Input.ReadODTextData
  id: ReadODTextData
  parent: TMG.GTAModel.Input
  children:
  - TMG.GTAModel.Input.ReadODTextData.BurnLine(System.IO.BinaryReader)
  - TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace(System.IO.BinaryReader,System.Char@)
  - TMG.GTAModel.Input.ReadODTextData.ContainsDimensionInformation
  - TMG.GTAModel.Input.ReadODTextData.EndOfFile(System.IO.BinaryReader)
  - TMG.GTAModel.Input.ReadODTextData.FileName
  - TMG.GTAModel.Input.ReadODTextData.FromInputDirectory
  - TMG.GTAModel.Input.ReadODTextData.GetInputFileName(System.String)
  - TMG.GTAModel.Input.ReadODTextData.Header
  - TMG.GTAModel.Input.ReadODTextData.Name
  - TMG.GTAModel.Input.ReadODTextData.Progress
  - TMG.GTAModel.Input.ReadODTextData.ProgressColour
  - TMG.GTAModel.Input.ReadODTextData.Read
  - TMG.GTAModel.Input.ReadODTextData.ReadDataLine(System.IO.BinaryReader,TMG.Input.ODData{System.Single}@)
  - TMG.GTAModel.Input.ReadODTextData.ReadFloat(System.IO.BinaryReader,System.Char@,System.Single@)
  - TMG.GTAModel.Input.ReadODTextData.ReadInteger(System.IO.BinaryReader,System.Char@,System.Int32@)
  - TMG.GTAModel.Input.ReadODTextData.Root
  - TMG.GTAModel.Input.ReadODTextData.RuntimeValidation(System.String@)
  - TMG.GTAModel.Input.ReadODTextData.WhiteSpace(System.Char)
  langs:
  - csharp
  - vb
  name: ReadODTextData
  nameWithType: ReadODTextData
  fullName: TMG.GTAModel.Input.ReadODTextData
  type: Class
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReadODTextData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 27
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: 'public class ReadODTextData : IReadODData<float>, IDataLineSource<ODData<float>>, IModule'
    content.vb: >-
      Public Class ReadODTextData
          Implements IReadODData(Of Single), IDataLineSource(Of ODData(Of Single)), IModule
  inheritance:
  - System.Object
  derivedClasses:
  - TMG.GTAModel.Input.ReadFilteredODTextData
  - TMG.GTAModel.Input.ReadOriginTextData
  implements:
  - TMG.Input.IReadODData{System.Single}
  - TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Input.ReadODTextData.ContainsDimensionInformation
  commentId: F:TMG.GTAModel.Input.ReadODTextData.ContainsDimensionInformation
  id: ContainsDimensionInformation
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: ContainsDimensionInformation
  nameWithType: ReadODTextData.ContainsDimensionInformation
  fullName: TMG.GTAModel.Input.ReadODTextData.ContainsDimensionInformation
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ContainsDimensionInformation
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 40
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Contains Dimension Information", false, "Does the input file contain a row after the header containing information about the dimensionality of the data?")]

      public bool ContainsDimensionInformation
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Contains Dimension Information", False, "Does the input file contain a row after the header containing information about the dimensionality of the data?")>

      Public ContainsDimensionInformation As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Contains Dimension Information
    - type: System.Boolean
      value: false
    - type: System.String
      value: Does the input file contain a row after the header containing information about the dimensionality of the data?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.FileName
  commentId: F:TMG.GTAModel.Input.ReadODTextData.FileName
  id: FileName
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: ReadODTextData.FileName
  fullName: TMG.GTAModel.Input.ReadODTextData.FileName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FileName
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 43
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("File Name", "ODData.txt", "The name of the file to read in (.txt or .csv) relative to the input directory.")]

      public string FileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("File Name", "ODData.txt", "The name of the file to read in (.txt or .csv) relative to the input directory.")>

      Public FileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: File Name
    - type: System.String
      value: ODData.txt
    - type: System.String
      value: The name of the file to read in (.txt or .csv) relative to the input directory.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.Header
  commentId: F:TMG.GTAModel.Input.ReadODTextData.Header
  id: Header
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: ReadODTextData.Header
  fullName: TMG.GTAModel.Input.ReadODTextData.Header
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Header
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 46
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Header", true, "Does this file contain a header?")]

      public bool Header
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Header", True, "Does this file contain a header?")>

      Public Header As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Header
    - type: System.Boolean
      value: true
    - type: System.String
      value: Does this file contain a header?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.FromInputDirectory
  commentId: F:TMG.GTAModel.Input.ReadODTextData.FromInputDirectory
  id: FromInputDirectory
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: FromInputDirectory
  nameWithType: ReadODTextData.FromInputDirectory
  fullName: TMG.GTAModel.Input.ReadODTextData.FromInputDirectory
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FromInputDirectory
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 49
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("From Input Directory", true, "Should we load from the input directory (true), or the output directory (false)?")]

      public bool FromInputDirectory
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("From Input Directory", True, "Should we load from the input directory (true), or the output directory (false)?")>

      Public FromInputDirectory As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: From Input Directory
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should we load from the input directory (true), or the output directory (false)?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.Root
  commentId: F:TMG.GTAModel.Input.ReadODTextData.Root
  id: Root
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ReadODTextData.Root
  fullName: TMG.GTAModel.Input.ReadODTextData.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public IModelSystemTemplate Root
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Root As IModelSystemTemplate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.Name
  commentId: P:TMG.GTAModel.Input.ReadODTextData.Name
  id: Name
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ReadODTextData.Name
  fullName: TMG.GTAModel.Input.ReadODTextData.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 54
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Input.ReadODTextData.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.Progress
  commentId: P:TMG.GTAModel.Input.ReadODTextData.Progress
  id: Progress
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ReadODTextData.Progress
  fullName: TMG.GTAModel.Input.ReadODTextData.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 60
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.GTAModel.Input.ReadODTextData.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.ProgressColour
  commentId: P:TMG.GTAModel.Input.ReadODTextData.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ReadODTextData.ProgressColour
  fullName: TMG.GTAModel.Input.ReadODTextData.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 66
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; set; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Input.ReadODTextData.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.Read
  commentId: M:TMG.GTAModel.Input.ReadODTextData.Read
  id: Read
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: ReadODTextData.Read()
  fullName: TMG.GTAModel.Input.ReadODTextData.Read()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Read
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 72
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public IEnumerable<ODData<float>> Read()
    return:
      type: System.Collections.Generic.IEnumerable{TMG.Input.ODData{System.Single}}
    content.vb: Public Function Read As IEnumerable(Of ODData(Of Single))
  overload: TMG.GTAModel.Input.ReadODTextData.Read*
  implements:
  - TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}.Read
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadODTextData.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ReadODTextData.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Input.ReadODTextData.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 143
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Input.ReadODTextData.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ReadODTextData.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.ReadODTextData.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Input.ReadODTextData.WhiteSpace(System.Char)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.WhiteSpace(System.Char)
  id: WhiteSpace(System.Char)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: WhiteSpace(Char)
  nameWithType: ReadODTextData.WhiteSpace(Char)
  fullName: TMG.GTAModel.Input.ReadODTextData.WhiteSpace(System.Char)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WhiteSpace
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 148
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected static bool WhiteSpace(char p)
    parameters:
    - id: p
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Protected Shared Function WhiteSpace(p As Char) As Boolean
  overload: TMG.GTAModel.Input.ReadODTextData.WhiteSpace*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: TMG.GTAModel.Input.ReadODTextData.BurnLine(System.IO.BinaryReader)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.BurnLine(System.IO.BinaryReader)
  id: BurnLine(System.IO.BinaryReader)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: BurnLine(BinaryReader)
  nameWithType: ReadODTextData.BurnLine(BinaryReader)
  fullName: TMG.GTAModel.Input.ReadODTextData.BurnLine(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BurnLine
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 162
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected void BurnLine(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    content.vb: Protected Sub BurnLine(reader As BinaryReader)
  overload: TMG.GTAModel.Input.ReadODTextData.BurnLine*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace(System.IO.BinaryReader,System.Char@)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace(System.IO.BinaryReader,System.Char@)
  id: BurnWhiteSpace(System.IO.BinaryReader,System.Char@)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: BurnWhiteSpace(BinaryReader, ref Char)
  nameWithType: ReadODTextData.BurnWhiteSpace(BinaryReader, ref Char)
  fullName: TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace(System.IO.BinaryReader, ref System.Char)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BurnWhiteSpace
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 170
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected void BurnWhiteSpace(BinaryReader reader, ref char c)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    - id: c
      type: System.Char
    content.vb: Protected Sub BurnWhiteSpace(reader As BinaryReader, ByRef c As Char)
  overload: TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace*
  nameWithType.vb: ReadODTextData.BurnWhiteSpace(BinaryReader, ByRef Char)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace(System.IO.BinaryReader, ByRef System.Char)
  name.vb: BurnWhiteSpace(BinaryReader, ByRef Char)
- uid: TMG.GTAModel.Input.ReadODTextData.EndOfFile(System.IO.BinaryReader)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.EndOfFile(System.IO.BinaryReader)
  id: EndOfFile(System.IO.BinaryReader)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: EndOfFile(BinaryReader)
  nameWithType: ReadODTextData.EndOfFile(BinaryReader)
  fullName: TMG.GTAModel.Input.ReadODTextData.EndOfFile(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EndOfFile
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 177
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected bool EndOfFile(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    return:
      type: System.Boolean
    content.vb: Protected Function EndOfFile(reader As BinaryReader) As Boolean
  overload: TMG.GTAModel.Input.ReadODTextData.EndOfFile*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.Input.ReadODTextData.GetInputFileName(System.String)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.GetInputFileName(System.String)
  id: GetInputFileName(System.String)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: GetInputFileName(String)
  nameWithType: ReadODTextData.GetInputFileName(String)
  fullName: TMG.GTAModel.Input.ReadODTextData.GetInputFileName(System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetInputFileName
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 186
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected string GetInputFileName(string localPath)
    parameters:
    - id: localPath
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function GetInputFileName(localPath As String) As String
  overload: TMG.GTAModel.Input.ReadODTextData.GetInputFileName*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.Input.ReadODTextData.ReadDataLine(System.IO.BinaryReader,TMG.Input.ODData{System.Single}@)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.ReadDataLine(System.IO.BinaryReader,TMG.Input.ODData{System.Single}@)
  id: ReadDataLine(System.IO.BinaryReader,TMG.Input.ODData{System.Single}@)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: ReadDataLine(BinaryReader, out ODData<Single>)
  nameWithType: ReadODTextData.ReadDataLine(BinaryReader, out ODData<Single>)
  fullName: TMG.GTAModel.Input.ReadODTextData.ReadDataLine(System.IO.BinaryReader, out TMG.Input.ODData<System.Single>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReadDataLine
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 196
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected virtual bool ReadDataLine(BinaryReader reader, out ODData<float> data)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    - id: data
      type: TMG.Input.ODData{System.Single}
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function ReadDataLine(reader As BinaryReader, ByRef data As ODData(Of Single)) As Boolean
  overload: TMG.GTAModel.Input.ReadODTextData.ReadDataLine*
  nameWithType.vb: ReadODTextData.ReadDataLine(BinaryReader, ByRef ODData(Of Single))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: TMG.GTAModel.Input.ReadODTextData.ReadDataLine(System.IO.BinaryReader, ByRef TMG.Input.ODData(Of System.Single))
  name.vb: ReadDataLine(BinaryReader, ByRef ODData(Of Single))
- uid: TMG.GTAModel.Input.ReadODTextData.ReadFloat(System.IO.BinaryReader,System.Char@,System.Single@)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.ReadFloat(System.IO.BinaryReader,System.Char@,System.Single@)
  id: ReadFloat(System.IO.BinaryReader,System.Char@,System.Single@)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: ReadFloat(BinaryReader, ref Char, out Single)
  nameWithType: ReadODTextData.ReadFloat(BinaryReader, ref Char, out Single)
  fullName: TMG.GTAModel.Input.ReadODTextData.ReadFloat(System.IO.BinaryReader, ref System.Char, out System.Single)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReadFloat
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 214
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected bool ReadFloat(BinaryReader reader, ref char c, out float p)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    - id: c
      type: System.Char
    - id: p
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Protected Function ReadFloat(reader As BinaryReader, ByRef c As Char, ByRef p As Single) As Boolean
  overload: TMG.GTAModel.Input.ReadODTextData.ReadFloat*
  nameWithType.vb: ReadODTextData.ReadFloat(BinaryReader, ByRef Char, ByRef Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TMG.GTAModel.Input.ReadODTextData.ReadFloat(System.IO.BinaryReader, ByRef System.Char, ByRef System.Single)
  name.vb: ReadFloat(BinaryReader, ByRef Char, ByRef Single)
- uid: TMG.GTAModel.Input.ReadODTextData.ReadInteger(System.IO.BinaryReader,System.Char@,System.Int32@)
  commentId: M:TMG.GTAModel.Input.ReadODTextData.ReadInteger(System.IO.BinaryReader,System.Char@,System.Int32@)
  id: ReadInteger(System.IO.BinaryReader,System.Char@,System.Int32@)
  parent: TMG.GTAModel.Input.ReadODTextData
  langs:
  - csharp
  - vb
  name: ReadInteger(BinaryReader, ref Char, out Int32)
  nameWithType: ReadODTextData.ReadInteger(BinaryReader, ref Char, out Int32)
  fullName: TMG.GTAModel.Input.ReadODTextData.ReadInteger(System.IO.BinaryReader, ref System.Char, out System.Int32)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadODTextData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReadInteger
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/ReadODTextData.cs
    startLine: 291
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected bool ReadInteger(BinaryReader reader, ref char c, out int p)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    - id: c
      type: System.Char
    - id: p
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Protected Function ReadInteger(reader As BinaryReader, ByRef c As Char, ByRef p As Integer) As Boolean
  overload: TMG.GTAModel.Input.ReadODTextData.ReadInteger*
  nameWithType.vb: ReadODTextData.ReadInteger(BinaryReader, ByRef Char, ByRef Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TMG.GTAModel.Input.ReadODTextData.ReadInteger(System.IO.BinaryReader, ByRef System.Char, ByRef System.Int32)
  name.vb: ReadInteger(BinaryReader, ByRef Char, ByRef Int32)
references:
- uid: TMG.GTAModel.Input
  commentId: N:TMG.GTAModel.Input
  name: TMG.GTAModel.Input
  nameWithType: TMG.GTAModel.Input
  fullName: TMG.GTAModel.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Input.IReadODData{System.Single}
  commentId: T:TMG.Input.IReadODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.IReadODData`1
  name: IReadODData<Single>
  nameWithType: IReadODData<Single>
  fullName: TMG.Input.IReadODData<System.Single>
  nameWithType.vb: IReadODData(Of Single)
  fullName.vb: TMG.Input.IReadODData(Of System.Single)
  name.vb: IReadODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}
  commentId: T:TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}
  parent: TMG.Input
  definition: TMG.Input.IDataLineSource`1
  name: IDataLineSource<ODData<Single>>
  nameWithType: IDataLineSource<ODData<Single>>
  fullName: TMG.Input.IDataLineSource<TMG.Input.ODData<System.Single>>
  nameWithType.vb: IDataLineSource(Of ODData(Of Single))
  fullName.vb: TMG.Input.IDataLineSource(Of TMG.Input.ODData(Of System.Single))
  name.vb: IDataLineSource(Of ODData(Of Single))
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Input.IReadODData`1
  commentId: T:TMG.Input.IReadODData`1
  name: IReadODData<T>
  nameWithType: IReadODData<T>
  fullName: TMG.Input.IReadODData<T>
  nameWithType.vb: IReadODData(Of T)
  fullName.vb: TMG.Input.IReadODData(Of T)
  name.vb: IReadODData(Of T)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.Input.IDataLineSource`1
  commentId: T:TMG.Input.IDataLineSource`1
  name: IDataLineSource<T>
  nameWithType: IDataLineSource<T>
  fullName: TMG.Input.IDataLineSource<T>
  nameWithType.vb: IDataLineSource(Of T)
  fullName.vb: TMG.Input.IDataLineSource(Of T)
  name.vb: IDataLineSource(Of T)
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: TMG.GTAModel.Input.ReadODTextData.Name*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.Name
  name: Name
  nameWithType: ReadODTextData.Name
  fullName: TMG.GTAModel.Input.ReadODTextData.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.Input.ReadODTextData.Progress*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.Progress
  name: Progress
  nameWithType: ReadODTextData.Progress
  fullName: TMG.GTAModel.Input.ReadODTextData.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Input.ReadODTextData.ProgressColour*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.ProgressColour
  name: ProgressColour
  nameWithType: ReadODTextData.ProgressColour
  fullName: TMG.GTAModel.Input.ReadODTextData.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadODTextData.Read*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.Read
  name: Read
  nameWithType: ReadODTextData.Read
  fullName: TMG.GTAModel.Input.ReadODTextData.Read
- uid: TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}.Read
  commentId: M:TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}.Read
  parent: TMG.Input.IDataLineSource{TMG.Input.ODData{System.Single}}
  definition: TMG.Input.IDataLineSource`1.Read
  name: Read()
  nameWithType: IDataLineSource<ODData<Single>>.Read()
  fullName: TMG.Input.IDataLineSource<TMG.Input.ODData<System.Single>>.Read()
  nameWithType.vb: IDataLineSource(Of ODData(Of Single)).Read()
  fullName.vb: TMG.Input.IDataLineSource(Of TMG.Input.ODData(Of System.Single)).Read()
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1.Read
    name: Read
    nameWithType: IDataLineSource<ODData<Single>>.Read
    fullName: TMG.Input.IDataLineSource<TMG.Input.ODData<System.Single>>.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1.Read
    name: Read
    nameWithType: IDataLineSource(Of ODData(Of Single)).Read
    fullName: TMG.Input.IDataLineSource(Of TMG.Input.ODData(Of System.Single)).Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TMG.Input.ODData{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{TMG.Input.ODData{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ODData<Single>>
  nameWithType: IEnumerable<ODData<Single>>
  fullName: System.Collections.Generic.IEnumerable<TMG.Input.ODData<System.Single>>
  nameWithType.vb: IEnumerable(Of ODData(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMG.Input.ODData(Of System.Single))
  name.vb: IEnumerable(Of ODData(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IDataLineSource`1.Read
  commentId: M:TMG.Input.IDataLineSource`1.Read
  name: Read()
  nameWithType: IDataLineSource<T>.Read()
  fullName: TMG.Input.IDataLineSource<T>.Read()
  nameWithType.vb: IDataLineSource(Of T).Read()
  fullName.vb: TMG.Input.IDataLineSource(Of T).Read()
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1.Read
    name: Read
    nameWithType: IDataLineSource<T>.Read
    fullName: TMG.Input.IDataLineSource<T>.Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1.Read
    name: Read
    nameWithType: IDataLineSource(Of T).Read
    fullName: TMG.Input.IDataLineSource(Of T).Read
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.Input.ReadODTextData.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ReadODTextData.RuntimeValidation
  fullName: TMG.GTAModel.Input.ReadODTextData.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadODTextData.WhiteSpace*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.WhiteSpace
  name: WhiteSpace
  nameWithType: ReadODTextData.WhiteSpace
  fullName: TMG.GTAModel.Input.ReadODTextData.WhiteSpace
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: TMG.GTAModel.Input.ReadODTextData.BurnLine*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.BurnLine
  name: BurnLine
  nameWithType: ReadODTextData.BurnLine
  fullName: TMG.GTAModel.Input.ReadODTextData.BurnLine
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace
  name: BurnWhiteSpace
  nameWithType: ReadODTextData.BurnWhiteSpace
  fullName: TMG.GTAModel.Input.ReadODTextData.BurnWhiteSpace
- uid: TMG.GTAModel.Input.ReadODTextData.EndOfFile*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.EndOfFile
  name: EndOfFile
  nameWithType: ReadODTextData.EndOfFile
  fullName: TMG.GTAModel.Input.ReadODTextData.EndOfFile
- uid: TMG.GTAModel.Input.ReadODTextData.GetInputFileName*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.GetInputFileName
  name: GetInputFileName
  nameWithType: ReadODTextData.GetInputFileName
  fullName: TMG.GTAModel.Input.ReadODTextData.GetInputFileName
- uid: TMG.GTAModel.Input.ReadODTextData.ReadDataLine*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.ReadDataLine
  name: ReadDataLine
  nameWithType: ReadODTextData.ReadDataLine
  fullName: TMG.GTAModel.Input.ReadODTextData.ReadDataLine
- uid: TMG.Input.ODData{System.Single}
  commentId: T:TMG.Input.ODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.ODData`1
  name: ODData<Single>
  nameWithType: ODData<Single>
  fullName: TMG.Input.ODData<System.Single>
  nameWithType.vb: ODData(Of Single)
  fullName.vb: TMG.Input.ODData(Of System.Single)
  name.vb: ODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ODData`1
  commentId: T:TMG.Input.ODData`1
  name: ODData<T>
  nameWithType: ODData<T>
  fullName: TMG.Input.ODData<T>
  nameWithType.vb: ODData(Of T)
  fullName.vb: TMG.Input.ODData(Of T)
  name.vb: ODData(Of T)
  spec.csharp:
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ODData`1
    name: ODData
    nameWithType: ODData
    fullName: TMG.Input.ODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadODTextData.ReadFloat*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.ReadFloat
  name: ReadFloat
  nameWithType: ReadODTextData.ReadFloat
  fullName: TMG.GTAModel.Input.ReadODTextData.ReadFloat
- uid: TMG.GTAModel.Input.ReadODTextData.ReadInteger*
  commentId: Overload:TMG.GTAModel.Input.ReadODTextData.ReadInteger
  name: ReadInteger
  nameWithType: ReadODTextData.ReadInteger
  fullName: TMG.GTAModel.Input.ReadODTextData.ReadInteger
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
