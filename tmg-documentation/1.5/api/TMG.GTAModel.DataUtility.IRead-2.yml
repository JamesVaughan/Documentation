### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.DataUtility.IRead`2
  commentId: T:TMG.GTAModel.DataUtility.IRead`2
  id: IRead`2
  parent: TMG.GTAModel.DataUtility
  children:
  - TMG.GTAModel.DataUtility.IRead`2.Read(`1,`0@)
  langs:
  - csharp
  - vb
  name: IRead<TDestination, TSource>
  nameWithType: IRead<TDestination, TSource>
  fullName: TMG.GTAModel.DataUtility.IRead<TDestination, TSource>
  type: Interface
  source:
    remote:
      path: Code/GTAModel/DataUtility/IRead.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IRead
    path: ../../../XTMF/XTMF/Code/GTAModel/DataUtility/IRead.cs
    startLine: 20
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataUtility
  syntax:
    content: public interface IRead<TDestination, TSource>
    typeParameters:
    - id: TDestination
    - id: TSource
    content.vb: Public Interface IRead(Of TDestination, TSource)
  nameWithType.vb: IRead(Of TDestination, TSource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: TMG.GTAModel.DataUtility.IRead(Of TDestination, TSource)
  name.vb: IRead(Of TDestination, TSource)
- uid: TMG.GTAModel.DataUtility.IRead`2.Read(`1,`0@)
  commentId: M:TMG.GTAModel.DataUtility.IRead`2.Read(`1,`0@)
  id: Read(`1,`0@)
  parent: TMG.GTAModel.DataUtility.IRead`2
  langs:
  - csharp
  - vb
  name: Read(TSource, out TDestination)
  nameWithType: IRead<TDestination, TSource>.Read(TSource, out TDestination)
  fullName: TMG.GTAModel.DataUtility.IRead<TDestination, TSource>.Read(TSource, out TDestination)
  type: Method
  source:
    remote:
      path: Code/GTAModel/DataUtility/IRead.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Read
    path: ../../../XTMF/XTMF/Code/GTAModel/DataUtility/IRead.cs
    startLine: 22
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataUtility
  syntax:
    content: bool Read(TSource readFrom, out TDestination result)
    parameters:
    - id: readFrom
      type: '{TSource}'
    - id: result
      type: '{TDestination}'
    return:
      type: System.Boolean
    content.vb: Function Read(readFrom As TSource, ByRef result As TDestination) As Boolean
  overload: TMG.GTAModel.DataUtility.IRead`2.Read*
  nameWithType.vb: IRead(Of TDestination, TSource).Read(TSource, ByRef TDestination)
  fullName.vb: TMG.GTAModel.DataUtility.IRead(Of TDestination, TSource).Read(TSource, ByRef TDestination)
  name.vb: Read(TSource, ByRef TDestination)
references:
- uid: TMG.GTAModel.DataUtility
  commentId: N:TMG.GTAModel.DataUtility
  name: TMG.GTAModel.DataUtility
  nameWithType: TMG.GTAModel.DataUtility
  fullName: TMG.GTAModel.DataUtility
- uid: TMG.GTAModel.DataUtility.IRead`2.Read*
  commentId: Overload:TMG.GTAModel.DataUtility.IRead`2.Read
  name: Read
  nameWithType: IRead<TDestination, TSource>.Read
  fullName: TMG.GTAModel.DataUtility.IRead<TDestination, TSource>.Read
  nameWithType.vb: IRead(Of TDestination, TSource).Read
  fullName.vb: TMG.GTAModel.DataUtility.IRead(Of TDestination, TSource).Read
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: '{TDestination}'
  commentId: '!:TDestination'
  definition: TDestination
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TSource
  commentId: '!:TSource'
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TDestination
  commentId: '!:TDestination'
  name: TDestination
  nameWithType: TDestination
  fullName: TDestination
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
