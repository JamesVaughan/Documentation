### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  commentId: T:TMG.GTAModel.Input.SingleTimePeriodNetworkData
  id: SingleTimePeriodNetworkData
  parent: TMG.GTAModel.Input
  children:
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelCostData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelTimeData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose(System.Boolean)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.HeaderBoolean
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.IterativeRoot
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.ODC
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.RebuildDataOnSuccessiveLoads
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Root
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation(System.String@)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedCostData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedODC
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedTravelTimeData
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Input.SingleTimePeriodNetworkData.Year
  langs:
  - csharp
  - vb
  name: SingleTimePeriodNetworkData
  nameWithType: SingleTimePeriodNetworkData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  type: Class
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SingleTimePeriodNetworkData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 26
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: 'public class SingleTimePeriodNetworkData : INetworkData, IDataSource<INetworkData>, IDataSource, IModule, IDisposable'
    content.vb: >-
      Public Class SingleTimePeriodNetworkData
          Implements INetworkData, IDataSource(Of INetworkData), IDataSource, IModule, IDisposable
  inheritance:
  - System.Object
  implements:
  - TMG.INetworkData
  - XTMF.IDataSource{TMG.INetworkData}
  - XTMF.IDataSource
  - XTMF.IModule
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelCostData
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelCostData
  id: BaseTravelCostData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: BaseTravelCostData
  nameWithType: SingleTimePeriodNetworkData.BaseTravelCostData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelCostData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BaseTravelCostData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Base Cost Data", "BaseCacheData/AutoCosts.311", "The base AM network costs .311/csv file")]

      public string BaseTravelCostData
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Base Cost Data", "BaseCacheData/AutoCosts.311", "The base AM network costs .311/csv file")>

      Public BaseTravelCostData As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Base Cost Data
    - type: System.String
      value: BaseCacheData/AutoCosts.311
    - type: System.String
      value: The base AM network costs .311/csv file
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelTimeData
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelTimeData
  id: BaseTravelTimeData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: BaseTravelTimeData
  nameWithType: SingleTimePeriodNetworkData.BaseTravelTimeData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.BaseTravelTimeData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BaseTravelTimeData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Base Travel Time Data", "BaseCacheData/AutoTimes.311", "The base AM network times .311/csv file")]

      public string BaseTravelTimeData
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Base Travel Time Data", "BaseCacheData/AutoTimes.311", "The base AM network times .311/csv file")>

      Public BaseTravelTimeData As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Base Travel Time Data
    - type: System.String
      value: BaseCacheData/AutoTimes.311
    - type: System.String
      value: The base AM network times .311/csv file
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.HeaderBoolean
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.HeaderBoolean
  id: HeaderBoolean
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: HeaderBoolean
  nameWithType: SingleTimePeriodNetworkData.HeaderBoolean
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.HeaderBoolean
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HeaderBoolean
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Header", true, "When loading CSV data, will it contain a header?")]

      public bool HeaderBoolean
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Header", True, "When loading CSV data, will it contain a header?")>

      Public HeaderBoolean As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Header
    - type: System.Boolean
      value: true
    - type: System.String
      value: When loading CSV data, will it contain a header?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.IterativeRoot
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.IterativeRoot
  id: IterativeRoot
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: IterativeRoot
  nameWithType: SingleTimePeriodNetworkData.IterativeRoot
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.IterativeRoot
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterativeRoot
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  summary: "\nAllows us to try to get the current iteration data\n"
  example: []
  syntax:
    content: public IIterativeModel IterativeRoot
    return:
      type: TMG.IIterativeModel
    content.vb: Public IterativeRoot As IIterativeModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ODC
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.ODC
  id: ODC
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ODC
  nameWithType: SingleTimePeriodNetworkData.ODC
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ODC
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ODC
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("First ODC File", "BaseCacheData/Auto.odc", "The location of the base Network Cache.")]

      public string ODC
    return:
      type: System.String
    content.vb: >-
      <RunParameter("First ODC File", "BaseCacheData/Auto.odc", "The location of the base Network Cache.")>

      Public ODC As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: First ODC File
    - type: System.String
      value: BaseCacheData/Auto.odc
    - type: System.String
      value: The location of the base Network Cache.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RebuildDataOnSuccessiveLoads
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.RebuildDataOnSuccessiveLoads
  id: RebuildDataOnSuccessiveLoads
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: RebuildDataOnSuccessiveLoads
  nameWithType: SingleTimePeriodNetworkData.RebuildDataOnSuccessiveLoads
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RebuildDataOnSuccessiveLoads
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RebuildDataOnSuccessiveLoads
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Rebuild Data", true, "Rebuild the data cache on successive iterations?")]

      public bool RebuildDataOnSuccessiveLoads
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Rebuild Data", True, "Rebuild the data cache on successive iterations?")>

      Public RebuildDataOnSuccessiveLoads As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Rebuild Data
    - type: System.Boolean
      value: true
    - type: System.String
      value: Rebuild the data cache on successive iterations?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Root
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Root
  id: Root
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: SingleTimePeriodNetworkData.Root
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedCostData
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedCostData
  id: UpdatedCostData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: UpdatedCostData
  nameWithType: SingleTimePeriodNetworkData.UpdatedCostData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedCostData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UpdatedCostData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Updated Cost Data", "UpdatedCacheData/AutoCosts.311", "The updated AM network costs .311/csv file")]

      public string UpdatedCostData
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Updated Cost Data", "UpdatedCacheData/AutoCosts.311", "The updated AM network costs .311/csv file")>

      Public UpdatedCostData As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Updated Cost Data
    - type: System.String
      value: UpdatedCacheData/AutoCosts.311
    - type: System.String
      value: The updated AM network costs .311/csv file
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedODC
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedODC
  id: UpdatedODC
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: UpdatedODC
  nameWithType: SingleTimePeriodNetworkData.UpdatedODC
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedODC
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UpdatedODC
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Updated ODC File", "UpdatedCacheData/Auto.odc", "The location of the updated Network Cache.")]

      public string UpdatedODC
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Updated ODC File", "UpdatedCacheData/Auto.odc", "The location of the updated Network Cache.")>

      Public UpdatedODC As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Updated ODC File
    - type: System.String
      value: UpdatedCacheData/Auto.odc
    - type: System.String
      value: The location of the updated Network Cache.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedTravelTimeData
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedTravelTimeData
  id: UpdatedTravelTimeData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: UpdatedTravelTimeData
  nameWithType: SingleTimePeriodNetworkData.UpdatedTravelTimeData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UpdatedTravelTimeData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UpdatedTravelTimeData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 59
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Updated Travel Time Data", "UpdatedCacheData/AutoTimes.311", "The updated AM network times .311/csv file")]

      public string UpdatedTravelTimeData
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Updated Travel Time Data", "UpdatedCacheData/AutoTimes.311", "The updated AM network times .311/csv file")>

      Public UpdatedTravelTimeData As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Updated Travel Time Data
    - type: System.String
      value: UpdatedCacheData/AutoTimes.311
    - type: System.String
      value: The updated AM network times .311/csv file
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Year
  commentId: F:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Year
  id: Year
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Year
  nameWithType: SingleTimePeriodNetworkData.Year
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Year
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Year
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 62
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Year", 2006, "The simulation year.  This number will be attached to the metadata when creating a new cache file.")]

      public int Year
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Year", 2006, "The simulation year.  This number will be attached to the metadata when creating a new cache file.")>

      Public Year As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Year
    - type: System.Int32
      value: 2006
    - type: System.String
      value: The simulation year.  This number will be attached to the metadata when creating a new cache file.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType
  commentId: P:TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType
  id: NetworkType
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: SingleTimePeriodNetworkData.NetworkType
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkType
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 83
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Network Type", "Auto", "The name of the network data contained in this NetworkData module")]

      public string NetworkType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Network Type", "Auto", "The name of the network data contained in this NetworkData module")>

      Public Property NetworkType As String
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType*
  implements:
  - TMG.INetworkData.NetworkType
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Network Type
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the network data contained in this NetworkData module
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress
  commentId: P:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress
  id: Progress
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: SingleTimePeriodNetworkData.Progress
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 90
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour
  commentId: P:TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: SingleTimePeriodNetworkData.ProgressColour
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 95
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name
  commentId: P:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name
  id: Name
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SingleTimePeriodNetworkData.Name
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 100
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData
  id: GiveData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: GiveData()
  nameWithType: SingleTimePeriodNetworkData.GiveData()
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GiveData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 106
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public INetworkData GiveData()
    return:
      type: TMG.INetworkData
    content.vb: Public Function GiveData As INetworkData
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData*
  implements:
  - XTMF.IDataSource{TMG.INetworkData}.GiveData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded
  commentId: P:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded
  id: Loaded
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: SingleTimePeriodNetworkData.Loaded
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Loaded
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 111
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool Loaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Loaded As Boolean
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded*
  implements:
  - XTMF.IDataSource.Loaded
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData
  id: LoadData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: LoadData()
  nameWithType: SingleTimePeriodNetworkData.LoadData()
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 116
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public void LoadData()
    content.vb: Public Sub LoadData
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData*
  implements:
  - XTMF.IDataSource.LoadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: SingleTimePeriodNetworkData.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 142
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  summary: "\nThis is called before the start method as a way to pre-check that all of the parameters that are selected\nare in fact valid for this module.\n"
  example: []
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
      description: A string that should be assigned a detailed error
    return:
      type: System.Boolean
      description: If the validation was successful or if there was a problem
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: SingleTimePeriodNetworkData.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelCost(IZone, IZone, Time)
  nameWithType: SingleTimePeriodNetworkData.TravelCost(IZone, IZone, Time)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelCost
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 149
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float TravelCost(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function TravelCost(start As IZone, end As IZone, time As Time) As Single
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost*
  implements:
  - TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  id: TravelCost(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelCost(Int32, Int32, Time)
  nameWithType: SingleTimePeriodNetworkData.TravelCost(Int32, Int32, Time)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelCost
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 155
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float TravelCost(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function TravelCost(flatOrigin As Integer, flatDestination As Integer, time As Time) As Single
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost*
  implements:
  - TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelTime(IZone, IZone, Time)
  nameWithType: SingleTimePeriodNetworkData.TravelTime(IZone, IZone, Time)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 161
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public Time TravelTime(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Function TravelTime(start As IZone, end As IZone, time As Time) As Time
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime*
  implements:
  - TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  id: TravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelTime(Int32, Int32, Time)
  nameWithType: SingleTimePeriodNetworkData.TravelTime(Int32, Int32, Time)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 167
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public Time TravelTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Function TravelTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime*
  implements:
  - TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData
  id: UnloadData
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: UnloadData()
  nameWithType: SingleTimePeriodNetworkData.UnloadData()
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnloadData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 173
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public void UnloadData()
    content.vb: Public Sub UnloadData
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData*
  implements:
  - XTMF.IDataSource.UnloadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  id: ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ValidOd(IZone, IZone, Time)
  nameWithType: SingleTimePeriodNetworkData.ValidOd(IZone, IZone, Time)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidOd
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 183
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool ValidOd(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Function ValidOd(start As IZone, end As IZone, time As Time) As Boolean
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd*
  implements:
  - TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  id: ValidOd(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ValidOd(Int32, Int32, Time)
  nameWithType: SingleTimePeriodNetworkData.ValidOd(Int32, Int32, Time)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidOd
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 188
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool ValidOd(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Function ValidOd(flatOrigin As Integer, flatDestination As Integer, time As Time) As Boolean
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd*
  implements:
  - TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose
  id: Dispose
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SingleTimePeriodNetworkData.Dispose()
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 288
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose(System.Boolean)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SingleTimePeriodNetworkData.Dispose(Boolean)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 294
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected virtual void Dispose(bool all)
    parameters:
    - id: all
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(all As Boolean)
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  id: GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: GetAllData(IZone, IZone, Time, out Time, out Single)
  nameWithType: SingleTimePeriodNetworkData.GetAllData(IZone, IZone, Time, out Time, out Single)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, out XTMF.Time, out System.Single)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 303
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool GetAllData(IZone start, IZone end, Time time, out Time ivtt, out float cost)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: XTMF.Time
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function GetAllData(start As IZone, end As IZone, time As Time, ByRef ivtt As Time, ByRef cost As Single) As Boolean
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData*
  implements:
  - TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  nameWithType.vb: SingleTimePeriodNetworkData.GetAllData(IZone, IZone, Time, ByRef Time, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, ByRef XTMF.Time, ByRef System.Single)
  name.vb: GetAllData(IZone, IZone, Time, ByRef Time, ByRef Single)
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  commentId: M:TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  id: GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  parent: TMG.GTAModel.Input.SingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: GetAllData(Int32, Int32, Time, out Single, out Single)
  nameWithType: SingleTimePeriodNetworkData.GetAllData(Int32, Int32, Time, out Single, out Single)
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/XTMF/Code/GTAModel/Input/SingleTimePeriodNetworkData.cs
    startLine: 308
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool GetAllData(int start, int end, Time time, out float ivtt, out float cost)
    parameters:
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: System.Single
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function GetAllData(start As Integer, end As Integer, time As Time, ByRef ivtt As Single, ByRef cost As Single) As Boolean
  overload: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData*
  implements:
  - TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  nameWithType.vb: SingleTimePeriodNetworkData.GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, ByRef System.Single, ByRef System.Single)
  name.vb: GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single)
references:
- uid: TMG.GTAModel.Input
  commentId: N:TMG.GTAModel.Input
  name: TMG.GTAModel.Input
  nameWithType: TMG.GTAModel.Input
  fullName: TMG.GTAModel.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  parent: TMG
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
- uid: XTMF.IDataSource{TMG.INetworkData}
  commentId: T:XTMF.IDataSource{TMG.INetworkData}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<INetworkData>
  nameWithType: IDataSource<INetworkData>
  fullName: XTMF.IDataSource<TMG.INetworkData>
  nameWithType.vb: IDataSource(Of INetworkData)
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData)
  name.vb: IDataSource(Of INetworkData)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.IIterativeModel
  commentId: T:TMG.IIterativeModel
  parent: TMG
  name: IIterativeModel
  nameWithType: IIterativeModel
  fullName: TMG.IIterativeModel
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType
  name: NetworkType
  nameWithType: SingleTimePeriodNetworkData.NetworkType
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.NetworkType
- uid: TMG.INetworkData.NetworkType
  commentId: P:TMG.INetworkData.NetworkType
  parent: TMG.INetworkData
  name: NetworkType
  nameWithType: INetworkData.NetworkType
  fullName: TMG.INetworkData.NetworkType
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress
  name: Progress
  nameWithType: SingleTimePeriodNetworkData.Progress
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour
  name: ProgressColour
  nameWithType: SingleTimePeriodNetworkData.ProgressColour
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name
  name: Name
  nameWithType: SingleTimePeriodNetworkData.Name
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData
  name: GiveData
  nameWithType: SingleTimePeriodNetworkData.GiveData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GiveData
- uid: XTMF.IDataSource{TMG.INetworkData}.GiveData
  commentId: M:XTMF.IDataSource{TMG.INetworkData}.GiveData
  parent: XTMF.IDataSource{TMG.INetworkData}
  definition: XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<INetworkData>.GiveData()
  fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData()
  nameWithType.vb: IDataSource(Of INetworkData).GiveData()
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<INetworkData>.GiveData
    fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of INetworkData).GiveData
    fullName: XTMF.IDataSource(Of TMG.INetworkData).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1.GiveData
  commentId: M:XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<T>.GiveData()
  fullName: XTMF.IDataSource<T>.GiveData()
  nameWithType.vb: IDataSource(Of T).GiveData()
  fullName.vb: XTMF.IDataSource(Of T).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<T>.GiveData
    fullName: XTMF.IDataSource<T>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of T).GiveData
    fullName: XTMF.IDataSource(Of T).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded
  name: Loaded
  nameWithType: SingleTimePeriodNetworkData.Loaded
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Loaded
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData
  name: LoadData
  nameWithType: SingleTimePeriodNetworkData.LoadData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.LoadData
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation
  name: RuntimeValidation
  nameWithType: SingleTimePeriodNetworkData.RuntimeValidation
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost
  name: TravelCost
  nameWithType: SingleTimePeriodNetworkData.TravelCost
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelCost
- uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  name: TravelCost(IZone, IZone, Time)
  nameWithType: INetworkData.TravelCost(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelCost(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: TravelCost(Int32, Int32, Time)
  nameWithType: INetworkData.TravelCost(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelCost(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime
  name: TravelTime
  nameWithType: SingleTimePeriodNetworkData.TravelTime
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.TravelTime
- uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  name: TravelTime(IZone, IZone, Time)
  nameWithType: INetworkData.TravelTime(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: TravelTime(Int32, Int32, Time)
  nameWithType: INetworkData.TravelTime(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelTime(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData
  name: UnloadData
  nameWithType: SingleTimePeriodNetworkData.UnloadData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.UnloadData
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd
  name: ValidOd
  nameWithType: SingleTimePeriodNetworkData.ValidOd
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.ValidOd
- uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  name: ValidOd(IZone, IZone, Time)
  nameWithType: INetworkData.ValidOd(IZone, IZone, Time)
  fullName: TMG.INetworkData.ValidOd(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: ValidOd(Int32, Int32, Time)
  nameWithType: INetworkData.ValidOd(Int32, Int32, Time)
  fullName: TMG.INetworkData.ValidOd(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose
  name: Dispose
  nameWithType: SingleTimePeriodNetworkData.Dispose
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData*
  commentId: Overload:TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData
  name: GetAllData
  nameWithType: SingleTimePeriodNetworkData.GetAllData
  fullName: TMG.GTAModel.Input.SingleTimePeriodNetworkData.GetAllData
- uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  parent: TMG.INetworkData
  isExternal: true
  name: GetAllData(IZone, IZone, Time, Time, Single)
  nameWithType: INetworkData.GetAllData(IZone, IZone, Time, Time, Single)
  fullName: TMG.INetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, XTMF.Time, System.Single)
  spec.csharp:
  - uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  parent: TMG.INetworkData
  isExternal: true
  name: GetAllData(Int32, Int32, Time, Single, Single)
  nameWithType: INetworkData.GetAllData(Int32, Int32, Time, Single, Single)
  fullName: TMG.INetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, System.Single, System.Single)
  spec.csharp:
  - uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
