### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  commentId: T:TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  id: V2ExternalDistribution
  parent: TMG.GTAModel.V2.Distribution
  children:
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.DistributionRates
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ObservedExternalTrips
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Parent
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Root
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation(System.String@)
  - TMG.GTAModel.V2.Distribution.V2ExternalDistribution.SaveDistribution
  langs:
  - csharp
  - vb
  name: V2ExternalDistribution
  nameWithType: V2ExternalDistribution
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  type: Class
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: V2ExternalDistribution
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: 'public class V2ExternalDistribution : IDemographicDistribution, IModule'
    content.vb: >-
      Public Class V2ExternalDistribution
          Implements IDemographicDistribution, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.IDemographicDistribution
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.DistributionRates
  commentId: F:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.DistributionRates
  id: DistributionRates
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: DistributionRates
  nameWithType: V2ExternalDistribution.DistributionRates
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.DistributionRates
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DistributionRates
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The rates for each PD that will produce an external trip (IE and EI).")]

      public IDataSource<SparseTwinIndex<float>> DistributionRates
    return:
      type: XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Single}}
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The rates for each PD that will produce an external trip (IE and EI).")>

      Public DistributionRates As IDataSource(Of SparseTwinIndex(Of Single))
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The rates for each PD that will produce an external trip (IE and EI).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ObservedExternalTrips
  commentId: F:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ObservedExternalTrips
  id: ObservedExternalTrips
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: ObservedExternalTrips
  nameWithType: V2ExternalDistribution.ObservedExternalTrips
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ObservedExternalTrips
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ObservedExternalTrips
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The observed external trips for the base year(1996).")]

      public IDataSource<SparseTwinIndex<float>> ObservedExternalTrips
    return:
      type: XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Single}}
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The observed external trips for the base year(1996).")>

      Public ObservedExternalTrips As IDataSource(Of SparseTwinIndex(Of Single))
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The observed external trips for the base year(1996).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Parent
  commentId: F:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Parent
  id: Parent
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: V2ExternalDistribution.Parent
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Parent
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parent
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public IDemographicCategoyPurpose Parent
    return:
      type: TMG.IDemographicCategoyPurpose
    content.vb: Public Parent As IDemographicCategoyPurpose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Root
  commentId: F:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Root
  id: Root
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: V2ExternalDistribution.Root
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.SaveDistribution
  commentId: F:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.SaveDistribution
  id: SaveDistribution
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: SaveDistribution
  nameWithType: V2ExternalDistribution.SaveDistribution
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.SaveDistribution
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveDistribution
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: >-
      [RunParameter("Save Location", "", "The location to save the data to, relative to the run directory.  Leave this blank to not save.")]

      public string SaveDistribution
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Save Location", "", "The location to save the data to, relative to the run directory.  Leave this blank to not save.")>

      Public SaveDistribution As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Save Location
    - type: System.String
      value: ''
    - type: System.String
      value: The location to save the data to, relative to the run directory.  Leave this blank to not save.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name
  commentId: P:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name
  id: Name
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: V2ExternalDistribution.Name
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 46
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress
  commentId: P:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress
  id: Progress
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: V2ExternalDistribution.Progress
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour
  commentId: P:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: V2ExternalDistribution.ProgressColour
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 57
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  commentId: M:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  id: Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  nameWithType: V2ExternalDistribution.Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute(System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Distribute
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 62
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public IEnumerable<SparseTwinIndex<float>> Distribute(IEnumerable<SparseArray<float>> productions, IEnumerable<SparseArray<float>> attractions, IEnumerable<IDemographicCategory> category)
    parameters:
    - id: productions
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
    - id: attractions
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
    - id: category
      type: System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
    return:
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
    content.vb: Public Function Distribute(productions As IEnumerable(Of SparseArray(Of Single)), attractions As IEnumerable(Of SparseArray(Of Single)), category As IEnumerable(Of IDemographicCategory)) As IEnumerable(Of SparseTwinIndex(Of Single))
  overload: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute*
  implements:
  - TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  nameWithType.vb: V2ExternalDistribution.Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute(System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory))
  name.vb: Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.V2.Distribution.V2ExternalDistribution
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: V2ExternalDistribution.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/GTAModel/V2/Distribution/V2ExternalDistribution.cs
    startLine: 77
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Distribution
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: V2ExternalDistribution.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.V2.Distribution
  commentId: N:TMG.GTAModel.V2.Distribution
  name: TMG.GTAModel.V2.Distribution
  nameWithType: TMG.GTAModel.V2.Distribution
  fullName: TMG.GTAModel.V2.Distribution
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.IDemographicDistribution
  commentId: T:TMG.IDemographicDistribution
  parent: TMG
  name: IDemographicDistribution
  nameWithType: IDemographicDistribution
  fullName: TMG.IDemographicDistribution
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Single}}
  commentId: T:XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Single}}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<SparseTwinIndex<Single>>
  nameWithType: IDataSource<SparseTwinIndex<Single>>
  fullName: XTMF.IDataSource<Datastructure.SparseTwinIndex<System.Single>>
  nameWithType.vb: IDataSource(Of SparseTwinIndex(Of Single))
  fullName.vb: XTMF.IDataSource(Of Datastructure.SparseTwinIndex(Of System.Single))
  name.vb: IDataSource(Of SparseTwinIndex(Of Single))
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IDemographicCategoyPurpose
  commentId: T:TMG.IDemographicCategoyPurpose
  parent: TMG
  name: IDemographicCategoyPurpose
  nameWithType: IDemographicCategoyPurpose
  fullName: TMG.IDemographicCategoyPurpose
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name*
  commentId: Overload:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name
  name: Name
  nameWithType: V2ExternalDistribution.Name
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress*
  commentId: Overload:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress
  name: Progress
  nameWithType: V2ExternalDistribution.Progress
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour*
  commentId: Overload:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour
  name: ProgressColour
  nameWithType: V2ExternalDistribution.ProgressColour
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute*
  commentId: Overload:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute
  name: Distribute
  nameWithType: V2ExternalDistribution.Distribute
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.Distribute
- uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  commentId: M:TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  parent: TMG.IDemographicDistribution
  isExternal: true
  name: Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  nameWithType: IDemographicDistribution.Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  fullName: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>)
  nameWithType.vb: IDemographicDistribution.Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  fullName.vb: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory))
  name.vb: Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  spec.csharp:
  - uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
    name: Distribute
    nameWithType: IDemographicDistribution.Distribute
    fullName: TMG.IDemographicDistribution.Distribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
    name: Distribute
    nameWithType: IDemographicDistribution.Distribute
    fullName: TMG.IDemographicDistribution.Distribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparseArray<Single>>
  nameWithType: IEnumerable<SparseArray<Single>>
  fullName: System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>
  nameWithType.vb: IEnumerable(Of SparseArray(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single))
  name.vb: IEnumerable(Of SparseArray(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
  commentId: T:System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDemographicCategory>
  nameWithType: IEnumerable<IDemographicCategory>
  fullName: System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>
  nameWithType.vb: IEnumerable(Of IDemographicCategory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory)
  name.vb: IEnumerable(Of IDemographicCategory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparseTwinIndex<Single>>
  nameWithType: IEnumerable<SparseTwinIndex<Single>>
  fullName: System.Collections.Generic.IEnumerable<Datastructure.SparseTwinIndex<System.Single>>
  nameWithType.vb: IEnumerable(Of SparseTwinIndex(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Datastructure.SparseTwinIndex(Of System.Single))
  name.vb: IEnumerable(Of SparseTwinIndex(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation
  name: RuntimeValidation
  nameWithType: V2ExternalDistribution.RuntimeValidation
  fullName: TMG.GTAModel.V2.Distribution.V2ExternalDistribution.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
