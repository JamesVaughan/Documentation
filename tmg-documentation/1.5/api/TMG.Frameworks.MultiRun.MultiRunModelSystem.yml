### YamlMime:ManagedReference
items:
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem
  commentId: T:TMG.Frameworks.MultiRun.MultiRunModelSystem
  id: MultiRunModelSystem
  parent: TMG.Frameworks.MultiRun
  children:
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.#ctor(XTMF.IConfiguration)
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.BatchRunFile
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.Child
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.ContinueAfterError
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy(System.String,System.String,System.Boolean)
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.CopyBatchFileTo
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError(System.Xml.XmlNode,System.String,System.String)
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.Name
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation(System.String@)
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.Start
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString
  - TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand(System.String,System.Action{System.Xml.XmlNode},System.Boolean)
  langs:
  - csharp
  - vb
  name: MultiRunModelSystem
  nameWithType: MultiRunModelSystem
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem
  type: Class
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MultiRunModelSystem
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 32
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: 'public class MultiRunModelSystem : IModelSystemTemplate, ISelfContainedModule, IModule'
    content.vb: >-
      Public Class MultiRunModelSystem
          Implements IModelSystemTemplate, ISelfContainedModule, IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IModelSystemTemplate
  - XTMF.ISelfContainedModule
  - XTMF.IModule
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory
  commentId: P:TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory
  id: InputBaseDirectory
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: InputBaseDirectory
  nameWithType: MultiRunModelSystem.InputBaseDirectory
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InputBaseDirectory
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 44
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: >-
      [RunParameter("Input Directory", "../../Input", "The input directory to use for this model system template.")]

      public string InputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Input Directory", "../../Input", "The input directory to use for this model system template.")>

      Public Property InputBaseDirectory As String
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.InputBaseDirectory
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Input Directory
    - type: System.String
      value: ../../Input
    - type: System.String
      value: The input directory to use for this model system template.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Child
  commentId: F:TMG.Frameworks.MultiRun.MultiRunModelSystem.Child
  id: Child
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: MultiRunModelSystem.Child
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Child
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Child
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 48
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The child model system to chain the execution of.")]

      public IModelSystemTemplate Child
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The child model system to chain the execution of.")>

      Public Child As IModelSystemTemplate
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The child model system to chain the execution of.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ContinueAfterError
  commentId: F:TMG.Frameworks.MultiRun.MultiRunModelSystem.ContinueAfterError
  id: ContinueAfterError
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: ContinueAfterError
  nameWithType: MultiRunModelSystem.ContinueAfterError
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ContinueAfterError
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ContinueAfterError
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 51
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: >-
      [RunParameter("Continue After Error", false, "Should we continue onto the next run if a run ends with an exception?")]

      public bool ContinueAfterError
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Continue After Error", False, "Should we continue onto the next run if a run ends with an exception?")>

      Public ContinueAfterError As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Continue After Error
    - type: System.Boolean
      value: false
    - type: System.String
      value: Should we continue onto the next run if a run ends with an exception?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Name
  commentId: P:TMG.Frameworks.MultiRun.MultiRunModelSystem.Name
  id: Name
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MultiRunModelSystem.Name
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 53
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory
  commentId: P:TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory
  id: OutputBaseDirectory
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: OutputBaseDirectory
  nameWithType: MultiRunModelSystem.OutputBaseDirectory
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutputBaseDirectory
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 55
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public string OutputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputBaseDirectory As String
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.OutputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.CopyBatchFileTo
  commentId: F:TMG.Frameworks.MultiRun.MultiRunModelSystem.CopyBatchFileTo
  id: CopyBatchFileTo
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: CopyBatchFileTo
  nameWithType: MultiRunModelSystem.CopyBatchFileTo
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.CopyBatchFileTo
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CopyBatchFileTo
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 58
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: >-
      [SubModelInformation(Required = false, Description = "The location to store a copy of the batch file to.")]

      public FileLocation CopyBatchFileTo
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=False, Description:="The location to store a copy of the batch file to.")>

      Public CopyBatchFileTo As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Description
      type: System.String
      value: The location to store a copy of the batch file to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress
  commentId: P:TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress
  id: Progress
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: MultiRunModelSystem.Progress
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 61
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour
  commentId: P:TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour
  id: ProgressColour
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: MultiRunModelSystem.ProgressColour
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 69
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.BatchRunFile
  commentId: F:TMG.Frameworks.MultiRun.MultiRunModelSystem.BatchRunFile
  id: BatchRunFile
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: BatchRunFile
  nameWithType: MultiRunModelSystem.BatchRunFile
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.BatchRunFile
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BatchRunFile
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 74
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The file containing the instructions for this batch run.")]

      public FileLocation BatchRunFile
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The file containing the instructions for this batch run.")>

      Public BatchRunFile As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The file containing the instructions for this batch run.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest
  id: ExitRequest
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: ExitRequest()
  nameWithType: MultiRunModelSystem.ExitRequest()
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExitRequest
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 76
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public bool ExitRequest()
    return:
      type: System.Boolean
    content.vb: Public Function ExitRequest As Boolean
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest*
  implements:
  - XTMF.IModelSystemTemplate.ExitRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation(System.String@)
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: MultiRunModelSystem.RuntimeValidation(ref String)
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 81
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: MultiRunModelSystem.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Start
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.Start
  id: Start
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: MultiRunModelSystem.Start()
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Start()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Start
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 113
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.Start*
  implements:
  - XTMF.ISelfContainedModule.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString
  id: ToString
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MultiRunModelSystem.ToString()
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToString
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 172
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.#ctor(XTMF.IConfiguration)
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: MultiRunModelSystem(IConfiguration)
  nameWithType: MultiRunModelSystem.MultiRunModelSystem(IConfiguration)
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.MultiRunModelSystem(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 179
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public MultiRunModelSystem(IConfiguration config)
    parameters:
    - id: config
      type: XTMF.IConfiguration
    content.vb: Public Sub New(config As IConfiguration)
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand(System.String,System.Action{System.Xml.XmlNode},System.Boolean)
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand(System.String,System.Action{System.Xml.XmlNode},System.Boolean)
  id: TryAddBatchCommand(System.String,System.Action{System.Xml.XmlNode},System.Boolean)
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: TryAddBatchCommand(String, Action<XmlNode>, Boolean)
  nameWithType: MultiRunModelSystem.TryAddBatchCommand(String, Action<XmlNode>, Boolean)
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand(System.String, System.Action<System.Xml.XmlNode>, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TryAddBatchCommand
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 267
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  summary: "\nTries to add a batch command, this will fail if there is already a command with the same name\n"
  example: []
  syntax:
    content: public bool TryAddBatchCommand(string name, Action<XmlNode> command, bool overwrite)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: command
      type: System.Action{System.Xml.XmlNode}
      description: ''
    - id: overwrite
      type: System.Boolean
      description: If true, this command will overwrite any previous command with the same name.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryAddBatchCommand(name As String, command As Action(Of XmlNode), overwrite As Boolean) As Boolean
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand*
  nameWithType.vb: MultiRunModelSystem.TryAddBatchCommand(String, Action(Of XmlNode), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand(System.String, System.Action(Of System.Xml.XmlNode), System.Boolean)
  name.vb: TryAddBatchCommand(String, Action(Of XmlNode), Boolean)
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError(System.Xml.XmlNode,System.String,System.String)
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError(System.Xml.XmlNode,System.String,System.String)
  id: GetAttributeOrError(System.Xml.XmlNode,System.String,System.String)
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: GetAttributeOrError(XmlNode, String, String)
  nameWithType: MultiRunModelSystem.GetAttributeOrError(XmlNode, String, String)
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError(System.Xml.XmlNode, System.String, System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAttributeOrError
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 285
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  summary: "\nGets the attribute from the xmlnode or throws an XTMFRuntimeException\n"
  example: []
  syntax:
    content: public string GetAttributeOrError(XmlNode node, string attribute, string errorMessage)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: The node the is being processed
    - id: attribute
      type: System.String
      description: The name as the attribute to lookup
    - id: errorMessage
      type: System.String
      description: The error message to give if it was not found.
    return:
      type: System.String
      description: The value of the attribute.
    content.vb: Public Function GetAttributeOrError(node As XmlNode, attribute As String, errorMessage As String) As String
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy(System.String,System.String,System.Boolean)
  commentId: M:TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: TMG.Frameworks.MultiRun.MultiRunModelSystem
  langs:
  - csharp
  - vb
  name: Copy(String, String, Boolean)
  nameWithType: MultiRunModelSystem.Copy(String, String, Boolean)
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Copy
    path: ../../../XTMF/XTMF/Code/TMG.Frameworks/MultiRun/MultiRunModelSystem.cs
    startLine: 311
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.MultiRun
  syntax:
    content: public bool Copy(string origin, string destination, bool move)
    parameters:
    - id: origin
      type: System.String
    - id: destination
      type: System.String
    - id: move
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function Copy(origin As String, destination As String, move As Boolean) As Boolean
  overload: TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.Frameworks.MultiRun
  commentId: N:TMG.Frameworks.MultiRun
  name: TMG.Frameworks.MultiRun
  nameWithType: TMG.Frameworks.MultiRun
  fullName: TMG.Frameworks.MultiRun
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.ISelfContainedModule
  commentId: T:XTMF.ISelfContainedModule
  parent: XTMF
  name: ISelfContainedModule
  nameWithType: ISelfContainedModule
  fullName: XTMF.ISelfContainedModule
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory
  name: InputBaseDirectory
  nameWithType: MultiRunModelSystem.InputBaseDirectory
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.InputBaseDirectory
- uid: XTMF.IModelSystemTemplate.InputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.InputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  name: InputBaseDirectory
  nameWithType: IModelSystemTemplate.InputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.InputBaseDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Name*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.Name
  name: Name
  nameWithType: MultiRunModelSystem.Name
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory
  name: OutputBaseDirectory
  nameWithType: MultiRunModelSystem.OutputBaseDirectory
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.OutputBaseDirectory
- uid: XTMF.IModelSystemTemplate.OutputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.OutputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  name: OutputBaseDirectory
  nameWithType: IModelSystemTemplate.OutputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.OutputBaseDirectory
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress
  name: Progress
  nameWithType: MultiRunModelSystem.Progress
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour
  name: ProgressColour
  nameWithType: MultiRunModelSystem.ProgressColour
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest
  name: ExitRequest
  nameWithType: MultiRunModelSystem.ExitRequest
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ExitRequest
- uid: XTMF.IModelSystemTemplate.ExitRequest
  commentId: M:XTMF.IModelSystemTemplate.ExitRequest
  parent: XTMF.IModelSystemTemplate
  name: ExitRequest()
  nameWithType: IModelSystemTemplate.ExitRequest()
  fullName: XTMF.IModelSystemTemplate.ExitRequest()
  spec.csharp:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation
  name: RuntimeValidation
  nameWithType: MultiRunModelSystem.RuntimeValidation
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Start*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.Start
  name: Start
  nameWithType: MultiRunModelSystem.Start
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Start
- uid: XTMF.ISelfContainedModule.Start
  commentId: M:XTMF.ISelfContainedModule.Start
  parent: XTMF.ISelfContainedModule
  name: Start()
  nameWithType: ISelfContainedModule.Start()
  fullName: XTMF.ISelfContainedModule.Start()
  spec.csharp:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString
  name: ToString
  nameWithType: MultiRunModelSystem.ToString
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.ToString
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.#ctor*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.#ctor
  name: MultiRunModelSystem
  nameWithType: MultiRunModelSystem.MultiRunModelSystem
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.MultiRunModelSystem
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand
  name: TryAddBatchCommand
  nameWithType: MultiRunModelSystem.TryAddBatchCommand
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.TryAddBatchCommand
- uid: System.Action{System.Xml.XmlNode}
  commentId: T:System.Action{System.Xml.XmlNode}
  parent: System
  definition: System.Action`1
  name: Action<XmlNode>
  nameWithType: Action<XmlNode>
  fullName: System.Action<System.Xml.XmlNode>
  nameWithType.vb: Action(Of XmlNode)
  fullName.vb: System.Action(Of System.Xml.XmlNode)
  name.vb: Action(Of XmlNode)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError
  name: GetAttributeOrError
  nameWithType: MultiRunModelSystem.GetAttributeOrError
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.GetAttributeOrError
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  parent: System.Xml
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy*
  commentId: Overload:TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy
  name: Copy
  nameWithType: MultiRunModelSystem.Copy
  fullName: TMG.Frameworks.MultiRun.MultiRunModelSystem.Copy
