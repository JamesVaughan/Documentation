### YamlMime:ManagedReference
items:
- uid: TMG.Estimation.GeneticAI.CompareParameterSet
  commentId: T:TMG.Estimation.GeneticAI.CompareParameterSet
  id: GeneticAI.CompareParameterSet
  parent: TMG.Estimation
  children:
  - TMG.Estimation.GeneticAI.CompareParameterSet.Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  langs:
  - csharp
  - vb
  name: GeneticAI.CompareParameterSet
  nameWithType: GeneticAI.CompareParameterSet
  fullName: TMG.Estimation.GeneticAI.CompareParameterSet
  type: Class
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CompareParameterSet
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 232
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: 'protected class CompareParameterSet : IComparer<Job>'
    content.vb: >-
      Protected Class CompareParameterSet
          Implements IComparer(Of Job)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{TMG.Estimation.Job}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: TMG.Estimation.GeneticAI.CompareParameterSet.Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  commentId: M:TMG.Estimation.GeneticAI.CompareParameterSet.Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  id: Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  parent: TMG.Estimation.GeneticAI.CompareParameterSet
  langs:
  - csharp
  - vb
  name: Compare(Job, Job)
  nameWithType: GeneticAI.CompareParameterSet.Compare(Job, Job)
  fullName: TMG.Estimation.GeneticAI.CompareParameterSet.Compare(TMG.Estimation.Job, TMG.Estimation.Job)
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Compare
    path: ../../../XTMF/XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 234
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public int Compare(Job x, Job y)
    parameters:
    - id: x
      type: TMG.Estimation.Job
    - id: y
      type: TMG.Estimation.Job
    return:
      type: System.Int32
    content.vb: Public Function Compare(x As Job, y As Job) As Integer
  overload: TMG.Estimation.GeneticAI.CompareParameterSet.Compare*
  implements:
  - System.Collections.Generic.IComparer{TMG.Estimation.Job}.Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.Estimation
  commentId: N:TMG.Estimation
  name: TMG.Estimation
  nameWithType: TMG.Estimation
  fullName: TMG.Estimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{TMG.Estimation.Job}
  commentId: T:System.Collections.Generic.IComparer{TMG.Estimation.Job}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<Job>
  nameWithType: IComparer<Job>
  fullName: System.Collections.Generic.IComparer<TMG.Estimation.Job>
  nameWithType.vb: IComparer(Of Job)
  fullName.vb: System.Collections.Generic.IComparer(Of TMG.Estimation.Job)
  name.vb: IComparer(Of Job)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.Estimation.GeneticAI.CompareParameterSet.Compare*
  commentId: Overload:TMG.Estimation.GeneticAI.CompareParameterSet.Compare
  name: Compare
  nameWithType: GeneticAI.CompareParameterSet.Compare
  fullName: TMG.Estimation.GeneticAI.CompareParameterSet.Compare
- uid: System.Collections.Generic.IComparer{TMG.Estimation.Job}.Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  commentId: M:System.Collections.Generic.IComparer{TMG.Estimation.Job}.Compare(TMG.Estimation.Job,TMG.Estimation.Job)
  parent: System.Collections.Generic.IComparer{TMG.Estimation.Job}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(Job, Job)
  nameWithType: IComparer<Job>.Compare(Job, Job)
  fullName: System.Collections.Generic.IComparer<TMG.Estimation.Job>.Compare(TMG.Estimation.Job, TMG.Estimation.Job)
  nameWithType.vb: IComparer(Of Job).Compare(Job, Job)
  fullName.vb: System.Collections.Generic.IComparer(Of TMG.Estimation.Job).Compare(TMG.Estimation.Job, TMG.Estimation.Job)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<Job>.Compare
    fullName: System.Collections.Generic.IComparer<TMG.Estimation.Job>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of Job).Compare
    fullName: System.Collections.Generic.IComparer(Of TMG.Estimation.Job).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.Job
  commentId: T:TMG.Estimation.Job
  parent: TMG.Estimation
  name: Job
  nameWithType: Job
  fullName: TMG.Estimation.Job
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
