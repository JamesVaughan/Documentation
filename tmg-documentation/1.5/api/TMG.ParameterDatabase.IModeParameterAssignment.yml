### YamlMime:ManagedReference
items:
- uid: TMG.ParameterDatabase.IModeParameterAssignment
  commentId: T:TMG.ParameterDatabase.IModeParameterAssignment
  id: IModeParameterAssignment
  parent: TMG.ParameterDatabase
  children:
  - TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter},System.Single)
  - TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter})
  - TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending
  - TMG.ParameterDatabase.IModeParameterAssignment.Mode
  - TMG.ParameterDatabase.IModeParameterAssignment.StartBlend
  langs:
  - csharp
  - vb
  name: IModeParameterAssignment
  nameWithType: IModeParameterAssignment
  fullName: TMG.ParameterDatabase.IModeParameterAssignment
  type: Interface
  source:
    remote:
      path: Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IModeParameterAssignment
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
    startLine: 23
  assemblies:
  - TMGInterfaces
  namespace: TMG.ParameterDatabase
  syntax:
    content: 'public interface IModeParameterAssignment : IModule'
    content.vb: >-
      Public Interface IModeParameterAssignment
          Inherits IModule
  inheritedMembers:
  - XTMF.IModule.Name
  - XTMF.IModule.Progress
  - XTMF.IModule.ProgressColour
  - XTMF.IModule.RuntimeValidation(System.String@)
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TMG.ParameterDatabase.IModeParameterAssignment.Mode
  commentId: P:TMG.ParameterDatabase.IModeParameterAssignment.Mode
  id: Mode
  parent: TMG.ParameterDatabase.IModeParameterAssignment
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: IModeParameterAssignment.Mode
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.Mode
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Mode
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
    startLine: 28
  assemblies:
  - TMGInterfaces
  namespace: TMG.ParameterDatabase
  summary: "\nThe mode we are working with\n"
  example: []
  syntax:
    content: IModeChoiceNode Mode { get; }
    parameters: []
    return:
      type: TMG.IModeChoiceNode
    content.vb: ReadOnly Property Mode As IModeChoiceNode
  overload: TMG.ParameterDatabase.IModeParameterAssignment.Mode*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter},System.Single)
  commentId: M:TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter},System.Single)
  id: AssignBlendedParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter},System.Single)
  parent: TMG.ParameterDatabase.IModeParameterAssignment
  langs:
  - csharp
  - vb
  name: AssignBlendedParameters(List<Parameter>, Single)
  nameWithType: IModeParameterAssignment.AssignBlendedParameters(List<Parameter>, Single)
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters(System.Collections.Generic.List<TMG.ParameterDatabase.Parameter>, System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AssignBlendedParameters
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
    startLine: 35
  assemblies:
  - TMGInterfaces
  namespace: TMG.ParameterDatabase
  summary: "\nBuild up our parameters to blend with\n"
  example: []
  syntax:
    content: void AssignBlendedParameters(List<Parameter> parameters, float weight)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{TMG.ParameterDatabase.Parameter}
      description: The parameters to be loaded
    - id: weight
      type: System.Single
      description: The amount we will be blending for them
    content.vb: Sub AssignBlendedParameters(parameters As List(Of Parameter), weight As Single)
  overload: TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters*
  nameWithType.vb: IModeParameterAssignment.AssignBlendedParameters(List(Of Parameter), Single)
  fullName.vb: TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters(System.Collections.Generic.List(Of TMG.ParameterDatabase.Parameter), System.Single)
  name.vb: AssignBlendedParameters(List(Of Parameter), Single)
- uid: TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter})
  commentId: M:TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter})
  id: AssignParameters(System.Collections.Generic.List{TMG.ParameterDatabase.Parameter})
  parent: TMG.ParameterDatabase.IModeParameterAssignment
  langs:
  - csharp
  - vb
  name: AssignParameters(List<Parameter>)
  nameWithType: IModeParameterAssignment.AssignParameters(List<Parameter>)
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters(System.Collections.Generic.List<TMG.ParameterDatabase.Parameter>)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AssignParameters
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
    startLine: 40
  assemblies:
  - TMGInterfaces
  namespace: TMG.ParameterDatabase
  summary: "\nAssign the given value to the parameter\n"
  example: []
  syntax:
    content: void AssignParameters(List<Parameter> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.List{TMG.ParameterDatabase.Parameter}
    content.vb: Sub AssignParameters(parameters As List(Of Parameter))
  overload: TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters*
  nameWithType.vb: IModeParameterAssignment.AssignParameters(List(Of Parameter))
  fullName.vb: TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters(System.Collections.Generic.List(Of TMG.ParameterDatabase.Parameter))
  name.vb: AssignParameters(List(Of Parameter))
- uid: TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending
  commentId: M:TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending
  id: FinishBlending
  parent: TMG.ParameterDatabase.IModeParameterAssignment
  langs:
  - csharp
  - vb
  name: FinishBlending()
  nameWithType: IModeParameterAssignment.FinishBlending()
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending()
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FinishBlending
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
    startLine: 45
  assemblies:
  - TMGInterfaces
  namespace: TMG.ParameterDatabase
  summary: "\nComplete the blending and assign the parameters\n"
  example: []
  syntax:
    content: void FinishBlending()
    content.vb: Sub FinishBlending
  overload: TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending*
- uid: TMG.ParameterDatabase.IModeParameterAssignment.StartBlend
  commentId: M:TMG.ParameterDatabase.IModeParameterAssignment.StartBlend
  id: StartBlend
  parent: TMG.ParameterDatabase.IModeParameterAssignment
  langs:
  - csharp
  - vb
  name: StartBlend()
  nameWithType: IModeParameterAssignment.StartBlend()
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.StartBlend()
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartBlend
    path: ../../../XTMF/XTMF/Code/TMGInterfaces/ParameterDatabase/IModeParameterAssignment.cs
    startLine: 50
  assemblies:
  - TMGInterfaces
  namespace: TMG.ParameterDatabase
  summary: "\nStart up blending mode\n"
  example: []
  syntax:
    content: void StartBlend()
    content.vb: Sub StartBlend
  overload: TMG.ParameterDatabase.IModeParameterAssignment.StartBlend*
references:
- uid: TMG.ParameterDatabase
  commentId: N:TMG.ParameterDatabase
  name: TMG.ParameterDatabase
  nameWithType: TMG.ParameterDatabase
  fullName: TMG.ParameterDatabase
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.ParameterDatabase.IModeParameterAssignment.Mode*
  commentId: Overload:TMG.ParameterDatabase.IModeParameterAssignment.Mode
  name: Mode
  nameWithType: IModeParameterAssignment.Mode
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.Mode
- uid: TMG.IModeChoiceNode
  commentId: T:TMG.IModeChoiceNode
  parent: TMG
  name: IModeChoiceNode
  nameWithType: IModeChoiceNode
  fullName: TMG.IModeChoiceNode
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters*
  commentId: Overload:TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters
  name: AssignBlendedParameters
  nameWithType: IModeParameterAssignment.AssignBlendedParameters
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.AssignBlendedParameters
- uid: System.Collections.Generic.List{TMG.ParameterDatabase.Parameter}
  commentId: T:System.Collections.Generic.List{TMG.ParameterDatabase.Parameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Parameter>
  nameWithType: List<Parameter>
  fullName: System.Collections.Generic.List<TMG.ParameterDatabase.Parameter>
  nameWithType.vb: List(Of Parameter)
  fullName.vb: System.Collections.Generic.List(Of TMG.ParameterDatabase.Parameter)
  name.vb: List(Of Parameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.ParameterDatabase.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: TMG.ParameterDatabase.Parameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.ParameterDatabase.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: TMG.ParameterDatabase.Parameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters*
  commentId: Overload:TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters
  name: AssignParameters
  nameWithType: IModeParameterAssignment.AssignParameters
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.AssignParameters
- uid: TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending*
  commentId: Overload:TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending
  name: FinishBlending
  nameWithType: IModeParameterAssignment.FinishBlending
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.FinishBlending
- uid: TMG.ParameterDatabase.IModeParameterAssignment.StartBlend*
  commentId: Overload:TMG.ParameterDatabase.IModeParameterAssignment.StartBlend
  name: StartBlend
  nameWithType: IModeParameterAssignment.StartBlend
  fullName: TMG.ParameterDatabase.IModeParameterAssignment.StartBlend
