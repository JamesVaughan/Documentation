### YamlMime:ManagedReference
items:
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  commentId: T:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  id: ExtractPersonalAndTripRecords
  parent: Tasha.Validation.ModeChoice
  children:
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.AutoNetworkName
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.CompressResults
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.DATModeName
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ExportTimesAsMinutes
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.FacilitatePassengerRecords
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished(System.Int32,System.Int32)
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting(System.Int32,System.Int32)
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PassengerModeName
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PersonRecords
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Root
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation(System.String@)
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TransitNetworkName
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripModeRecords
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripRecords
  - Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripStationRecords
  langs:
  - csharp
  - vb
  name: ExtractPersonalAndTripRecords
  nameWithType: ExtractPersonalAndTripRecords
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  type: Class
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExtractPersonalAndTripRecords
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 35
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: 'public sealed class ExtractPersonalAndTripRecords : IPostHouseholdIteration, IModule, IDisposable'
    content.vb: >-
      Public NotInheritable Class ExtractPersonalAndTripRecords
          Implements IPostHouseholdIteration, IModule, IDisposable
  inheritance:
  - System.Object
  implements:
  - Tasha.Common.IPostHouseholdIteration
  - XTMF.IModule
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Root
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Root
  id: Root
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ExtractPersonalAndTripRecords.Root
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Root
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 81
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public ITashaRuntime Root
    return:
      type: Tasha.Common.ITashaRuntime
    content.vb: Public Root As ITashaRuntime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PersonRecords
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PersonRecords
  id: PersonRecords
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: PersonRecords
  nameWithType: ExtractPersonalAndTripRecords.PersonRecords
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PersonRecords
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonRecords
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 84
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to store individual person records.")]

      public FileLocation PersonRecords
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to store individual person records.")>

      Public PersonRecords As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to store individual person records.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripRecords
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripRecords
  id: TripRecords
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: TripRecords
  nameWithType: ExtractPersonalAndTripRecords.TripRecords
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripRecords
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TripRecords
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 87
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to store records describing trips.")]

      public FileLocation TripRecords
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to store records describing trips.")>

      Public TripRecords As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to store records describing trips.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripModeRecords
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripModeRecords
  id: TripModeRecords
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: TripModeRecords
  nameWithType: ExtractPersonalAndTripRecords.TripModeRecords
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripModeRecords
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TripModeRecords
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 90
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to store the modes taken for each trip.")]

      public FileLocation TripModeRecords
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to store the modes taken for each trip.")>

      Public TripModeRecords As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to store the modes taken for each trip.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripStationRecords
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripStationRecords
  id: TripStationRecords
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: TripStationRecords
  nameWithType: ExtractPersonalAndTripRecords.TripStationRecords
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TripStationRecords
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TripStationRecords
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 93
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to store station access information for trips.")]

      public FileLocation TripStationRecords
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to store station access information for trips.")>

      Public TripStationRecords As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to store station access information for trips.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.FacilitatePassengerRecords
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.FacilitatePassengerRecords
  id: FacilitatePassengerRecords
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: FacilitatePassengerRecords
  nameWithType: ExtractPersonalAndTripRecords.FacilitatePassengerRecords
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.FacilitatePassengerRecords
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FacilitatePassengerRecords
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 96
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to store information for facilitate passenger trips.")]

      public FileLocation FacilitatePassengerRecords
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to store information for facilitate passenger trips.")>

      Public FacilitatePassengerRecords As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to store information for facilitate passenger trips.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.CompressResults
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.CompressResults
  id: CompressResults
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: CompressResults
  nameWithType: ExtractPersonalAndTripRecords.CompressResults
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.CompressResults
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CompressResults
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 100
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Compress Results", false, "Compress all of the result files.")]

      public bool CompressResults
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Compress Results", False, "Compress all of the result files.")>

      Public CompressResults As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Compress Results
    - type: System.Boolean
      value: false
    - type: System.String
      value: Compress all of the result files.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.DATModeName
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.DATModeName
  id: DATModeName
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: DATModeName
  nameWithType: ExtractPersonalAndTripRecords.DATModeName
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.DATModeName
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DATModeName
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 103
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("DAT Mode Name", "DAT", "The name of the drive access transit mode to extract all of the data from.")]

      public string DATModeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("DAT Mode Name", "DAT", "The name of the drive access transit mode to extract all of the data from.")>

      Public DATModeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: DAT Mode Name
    - type: System.String
      value: DAT
    - type: System.String
      value: The name of the drive access transit mode to extract all of the data from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PassengerModeName
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PassengerModeName
  id: PassengerModeName
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: PassengerModeName
  nameWithType: ExtractPersonalAndTripRecords.PassengerModeName
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.PassengerModeName
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PassengerModeName
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 106
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Passenger Mode Name", "Passenger", "The name of the passenger mode to extract all of the data from.")]

      public string PassengerModeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Passenger Mode Name", "Passenger", "The name of the passenger mode to extract all of the data from.")>

      Public PassengerModeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Passenger Mode Name
    - type: System.String
      value: Passenger
    - type: System.String
      value: The name of the passenger mode to extract all of the data from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.AutoNetworkName
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.AutoNetworkName
  id: AutoNetworkName
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: AutoNetworkName
  nameWithType: ExtractPersonalAndTripRecords.AutoNetworkName
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.AutoNetworkName
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoNetworkName
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 109
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Auto Network Name", "Auto", "The name of the auto network to use in order to compute DAT auto trip times.")]

      public string AutoNetworkName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Auto Network Name", "Auto", "The name of the auto network to use in order to compute DAT auto trip times.")>

      Public AutoNetworkName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the auto network to use in order to compute DAT auto trip times.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TransitNetworkName
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TransitNetworkName
  id: TransitNetworkName
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: TransitNetworkName
  nameWithType: ExtractPersonalAndTripRecords.TransitNetworkName
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.TransitNetworkName
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TransitNetworkName
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 112
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Transit Network Name", "Transit", "The name of the transit network to use in order to compute DAT transit trip times.")]

      public string TransitNetworkName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Transit Network Name", "Transit", "The name of the transit network to use in order to compute DAT transit trip times.")>

      Public TransitNetworkName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transit Network Name
    - type: System.String
      value: Transit
    - type: System.String
      value: The name of the transit network to use in order to compute DAT transit trip times.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ExportTimesAsMinutes
  commentId: F:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ExportTimesAsMinutes
  id: ExportTimesAsMinutes
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: ExportTimesAsMinutes
  nameWithType: ExtractPersonalAndTripRecords.ExportTimesAsMinutes
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ExportTimesAsMinutes
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportTimesAsMinutes
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 115
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Export Times As Minutes", false, "Export the times as minutes since midnight instead of as a time stamp.")]

      public bool ExportTimesAsMinutes
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Export Times As Minutes", False, "Export the times as minutes since midnight instead of as a time stamp.")>

      Public ExportTimesAsMinutes As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Export Times As Minutes
    - type: System.Boolean
      value: false
    - type: System.String
      value: Export the times as minutes since midnight instead of as a time stamp.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name
  commentId: P:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name
  id: Name
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExtractPersonalAndTripRecords.Name
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 124
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress
  commentId: P:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress
  id: Progress
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ExtractPersonalAndTripRecords.Progress
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 126
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour
  commentId: P:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour
  id: ProgressColour
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ExtractPersonalAndTripRecords.ProgressColour
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 128
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  id: HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: HouseholdComplete(ITashaHousehold, Boolean)
  nameWithType: ExtractPersonalAndTripRecords.HouseholdComplete(ITashaHousehold, Boolean)
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete(Tasha.Common.ITashaHousehold, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdComplete
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 323
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdComplete(ITashaHousehold household, bool success)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: success
      type: System.Boolean
    content.vb: Public Sub HouseholdComplete(household As ITashaHousehold, success As Boolean)
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete*
  implements:
  - Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  id: HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  nameWithType: ExtractPersonalAndTripRecords.HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete(Tasha.Common.ITashaHousehold, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdIterationComplete
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 520
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdIterationComplete(ITashaHousehold household, int hhldIteration, int totalHouseholdIterations)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: hhldIteration
      type: System.Int32
    - id: totalHouseholdIterations
      type: System.Int32
    content.vb: Public Sub HouseholdIterationComplete(household As ITashaHousehold, hhldIteration As Integer, totalHouseholdIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete*
  implements:
  - Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  id: HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: HouseholdStart(ITashaHousehold, Int32)
  nameWithType: ExtractPersonalAndTripRecords.HouseholdStart(ITashaHousehold, Int32)
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart(Tasha.Common.ITashaHousehold, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdStart
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 760
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdStart(ITashaHousehold household, int householdIterations)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: householdIterations
      type: System.Int32
    content.vb: Public Sub HouseholdStart(household As ITashaHousehold, householdIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart*
  implements:
  - Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting(System.Int32,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting(System.Int32,System.Int32)
  id: IterationStarting(System.Int32,System.Int32)
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: IterationStarting(Int32, Int32)
  nameWithType: ExtractPersonalAndTripRecords.IterationStarting(Int32, Int32)
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationStarting
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 765
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void IterationStarting(int iteration, int totalIterations)
    parameters:
    - id: iteration
      type: System.Int32
    - id: totalIterations
      type: System.Int32
    content.vb: Public Sub IterationStarting(iteration As Integer, totalIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting*
  implements:
  - Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished(System.Int32,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished(System.Int32,System.Int32)
  id: IterationFinished(System.Int32,System.Int32)
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: IterationFinished(Int32, Int32)
  nameWithType: ExtractPersonalAndTripRecords.IterationFinished(Int32, Int32)
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationFinished
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 971
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void IterationFinished(int iteration, int totalIterations)
    parameters:
    - id: iteration
      type: System.Int32
    - id: totalIterations
      type: System.Int32
    content.vb: Public Sub IterationFinished(iteration As Integer, totalIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished*
  implements:
  - Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation(System.String@)
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ExtractPersonalAndTripRecords.RuntimeValidation(ref String)
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 1000
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ExtractPersonalAndTripRecords.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose
  id: Dispose
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ExtractPersonalAndTripRecords.Dispose()
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose()
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 1070
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize
  commentId: M:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize
  id: Finalize
  parent: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ExtractPersonalAndTripRecords.Finalize()
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize()
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Finalize
    path: ../../../XTMF/XTMF/Code/Tasha.Validation/ModeChoice/ExtractPersonalAndTripRecords.cs
    startLine: 1075
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Tasha.Validation.ModeChoice
  commentId: N:Tasha.Validation.ModeChoice
  name: Tasha.Validation.ModeChoice
  nameWithType: Tasha.Validation.ModeChoice
  fullName: Tasha.Validation.ModeChoice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Tasha.Common.IPostHouseholdIteration
  commentId: T:Tasha.Common.IPostHouseholdIteration
  parent: Tasha.Common
  name: IPostHouseholdIteration
  nameWithType: IPostHouseholdIteration
  fullName: Tasha.Common.IPostHouseholdIteration
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tasha.Common
  commentId: N:Tasha.Common
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: Tasha.Common.ITashaRuntime
  commentId: T:Tasha.Common.ITashaRuntime
  parent: Tasha.Common
  name: ITashaRuntime
  nameWithType: ITashaRuntime
  fullName: Tasha.Common.ITashaRuntime
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name
  name: Name
  nameWithType: ExtractPersonalAndTripRecords.Name
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress
  name: Progress
  nameWithType: ExtractPersonalAndTripRecords.Progress
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour
  name: ProgressColour
  nameWithType: ExtractPersonalAndTripRecords.ProgressColour
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete
  name: HouseholdComplete
  nameWithType: ExtractPersonalAndTripRecords.HouseholdComplete
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdComplete
- uid: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  commentId: M:Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: HouseholdComplete(ITashaHousehold, Boolean)
  nameWithType: IPostHouseholdIteration.HouseholdComplete(ITashaHousehold, Boolean)
  fullName: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold, System.Boolean)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
    name: HouseholdComplete
    nameWithType: IPostHouseholdIteration.HouseholdComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
    name: HouseholdComplete
    nameWithType: IPostHouseholdIteration.HouseholdComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ITashaHousehold
  commentId: T:Tasha.Common.ITashaHousehold
  parent: Tasha.Common
  name: ITashaHousehold
  nameWithType: ITashaHousehold
  fullName: Tasha.Common.ITashaHousehold
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete
  name: HouseholdIterationComplete
  nameWithType: ExtractPersonalAndTripRecords.HouseholdIterationComplete
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdIterationComplete
- uid: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  nameWithType: IPostHouseholdIteration.HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold, System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
    name: HouseholdIterationComplete
    nameWithType: IPostHouseholdIteration.HouseholdIterationComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
    name: HouseholdIterationComplete
    nameWithType: IPostHouseholdIteration.HouseholdIterationComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart
  name: HouseholdStart
  nameWithType: ExtractPersonalAndTripRecords.HouseholdStart
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.HouseholdStart
- uid: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: HouseholdStart(ITashaHousehold, Int32)
  nameWithType: IPostHouseholdIteration.HouseholdStart(ITashaHousehold, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
    name: HouseholdStart
    nameWithType: IPostHouseholdIteration.HouseholdStart
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
    name: HouseholdStart
    nameWithType: IPostHouseholdIteration.HouseholdStart
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting
  name: IterationStarting
  nameWithType: ExtractPersonalAndTripRecords.IterationStarting
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationStarting
- uid: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: IterationStarting(Int32, Int32)
  nameWithType: IPostHouseholdIteration.IterationStarting(Int32, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
    name: IterationStarting
    nameWithType: IPostHouseholdIteration.IterationStarting
    fullName: Tasha.Common.IPostHouseholdIteration.IterationStarting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
    name: IterationStarting
    nameWithType: IPostHouseholdIteration.IterationStarting
    fullName: Tasha.Common.IPostHouseholdIteration.IterationStarting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished
  name: IterationFinished
  nameWithType: ExtractPersonalAndTripRecords.IterationFinished
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.IterationFinished
- uid: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: IterationFinished(Int32, Int32)
  nameWithType: IPostHouseholdIteration.IterationFinished(Int32, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
    name: IterationFinished
    nameWithType: IPostHouseholdIteration.IterationFinished
    fullName: Tasha.Common.IPostHouseholdIteration.IterationFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
    name: IterationFinished
    nameWithType: IPostHouseholdIteration.IterationFinished
    fullName: Tasha.Common.IPostHouseholdIteration.IterationFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ExtractPersonalAndTripRecords.RuntimeValidation
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose
  name: Dispose
  nameWithType: ExtractPersonalAndTripRecords.Dispose
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize*
  commentId: Overload:Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize
  name: Finalize
  nameWithType: ExtractPersonalAndTripRecords.Finalize
  fullName: Tasha.Validation.ModeChoice.ExtractPersonalAndTripRecords.Finalize
