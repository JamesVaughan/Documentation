### YamlMime:ManagedReference
items:
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  commentId: T:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  id: MultiClassRoadAssignmentTool
  parent: TMG.Emme.NetworkAssignment
  children:
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.BestRelativeGap
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Classes
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute(TMG.Emme.Controller)
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Iterations
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.NormalizedGap
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PeakHourFactor
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PerformanceMode
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RelativeGap
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation(System.String@)
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RunTitle
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ScenarioNumber
  langs:
  - csharp
  - vb
  name: MultiClassRoadAssignmentTool
  nameWithType: MultiClassRoadAssignmentTool
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MultiClassRoadAssignmentTool
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 27
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: 'public class MultiClassRoadAssignmentTool : IEmmeTool, IModule'
    content.vb: >-
      Public Class MultiClassRoadAssignmentTool

          Implements IEmmeTool, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Emme.IEmmeTool
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name
  commentId: P:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name
  id: Name
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MultiClassRoadAssignmentTool.Name
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 30
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress
  commentId: P:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress
  id: Progress
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: MultiClassRoadAssignmentTool.Progress
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 32
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour
  commentId: P:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour
  id: ProgressColour
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: MultiClassRoadAssignmentTool.ProgressColour
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 34
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ScenarioNumber
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ScenarioNumber
  id: ScenarioNumber
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: ScenarioNumber
  nameWithType: MultiClassRoadAssignmentTool.ScenarioNumber
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ScenarioNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ScenarioNumber
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 37
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Scenario Number", 0, "The scenario number to execute against.")]

      public int ScenarioNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Scenario Number", 0, "The scenario number to execute against.")>

      Public ScenarioNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Scenario Number
    - type: System.Int32
      value: 0
    - type: System.String
      value: The scenario number to execute against.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Classes
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Classes
  id: Classes
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: Classes
  nameWithType: MultiClassRoadAssignmentTool.Classes
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Classes
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Classes
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 42
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [SubModelInformation(Description = "The classes for this multi-class assignment.")]

      public MultiClassRoadAssignmentTool.Class[] Classes
    return:
      type: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class[]
    content.vb: >-
      <SubModelInformation(Description:="The classes for this multi-class assignment.")>

      Public Classes As MultiClassRoadAssignmentTool.Class()
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The classes for this multi-class assignment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PeakHourFactor
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PeakHourFactor
  id: PeakHourFactor
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: PeakHourFactor
  nameWithType: MultiClassRoadAssignmentTool.PeakHourFactor
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PeakHourFactor
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PeakHourFactor
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 45
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Peak Hour Factor", 0F, "A factor to apply to the demand in order to build a representative hour.")]

      public float PeakHourFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Peak Hour Factor", 0F, "A factor to apply to the demand in order to build a representative hour.")>

      Public PeakHourFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Peak Hour Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: A factor to apply to the demand in order to build a representative hour.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Iterations
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Iterations
  id: Iterations
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: Iterations
  nameWithType: MultiClassRoadAssignmentTool.Iterations
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Iterations
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Iterations
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 48
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Iterations", 0, "The maximum number of iterations to run.")]

      public int Iterations
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Iterations", 0, "The maximum number of iterations to run.")>

      Public Iterations As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Iterations
    - type: System.Int32
      value: 0
    - type: System.String
      value: The maximum number of iterations to run.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RelativeGap
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RelativeGap
  id: RelativeGap
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: RelativeGap
  nameWithType: MultiClassRoadAssignmentTool.RelativeGap
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RelativeGap
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RelativeGap
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 51
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Relative Gap", 0F, "The minimum gap required to terminate the algorithm.")]

      public float RelativeGap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Relative Gap", 0F, "The minimum gap required to terminate the algorithm.")>

      Public RelativeGap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Relative Gap
    - type: System.Single
      value: 0
    - type: System.String
      value: The minimum gap required to terminate the algorithm.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.BestRelativeGap
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.BestRelativeGap
  id: BestRelativeGap
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: BestRelativeGap
  nameWithType: MultiClassRoadAssignmentTool.BestRelativeGap
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.BestRelativeGap
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BestRelativeGap
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 54
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Best Relative Gap", 0F, "The minimum gap required to terminate the algorithm.")]

      public float BestRelativeGap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Best Relative Gap", 0F, "The minimum gap required to terminate the algorithm.")>

      Public BestRelativeGap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Best Relative Gap
    - type: System.Single
      value: 0
    - type: System.String
      value: The minimum gap required to terminate the algorithm.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.NormalizedGap
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.NormalizedGap
  id: NormalizedGap
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: NormalizedGap
  nameWithType: MultiClassRoadAssignmentTool.NormalizedGap
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.NormalizedGap
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NormalizedGap
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 57
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Normalized Gap", 0F, "The minimum gap required to terminate the algorithm.")]

      public float NormalizedGap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Normalized Gap", 0F, "The minimum gap required to terminate the algorithm.")>

      Public NormalizedGap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Normalized Gap
    - type: System.Single
      value: 0
    - type: System.String
      value: The minimum gap required to terminate the algorithm.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PerformanceMode
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PerformanceMode
  id: PerformanceMode
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: PerformanceMode
  nameWithType: MultiClassRoadAssignmentTool.PerformanceMode
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.PerformanceMode
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PerformanceMode
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 60
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Performance Mode", true, "Set this to false to leave a free core for other work, recommended to leave set to true.")]

      public bool PerformanceMode
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Performance Mode", True, "Set this to false to leave a free core for other work, recommended to leave set to true.")>

      Public PerformanceMode As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Performance Mode
    - type: System.Boolean
      value: true
    - type: System.String
      value: Set this to false to leave a free core for other work, recommended to leave set to true.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RunTitle
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RunTitle
  id: RunTitle
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: RunTitle
  nameWithType: MultiClassRoadAssignmentTool.RunTitle
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RunTitle
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunTitle
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 63
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Run Title", "Multi-class Run", "The name of the run to appear in the logbook.")]

      public string RunTitle
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Run Title", "Multi-class Run", "The name of the run to appear in the logbook.")>

      Public RunTitle As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Run Title
    - type: System.String
      value: Multi-class Run
    - type: System.String
      value: The name of the run to appear in the logbook.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute(TMG.Emme.Controller)
  id: Execute(TMG.Emme.Controller)
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: Execute(Controller)
  nameWithType: MultiClassRoadAssignmentTool.Execute(Controller)
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute(TMG.Emme.Controller)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 162
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public bool Execute(Controller controller)
    parameters:
    - id: controller
      type: TMG.Emme.Controller
    return:
      type: System.Boolean
    content.vb: Public Function Execute(controller As Controller) As Boolean
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute*
  implements:
  - TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: MultiClassRoadAssignmentTool.RuntimeValidation(ref String)
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 281
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: MultiClassRoadAssignmentTool.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Emme.NetworkAssignment
  commentId: N:TMG.Emme.NetworkAssignment
  isExternal: false
  name: TMG.Emme.NetworkAssignment
  nameWithType: TMG.Emme.NetworkAssignment
  fullName: TMG.Emme.NetworkAssignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.IEmmeTool
  commentId: T:TMG.Emme.IEmmeTool
  parent: TMG.Emme
  isExternal: false
  name: IEmmeTool
  nameWithType: IEmmeTool
  fullName: TMG.Emme.IEmmeTool
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme
  commentId: N:TMG.Emme
  isExternal: false
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name
  isExternal: false
  name: Name
  nameWithType: MultiClassRoadAssignmentTool.Name
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress
  isExternal: false
  name: Progress
  nameWithType: MultiClassRoadAssignmentTool.Progress
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: MultiClassRoadAssignmentTool.ProgressColour
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class[]
  name: MultiClassRoadAssignmentTool.Class[]
  nameWithType: MultiClassRoadAssignmentTool.Class[]
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class[]
  nameWithType.vb: MultiClassRoadAssignmentTool.Class()
  fullName.vb: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class()
  name.vb: MultiClassRoadAssignmentTool.Class()
  spec.csharp:
  - uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
    name: MultiClassRoadAssignmentTool.Class
    nameWithType: MultiClassRoadAssignmentTool.Class
    fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
    name: MultiClassRoadAssignmentTool.Class
    nameWithType: MultiClassRoadAssignmentTool.Class
    fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute
  isExternal: false
  name: Execute
  nameWithType: MultiClassRoadAssignmentTool.Execute
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Execute
- uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  parent: TMG.Emme.IEmmeTool
  isExternal: false
  name: Execute(Controller)
  nameWithType: IEmmeTool.Execute(Controller)
  fullName: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  spec.csharp:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  isExternal: false
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: MultiClassRoadAssignmentTool.RuntimeValidation
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
