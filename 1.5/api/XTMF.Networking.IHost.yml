### YamlMime:ManagedReference
items:
- uid: XTMF.Networking.IHost
  commentId: T:XTMF.Networking.IHost
  id: IHost
  parent: XTMF.Networking
  children:
  - XTMF.Networking.IHost.AllModelSystemRunsComplete
  - XTMF.Networking.IHost.ClientDisconnected
  - XTMF.Networking.IHost.ClientRunComplete
  - XTMF.Networking.IHost.ConnectedClients
  - XTMF.Networking.IHost.CreateModelSystem(System.String,System.String@)
  - XTMF.Networking.IHost.CreateModelSystemStructure(System.Type,System.Type,System.Boolean)
  - XTMF.Networking.IHost.CurrentlyExecutingModelSystems
  - XTMF.Networking.IHost.ExecuteModelSystemAsync(System.Collections.Generic.ICollection{XTMF.IModelSystemStructure})
  - XTMF.Networking.IHost.ExecuteModelSystemAsync(XTMF.IModelSystemStructure)
  - XTMF.Networking.IHost.IsShutdown
  - XTMF.Networking.IHost.NewClientConnected
  - XTMF.Networking.IHost.ProgressUpdated
  - XTMF.Networking.IHost.RegisterCustomMessageHandler(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF})
  - XTMF.Networking.IHost.RegisterCustomReceiver(System.Int32,System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object})
  - XTMF.Networking.IHost.RegisterCustomSender(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream})
  - XTMF.Networking.IHost.Resources
  - XTMF.Networking.IHost.Shutdown
  langs:
  - csharp
  - vb
  name: IHost
  nameWithType: IHost
  fullName: XTMF.Networking.IHost
  type: Interface
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IHost
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 30
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nInclude this in your Host ModelSystemTemplate in order to unlock the XTMF Networking Sub-System.\n\nThe containing class will need to leave this as a public field/property for it to be setup properly.\n"
  example: []
  syntax:
    content: public interface IHost
    content.vb: Public Interface IHost
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: XTMF.Networking.IHost.AllModelSystemRunsComplete
  commentId: E:XTMF.Networking.IHost.AllModelSystemRunsComplete
  id: AllModelSystemRunsComplete
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: AllModelSystemRunsComplete
  nameWithType: IHost.AllModelSystemRunsComplete
  fullName: XTMF.Networking.IHost.AllModelSystemRunsComplete
  type: Event
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AllModelSystemRunsComplete
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 35
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nNotifies that all of the runs have been completed\n"
  example: []
  syntax:
    content: event Action AllModelSystemRunsComplete
    return:
      type: System.Action
    content.vb: Event AllModelSystemRunsComplete As Action
- uid: XTMF.Networking.IHost.ClientDisconnected
  commentId: E:XTMF.Networking.IHost.ClientDisconnected
  id: ClientDisconnected
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: ClientDisconnected
  nameWithType: IHost.ClientDisconnected
  fullName: XTMF.Networking.IHost.ClientDisconnected
  type: Event
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClientDisconnected
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 41
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nThis event will notify you when a client has disconnected from the\nXTMF host\n"
  example: []
  syntax:
    content: event Action<IRemoteXTMF> ClientDisconnected
    return:
      type: System.Action{XTMF.Networking.IRemoteXTMF}
    content.vb: Event ClientDisconnected As Action(Of IRemoteXTMF)
- uid: XTMF.Networking.IHost.ClientRunComplete
  commentId: E:XTMF.Networking.IHost.ClientRunComplete
  id: ClientRunComplete
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: ClientRunComplete
  nameWithType: IHost.ClientRunComplete
  fullName: XTMF.Networking.IHost.ClientRunComplete
  type: Event
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClientRunComplete
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 47
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nThis event will notify you when a client has completed their run,\ntheir exit status, and any error strings\n"
  example: []
  syntax:
    content: event Action<IRemoteXTMF, int, string> ClientRunComplete
    return:
      type: System.Action{XTMF.Networking.IRemoteXTMF,System.Int32,System.String}
    content.vb: Event ClientRunComplete As Action(Of IRemoteXTMF, Integer, String)
- uid: XTMF.Networking.IHost.NewClientConnected
  commentId: E:XTMF.Networking.IHost.NewClientConnected
  id: NewClientConnected
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: NewClientConnected
  nameWithType: IHost.NewClientConnected
  fullName: XTMF.Networking.IHost.NewClientConnected
  type: Event
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NewClientConnected
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 53
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nThis event will notify you when a new client has connected\nto the XTMF Host\n"
  example: []
  syntax:
    content: event Action<IRemoteXTMF> NewClientConnected
    return:
      type: System.Action{XTMF.Networking.IRemoteXTMF}
    content.vb: Event NewClientConnected As Action(Of IRemoteXTMF)
- uid: XTMF.Networking.IHost.ProgressUpdated
  commentId: E:XTMF.Networking.IHost.ProgressUpdated
  id: ProgressUpdated
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: ProgressUpdated
  nameWithType: IHost.ProgressUpdated
  fullName: XTMF.Networking.IHost.ProgressUpdated
  type: Event
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressUpdated
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 58
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nThe event will notify you when a client&apos;s progress has been updated\n"
  example: []
  syntax:
    content: event Action<IRemoteXTMF, float> ProgressUpdated
    return:
      type: System.Action{XTMF.Networking.IRemoteXTMF,System.Single}
    content.vb: Event ProgressUpdated As Action(Of IRemoteXTMF, Single)
- uid: XTMF.Networking.IHost.ConnectedClients
  commentId: P:XTMF.Networking.IHost.ConnectedClients
  id: ConnectedClients
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: ConnectedClients
  nameWithType: IHost.ConnectedClients
  fullName: XTMF.Networking.IHost.ConnectedClients
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ConnectedClients
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 60
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  syntax:
    content: IList<IRemoteXTMF> ConnectedClients { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{XTMF.Networking.IRemoteXTMF}
    content.vb: ReadOnly Property ConnectedClients As IList(Of IRemoteXTMF)
  overload: XTMF.Networking.IHost.ConnectedClients*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.Networking.IHost.CurrentlyExecutingModelSystems
  commentId: P:XTMF.Networking.IHost.CurrentlyExecutingModelSystems
  id: CurrentlyExecutingModelSystems
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: CurrentlyExecutingModelSystems
  nameWithType: IHost.CurrentlyExecutingModelSystems
  fullName: XTMF.Networking.IHost.CurrentlyExecutingModelSystems
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CurrentlyExecutingModelSystems
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 65
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nGives the number of model systems that are still executing\n"
  example: []
  syntax:
    content: int CurrentlyExecutingModelSystems { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentlyExecutingModelSystems As Integer
  overload: XTMF.Networking.IHost.CurrentlyExecutingModelSystems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.Networking.IHost.IsShutdown
  commentId: P:XTMF.Networking.IHost.IsShutdown
  id: IsShutdown
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: IsShutdown
  nameWithType: IHost.IsShutdown
  fullName: XTMF.Networking.IHost.IsShutdown
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsShutdown
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 70
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nChecks to see if the current host has been shutdown\n"
  example: []
  syntax:
    content: bool IsShutdown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsShutdown As Boolean
  overload: XTMF.Networking.IHost.IsShutdown*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.Networking.IHost.Resources
  commentId: P:XTMF.Networking.IHost.Resources
  id: Resources
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: Resources
  nameWithType: IHost.Resources
  fullName: XTMF.Networking.IHost.Resources
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Resources
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 75
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nThe resources for the clients stored on the host\n"
  example: []
  syntax:
    content: ConcurrentDictionary<string, object> Resources { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Object}
    content.vb: ReadOnly Property Resources As ConcurrentDictionary(Of String, Object)
  overload: XTMF.Networking.IHost.Resources*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.Networking.IHost.CreateModelSystem(System.String,System.String@)
  commentId: M:XTMF.Networking.IHost.CreateModelSystem(System.String,System.String@)
  id: CreateModelSystem(System.String,System.String@)
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: CreateModelSystem(String, ref String)
  nameWithType: IHost.CreateModelSystem(String, ref String)
  fullName: XTMF.Networking.IHost.CreateModelSystem(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 83
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nLoad a model system&apos;s structure from the model system repository\n"
  example: []
  syntax:
    content: IModelSystemStructure CreateModelSystem(string name, ref string error)
    parameters:
    - id: name
      type: System.String
      description: The name of the model system to use
    - id: error
      type: System.String
      description: The error generated while trying to load the model system
    return:
      type: XTMF.IModelSystemStructure
      description: null if that model system does not exist, or if it can not be produced and validated.
    content.vb: Function CreateModelSystem(name As String, ByRef error As String) As IModelSystemStructure
  overload: XTMF.Networking.IHost.CreateModelSystem*
  nameWithType.vb: IHost.CreateModelSystem(String, ByRef String)
  fullName.vb: XTMF.Networking.IHost.CreateModelSystem(System.String, ByRef System.String)
  name.vb: CreateModelSystem(String, ByRef String)
- uid: XTMF.Networking.IHost.CreateModelSystemStructure(System.Type,System.Type,System.Boolean)
  commentId: M:XTMF.Networking.IHost.CreateModelSystemStructure(System.Type,System.Type,System.Boolean)
  id: CreateModelSystemStructure(System.Type,System.Type,System.Boolean)
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: CreateModelSystemStructure(Type, Type, Boolean)
  nameWithType: IHost.CreateModelSystemStructure(Type, Type, Boolean)
  fullName: XTMF.Networking.IHost.CreateModelSystemStructure(System.Type, System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystemStructure
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 96
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nManually create a new ModelSystemStructure Node\n"
  remarks: "\nPlease avoid doing this if possible since it will lead to hard coding.\nInstead please use the CreateModelSystem(string name) function.\n"
  example: []
  syntax:
    content: IModelSystemStructure CreateModelSystemStructure(Type parent, Type nodeType, bool collection)
    parameters:
    - id: parent
      type: System.Type
      description: The parent Type for this node
    - id: nodeType
      type: System.Type
      description: The type this node represents
    - id: collection
      type: System.Boolean
      description: If this node is a collection or not
    return:
      type: XTMF.IModelSystemStructure
      description: The generated node
    content.vb: Function CreateModelSystemStructure(parent As Type, nodeType As Type, collection As Boolean) As IModelSystemStructure
  overload: XTMF.Networking.IHost.CreateModelSystemStructure*
- uid: XTMF.Networking.IHost.ExecuteModelSystemAsync(XTMF.IModelSystemStructure)
  commentId: M:XTMF.Networking.IHost.ExecuteModelSystemAsync(XTMF.IModelSystemStructure)
  id: ExecuteModelSystemAsync(XTMF.IModelSystemStructure)
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: ExecuteModelSystemAsync(IModelSystemStructure)
  nameWithType: IHost.ExecuteModelSystemAsync(IModelSystemStructure)
  fullName: XTMF.Networking.IHost.ExecuteModelSystemAsync(XTMF.IModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExecuteModelSystemAsync
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 102
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nExecutes the given model system structure with the\n"
  example: []
  syntax:
    content: void ExecuteModelSystemAsync(IModelSystemStructure structure)
    parameters:
    - id: structure
      type: XTMF.IModelSystemStructure
      description: The structure to execute
    content.vb: Sub ExecuteModelSystemAsync(structure As IModelSystemStructure)
  overload: XTMF.Networking.IHost.ExecuteModelSystemAsync*
- uid: XTMF.Networking.IHost.ExecuteModelSystemAsync(System.Collections.Generic.ICollection{XTMF.IModelSystemStructure})
  commentId: M:XTMF.Networking.IHost.ExecuteModelSystemAsync(System.Collections.Generic.ICollection{XTMF.IModelSystemStructure})
  id: ExecuteModelSystemAsync(System.Collections.Generic.ICollection{XTMF.IModelSystemStructure})
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: ExecuteModelSystemAsync(ICollection<IModelSystemStructure>)
  nameWithType: IHost.ExecuteModelSystemAsync(ICollection<IModelSystemStructure>)
  fullName: XTMF.Networking.IHost.ExecuteModelSystemAsync(System.Collections.Generic.ICollection<XTMF.IModelSystemStructure>)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExecuteModelSystemAsync
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 108
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nExecutes the given model system structure with the\n"
  example: []
  syntax:
    content: void ExecuteModelSystemAsync(ICollection<IModelSystemStructure> structure)
    parameters:
    - id: structure
      type: System.Collections.Generic.ICollection{XTMF.IModelSystemStructure}
      description: A collection of structures to execute
    content.vb: Sub ExecuteModelSystemAsync(structure As ICollection(Of IModelSystemStructure))
  overload: XTMF.Networking.IHost.ExecuteModelSystemAsync*
  nameWithType.vb: IHost.ExecuteModelSystemAsync(ICollection(Of IModelSystemStructure))
  fullName.vb: XTMF.Networking.IHost.ExecuteModelSystemAsync(System.Collections.Generic.ICollection(Of XTMF.IModelSystemStructure))
  name.vb: ExecuteModelSystemAsync(ICollection(Of IModelSystemStructure))
- uid: XTMF.Networking.IHost.RegisterCustomMessageHandler(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF})
  commentId: M:XTMF.Networking.IHost.RegisterCustomMessageHandler(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF})
  id: RegisterCustomMessageHandler(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF})
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: RegisterCustomMessageHandler(Int32, Action<Object, IRemoteXTMF>)
  nameWithType: IHost.RegisterCustomMessageHandler(Int32, Action<Object, IRemoteXTMF>)
  fullName: XTMF.Networking.IHost.RegisterCustomMessageHandler(System.Int32, System.Action<System.Object, XTMF.Networking.IRemoteXTMF>)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegisterCustomMessageHandler
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 110
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  syntax:
    content: void RegisterCustomMessageHandler(int customMessageNumber, Action<object, IRemoteXTMF> handler)
    parameters:
    - id: customMessageNumber
      type: System.Int32
    - id: handler
      type: System.Action{System.Object,XTMF.Networking.IRemoteXTMF}
    content.vb: Sub RegisterCustomMessageHandler(customMessageNumber As Integer, handler As Action(Of Object, IRemoteXTMF))
  overload: XTMF.Networking.IHost.RegisterCustomMessageHandler*
  nameWithType.vb: IHost.RegisterCustomMessageHandler(Int32, Action(Of Object, IRemoteXTMF))
  fullName.vb: XTMF.Networking.IHost.RegisterCustomMessageHandler(System.Int32, System.Action(Of System.Object, XTMF.Networking.IRemoteXTMF))
  name.vb: RegisterCustomMessageHandler(Int32, Action(Of Object, IRemoteXTMF))
- uid: XTMF.Networking.IHost.RegisterCustomReceiver(System.Int32,System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object})
  commentId: M:XTMF.Networking.IHost.RegisterCustomReceiver(System.Int32,System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object})
  id: RegisterCustomReceiver(System.Int32,System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object})
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: RegisterCustomReceiver(Int32, Func<Stream, IRemoteXTMF, Object>)
  nameWithType: IHost.RegisterCustomReceiver(Int32, Func<Stream, IRemoteXTMF, Object>)
  fullName: XTMF.Networking.IHost.RegisterCustomReceiver(System.Int32, System.Func<System.IO.Stream, XTMF.Networking.IRemoteXTMF, System.Object>)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegisterCustomReceiver
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 112
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  syntax:
    content: void RegisterCustomReceiver(int customMessageNumber, Func<Stream, IRemoteXTMF, object> converter)
    parameters:
    - id: customMessageNumber
      type: System.Int32
    - id: converter
      type: System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object}
    content.vb: Sub RegisterCustomReceiver(customMessageNumber As Integer, converter As Func(Of Stream, IRemoteXTMF, Object))
  overload: XTMF.Networking.IHost.RegisterCustomReceiver*
  nameWithType.vb: IHost.RegisterCustomReceiver(Int32, Func(Of Stream, IRemoteXTMF, Object))
  fullName.vb: XTMF.Networking.IHost.RegisterCustomReceiver(System.Int32, System.Func(Of System.IO.Stream, XTMF.Networking.IRemoteXTMF, System.Object))
  name.vb: RegisterCustomReceiver(Int32, Func(Of Stream, IRemoteXTMF, Object))
- uid: XTMF.Networking.IHost.RegisterCustomSender(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream})
  commentId: M:XTMF.Networking.IHost.RegisterCustomSender(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream})
  id: RegisterCustomSender(System.Int32,System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream})
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: RegisterCustomSender(Int32, Action<Object, IRemoteXTMF, Stream>)
  nameWithType: IHost.RegisterCustomSender(Int32, Action<Object, IRemoteXTMF, Stream>)
  fullName: XTMF.Networking.IHost.RegisterCustomSender(System.Int32, System.Action<System.Object, XTMF.Networking.IRemoteXTMF, System.IO.Stream>)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegisterCustomSender
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 114
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  syntax:
    content: void RegisterCustomSender(int customMessageNumber, Action<object, IRemoteXTMF, Stream> converter)
    parameters:
    - id: customMessageNumber
      type: System.Int32
    - id: converter
      type: System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream}
    content.vb: Sub RegisterCustomSender(customMessageNumber As Integer, converter As Action(Of Object, IRemoteXTMF, Stream))
  overload: XTMF.Networking.IHost.RegisterCustomSender*
  nameWithType.vb: IHost.RegisterCustomSender(Int32, Action(Of Object, IRemoteXTMF, Stream))
  fullName.vb: XTMF.Networking.IHost.RegisterCustomSender(System.Int32, System.Action(Of System.Object, XTMF.Networking.IRemoteXTMF, System.IO.Stream))
  name.vb: RegisterCustomSender(Int32, Action(Of Object, IRemoteXTMF, Stream))
- uid: XTMF.Networking.IHost.Shutdown
  commentId: M:XTMF.Networking.IHost.Shutdown
  id: Shutdown
  parent: XTMF.Networking.IHost
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: IHost.Shutdown()
  fullName: XTMF.Networking.IHost.Shutdown()
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Networking/IHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Shutdown
    path: ../../XTMF/Code/XTMFInterfaces/Networking/IHost.cs
    startLine: 119
  assemblies:
  - XTMFInterfaces
  namespace: XTMF.Networking
  summary: "\nShutdown the IHost\n"
  example: []
  syntax:
    content: void Shutdown()
    content.vb: Sub Shutdown
  overload: XTMF.Networking.IHost.Shutdown*
references:
- uid: XTMF.Networking
  commentId: N:XTMF.Networking
  isExternal: false
  name: XTMF.Networking
  nameWithType: XTMF.Networking
  fullName: XTMF.Networking
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{XTMF.Networking.IRemoteXTMF}
  commentId: T:System.Action{XTMF.Networking.IRemoteXTMF}
  parent: System
  definition: System.Action`1
  name: Action<IRemoteXTMF>
  nameWithType: Action<IRemoteXTMF>
  fullName: System.Action<XTMF.Networking.IRemoteXTMF>
  nameWithType.vb: Action(Of IRemoteXTMF)
  fullName.vb: System.Action(Of XTMF.Networking.IRemoteXTMF)
  name.vb: Action(Of IRemoteXTMF)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{XTMF.Networking.IRemoteXTMF,System.Int32,System.String}
  commentId: T:System.Action{XTMF.Networking.IRemoteXTMF,System.Int32,System.String}
  parent: System
  definition: System.Action`3
  name: Action<IRemoteXTMF, Int32, String>
  nameWithType: Action<IRemoteXTMF, Int32, String>
  fullName: System.Action<XTMF.Networking.IRemoteXTMF, System.Int32, System.String>
  nameWithType.vb: Action(Of IRemoteXTMF, Int32, String)
  fullName.vb: System.Action(Of XTMF.Networking.IRemoteXTMF, System.Int32, System.String)
  name.vb: Action(Of IRemoteXTMF, Int32, String)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{XTMF.Networking.IRemoteXTMF,System.Single}
  commentId: T:System.Action{XTMF.Networking.IRemoteXTMF,System.Single}
  parent: System
  definition: System.Action`2
  name: Action<IRemoteXTMF, Single>
  nameWithType: Action<IRemoteXTMF, Single>
  fullName: System.Action<XTMF.Networking.IRemoteXTMF, System.Single>
  nameWithType.vb: Action(Of IRemoteXTMF, Single)
  fullName.vb: System.Action(Of XTMF.Networking.IRemoteXTMF, System.Single)
  name.vb: Action(Of IRemoteXTMF, Single)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.IHost.ConnectedClients*
  commentId: Overload:XTMF.Networking.IHost.ConnectedClients
  isExternal: false
  name: ConnectedClients
  nameWithType: IHost.ConnectedClients
  fullName: XTMF.Networking.IHost.ConnectedClients
- uid: System.Collections.Generic.IList{XTMF.Networking.IRemoteXTMF}
  commentId: T:System.Collections.Generic.IList{XTMF.Networking.IRemoteXTMF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IRemoteXTMF>
  nameWithType: IList<IRemoteXTMF>
  fullName: System.Collections.Generic.IList<XTMF.Networking.IRemoteXTMF>
  nameWithType.vb: IList(Of IRemoteXTMF)
  fullName.vb: System.Collections.Generic.IList(Of XTMF.Networking.IRemoteXTMF)
  name.vb: IList(Of IRemoteXTMF)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.Networking.IHost.CurrentlyExecutingModelSystems*
  commentId: Overload:XTMF.Networking.IHost.CurrentlyExecutingModelSystems
  isExternal: false
  name: CurrentlyExecutingModelSystems
  nameWithType: IHost.CurrentlyExecutingModelSystems
  fullName: XTMF.Networking.IHost.CurrentlyExecutingModelSystems
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.Networking.IHost.IsShutdown*
  commentId: Overload:XTMF.Networking.IHost.IsShutdown
  isExternal: false
  name: IsShutdown
  nameWithType: IHost.IsShutdown
  fullName: XTMF.Networking.IHost.IsShutdown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Networking.IHost.Resources*
  commentId: Overload:XTMF.Networking.IHost.Resources
  isExternal: false
  name: Resources
  nameWithType: IHost.Resources
  fullName: XTMF.Networking.IHost.Resources
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Object}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Object}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<String, Object>
  nameWithType: ConcurrentDictionary<String, Object>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.String, System.Object>
  nameWithType.vb: ConcurrentDictionary(Of String, Object)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.String, System.Object)
  name.vb: ConcurrentDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: false
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: XTMF.Networking.IHost.CreateModelSystem*
  commentId: Overload:XTMF.Networking.IHost.CreateModelSystem
  isExternal: false
  name: CreateModelSystem
  nameWithType: IHost.CreateModelSystem
  fullName: XTMF.Networking.IHost.CreateModelSystem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  isExternal: false
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: XTMF.Networking.IHost.CreateModelSystemStructure*
  commentId: Overload:XTMF.Networking.IHost.CreateModelSystemStructure
  isExternal: false
  name: CreateModelSystemStructure
  nameWithType: IHost.CreateModelSystemStructure
  fullName: XTMF.Networking.IHost.CreateModelSystemStructure
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: XTMF.Networking.IHost.ExecuteModelSystemAsync*
  commentId: Overload:XTMF.Networking.IHost.ExecuteModelSystemAsync
  isExternal: false
  name: ExecuteModelSystemAsync
  nameWithType: IHost.ExecuteModelSystemAsync
  fullName: XTMF.Networking.IHost.ExecuteModelSystemAsync
- uid: System.Collections.Generic.ICollection{XTMF.IModelSystemStructure}
  commentId: T:System.Collections.Generic.ICollection{XTMF.IModelSystemStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IModelSystemStructure>
  nameWithType: ICollection<IModelSystemStructure>
  fullName: System.Collections.Generic.ICollection<XTMF.IModelSystemStructure>
  nameWithType.vb: ICollection(Of IModelSystemStructure)
  fullName.vb: System.Collections.Generic.ICollection(Of XTMF.IModelSystemStructure)
  name.vb: ICollection(Of IModelSystemStructure)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.IHost.RegisterCustomMessageHandler*
  commentId: Overload:XTMF.Networking.IHost.RegisterCustomMessageHandler
  isExternal: false
  name: RegisterCustomMessageHandler
  nameWithType: IHost.RegisterCustomMessageHandler
  fullName: XTMF.Networking.IHost.RegisterCustomMessageHandler
- uid: System.Action{System.Object,XTMF.Networking.IRemoteXTMF}
  commentId: T:System.Action{System.Object,XTMF.Networking.IRemoteXTMF}
  parent: System
  definition: System.Action`2
  name: Action<Object, IRemoteXTMF>
  nameWithType: Action<Object, IRemoteXTMF>
  fullName: System.Action<System.Object, XTMF.Networking.IRemoteXTMF>
  nameWithType.vb: Action(Of Object, IRemoteXTMF)
  fullName.vb: System.Action(Of System.Object, XTMF.Networking.IRemoteXTMF)
  name.vb: Action(Of Object, IRemoteXTMF)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.IHost.RegisterCustomReceiver*
  commentId: Overload:XTMF.Networking.IHost.RegisterCustomReceiver
  isExternal: false
  name: RegisterCustomReceiver
  nameWithType: IHost.RegisterCustomReceiver
  fullName: XTMF.Networking.IHost.RegisterCustomReceiver
- uid: System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object}
  commentId: T:System.Func{System.IO.Stream,XTMF.Networking.IRemoteXTMF,System.Object}
  parent: System
  definition: System.Func`3
  name: Func<Stream, IRemoteXTMF, Object>
  nameWithType: Func<Stream, IRemoteXTMF, Object>
  fullName: System.Func<System.IO.Stream, XTMF.Networking.IRemoteXTMF, System.Object>
  nameWithType.vb: Func(Of Stream, IRemoteXTMF, Object)
  fullName.vb: System.Func(Of System.IO.Stream, XTMF.Networking.IRemoteXTMF, System.Object)
  name.vb: Func(Of Stream, IRemoteXTMF, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.IHost.RegisterCustomSender*
  commentId: Overload:XTMF.Networking.IHost.RegisterCustomSender
  isExternal: false
  name: RegisterCustomSender
  nameWithType: IHost.RegisterCustomSender
  fullName: XTMF.Networking.IHost.RegisterCustomSender
- uid: System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream}
  commentId: T:System.Action{System.Object,XTMF.Networking.IRemoteXTMF,System.IO.Stream}
  parent: System
  definition: System.Action`3
  name: Action<Object, IRemoteXTMF, Stream>
  nameWithType: Action<Object, IRemoteXTMF, Stream>
  fullName: System.Action<System.Object, XTMF.Networking.IRemoteXTMF, System.IO.Stream>
  nameWithType.vb: Action(Of Object, IRemoteXTMF, Stream)
  fullName.vb: System.Action(Of System.Object, XTMF.Networking.IRemoteXTMF, System.IO.Stream)
  name.vb: Action(Of Object, IRemoteXTMF, Stream)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Networking.IRemoteXTMF
    name: IRemoteXTMF
    nameWithType: IRemoteXTMF
    fullName: XTMF.Networking.IRemoteXTMF
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.IHost.Shutdown*
  commentId: Overload:XTMF.Networking.IHost.Shutdown
  isExternal: false
  name: Shutdown
  nameWithType: IHost.Shutdown
  fullName: XTMF.Networking.IHost.Shutdown
