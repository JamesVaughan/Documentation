### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Modes.SchoolBus
  commentId: T:TMG.GTAModel.Modes.SchoolBus
  id: SchoolBus
  parent: TMG.GTAModel.Modes
  children:
  - TMG.GTAModel.Modes.SchoolBus.AdvancedNetworkData
  - TMG.GTAModel.Modes.SchoolBus.AgeConstant1
  - TMG.GTAModel.Modes.SchoolBus.AgeConstant2
  - TMG.GTAModel.Modes.SchoolBus.AgeConstant3
  - TMG.GTAModel.Modes.SchoolBus.AgeConstant4
  - TMG.GTAModel.Modes.SchoolBus.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.SchoolBus.Constant
  - TMG.GTAModel.Modes.SchoolBus.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible
  - TMG.GTAModel.Modes.SchoolBus.DestinationEmploymentDensity
  - TMG.GTAModel.Modes.SchoolBus.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.SchoolBus.ModeName
  - TMG.GTAModel.Modes.SchoolBus.MultipleVehicleHousehold
  - TMG.GTAModel.Modes.SchoolBus.Name
  - TMG.GTAModel.Modes.SchoolBus.NetworkData
  - TMG.GTAModel.Modes.SchoolBus.NetworkType
  - TMG.GTAModel.Modes.SchoolBus.NoDriversLicense
  - TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle
  - TMG.GTAModel.Modes.SchoolBus.OriginPopulationDensity
  - TMG.GTAModel.Modes.SchoolBus.OtherRegionDistance
  - TMG.GTAModel.Modes.SchoolBus.Parking
  - TMG.GTAModel.Modes.SchoolBus.PartTime
  - TMG.GTAModel.Modes.SchoolBus.Progress
  - TMG.GTAModel.Modes.SchoolBus.ProgressColour
  - TMG.GTAModel.Modes.SchoolBus.RegionDistanceNumber
  - TMG.GTAModel.Modes.SchoolBus.Root
  - TMG.GTAModel.Modes.SchoolBus.RuntimeValidation(System.String@)
  - TMG.GTAModel.Modes.SchoolBus.SingleVehicleHousehold
  - TMG.GTAModel.Modes.SchoolBus.SpecificRegionConstant
  - TMG.GTAModel.Modes.SchoolBus.SpecificRegionDistance
  - TMG.GTAModel.Modes.SchoolBus.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  langs:
  - csharp
  - vb
  name: SchoolBus
  nameWithType: SchoolBus
  fullName: TMG.GTAModel.Modes.SchoolBus
  type: Class
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SchoolBus
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 24
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: 'public class SchoolBus : IMode, IModeChoiceNode, IModule'
    content.vb: >-
      Public Class SchoolBus

          Implements IMode, IModeChoiceNode, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.IMode
  - TMG.IModeChoiceNode
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Modes.SchoolBus.AgeConstant1
  commentId: F:TMG.GTAModel.Modes.SchoolBus.AgeConstant1
  id: AgeConstant1
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: AgeConstant1
  nameWithType: SchoolBus.AgeConstant1
  fullName: TMG.GTAModel.Modes.SchoolBus.AgeConstant1
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AgeConstant1
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 27
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("AgeConstant1", 0F, "An additive constant for persons for different ages.")]

      public float AgeConstant1
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("AgeConstant1", 0F, "An additive constant for persons for different ages.")>

      Public AgeConstant1 As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: AgeConstant1
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for persons for different ages.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.AgeConstant2
  commentId: F:TMG.GTAModel.Modes.SchoolBus.AgeConstant2
  id: AgeConstant2
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: AgeConstant2
  nameWithType: SchoolBus.AgeConstant2
  fullName: TMG.GTAModel.Modes.SchoolBus.AgeConstant2
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AgeConstant2
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 30
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("AgeConstant2", 0F, "An additive constant for persons for different ages.")]

      public float AgeConstant2
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("AgeConstant2", 0F, "An additive constant for persons for different ages.")>

      Public AgeConstant2 As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: AgeConstant2
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for persons for different ages.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.AgeConstant3
  commentId: F:TMG.GTAModel.Modes.SchoolBus.AgeConstant3
  id: AgeConstant3
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: AgeConstant3
  nameWithType: SchoolBus.AgeConstant3
  fullName: TMG.GTAModel.Modes.SchoolBus.AgeConstant3
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AgeConstant3
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("AgeConstant3", 0F, "An additive constant for persons for different ages.")]

      public float AgeConstant3
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("AgeConstant3", 0F, "An additive constant for persons for different ages.")>

      Public AgeConstant3 As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: AgeConstant3
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for persons for different ages.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.AgeConstant4
  commentId: F:TMG.GTAModel.Modes.SchoolBus.AgeConstant4
  id: AgeConstant4
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: AgeConstant4
  nameWithType: SchoolBus.AgeConstant4
  fullName: TMG.GTAModel.Modes.SchoolBus.AgeConstant4
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AgeConstant4
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 36
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("AgeConstant4", 0F, "An additive constant for persons for different ages.")]

      public float AgeConstant4
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("AgeConstant4", 0F, "An additive constant for persons for different ages.")>

      Public AgeConstant4 As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: AgeConstant4
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for persons for different ages.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.Constant
  commentId: F:TMG.GTAModel.Modes.SchoolBus.Constant
  id: Constant
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: SchoolBus.Constant
  fullName: TMG.GTAModel.Modes.SchoolBus.Constant
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Constant
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 39
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Constant", 0F, "The base constant term of the utility calculation.")]

      public float Constant
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Constant", 0F, "The base constant term of the utility calculation.")>

      Public Constant As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Constant
    - type: System.Single
      value: 0
    - type: System.String
      value: The base constant term of the utility calculation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.DestinationEmploymentDensity
  commentId: F:TMG.GTAModel.Modes.SchoolBus.DestinationEmploymentDensity
  id: DestinationEmploymentDensity
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: DestinationEmploymentDensity
  nameWithType: SchoolBus.DestinationEmploymentDensity
  fullName: TMG.GTAModel.Modes.SchoolBus.DestinationEmploymentDensity
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DestinationEmploymentDensity
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 42
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Destination Employment Density", 0F, "The weight to use for the employment density of the destination zone.")]

      public float DestinationEmploymentDensity
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Destination Employment Density", 0F, "The weight to use for the employment density of the destination zone.")>

      Public DestinationEmploymentDensity As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Destination Employment Density
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to use for the employment density of the destination zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.MultipleVehicleHousehold
  commentId: F:TMG.GTAModel.Modes.SchoolBus.MultipleVehicleHousehold
  id: MultipleVehicleHousehold
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: MultipleVehicleHousehold
  nameWithType: SchoolBus.MultipleVehicleHousehold
  fullName: TMG.GTAModel.Modes.SchoolBus.MultipleVehicleHousehold
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MultipleVehicleHousehold
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 45
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Multiple-Vehicle Household", 0F, "An additive constant for households that contain a multiple vehicles.")]

      public float MultipleVehicleHousehold
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Multiple-Vehicle Household", 0F, "An additive constant for households that contain a multiple vehicles.")>

      Public MultipleVehicleHousehold As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Multiple-Vehicle Household
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for households that contain a multiple vehicles.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.NoDriversLicense
  commentId: F:TMG.GTAModel.Modes.SchoolBus.NoDriversLicense
  id: NoDriversLicense
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: NoDriversLicense
  nameWithType: SchoolBus.NoDriversLicense
  fullName: TMG.GTAModel.Modes.SchoolBus.NoDriversLicense
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NoDriversLicense
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 48
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("No Driver's License", 0F, "An additive constant for persons who have no driver's license.")]

      public float NoDriversLicense
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("No Driver's License", 0F, "An additive constant for persons who have no driver's license.")>

      Public NoDriversLicense As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: No Driver's License
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for persons who have no driver's license.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.OriginPopulationDensity
  commentId: F:TMG.GTAModel.Modes.SchoolBus.OriginPopulationDensity
  id: OriginPopulationDensity
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: OriginPopulationDensity
  nameWithType: SchoolBus.OriginPopulationDensity
  fullName: TMG.GTAModel.Modes.SchoolBus.OriginPopulationDensity
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OriginPopulationDensity
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 51
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Origin Population Density", 0F, "The weight to use for the population density of the origin zone.")]

      public float OriginPopulationDensity
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Origin Population Density", 0F, "The weight to use for the population density of the origin zone.")>

      Public OriginPopulationDensity As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Origin Population Density
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to use for the population density of the origin zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.OtherRegionDistance
  commentId: F:TMG.GTAModel.Modes.SchoolBus.OtherRegionDistance
  id: OtherRegionDistance
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: OtherRegionDistance
  nameWithType: SchoolBus.OtherRegionDistance
  fullName: TMG.GTAModel.Modes.SchoolBus.OtherRegionDistance
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OtherRegionDistance
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 54
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("OtherRegionDistance", 0F, "The weight to add based on the straight line distance between zones.")]

      public float OtherRegionDistance
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("OtherRegionDistance", 0F, "The weight to add based on the straight line distance between zones.")>

      Public OtherRegionDistance As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: OtherRegionDistance
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to add based on the straight line distance between zones.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.Parking
  commentId: F:TMG.GTAModel.Modes.SchoolBus.Parking
  id: Parking
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Parking
  nameWithType: SchoolBus.Parking
  fullName: TMG.GTAModel.Modes.SchoolBus.Parking
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parking
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 57
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Parking Cost", 0F, "The weight given to the parking cost to calculate the utility.")]

      public float Parking
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Parking Cost", 0F, "The weight given to the parking cost to calculate the utility.")>

      Public Parking As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Parking Cost
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight given to the parking cost to calculate the utility.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.PartTime
  commentId: F:TMG.GTAModel.Modes.SchoolBus.PartTime
  id: PartTime
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: PartTime
  nameWithType: SchoolBus.PartTime
  fullName: TMG.GTAModel.Modes.SchoolBus.PartTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PartTime
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 60
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Part-Time Work", 0F, "An additive constant for persons who are part time workers.")]

      public float PartTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Part-Time Work", 0F, "An additive constant for persons who are part time workers.")>

      Public PartTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Part-Time Work
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for persons who are part time workers.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.SpecificRegionConstant
  commentId: F:TMG.GTAModel.Modes.SchoolBus.SpecificRegionConstant
  id: SpecificRegionConstant
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: SpecificRegionConstant
  nameWithType: SchoolBus.SpecificRegionConstant
  fullName: TMG.GTAModel.Modes.SchoolBus.SpecificRegionConstant
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SpecificRegionConstant
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 63
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Region Constant", 0F, "An additional constant to add if we are working with the 'Region Distance Number'")]

      public float SpecificRegionConstant
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Region Constant", 0F, "An additional constant to add if we are working with the 'Region Distance Number'")>

      Public SpecificRegionConstant As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Region Constant
    - type: System.Single
      value: 0
    - type: System.String
      value: An additional constant to add if we are working with the 'Region Distance Number'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.SpecificRegionDistance
  commentId: F:TMG.GTAModel.Modes.SchoolBus.SpecificRegionDistance
  id: SpecificRegionDistance
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: SpecificRegionDistance
  nameWithType: SchoolBus.SpecificRegionDistance
  fullName: TMG.GTAModel.Modes.SchoolBus.SpecificRegionDistance
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SpecificRegionDistance
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 66
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("SpecificRegionDistance", 0F, "The weight to add based on the straight line distance between zones.")]

      public float SpecificRegionDistance
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("SpecificRegionDistance", 0F, "The weight to add based on the straight line distance between zones.")>

      Public SpecificRegionDistance As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: SpecificRegionDistance
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to add based on the straight line distance between zones.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.RegionDistanceNumber
  commentId: F:TMG.GTAModel.Modes.SchoolBus.RegionDistanceNumber
  id: RegionDistanceNumber
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: RegionDistanceNumber
  nameWithType: SchoolBus.RegionDistanceNumber
  fullName: TMG.GTAModel.Modes.SchoolBus.RegionDistanceNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDistanceNumber
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 69
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Region Distance Number", 1, "The region number to use for the specific distance.")]

      public int RegionDistanceNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Region Distance Number", 1, "The region number to use for the specific distance.")>

      Public RegionDistanceNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Region Distance Number
    - type: System.Int32
      value: 1
    - type: System.String
      value: The region number to use for the specific distance.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.Root
  commentId: F:TMG.GTAModel.Modes.SchoolBus.Root
  id: Root
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: SchoolBus.Root
  fullName: TMG.GTAModel.Modes.SchoolBus.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 72
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.SingleVehicleHousehold
  commentId: F:TMG.GTAModel.Modes.SchoolBus.SingleVehicleHousehold
  id: SingleVehicleHousehold
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: SingleVehicleHousehold
  nameWithType: SchoolBus.SingleVehicleHousehold
  fullName: TMG.GTAModel.Modes.SchoolBus.SingleVehicleHousehold
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SingleVehicleHousehold
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 75
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Single-Vehicle Household", 0F, "An additive constant for households that contain a single vehicle.")]

      public float SingleVehicleHousehold
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Single-Vehicle Household", 0F, "An additive constant for households that contain a single vehicle.")>

      Public SingleVehicleHousehold As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Single-Vehicle Household
    - type: System.Single
      value: 0
    - type: System.String
      value: An additive constant for households that contain a single vehicle.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.AdvancedNetworkData
  commentId: F:TMG.GTAModel.Modes.SchoolBus.AdvancedNetworkData
  id: AdvancedNetworkData
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: AdvancedNetworkData
  nameWithType: SchoolBus.AdvancedNetworkData
  fullName: TMG.GTAModel.Modes.SchoolBus.AdvancedNetworkData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AdvancedNetworkData
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 78
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: protected ITripComponentData AdvancedNetworkData
    return:
      type: TMG.ITripComponentData
    content.vb: Protected AdvancedNetworkData As ITripComponentData
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.Modes.SchoolBus.NetworkData
  commentId: F:TMG.GTAModel.Modes.SchoolBus.NetworkData
  id: NetworkData
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: NetworkData
  nameWithType: SchoolBus.NetworkData
  fullName: TMG.GTAModel.Modes.SchoolBus.NetworkData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkData
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 81
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: protected INetworkData NetworkData
    return:
      type: TMG.INetworkData
    content.vb: Protected NetworkData As INetworkData
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible
  commentId: P:TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible
  id: CurrentlyFeasible
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: CurrentlyFeasible
  nameWithType: SchoolBus.CurrentlyFeasible
  fullName: TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CurrentlyFeasible
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 83
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [Parameter("Demographic Category Feasible", 1F, "(Automated by IModeParameterDatabase)\r\nIs the currently processing demographic category feasible?")]

      public float CurrentlyFeasible { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <Parameter("Demographic Category Feasible", 1F, "(Automated by IModeParameterDatabase)" & vbCrLf & "Is the currently processing demographic category feasible?")>

      Public Property CurrentlyFeasible As Single
  overload: TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible*
  implements:
  - TMG.IModeChoiceNode.CurrentlyFeasible
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demographic Category Feasible
    - type: System.Single
      value: 1
    - type: System.String
      value: >-
        (Automated by IModeParameterDatabase)

        Is the currently processing demographic category feasible?
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.ModeName
  commentId: P:TMG.GTAModel.Modes.SchoolBus.ModeName
  id: ModeName
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: ModeName
  nameWithType: SchoolBus.ModeName
  fullName: TMG.GTAModel.Modes.SchoolBus.ModeName
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModeName
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 86
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("ModeName", "SchBs", "The name of the mode.")]

      public string ModeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("ModeName", "SchBs", "The name of the mode.")>

      Public Property ModeName As String
  overload: TMG.GTAModel.Modes.SchoolBus.ModeName*
  implements:
  - TMG.IModeChoiceNode.ModeName
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: ModeName
    - type: System.String
      value: SchBs
    - type: System.String
      value: The name of the mode.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.Name
  commentId: P:TMG.GTAModel.Modes.SchoolBus.Name
  id: Name
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SchoolBus.Name
  fullName: TMG.GTAModel.Modes.SchoolBus.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 89
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Modes.SchoolBus.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.NetworkType
  commentId: P:TMG.GTAModel.Modes.SchoolBus.NetworkType
  id: NetworkType
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: SchoolBus.NetworkType
  fullName: TMG.GTAModel.Modes.SchoolBus.NetworkType
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkType
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 95
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Network Name", "Auto", "The name of the network data to use.")]

      public string NetworkType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Network Name", "Auto", "The name of the network data to use.")>

      Public Property NetworkType As String
  overload: TMG.GTAModel.Modes.SchoolBus.NetworkType*
  implements:
  - TMG.IMode.NetworkType
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the network data to use.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle
  commentId: P:TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle
  id: NonPersonalVehicle
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: NonPersonalVehicle
  nameWithType: SchoolBus.NonPersonalVehicle
  fullName: TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NonPersonalVehicle
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 98
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [Parameter("NonPersonalVehicle", true, "Is this mode using a non-personal vehicle?")]

      public bool NonPersonalVehicle { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Parameter("NonPersonalVehicle", True, "Is this mode using a non-personal vehicle?")>

      Public Property NonPersonalVehicle As Boolean
  overload: TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle*
  implements:
  - TMG.IMode.NonPersonalVehicle
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: NonPersonalVehicle
    - type: System.Boolean
      value: true
    - type: System.String
      value: Is this mode using a non-personal vehicle?
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.SchoolBus.Progress
  commentId: P:TMG.GTAModel.Modes.SchoolBus.Progress
  id: Progress
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: SchoolBus.Progress
  fullName: TMG.GTAModel.Modes.SchoolBus.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 101
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Modes.SchoolBus.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.SchoolBus.ProgressColour
  commentId: P:TMG.GTAModel.Modes.SchoolBus.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: SchoolBus.ProgressColour
  fullName: TMG.GTAModel.Modes.SchoolBus.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 106
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Modes.SchoolBus.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.SchoolBus.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.SchoolBus.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  id: CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: CalculateV(IZone, IZone, Time)
  nameWithType: SchoolBus.CalculateV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.SchoolBus.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CalculateV
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 111
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public virtual float CalculateV(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Overridable Function CalculateV(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.Modes.SchoolBus.CalculateV*
  implements:
  - TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TMG.GTAModel.Modes.SchoolBus.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.SchoolBus.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  id: Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Cost(IZone, IZone, Time)
  nameWithType: SchoolBus.Cost(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.SchoolBus.Cost(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Cost
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 131
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public virtual float Cost(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Overridable Function Cost(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.Modes.SchoolBus.Cost*
  implements:
  - TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TMG.GTAModel.Modes.SchoolBus.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.SchoolBus.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  id: Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: Feasible(IZone, IZone, Time)
  nameWithType: SchoolBus.Feasible(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.SchoolBus.Feasible(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Feasible
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 136
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public virtual bool Feasible(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Feasible(origin As IZone, destination As IZone, time As Time) As Boolean
  overload: TMG.GTAModel.Modes.SchoolBus.Feasible*
  implements:
  - TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TMG.GTAModel.Modes.SchoolBus.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Modes.SchoolBus.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: SchoolBus.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Modes.SchoolBus.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 143
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public virtual bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Modes.SchoolBus.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: SchoolBus.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: TMG.GTAModel.Modes.SchoolBus.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Modes.SchoolBus.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.SchoolBus.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.SchoolBus
  langs:
  - csharp
  - vb
  name: TravelTime(IZone, IZone, Time)
  nameWithType: SchoolBus.TravelTime(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.SchoolBus.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/SchoolBus.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../XTMF/Code/GTAModel/Modes/SchoolBus.cs
    startLine: 150
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public virtual Time TravelTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Overridable Function TravelTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.GTAModel.Modes.SchoolBus.TravelTime*
  implements:
  - TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: TMG.GTAModel.Modes
  commentId: N:TMG.GTAModel.Modes
  isExternal: false
  name: TMG.GTAModel.Modes
  nameWithType: TMG.GTAModel.Modes
  fullName: TMG.GTAModel.Modes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.IMode
  commentId: T:TMG.IMode
  parent: TMG
  isExternal: false
  name: IMode
  nameWithType: IMode
  fullName: TMG.IMode
- uid: TMG.IModeChoiceNode
  commentId: T:TMG.IModeChoiceNode
  parent: TMG
  isExternal: false
  name: IModeChoiceNode
  nameWithType: IModeChoiceNode
  fullName: TMG.IModeChoiceNode
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG.ITripComponentData
  commentId: T:TMG.ITripComponentData
  parent: TMG
  isExternal: false
  name: ITripComponentData
  nameWithType: ITripComponentData
  fullName: TMG.ITripComponentData
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  parent: TMG
  isExternal: false
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
- uid: TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible
  isExternal: false
  name: CurrentlyFeasible
  nameWithType: SchoolBus.CurrentlyFeasible
  fullName: TMG.GTAModel.Modes.SchoolBus.CurrentlyFeasible
- uid: TMG.IModeChoiceNode.CurrentlyFeasible
  commentId: P:TMG.IModeChoiceNode.CurrentlyFeasible
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: CurrentlyFeasible
  nameWithType: IModeChoiceNode.CurrentlyFeasible
  fullName: TMG.IModeChoiceNode.CurrentlyFeasible
- uid: TMG.GTAModel.Modes.SchoolBus.ModeName*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.ModeName
  isExternal: false
  name: ModeName
  nameWithType: SchoolBus.ModeName
  fullName: TMG.GTAModel.Modes.SchoolBus.ModeName
- uid: TMG.IModeChoiceNode.ModeName
  commentId: P:TMG.IModeChoiceNode.ModeName
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: ModeName
  nameWithType: IModeChoiceNode.ModeName
  fullName: TMG.IModeChoiceNode.ModeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Modes.SchoolBus.Name*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.Name
  isExternal: false
  name: Name
  nameWithType: SchoolBus.Name
  fullName: TMG.GTAModel.Modes.SchoolBus.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.Modes.SchoolBus.NetworkType*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.NetworkType
  isExternal: false
  name: NetworkType
  nameWithType: SchoolBus.NetworkType
  fullName: TMG.GTAModel.Modes.SchoolBus.NetworkType
- uid: TMG.IMode.NetworkType
  commentId: P:TMG.IMode.NetworkType
  parent: TMG.IMode
  isExternal: false
  name: NetworkType
  nameWithType: IMode.NetworkType
  fullName: TMG.IMode.NetworkType
- uid: TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle
  isExternal: false
  name: NonPersonalVehicle
  nameWithType: SchoolBus.NonPersonalVehicle
  fullName: TMG.GTAModel.Modes.SchoolBus.NonPersonalVehicle
- uid: TMG.IMode.NonPersonalVehicle
  commentId: P:TMG.IMode.NonPersonalVehicle
  parent: TMG.IMode
  isExternal: false
  name: NonPersonalVehicle
  nameWithType: IMode.NonPersonalVehicle
  fullName: TMG.IMode.NonPersonalVehicle
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.Modes.SchoolBus.Progress*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.Progress
  isExternal: false
  name: Progress
  nameWithType: SchoolBus.Progress
  fullName: TMG.GTAModel.Modes.SchoolBus.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.Modes.SchoolBus.ProgressColour*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: SchoolBus.ProgressColour
  fullName: TMG.GTAModel.Modes.SchoolBus.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.SchoolBus.CalculateV*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.CalculateV
  isExternal: false
  name: CalculateV
  nameWithType: SchoolBus.CalculateV
  fullName: TMG.GTAModel.Modes.SchoolBus.CalculateV
- uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: CalculateV(IZone, IZone, Time)
  nameWithType: IModeChoiceNode.CalculateV(IZone, IZone, Time)
  fullName: TMG.IModeChoiceNode.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IModeChoiceNode.CalculateV
    fullName: TMG.IModeChoiceNode.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IModeChoiceNode.CalculateV
    fullName: TMG.IModeChoiceNode.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.GTAModel.Modes.SchoolBus.Cost*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.Cost
  isExternal: false
  name: Cost
  nameWithType: SchoolBus.Cost
  fullName: TMG.GTAModel.Modes.SchoolBus.Cost
- uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IMode
  isExternal: false
  name: Cost(IZone, IZone, Time)
  nameWithType: IMode.Cost(IZone, IZone, Time)
  fullName: TMG.IMode.Cost(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Cost
    nameWithType: IMode.Cost
    fullName: TMG.IMode.Cost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Cost
    nameWithType: IMode.Cost
    fullName: TMG.IMode.Cost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.SchoolBus.Feasible*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.Feasible
  isExternal: false
  name: Feasible
  nameWithType: SchoolBus.Feasible
  fullName: TMG.GTAModel.Modes.SchoolBus.Feasible
- uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: Feasible(IZone, IZone, Time)
  nameWithType: IModeChoiceNode.Feasible(IZone, IZone, Time)
  fullName: TMG.IModeChoiceNode.Feasible(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: IModeChoiceNode.Feasible
    fullName: TMG.IModeChoiceNode.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: IModeChoiceNode.Feasible
    fullName: TMG.IModeChoiceNode.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.SchoolBus.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: SchoolBus.RuntimeValidation
  fullName: TMG.GTAModel.Modes.SchoolBus.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.SchoolBus.TravelTime*
  commentId: Overload:TMG.GTAModel.Modes.SchoolBus.TravelTime
  isExternal: false
  name: TravelTime
  nameWithType: SchoolBus.TravelTime
  fullName: TMG.GTAModel.Modes.SchoolBus.TravelTime
- uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IMode
  isExternal: false
  name: TravelTime(IZone, IZone, Time)
  nameWithType: IMode.TravelTime(IZone, IZone, Time)
  fullName: TMG.IMode.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: IMode.TravelTime
    fullName: TMG.IMode.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: IMode.TravelTime
    fullName: TMG.IMode.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
