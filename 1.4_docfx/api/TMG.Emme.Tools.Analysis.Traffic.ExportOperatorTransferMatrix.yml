### YamlMime:ManagedReference
items:
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  commentId: T:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  id: ExportOperatorTransferMatrix
  parent: TMG.Emme.Tools.Analysis.Traffic
  children:
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute(TMG.Emme.Controller)
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportTransferMatrixFlag
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportWalkAllWayMatrixFlag
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.LineGroupOptionOrAttributeId
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation(System.String@)
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ScenarioNumber
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.TransferMatrixFile
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.WalkAllWayMatrixFile
  - TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.XTMFAggregationParition
  langs:
  - csharp
  - vb
  name: ExportOperatorTransferMatrix
  nameWithType: ExportOperatorTransferMatrix
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  type: Class
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportOperatorTransferMatrix
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 25
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: 'public class ExportOperatorTransferMatrix : IEmmeTool, IModule'
    content.vb: >-
      Public Class ExportOperatorTransferMatrix

          Implements IEmmeTool, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Emme.IEmmeTool
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name
  commentId: P:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name
  id: Name
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExportOperatorTransferMatrix.Name
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 28
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress
  commentId: P:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress
  id: Progress
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ExportOperatorTransferMatrix.Progress
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 30
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour
  commentId: P:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour
  id: ProgressColour
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ExportOperatorTransferMatrix.ProgressColour
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 32
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ScenarioNumber
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ScenarioNumber
  id: ScenarioNumber
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: ScenarioNumber
  nameWithType: ExportOperatorTransferMatrix.ScenarioNumber
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ScenarioNumber
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ScenarioNumber
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 35
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [RunParameter("Scenario Number", 1, "The scenario to interact with")]

      public int ScenarioNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Scenario Number", 1, "The scenario to interact with")>

      Public ScenarioNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Scenario Number
    - type: System.Int32
      value: 1
    - type: System.String
      value: The scenario to interact with
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportTransferMatrixFlag
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportTransferMatrixFlag
  id: ExportTransferMatrixFlag
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: ExportTransferMatrixFlag
  nameWithType: ExportOperatorTransferMatrix.ExportTransferMatrixFlag
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportTransferMatrixFlag
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportTransferMatrixFlag
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 38
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [RunParameter("Export Transfer Matrix Flag", true, "Did you want to export the transfer matrix?")]

      public bool ExportTransferMatrixFlag
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Export Transfer Matrix Flag", True, "Did you want to export the transfer matrix?")>

      Public ExportTransferMatrixFlag As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Export Transfer Matrix Flag
    - type: System.Boolean
      value: true
    - type: System.String
      value: Did you want to export the transfer matrix?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportWalkAllWayMatrixFlag
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportWalkAllWayMatrixFlag
  id: ExportWalkAllWayMatrixFlag
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: ExportWalkAllWayMatrixFlag
  nameWithType: ExportOperatorTransferMatrix.ExportWalkAllWayMatrixFlag
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ExportWalkAllWayMatrixFlag
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportWalkAllWayMatrixFlag
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 41
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [RunParameter("Export walk all way matrix flag", false, "Did you want to export the walk all way matrix?")]

      public bool ExportWalkAllWayMatrixFlag
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Export walk all way matrix flag", False, "Did you want to export the walk all way matrix?")>

      Public ExportWalkAllWayMatrixFlag As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Export walk all way matrix flag
    - type: System.Boolean
      value: false
    - type: System.String
      value: Did you want to export the walk all way matrix?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.TransferMatrixFile
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.TransferMatrixFile
  id: TransferMatrixFile
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: TransferMatrixFile
  nameWithType: ExportOperatorTransferMatrix.TransferMatrixFile
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.TransferMatrixFile
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TransferMatrixFile
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 44
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [SubModelInformation(Required = false, Description = "The location to save the transfer matrix to")]

      public FileLocation TransferMatrixFile
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=False, Description:="The location to save the transfer matrix to")>

      Public TransferMatrixFile As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Description
      type: System.String
      value: The location to save the transfer matrix to
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.XTMFAggregationParition
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.XTMFAggregationParition
  id: XTMFAggregationParition
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: XTMFAggregationParition
  nameWithType: ExportOperatorTransferMatrix.XTMFAggregationParition
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.XTMFAggregationParition
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: XTMFAggregationParition
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 47
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [RunParameter("Aggregation Partition for the Walk all way matrix (None if not required)", "None", "The aggregation partition for the walk all way matrix")]

      public string XTMFAggregationParition
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Aggregation Partition for the Walk all way matrix (None if not required)", "None", "The aggregation partition for the walk all way matrix")>

      Public XTMFAggregationParition As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Aggregation Partition for the Walk all way matrix (None if not required)
    - type: System.String
      value: None
    - type: System.String
      value: The aggregation partition for the walk all way matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.WalkAllWayMatrixFile
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.WalkAllWayMatrixFile
  id: WalkAllWayMatrixFile
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: WalkAllWayMatrixFile
  nameWithType: ExportOperatorTransferMatrix.WalkAllWayMatrixFile
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.WalkAllWayMatrixFile
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkAllWayMatrixFile
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 50
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [SubModelInformation(Required = false, Description = "The location to save the walk all way matrix to")]

      public FileLocation WalkAllWayMatrixFile
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=False, Description:="The location to save the walk all way matrix to")>

      Public WalkAllWayMatrixFile As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Description
      type: System.String
      value: The location to save the walk all way matrix to
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.LineGroupOptionOrAttributeId
  commentId: F:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.LineGroupOptionOrAttributeId
  id: LineGroupOptionOrAttributeId
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: LineGroupOptionOrAttributeId
  nameWithType: ExportOperatorTransferMatrix.LineGroupOptionOrAttributeId
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.LineGroupOptionOrAttributeId
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LineGroupOptionOrAttributeId
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 54
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: >-
      [RunParameter("LineGroupOptionOrAttributeId", "", "Description")]

      public string LineGroupOptionOrAttributeId
    return:
      type: System.String
    content.vb: >-
      <RunParameter("LineGroupOptionOrAttributeId", "", "Description")>

      Public LineGroupOptionOrAttributeId As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: LineGroupOptionOrAttributeId
    - type: System.String
      value: ''
    - type: System.String
      value: Description
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute(TMG.Emme.Controller)
  id: Execute(TMG.Emme.Controller)
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: Execute(Controller)
  nameWithType: ExportOperatorTransferMatrix.Execute(Controller)
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute(TMG.Emme.Controller)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 57
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: public bool Execute(Controller controller)
    parameters:
    - id: controller
      type: TMG.Emme.Controller
    return:
      type: System.Boolean
    content.vb: Public Function Execute(controller As Controller) As Boolean
  overload: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute*
  implements:
  - TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ExportOperatorTransferMatrix.RuntimeValidation(ref String)
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/Tasha.Validation/PerformanceMeasures/ExportTransferMatrix.cs
    startLine: 81
  assemblies:
  - Tasha.Validation
  namespace: TMG.Emme.Tools.Analysis.Traffic
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ExportOperatorTransferMatrix.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Emme.Tools.Analysis.Traffic
  commentId: N:TMG.Emme.Tools.Analysis.Traffic
  isExternal: false
  name: TMG.Emme.Tools.Analysis.Traffic
  nameWithType: TMG.Emme.Tools.Analysis.Traffic
  fullName: TMG.Emme.Tools.Analysis.Traffic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.IEmmeTool
  commentId: T:TMG.Emme.IEmmeTool
  parent: TMG.Emme
  isExternal: false
  name: IEmmeTool
  nameWithType: IEmmeTool
  fullName: TMG.Emme.IEmmeTool
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme
  commentId: N:TMG.Emme
  isExternal: false
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name*
  commentId: Overload:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name
  isExternal: false
  name: Name
  nameWithType: ExportOperatorTransferMatrix.Name
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress*
  commentId: Overload:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress
  isExternal: false
  name: Progress
  nameWithType: ExportOperatorTransferMatrix.Progress
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour*
  commentId: Overload:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: ExportOperatorTransferMatrix.ProgressColour
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  isExternal: false
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute*
  commentId: Overload:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute
  isExternal: false
  name: Execute
  nameWithType: ExportOperatorTransferMatrix.Execute
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.Execute
- uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  parent: TMG.Emme.IEmmeTool
  isExternal: false
  name: Execute(Controller)
  nameWithType: IEmmeTool.Execute(Controller)
  fullName: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  spec.csharp:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  isExternal: false
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation*
  commentId: Overload:TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: ExportOperatorTransferMatrix.RuntimeValidation
  fullName: TMG.Emme.Tools.Analysis.Traffic.ExportOperatorTransferMatrix.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
