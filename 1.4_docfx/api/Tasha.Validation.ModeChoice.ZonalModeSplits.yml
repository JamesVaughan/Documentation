### YamlMime:ManagedReference
items:
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits
  commentId: T:Tasha.Validation.ModeChoice.ZonalModeSplits
  id: ZonalModeSplits
  parent: Tasha.Validation.ModeChoice
  children:
  - Tasha.Validation.ModeChoice.ZonalModeSplits.EndTime
  - Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  - Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  - Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  - Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished(System.Int32,System.Int32)
  - Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting(System.Int32,System.Int32)
  - Tasha.Validation.ModeChoice.ZonalModeSplits.MinimumAge
  - Tasha.Validation.ModeChoice.ZonalModeSplits.Name
  - Tasha.Validation.ModeChoice.ZonalModeSplits.Progress
  - Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour
  - Tasha.Validation.ModeChoice.ZonalModeSplits.Root
  - Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation(System.String@)
  - Tasha.Validation.ModeChoice.ZonalModeSplits.SaveLocation
  - Tasha.Validation.ModeChoice.ZonalModeSplits.StartTime
  langs:
  - csharp
  - vb
  name: ZonalModeSplits
  nameWithType: ZonalModeSplits
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits
  type: Class
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ZonalModeSplits
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 29
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: 'public class ZonalModeSplits : IPostHouseholdIteration, IModule'
    content.vb: >-
      Public Class ZonalModeSplits

          Implements IPostHouseholdIteration, IModule
  inheritance:
  - System.Object
  implements:
  - Tasha.Common.IPostHouseholdIteration
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.Name
  commentId: P:Tasha.Validation.ModeChoice.ZonalModeSplits.Name
  id: Name
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ZonalModeSplits.Name
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.Name
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 31
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.Progress
  commentId: P:Tasha.Validation.ModeChoice.ZonalModeSplits.Progress
  id: Progress
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ZonalModeSplits.Progress
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.Progress
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 33
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour
  commentId: P:Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour
  id: ProgressColour
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ZonalModeSplits.ProgressColour
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 41
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  commentId: M:Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  id: HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: HouseholdComplete(ITashaHousehold, Boolean)
  nameWithType: ZonalModeSplits.HouseholdComplete(ITashaHousehold, Boolean)
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete(Tasha.Common.ITashaHousehold, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdComplete
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 49
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdComplete(ITashaHousehold household, bool success)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: success
      type: System.Boolean
    content.vb: Public Sub HouseholdComplete(household As ITashaHousehold, success As Boolean)
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete*
  implements:
  - Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.StartTime
  commentId: F:Tasha.Validation.ModeChoice.ZonalModeSplits.StartTime
  id: StartTime
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: ZonalModeSplits.StartTime
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.StartTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartTime
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 55
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Start time", "6:00AM", typeof (Time), "The start time to capture (inclusive).")]

      public Time StartTime
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("Start time", "6:00AM", GetType(Time), "The start time to capture (inclusive).")>

      Public StartTime As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Start time
    - type: System.String
      value: 6:00AM
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: The start time to capture (inclusive).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.EndTime
  commentId: F:Tasha.Validation.ModeChoice.ZonalModeSplits.EndTime
  id: EndTime
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: ZonalModeSplits.EndTime
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.EndTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EndTime
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 58
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("End time", "9:00AM", typeof (Time), "The end time (exclusive) to capture.")]

      public Time EndTime
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("End time", "9:00AM", GetType(Time), "The end time (exclusive) to capture.")>

      Public EndTime As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: End time
    - type: System.String
      value: 9:00AM
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: The end time (exclusive) to capture.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.MinimumAge
  commentId: F:Tasha.Validation.ModeChoice.ZonalModeSplits.MinimumAge
  id: MinimumAge
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: MinimumAge
  nameWithType: ZonalModeSplits.MinimumAge
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.MinimumAge
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MinimumAge
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 61
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Minimum Age", 11, "The minimum age allowed for the person's trip to _Count.")]

      public int MinimumAge
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Minimum Age", 11, "The minimum age allowed for the person's trip to _Count.")>

      Public MinimumAge As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Minimum Age
    - type: System.Int32
      value: 11
    - type: System.String
      value: The minimum age allowed for the person's trip to _Count.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  id: HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  nameWithType: ZonalModeSplits.HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete(Tasha.Common.ITashaHousehold, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdIterationComplete
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 63
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdIterationComplete(ITashaHousehold household, int hhldIteration, int totalHouseholdIterations)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: hhldIteration
      type: System.Int32
    - id: totalHouseholdIterations
      type: System.Int32
    content.vb: Public Sub HouseholdIterationComplete(household As ITashaHousehold, hhldIteration As Integer, totalHouseholdIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete*
  implements:
  - Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  id: HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: HouseholdStart(ITashaHousehold, Int32)
  nameWithType: ZonalModeSplits.HouseholdStart(ITashaHousehold, Int32)
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart(Tasha.Common.ITashaHousehold, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdStart
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 110
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdStart(ITashaHousehold household, int householdIterations)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: householdIterations
      type: System.Int32
    content.vb: Public Sub HouseholdStart(household As ITashaHousehold, householdIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart*
  implements:
  - Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.SaveLocation
  commentId: F:Tasha.Validation.ModeChoice.ZonalModeSplits.SaveLocation
  id: SaveLocation
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: SaveLocation
  nameWithType: ZonalModeSplits.SaveLocation
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.SaveLocation
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveLocation
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 116
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to save the file.")]

      public FileLocation SaveLocation
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to save the file.")>

      Public SaveLocation As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to save the file.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished(System.Int32,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished(System.Int32,System.Int32)
  id: IterationFinished(System.Int32,System.Int32)
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: IterationFinished(Int32, Int32)
  nameWithType: ZonalModeSplits.IterationFinished(Int32, Int32)
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationFinished
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 118
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void IterationFinished(int iteration, int totalIterations)
    parameters:
    - id: iteration
      type: System.Int32
    - id: totalIterations
      type: System.Int32
    content.vb: Public Sub IterationFinished(iteration As Integer, totalIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished*
  implements:
  - Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.Root
  commentId: F:Tasha.Validation.ModeChoice.ZonalModeSplits.Root
  id: Root
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ZonalModeSplits.Root
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.Root
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 151
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public ITashaRuntime Root
    return:
      type: Tasha.Common.ITashaRuntime
    content.vb: Public Root As ITashaRuntime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting(System.Int32,System.Int32)
  commentId: M:Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting(System.Int32,System.Int32)
  id: IterationStarting(System.Int32,System.Int32)
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: IterationStarting(Int32, Int32)
  nameWithType: ZonalModeSplits.IterationStarting(Int32, Int32)
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationStarting
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 158
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void IterationStarting(int iteration, int totalIterations)
    parameters:
    - id: iteration
      type: System.Int32
    - id: totalIterations
      type: System.Int32
    content.vb: Public Sub IterationStarting(iteration As Integer, totalIterations As Integer)
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting*
  implements:
  - Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation(System.String@)
  commentId: M:Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: Tasha.Validation.ModeChoice.ZonalModeSplits
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ZonalModeSplits.RuntimeValidation(ref String)
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ZonalModeSplits.cs
    startLine: 184
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ZonalModeSplits.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: Tasha.Validation.ModeChoice
  commentId: N:Tasha.Validation.ModeChoice
  isExternal: false
  name: Tasha.Validation.ModeChoice
  nameWithType: Tasha.Validation.ModeChoice
  fullName: Tasha.Validation.ModeChoice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Tasha.Common.IPostHouseholdIteration
  commentId: T:Tasha.Common.IPostHouseholdIteration
  parent: Tasha.Common
  isExternal: false
  name: IPostHouseholdIteration
  nameWithType: IPostHouseholdIteration
  fullName: Tasha.Common.IPostHouseholdIteration
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Tasha.Common
  commentId: N:Tasha.Common
  isExternal: false
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.Name*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.Name
  isExternal: false
  name: Name
  nameWithType: ZonalModeSplits.Name
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.Progress*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.Progress
  isExternal: false
  name: Progress
  nameWithType: ZonalModeSplits.Progress
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: ZonalModeSplits.ProgressColour
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete
  isExternal: false
  name: HouseholdComplete
  nameWithType: ZonalModeSplits.HouseholdComplete
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdComplete
- uid: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  commentId: M:Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: HouseholdComplete(ITashaHousehold, Boolean)
  nameWithType: IPostHouseholdIteration.HouseholdComplete(ITashaHousehold, Boolean)
  fullName: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold, System.Boolean)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
    name: HouseholdComplete
    nameWithType: IPostHouseholdIteration.HouseholdComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
    name: HouseholdComplete
    nameWithType: IPostHouseholdIteration.HouseholdComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ITashaHousehold
  commentId: T:Tasha.Common.ITashaHousehold
  parent: Tasha.Common
  isExternal: false
  name: ITashaHousehold
  nameWithType: ITashaHousehold
  fullName: Tasha.Common.ITashaHousehold
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete
  isExternal: false
  name: HouseholdIterationComplete
  nameWithType: ZonalModeSplits.HouseholdIterationComplete
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdIterationComplete
- uid: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  nameWithType: IPostHouseholdIteration.HouseholdIterationComplete(ITashaHousehold, Int32, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold, System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
    name: HouseholdIterationComplete
    nameWithType: IPostHouseholdIteration.HouseholdIterationComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete(Tasha.Common.ITashaHousehold,System.Int32,System.Int32)
    name: HouseholdIterationComplete
    nameWithType: IPostHouseholdIteration.HouseholdIterationComplete
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdIterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart
  isExternal: false
  name: HouseholdStart
  nameWithType: ZonalModeSplits.HouseholdStart
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.HouseholdStart
- uid: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: HouseholdStart(ITashaHousehold, Int32)
  nameWithType: IPostHouseholdIteration.HouseholdStart(ITashaHousehold, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
    name: HouseholdStart
    nameWithType: IPostHouseholdIteration.HouseholdStart
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.HouseholdStart(Tasha.Common.ITashaHousehold,System.Int32)
    name: HouseholdStart
    nameWithType: IPostHouseholdIteration.HouseholdStart
    fullName: Tasha.Common.IPostHouseholdIteration.HouseholdStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  isExternal: false
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished
  isExternal: false
  name: IterationFinished
  nameWithType: ZonalModeSplits.IterationFinished
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationFinished
- uid: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: IterationFinished(Int32, Int32)
  nameWithType: IPostHouseholdIteration.IterationFinished(Int32, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
    name: IterationFinished
    nameWithType: IPostHouseholdIteration.IterationFinished
    fullName: Tasha.Common.IPostHouseholdIteration.IterationFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationFinished(System.Int32,System.Int32)
    name: IterationFinished
    nameWithType: IPostHouseholdIteration.IterationFinished
    fullName: Tasha.Common.IPostHouseholdIteration.IterationFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ITashaRuntime
  commentId: T:Tasha.Common.ITashaRuntime
  parent: Tasha.Common
  isExternal: false
  name: ITashaRuntime
  nameWithType: ITashaRuntime
  fullName: Tasha.Common.ITashaRuntime
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting
  isExternal: false
  name: IterationStarting
  nameWithType: ZonalModeSplits.IterationStarting
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.IterationStarting
- uid: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
  parent: Tasha.Common.IPostHouseholdIteration
  isExternal: true
  name: IterationStarting(Int32, Int32)
  nameWithType: IPostHouseholdIteration.IterationStarting(Int32, Int32)
  fullName: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
    name: IterationStarting
    nameWithType: IPostHouseholdIteration.IterationStarting
    fullName: Tasha.Common.IPostHouseholdIteration.IterationStarting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPostHouseholdIteration.IterationStarting(System.Int32,System.Int32)
    name: IterationStarting
    nameWithType: IPostHouseholdIteration.IterationStarting
    fullName: Tasha.Common.IPostHouseholdIteration.IterationStarting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation*
  commentId: Overload:Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: ZonalModeSplits.RuntimeValidation
  fullName: Tasha.Validation.ModeChoice.ZonalModeSplits.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
