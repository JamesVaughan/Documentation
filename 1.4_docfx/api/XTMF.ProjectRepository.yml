### YamlMime:ManagedReference
items:
- uid: XTMF.ProjectRepository
  commentId: T:XTMF.ProjectRepository
  id: ProjectRepository
  parent: XTMF
  children:
  - XTMF.ProjectRepository.#ctor(XTMF.IConfiguration)
  - XTMF.ProjectRepository.ActiveProject
  - XTMF.ProjectRepository.AddProject(XTMF.IProject)
  - XTMF.ProjectRepository.Configuration
  - XTMF.ProjectRepository.GetEnumerator
  - XTMF.ProjectRepository.ProjectAdded
  - XTMF.ProjectRepository.ProjectRemoved
  - XTMF.ProjectRepository.Projects
  - XTMF.ProjectRepository.Remove(XTMF.IProject)
  - XTMF.ProjectRepository.RenameProject(XTMF.IProject,System.String)
  - XTMF.ProjectRepository.RenameProject(XTMF.IProject,System.String,System.String@)
  - XTMF.ProjectRepository.SetActiveProject(XTMF.IProject)
  - XTMF.ProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  - XTMF.ProjectRepository.System#Collections#IEnumerable#GetEnumerator
  - XTMF.ProjectRepository.ValidateProjectName(System.String)
  langs:
  - csharp
  - vb
  name: ProjectRepository
  nameWithType: ProjectRepository
  fullName: XTMF.ProjectRepository
  type: Class
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectRepository
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 33
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis class provides access to all of the\nprojects currently being managed by this\ninstallation of XTMF\n"
  example: []
  syntax:
    content: 'public class ProjectRepository : IProjectRepository, IEnumerable<IProject>, IEnumerable'
    content.vb: >-
      Public Class ProjectRepository
          Implements IProjectRepository, IEnumerable(Of IProject), IEnumerable
  inheritance:
  - System.Object
  implements:
  - XTMF.IProjectRepository
  - System.Collections.Generic.IEnumerable{XTMF.IProject}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ProjectRepository.#ctor(XTMF.IConfiguration)
  commentId: M:XTMF.ProjectRepository.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: ProjectRepository(IConfiguration)
  nameWithType: ProjectRepository.ProjectRepository(IConfiguration)
  fullName: XTMF.ProjectRepository.ProjectRepository(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 38
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nInitiate the project repository\n"
  example: []
  syntax:
    content: public ProjectRepository(IConfiguration configuration)
    parameters:
    - id: configuration
      type: XTMF.IConfiguration
    content.vb: Public Sub New(configuration As IConfiguration)
  overload: XTMF.ProjectRepository.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.Configuration
  commentId: P:XTMF.ProjectRepository.Configuration
  id: Configuration
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ProjectRepository.Configuration
  fullName: XTMF.ProjectRepository.Configuration
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Configuration
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 45
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IConfiguration Configuration { get; }
    parameters: []
    return:
      type: XTMF.IConfiguration
    content.vb: Public ReadOnly Property Configuration As IConfiguration
  overload: XTMF.ProjectRepository.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectRepository.ActiveProject
  commentId: P:XTMF.ProjectRepository.ActiveProject
  id: ActiveProject
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: ActiveProject
  nameWithType: ProjectRepository.ActiveProject
  fullName: XTMF.ProjectRepository.ActiveProject
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ActiveProject
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 51
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe project that this repository is currently working with\nin order to run XTMF\n"
  example: []
  syntax:
    content: public IProject ActiveProject { get; }
    parameters: []
    return:
      type: XTMF.IProject
    content.vb: Public ReadOnly Property ActiveProject As IProject
  overload: XTMF.ProjectRepository.ActiveProject*
  implements:
  - XTMF.IProjectRepository.ActiveProject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectRepository.Projects
  commentId: P:XTMF.ProjectRepository.Projects
  id: Projects
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: ProjectRepository.Projects
  fullName: XTMF.ProjectRepository.Projects
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Projects
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 56
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nA List of projects that are currently being managed\n"
  example: []
  syntax:
    content: public IList<IProject> Projects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{XTMF.IProject}
    content.vb: Public ReadOnly Property Projects As IList(Of IProject)
  overload: XTMF.ProjectRepository.Projects*
  implements:
  - XTMF.IProjectRepository.Projects
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectRepository.AddProject(XTMF.IProject)
  commentId: M:XTMF.ProjectRepository.AddProject(XTMF.IProject)
  id: AddProject(XTMF.IProject)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: AddProject(IProject)
  nameWithType: ProjectRepository.AddProject(IProject)
  fullName: XTMF.ProjectRepository.AddProject(XTMF.IProject)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddProject
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 58
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool AddProject(IProject project)
    parameters:
    - id: project
      type: XTMF.IProject
    return:
      type: System.Boolean
    content.vb: Public Function AddProject(project As IProject) As Boolean
  overload: XTMF.ProjectRepository.AddProject*
  implements:
  - XTMF.IProjectRepository.AddProject(XTMF.IProject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.GetEnumerator
  commentId: M:XTMF.ProjectRepository.GetEnumerator
  id: GetEnumerator
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ProjectRepository.GetEnumerator()
  fullName: XTMF.ProjectRepository.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetEnumerator
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 75
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IEnumerator<IProject> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{XTMF.IProject}
    content.vb: Public Function GetEnumerator As IEnumerator(Of IProject)
  overload: XTMF.ProjectRepository.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{XTMF.IProject}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.Remove(XTMF.IProject)
  commentId: M:XTMF.ProjectRepository.Remove(XTMF.IProject)
  id: Remove(XTMF.IProject)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: Remove(IProject)
  nameWithType: ProjectRepository.Remove(IProject)
  fullName: XTMF.ProjectRepository.Remove(XTMF.IProject)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Remove
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 80
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool Remove(IProject project)
    parameters:
    - id: project
      type: XTMF.IProject
    return:
      type: System.Boolean
    content.vb: Public Function Remove(project As IProject) As Boolean
  overload: XTMF.ProjectRepository.Remove*
  implements:
  - XTMF.IProjectRepository.Remove(XTMF.IProject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.RenameProject(XTMF.IProject,System.String)
  commentId: M:XTMF.ProjectRepository.RenameProject(XTMF.IProject,System.String)
  id: RenameProject(XTMF.IProject,System.String)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: RenameProject(IProject, String)
  nameWithType: ProjectRepository.RenameProject(IProject, String)
  fullName: XTMF.ProjectRepository.RenameProject(XTMF.IProject, System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RenameProject
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 117
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool RenameProject(IProject project, string newName)
    parameters:
    - id: project
      type: XTMF.IProject
    - id: newName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RenameProject(project As IProject, newName As String) As Boolean
  overload: XTMF.ProjectRepository.RenameProject*
  implements:
  - XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  commentId: M:XTMF.ProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  id: SetDescription(XTMF.IProject,System.String,System.String@)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: SetDescription(IProject, String, ref String)
  nameWithType: ProjectRepository.SetDescription(IProject, String, ref String)
  fullName: XTMF.ProjectRepository.SetDescription(XTMF.IProject, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetDescription
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 123
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SetDescription(IProject project, string newDescription, ref string error)
    parameters:
    - id: project
      type: XTMF.IProject
    - id: newDescription
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SetDescription(project As IProject, newDescription As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectRepository.SetDescription*
  implements:
  - XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  nameWithType.vb: ProjectRepository.SetDescription(IProject, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectRepository.SetDescription(XTMF.IProject, System.String, ByRef System.String)
  name.vb: SetDescription(IProject, String, ByRef String)
- uid: XTMF.ProjectRepository.System#Collections#IEnumerable#GetEnumerator
  commentId: M:XTMF.ProjectRepository.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ProjectRepository.IEnumerable.GetEnumerator()
  fullName: XTMF.ProjectRepository.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 134
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: XTMF.ProjectRepository.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ProjectRepository.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: XTMF.ProjectRepository.ValidateProjectName(System.String)
  commentId: M:XTMF.ProjectRepository.ValidateProjectName(System.String)
  id: ValidateProjectName(System.String)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: ValidateProjectName(String)
  nameWithType: ProjectRepository.ValidateProjectName(String)
  fullName: XTMF.ProjectRepository.ValidateProjectName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateProjectName
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 139
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool ValidateProjectName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ValidateProjectName(name As String) As Boolean
  overload: XTMF.ProjectRepository.ValidateProjectName*
  implements:
  - XTMF.IProjectRepository.ValidateProjectName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.ProjectAdded
  commentId: E:XTMF.ProjectRepository.ProjectAdded
  id: ProjectAdded
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: ProjectAdded
  nameWithType: ProjectRepository.ProjectAdded
  fullName: XTMF.ProjectRepository.ProjectAdded
  type: Event
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectAdded
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 155
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event Action<IProject> ProjectAdded
    return:
      type: System.Action{XTMF.IProject}
    content.vb: Public Event ProjectAdded As Action(Of IProject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.ProjectRemoved
  commentId: E:XTMF.ProjectRepository.ProjectRemoved
  id: ProjectRemoved
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: ProjectRemoved
  nameWithType: ProjectRepository.ProjectRemoved
  fullName: XTMF.ProjectRepository.ProjectRemoved
  type: Event
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectRemoved
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 157
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event Action<IProject, int> ProjectRemoved
    return:
      type: System.Action{XTMF.IProject,System.Int32}
    content.vb: Public Event ProjectRemoved As Action(Of IProject, Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectRepository.RenameProject(XTMF.IProject,System.String,System.String@)
  commentId: M:XTMF.ProjectRepository.RenameProject(XTMF.IProject,System.String,System.String@)
  id: RenameProject(XTMF.IProject,System.String,System.String@)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: RenameProject(IProject, String, ref String)
  nameWithType: ProjectRepository.RenameProject(IProject, String, ref String)
  fullName: XTMF.ProjectRepository.RenameProject(XTMF.IProject, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RenameProject
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 176
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool RenameProject(IProject project, string newName, ref string error)
    parameters:
    - id: project
      type: XTMF.IProject
    - id: newName
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RenameProject(project As IProject, newName As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectRepository.RenameProject*
  nameWithType.vb: ProjectRepository.RenameProject(IProject, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectRepository.RenameProject(XTMF.IProject, System.String, ByRef System.String)
  name.vb: RenameProject(IProject, String, ByRef String)
- uid: XTMF.ProjectRepository.SetActiveProject(XTMF.IProject)
  commentId: M:XTMF.ProjectRepository.SetActiveProject(XTMF.IProject)
  id: SetActiveProject(XTMF.IProject)
  parent: XTMF.ProjectRepository
  langs:
  - csharp
  - vb
  name: SetActiveProject(IProject)
  nameWithType: ProjectRepository.SetActiveProject(IProject)
  fullName: XTMF.ProjectRepository.SetActiveProject(XTMF.IProject)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetActiveProject
    path: ../../XTMF/Code/XTMF1.1/ProjectRepository.cs
    startLine: 215
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nSet the given project to be the active one\n"
  example: []
  syntax:
    content: public void SetActiveProject(IProject project)
    parameters:
    - id: project
      type: XTMF.IProject
      description: The project to become the active one
    content.vb: Public Sub SetActiveProject(project As IProject)
  overload: XTMF.ProjectRepository.SetActiveProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IProjectRepository
  commentId: T:XTMF.IProjectRepository
  parent: XTMF
  isExternal: false
  name: IProjectRepository
  nameWithType: IProjectRepository
  fullName: XTMF.IProjectRepository
- uid: System.Collections.Generic.IEnumerable{XTMF.IProject}
  commentId: T:System.Collections.Generic.IEnumerable{XTMF.IProject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IProject>
  nameWithType: IEnumerable<IProject>
  fullName: System.Collections.Generic.IEnumerable<XTMF.IProject>
  nameWithType.vb: IEnumerable(Of IProject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IProject)
  name.vb: IEnumerable(Of IProject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: XTMF.ProjectRepository.#ctor*
  commentId: Overload:XTMF.ProjectRepository.#ctor
  isExternal: false
  name: ProjectRepository
  nameWithType: ProjectRepository.ProjectRepository
  fullName: XTMF.ProjectRepository.ProjectRepository
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  isExternal: false
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: XTMF.ProjectRepository.Configuration*
  commentId: Overload:XTMF.ProjectRepository.Configuration
  isExternal: false
  name: Configuration
  nameWithType: ProjectRepository.Configuration
  fullName: XTMF.ProjectRepository.Configuration
- uid: XTMF.ProjectRepository.ActiveProject*
  commentId: Overload:XTMF.ProjectRepository.ActiveProject
  isExternal: false
  name: ActiveProject
  nameWithType: ProjectRepository.ActiveProject
  fullName: XTMF.ProjectRepository.ActiveProject
- uid: XTMF.IProjectRepository.ActiveProject
  commentId: P:XTMF.IProjectRepository.ActiveProject
  parent: XTMF.IProjectRepository
  isExternal: false
  name: ActiveProject
  nameWithType: IProjectRepository.ActiveProject
  fullName: XTMF.IProjectRepository.ActiveProject
- uid: XTMF.IProject
  commentId: T:XTMF.IProject
  parent: XTMF
  isExternal: false
  name: IProject
  nameWithType: IProject
  fullName: XTMF.IProject
- uid: XTMF.ProjectRepository.Projects*
  commentId: Overload:XTMF.ProjectRepository.Projects
  isExternal: false
  name: Projects
  nameWithType: ProjectRepository.Projects
  fullName: XTMF.ProjectRepository.Projects
- uid: XTMF.IProjectRepository.Projects
  commentId: P:XTMF.IProjectRepository.Projects
  parent: XTMF.IProjectRepository
  isExternal: false
  name: Projects
  nameWithType: IProjectRepository.Projects
  fullName: XTMF.IProjectRepository.Projects
- uid: System.Collections.Generic.IList{XTMF.IProject}
  commentId: T:System.Collections.Generic.IList{XTMF.IProject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IProject>
  nameWithType: IList<IProject>
  fullName: System.Collections.Generic.IList<XTMF.IProject>
  nameWithType.vb: IList(Of IProject)
  fullName.vb: System.Collections.Generic.IList(Of XTMF.IProject)
  name.vb: IList(Of IProject)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ProjectRepository.AddProject*
  commentId: Overload:XTMF.ProjectRepository.AddProject
  isExternal: false
  name: AddProject
  nameWithType: ProjectRepository.AddProject
  fullName: XTMF.ProjectRepository.AddProject
- uid: XTMF.IProjectRepository.AddProject(XTMF.IProject)
  commentId: M:XTMF.IProjectRepository.AddProject(XTMF.IProject)
  parent: XTMF.IProjectRepository
  isExternal: false
  name: AddProject(IProject)
  nameWithType: IProjectRepository.AddProject(IProject)
  fullName: XTMF.IProjectRepository.AddProject(XTMF.IProject)
  spec.csharp:
  - uid: XTMF.IProjectRepository.AddProject(XTMF.IProject)
    name: AddProject
    nameWithType: IProjectRepository.AddProject
    fullName: XTMF.IProjectRepository.AddProject
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProjectRepository.AddProject(XTMF.IProject)
    name: AddProject
    nameWithType: IProjectRepository.AddProject
    fullName: XTMF.IProjectRepository.AddProject
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ProjectRepository.GetEnumerator*
  commentId: Overload:XTMF.ProjectRepository.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ProjectRepository.GetEnumerator
  fullName: XTMF.ProjectRepository.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{XTMF.IProject}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{XTMF.IProject}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{XTMF.IProject}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IProject>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<XTMF.IProject>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IProject).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IProject).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IProject>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<XTMF.IProject>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IProject).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of XTMF.IProject).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{XTMF.IProject}
  commentId: T:System.Collections.Generic.IEnumerator{XTMF.IProject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<IProject>
  nameWithType: IEnumerator<IProject>
  fullName: System.Collections.Generic.IEnumerator<XTMF.IProject>
  nameWithType.vb: IEnumerator(Of IProject)
  fullName.vb: System.Collections.Generic.IEnumerator(Of XTMF.IProject)
  name.vb: IEnumerator(Of IProject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ProjectRepository.Remove*
  commentId: Overload:XTMF.ProjectRepository.Remove
  isExternal: false
  name: Remove
  nameWithType: ProjectRepository.Remove
  fullName: XTMF.ProjectRepository.Remove
- uid: XTMF.IProjectRepository.Remove(XTMF.IProject)
  commentId: M:XTMF.IProjectRepository.Remove(XTMF.IProject)
  parent: XTMF.IProjectRepository
  isExternal: false
  name: Remove(IProject)
  nameWithType: IProjectRepository.Remove(IProject)
  fullName: XTMF.IProjectRepository.Remove(XTMF.IProject)
  spec.csharp:
  - uid: XTMF.IProjectRepository.Remove(XTMF.IProject)
    name: Remove
    nameWithType: IProjectRepository.Remove
    fullName: XTMF.IProjectRepository.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProjectRepository.Remove(XTMF.IProject)
    name: Remove
    nameWithType: IProjectRepository.Remove
    fullName: XTMF.IProjectRepository.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ProjectRepository.RenameProject*
  commentId: Overload:XTMF.ProjectRepository.RenameProject
  isExternal: false
  name: RenameProject
  nameWithType: ProjectRepository.RenameProject
  fullName: XTMF.ProjectRepository.RenameProject
- uid: XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
  commentId: M:XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
  parent: XTMF.IProjectRepository
  isExternal: true
  name: RenameProject(IProject, String)
  nameWithType: IProjectRepository.RenameProject(IProject, String)
  fullName: XTMF.IProjectRepository.RenameProject(XTMF.IProject, System.String)
  spec.csharp:
  - uid: XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
    name: RenameProject
    nameWithType: IProjectRepository.RenameProject
    fullName: XTMF.IProjectRepository.RenameProject
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
    name: RenameProject
    nameWithType: IProjectRepository.RenameProject
    fullName: XTMF.IProjectRepository.RenameProject
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ProjectRepository.SetDescription*
  commentId: Overload:XTMF.ProjectRepository.SetDescription
  isExternal: false
  name: SetDescription
  nameWithType: ProjectRepository.SetDescription
  fullName: XTMF.ProjectRepository.SetDescription
- uid: XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  commentId: M:XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  parent: XTMF.IProjectRepository
  isExternal: true
  name: SetDescription(IProject, String, String)
  nameWithType: IProjectRepository.SetDescription(IProject, String, String)
  fullName: XTMF.IProjectRepository.SetDescription(XTMF.IProject, System.String, System.String)
  spec.csharp:
  - uid: XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
    name: SetDescription
    nameWithType: IProjectRepository.SetDescription
    fullName: XTMF.IProjectRepository.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
    name: SetDescription
    nameWithType: IProjectRepository.SetDescription
    fullName: XTMF.IProjectRepository.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ProjectRepository.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:XTMF.ProjectRepository.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: ProjectRepository.IEnumerable.GetEnumerator
  fullName: XTMF.ProjectRepository.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ProjectRepository.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: XTMF.ProjectRepository.ValidateProjectName*
  commentId: Overload:XTMF.ProjectRepository.ValidateProjectName
  isExternal: false
  name: ValidateProjectName
  nameWithType: ProjectRepository.ValidateProjectName
  fullName: XTMF.ProjectRepository.ValidateProjectName
- uid: XTMF.IProjectRepository.ValidateProjectName(System.String)
  commentId: M:XTMF.IProjectRepository.ValidateProjectName(System.String)
  parent: XTMF.IProjectRepository
  isExternal: true
  name: ValidateProjectName(String)
  nameWithType: IProjectRepository.ValidateProjectName(String)
  fullName: XTMF.IProjectRepository.ValidateProjectName(System.String)
  spec.csharp:
  - uid: XTMF.IProjectRepository.ValidateProjectName(System.String)
    name: ValidateProjectName
    nameWithType: IProjectRepository.ValidateProjectName
    fullName: XTMF.IProjectRepository.ValidateProjectName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProjectRepository.ValidateProjectName(System.String)
    name: ValidateProjectName
    nameWithType: IProjectRepository.ValidateProjectName
    fullName: XTMF.IProjectRepository.ValidateProjectName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{XTMF.IProject}
  commentId: T:System.Action{XTMF.IProject}
  parent: System
  definition: System.Action`1
  name: Action<IProject>
  nameWithType: Action<IProject>
  fullName: System.Action<XTMF.IProject>
  nameWithType.vb: Action(Of IProject)
  fullName.vb: System.Action(Of XTMF.IProject)
  name.vb: Action(Of IProject)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{XTMF.IProject,System.Int32}
  commentId: T:System.Action{XTMF.IProject,System.Int32}
  parent: System
  definition: System.Action`2
  name: Action<IProject, Int32>
  nameWithType: Action<IProject, Int32>
  fullName: System.Action<XTMF.IProject, System.Int32>
  nameWithType.vb: Action(Of IProject, Int32)
  fullName.vb: System.Action(Of XTMF.IProject, System.Int32)
  name.vb: Action(Of IProject, Int32)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ProjectRepository.SetActiveProject*
  commentId: Overload:XTMF.ProjectRepository.SetActiveProject
  isExternal: false
  name: SetActiveProject
  nameWithType: ProjectRepository.SetActiveProject
  fullName: XTMF.ProjectRepository.SetActiveProject
