### YamlMime:ManagedReference
items:
- uid: XTMF.IModelSystemRepository
  commentId: T:XTMF.IModelSystemRepository
  id: IModelSystemRepository
  parent: XTMF
  children:
  - XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  - XTMF.IModelSystemRepository.ModelSystems
  - XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  langs:
  - csharp
  - vb
  name: IModelSystemRepository
  nameWithType: IModelSystemRepository
  fullName: XTMF.IModelSystemRepository
  type: Interface
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IModelSystemRepository
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
    startLine: 22
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: 'public interface IModelSystemRepository : IEnumerable<IModelSystem>, IEnumerable'
    content.vb: >-
      Public Interface IModelSystemRepository
          Inherits IEnumerable(Of IModelSystem)
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{XTMF.IModelSystem}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: XTMF.IModelSystemRepository.ModelSystems
  commentId: P:XTMF.IModelSystemRepository.ModelSystems
  id: ModelSystems
  parent: XTMF.IModelSystemRepository
  langs:
  - csharp
  - vb
  name: ModelSystems
  nameWithType: IModelSystemRepository.ModelSystems
  fullName: XTMF.IModelSystemRepository.ModelSystems
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystems
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
    startLine: 28
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe model systems currently loaded in this\ninstallation of XTMF\n"
  example: []
  syntax:
    content: IList<IModelSystem> ModelSystems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{XTMF.IModelSystem}
    content.vb: ReadOnly Property ModelSystems As IList(Of IModelSystem)
  overload: XTMF.IModelSystemRepository.ModelSystems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  commentId: M:XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  id: Add(XTMF.IModelSystem)
  parent: XTMF.IModelSystemRepository
  langs:
  - csharp
  - vb
  name: Add(IModelSystem)
  nameWithType: IModelSystemRepository.Add(IModelSystem)
  fullName: XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
    startLine: 34
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nadd a new type of model system to the model system repository\n"
  example: []
  syntax:
    content: void Add(IModelSystem modelSystem)
    parameters:
    - id: modelSystem
      type: XTMF.IModelSystem
      description: The type that implements IModelSystem
    content.vb: Sub Add(modelSystem As IModelSystem)
  overload: XTMF.IModelSystemRepository.Add*
- uid: XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  commentId: M:XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  id: Remove(XTMF.IModelSystem)
  parent: XTMF.IModelSystemRepository
  langs:
  - csharp
  - vb
  name: Remove(IModelSystem)
  nameWithType: IModelSystemRepository.Remove(IModelSystem)
  fullName: XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Remove
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IModelSystemRepository.cs
    startLine: 41
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nRemove the model system from the model system repository\n"
  example: []
  syntax:
    content: bool Remove(IModelSystem modelSystem)
    parameters:
    - id: modelSystem
      type: XTMF.IModelSystem
      description: The model system to remove
    return:
      type: System.Boolean
      description: True if a model system was removed, false if it was not (or doe snot exist)
    content.vb: Function Remove(modelSystem As IModelSystem) As Boolean
  overload: XTMF.IModelSystemRepository.Remove*
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Collections.Generic.IEnumerable{XTMF.IModelSystem}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{XTMF.IModelSystem}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IModelSystem>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<XTMF.IModelSystem>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IModelSystem).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IModelSystem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IModelSystem>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<XTMF.IModelSystem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IModelSystem).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of XTMF.IModelSystem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  commentId: T:System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IModelSystem>
  nameWithType: IEnumerable<IModelSystem>
  fullName: System.Collections.Generic.IEnumerable<XTMF.IModelSystem>
  nameWithType.vb: IEnumerable(Of IModelSystem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IModelSystem)
  name.vb: IEnumerable(Of IModelSystem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.IModelSystemRepository.ModelSystems*
  commentId: Overload:XTMF.IModelSystemRepository.ModelSystems
  isExternal: false
  name: ModelSystems
  nameWithType: IModelSystemRepository.ModelSystems
  fullName: XTMF.IModelSystemRepository.ModelSystems
- uid: System.Collections.Generic.IList{XTMF.IModelSystem}
  commentId: T:System.Collections.Generic.IList{XTMF.IModelSystem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IModelSystem>
  nameWithType: IList<IModelSystem>
  fullName: System.Collections.Generic.IList<XTMF.IModelSystem>
  nameWithType.vb: IList(Of IModelSystem)
  fullName.vb: System.Collections.Generic.IList(Of XTMF.IModelSystem)
  name.vb: IList(Of IModelSystem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModelSystemRepository.Add*
  commentId: Overload:XTMF.IModelSystemRepository.Add
  isExternal: false
  name: Add
  nameWithType: IModelSystemRepository.Add
  fullName: XTMF.IModelSystemRepository.Add
- uid: XTMF.IModelSystem
  commentId: T:XTMF.IModelSystem
  parent: XTMF
  isExternal: false
  name: IModelSystem
  nameWithType: IModelSystem
  fullName: XTMF.IModelSystem
- uid: XTMF.IModelSystemRepository.Remove*
  commentId: Overload:XTMF.IModelSystemRepository.Remove
  isExternal: false
  name: Remove
  nameWithType: IModelSystemRepository.Remove
  fullName: XTMF.IModelSystemRepository.Remove
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
