### YamlMime:ManagedReference
items:
- uid: XTMF.Gui.UserControls.InterTabClient
  commentId: T:XTMF.Gui.UserControls.InterTabClient
  id: InterTabClient
  parent: XTMF.Gui.UserControls
  children:
  - XTMF.Gui.UserControls.InterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  - XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  langs:
  - csharp
  - vb
  name: InterTabClient
  nameWithType: InterTabClient
  fullName: XTMF.Gui.UserControls.InterTabClient
  type: Class
  source:
    remote:
      path: Code/XTMF.Gui.1.1/UserControls/InterTabClient.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InterTabClient
    path: ../../../XTMF/Code/XTMF.Gui.1.1/UserControls/InterTabClient.cs
    startLine: 5
  assemblies:
  - XTMF.Gui
  namespace: XTMF.Gui.UserControls
  syntax:
    content: 'public class InterTabClient : IInterTabClient'
    content.vb: >-
      Public Class InterTabClient
          Implements IInterTabClient
  inheritance:
  - System.Object
  implements:
  - Dragablz.IInterTabClient
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.Gui.UserControls.InterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  commentId: M:XTMF.Gui.UserControls.InterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  id: GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  parent: XTMF.Gui.UserControls.InterTabClient
  langs:
  - csharp
  - vb
  name: GetNewHost(IInterTabClient, Object, TabablzControl)
  nameWithType: InterTabClient.GetNewHost(IInterTabClient, Object, TabablzControl)
  fullName: XTMF.Gui.UserControls.InterTabClient.GetNewHost(Dragablz.IInterTabClient, System.Object, Dragablz.TabablzControl)
  type: Method
  source:
    remote:
      path: Code/XTMF.Gui.1.1/UserControls/InterTabClient.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetNewHost
    path: ../../../XTMF/Code/XTMF.Gui.1.1/UserControls/InterTabClient.cs
    startLine: 7
  assemblies:
  - XTMF.Gui
  namespace: XTMF.Gui.UserControls
  syntax:
    content: public INewTabHost<Window> GetNewHost(IInterTabClient interTabClient, object partition, TabablzControl source)
    parameters:
    - id: interTabClient
      type: Dragablz.IInterTabClient
    - id: partition
      type: System.Object
    - id: source
      type: Dragablz.TabablzControl
    return:
      type: Dragablz.INewTabHost{System.Windows.Window}
    content.vb: Public Function GetNewHost(interTabClient As IInterTabClient, partition As Object, source As TabablzControl) As INewTabHost(Of Window)
  overload: XTMF.Gui.UserControls.InterTabClient.GetNewHost*
  implements:
  - Dragablz.IInterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  commentId: M:XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  id: TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  parent: XTMF.Gui.UserControls.InterTabClient
  langs:
  - csharp
  - vb
  name: TabEmptiedHandler(TabablzControl, Window)
  nameWithType: InterTabClient.TabEmptiedHandler(TabablzControl, Window)
  fullName: XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler(Dragablz.TabablzControl, System.Windows.Window)
  type: Method
  source:
    remote:
      path: Code/XTMF.Gui.1.1/UserControls/InterTabClient.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TabEmptiedHandler
    path: ../../../XTMF/Code/XTMF.Gui.1.1/UserControls/InterTabClient.cs
    startLine: 13
  assemblies:
  - XTMF.Gui
  namespace: XTMF.Gui.UserControls
  syntax:
    content: public TabEmptiedResponse TabEmptiedHandler(TabablzControl tabControl, Window window)
    parameters:
    - id: tabControl
      type: Dragablz.TabablzControl
    - id: window
      type: System.Windows.Window
    return:
      type: Dragablz.TabEmptiedResponse
    content.vb: Public Function TabEmptiedHandler(tabControl As TabablzControl, window As Window) As TabEmptiedResponse
  overload: XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler*
  implements:
  - Dragablz.IInterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF.Gui.UserControls
  commentId: N:XTMF.Gui.UserControls
  isExternal: false
  name: XTMF.Gui.UserControls
  nameWithType: XTMF.Gui.UserControls
  fullName: XTMF.Gui.UserControls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dragablz.IInterTabClient
  commentId: T:Dragablz.IInterTabClient
  parent: Dragablz
  isExternal: true
  name: IInterTabClient
  nameWithType: IInterTabClient
  fullName: Dragablz.IInterTabClient
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Dragablz
  commentId: N:Dragablz
  isExternal: false
  name: Dragablz
  nameWithType: Dragablz
  fullName: Dragablz
- uid: XTMF.Gui.UserControls.InterTabClient.GetNewHost*
  commentId: Overload:XTMF.Gui.UserControls.InterTabClient.GetNewHost
  isExternal: false
  name: GetNewHost
  nameWithType: InterTabClient.GetNewHost
  fullName: XTMF.Gui.UserControls.InterTabClient.GetNewHost
- uid: Dragablz.IInterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  commentId: M:Dragablz.IInterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
  parent: Dragablz.IInterTabClient
  isExternal: true
  name: GetNewHost(IInterTabClient, Object, TabablzControl)
  nameWithType: IInterTabClient.GetNewHost(IInterTabClient, Object, TabablzControl)
  fullName: Dragablz.IInterTabClient.GetNewHost(Dragablz.IInterTabClient, System.Object, Dragablz.TabablzControl)
  spec.csharp:
  - uid: Dragablz.IInterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
    name: GetNewHost
    nameWithType: IInterTabClient.GetNewHost
    fullName: Dragablz.IInterTabClient.GetNewHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dragablz.IInterTabClient
    name: IInterTabClient
    nameWithType: IInterTabClient
    fullName: Dragablz.IInterTabClient
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dragablz.TabablzControl
    name: TabablzControl
    nameWithType: TabablzControl
    fullName: Dragablz.TabablzControl
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dragablz.IInterTabClient.GetNewHost(Dragablz.IInterTabClient,System.Object,Dragablz.TabablzControl)
    name: GetNewHost
    nameWithType: IInterTabClient.GetNewHost
    fullName: Dragablz.IInterTabClient.GetNewHost
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dragablz.IInterTabClient
    name: IInterTabClient
    nameWithType: IInterTabClient
    fullName: Dragablz.IInterTabClient
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dragablz.TabablzControl
    name: TabablzControl
    nameWithType: TabablzControl
    fullName: Dragablz.TabablzControl
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dragablz.TabablzControl
  commentId: T:Dragablz.TabablzControl
  parent: Dragablz
  isExternal: true
  name: TabablzControl
  nameWithType: TabablzControl
  fullName: Dragablz.TabablzControl
- uid: Dragablz.INewTabHost{System.Windows.Window}
  commentId: T:Dragablz.INewTabHost{System.Windows.Window}
  parent: Dragablz
  definition: Dragablz.INewTabHost`1
  name: INewTabHost<Window>
  nameWithType: INewTabHost<Window>
  fullName: Dragablz.INewTabHost<System.Windows.Window>
  nameWithType.vb: INewTabHost(Of Window)
  fullName.vb: Dragablz.INewTabHost(Of System.Windows.Window)
  name.vb: INewTabHost(Of Window)
  spec.csharp:
  - uid: Dragablz.INewTabHost`1
    name: INewTabHost
    nameWithType: INewTabHost
    fullName: Dragablz.INewTabHost
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dragablz.INewTabHost`1
    name: INewTabHost
    nameWithType: INewTabHost
    fullName: Dragablz.INewTabHost
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dragablz.INewTabHost`1
  commentId: T:Dragablz.INewTabHost`1
  isExternal: true
  name: INewTabHost<TElement>
  nameWithType: INewTabHost<TElement>
  fullName: Dragablz.INewTabHost<TElement>
  nameWithType.vb: INewTabHost(Of TElement)
  fullName.vb: Dragablz.INewTabHost(Of TElement)
  name.vb: INewTabHost(Of TElement)
  spec.csharp:
  - uid: Dragablz.INewTabHost`1
    name: INewTabHost
    nameWithType: INewTabHost
    fullName: Dragablz.INewTabHost
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dragablz.INewTabHost`1
    name: INewTabHost
    nameWithType: INewTabHost
    fullName: Dragablz.INewTabHost
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler*
  commentId: Overload:XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler
  isExternal: false
  name: TabEmptiedHandler
  nameWithType: InterTabClient.TabEmptiedHandler
  fullName: XTMF.Gui.UserControls.InterTabClient.TabEmptiedHandler
- uid: Dragablz.IInterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  commentId: M:Dragablz.IInterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
  parent: Dragablz.IInterTabClient
  isExternal: true
  name: TabEmptiedHandler(TabablzControl, Window)
  nameWithType: IInterTabClient.TabEmptiedHandler(TabablzControl, Window)
  fullName: Dragablz.IInterTabClient.TabEmptiedHandler(Dragablz.TabablzControl, System.Windows.Window)
  spec.csharp:
  - uid: Dragablz.IInterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
    name: TabEmptiedHandler
    nameWithType: IInterTabClient.TabEmptiedHandler
    fullName: Dragablz.IInterTabClient.TabEmptiedHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dragablz.TabablzControl
    name: TabablzControl
    nameWithType: TabablzControl
    fullName: Dragablz.TabablzControl
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dragablz.IInterTabClient.TabEmptiedHandler(Dragablz.TabablzControl,System.Windows.Window)
    name: TabEmptiedHandler
    nameWithType: IInterTabClient.TabEmptiedHandler
    fullName: Dragablz.IInterTabClient.TabEmptiedHandler
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Dragablz.TabablzControl
    name: TabablzControl
    nameWithType: TabablzControl
    fullName: Dragablz.TabablzControl
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Window
  commentId: T:System.Windows.Window
  parent: System.Windows
  isExternal: true
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: Dragablz.TabEmptiedResponse
  commentId: T:Dragablz.TabEmptiedResponse
  parent: Dragablz
  isExternal: true
  name: TabEmptiedResponse
  nameWithType: TabEmptiedResponse
  fullName: Dragablz.TabEmptiedResponse
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: false
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
