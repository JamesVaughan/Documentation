### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose
  commentId: T:TMG.GTAModel.Purpose.PoRPoWPurpose
  id: PoRPoWPurpose
  parent: TMG.GTAModel.Purpose
  children:
  - TMG.GTAModel.Purpose.PoRPoWPurpose.Categories
  - TMG.GTAModel.Purpose.PoRPoWPurpose.Distribution
  - TMG.GTAModel.Purpose.PoRPoWPurpose.Execute
  - TMG.GTAModel.Purpose.PoRPoWPurpose.OnlyDoGeneration
  - TMG.GTAModel.Purpose.PoRPoWPurpose.Progress
  - TMG.GTAModel.Purpose.PoRPoWPurpose.Run
  - TMG.GTAModel.Purpose.PoRPoWPurpose.SaveResultFileName
  - TMG.GTAModel.Purpose.PoRPoWPurpose.Start
  langs:
  - csharp
  - vb
  name: PoRPoWPurpose
  nameWithType: PoRPoWPurpose
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose
  type: Class
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PoRPoWPurpose
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 30
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: 'public class PoRPoWPurpose : PurposeBase, IDemographicCategoyPurpose, IPurpose, ISelfContainedModule, IModule'
    content.vb: >-
      Public Class PoRPoWPurpose

          Inherits PurposeBase

          Implements IDemographicCategoyPurpose, IPurpose, ISelfContainedModule, IModule
  inheritance:
  - System.Object
  - TMG.GTAModel.PurposeBase
  implements:
  - TMG.IDemographicCategoyPurpose
  - TMG.IPurpose
  - XTMF.ISelfContainedModule
  - XTMF.IModule
  inheritedMembers:
  - TMG.GTAModel.PurposeBase.Root
  - TMG.GTAModel.PurposeBase.CachesFlows
  - TMG.GTAModel.PurposeBase.Flows
  - TMG.GTAModel.PurposeBase.ModeSplit
  - TMG.GTAModel.PurposeBase.Name
  - TMG.GTAModel.PurposeBase.ProgressColour
  - TMG.GTAModel.PurposeBase.PurposeName
  - TMG.GTAModel.PurposeBase.ResultCacheFile
  - TMG.GTAModel.PurposeBase.RuntimeValidation(System.String@)
  - TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData{System.Single[][]},TMG.IModeChoiceNode,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Distribution
  commentId: F:TMG.GTAModel.Purpose.PoRPoWPurpose.Distribution
  id: Distribution
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: Distribution
  nameWithType: PoRPoWPurpose.Distribution
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Distribution
  type: Field
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Distribution
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: >-
      [SubModelInformation(Description = "Distribution", Required = true)]

      public IDemographicDistribution Distribution
    return:
      type: TMG.IDemographicDistribution
    content.vb: >-
      <SubModelInformation(Description:="Distribution", Required:=True)>

      Public Distribution As IDemographicDistribution
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: Distribution
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Execute
  commentId: F:TMG.GTAModel.Purpose.PoRPoWPurpose.Execute
  id: Execute
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: Execute
  nameWithType: PoRPoWPurpose.Execute
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Execute
  type: Field
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 36
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: >-
      [RunParameter("Execute", true, "Should we execute this purpose?  Set to false if you are going to just use a cache.")]

      public bool Execute
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Execute", True, "Should we execute this purpose?  Set to false if you are going to just use a cache.")>

      Public Execute As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Execute
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should we execute this purpose?  Set to false if you are going to just use a cache.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.OnlyDoGeneration
  commentId: F:TMG.GTAModel.Purpose.PoRPoWPurpose.OnlyDoGeneration
  id: OnlyDoGeneration
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: OnlyDoGeneration
  nameWithType: PoRPoWPurpose.OnlyDoGeneration
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.OnlyDoGeneration
  type: Field
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OnlyDoGeneration
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 39
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: >-
      [RunParameter("Only Do Generation", false, "For testing the output of generation set this to true to skip running distribution.")]

      public bool OnlyDoGeneration
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Only Do Generation", False, "For testing the output of generation set this to true to skip running distribution.")>

      Public OnlyDoGeneration As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Only Do Generation
    - type: System.Boolean
      value: false
    - type: System.String
      value: For testing the output of generation set this to true to skip running distribution.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.SaveResultFileName
  commentId: F:TMG.GTAModel.Purpose.PoRPoWPurpose.SaveResultFileName
  id: SaveResultFileName
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: SaveResultFileName
  nameWithType: PoRPoWPurpose.SaveResultFileName
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.SaveResultFileName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveResultFileName
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 42
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: >-
      [RunParameter("Save Result File Name", "", "The start of the name of the file (First Default = FrictionCache1.bin). If this is empty nothing will be saved.")]

      public string SaveResultFileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Save Result File Name", "", "The start of the name of the file (First Default = FrictionCache1.bin). If this is empty nothing will be saved.")>

      Public SaveResultFileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Save Result File Name
    - type: System.String
      value: ''
    - type: System.String
      value: The start of the name of the file (First Default = FrictionCache1.bin). If this is empty nothing will be saved.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Categories
  commentId: P:TMG.GTAModel.Purpose.PoRPoWPurpose.Categories
  id: Categories
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: PoRPoWPurpose.Categories
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Categories
  type: Property
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Categories
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 48
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: >-
      [SubModelInformation(Description = "Generation", Required = false)]

      public List<IDemographicCategoryGeneration> Categories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TMG.IDemographicCategoryGeneration}
    content.vb: >-
      <SubModelInformation(Description:="Generation", Required:=False)>

      Public Property Categories As List(Of IDemographicCategoryGeneration)
  overload: TMG.GTAModel.Purpose.PoRPoWPurpose.Categories*
  implements:
  - TMG.IDemographicCategoyPurpose.Categories
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: Generation
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Progress
  commentId: P:TMG.GTAModel.Purpose.PoRPoWPurpose.Progress
  id: Progress
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: PoRPoWPurpose.Progress
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 51
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: public override float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides ReadOnly Property Progress As Single
  overridden: TMG.GTAModel.PurposeBase.Progress
  overload: TMG.GTAModel.Purpose.PoRPoWPurpose.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Run
  commentId: M:TMG.GTAModel.Purpose.PoRPoWPurpose.Run
  id: Run
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: PoRPoWPurpose.Run()
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Run()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: public override void Run()
    content.vb: Public Overrides Sub Run
  overridden: TMG.GTAModel.PurposeBase.Run
  overload: TMG.GTAModel.Purpose.PoRPoWPurpose.Run*
  implements:
  - TMG.IPurpose.Run
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Start
  commentId: M:TMG.GTAModel.Purpose.PoRPoWPurpose.Start
  id: Start
  parent: TMG.GTAModel.Purpose.PoRPoWPurpose
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: PoRPoWPurpose.Start()
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Start()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Purpose/PoRPoWPurpose.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Start
    path: ../../../XTMF/Code/GTAModel/Purpose/PoRPoWPurpose.cs
    startLine: 85
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Purpose
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TMG.GTAModel.Purpose.PoRPoWPurpose.Start*
  implements:
  - XTMF.ISelfContainedModule.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.GTAModel.Purpose
  commentId: N:TMG.GTAModel.Purpose
  isExternal: false
  name: TMG.GTAModel.Purpose
  nameWithType: TMG.GTAModel.Purpose
  fullName: TMG.GTAModel.Purpose
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.GTAModel.PurposeBase
  commentId: T:TMG.GTAModel.PurposeBase
  parent: TMG.GTAModel
  isExternal: false
  name: PurposeBase
  nameWithType: PurposeBase
  fullName: TMG.GTAModel.PurposeBase
- uid: TMG.IDemographicCategoyPurpose
  commentId: T:TMG.IDemographicCategoyPurpose
  parent: TMG
  isExternal: false
  name: IDemographicCategoyPurpose
  nameWithType: IDemographicCategoyPurpose
  fullName: TMG.IDemographicCategoyPurpose
- uid: TMG.IPurpose
  commentId: T:TMG.IPurpose
  parent: TMG
  isExternal: false
  name: IPurpose
  nameWithType: IPurpose
  fullName: TMG.IPurpose
- uid: XTMF.ISelfContainedModule
  commentId: T:XTMF.ISelfContainedModule
  parent: XTMF
  isExternal: false
  name: ISelfContainedModule
  nameWithType: ISelfContainedModule
  fullName: XTMF.ISelfContainedModule
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.GTAModel.PurposeBase.Root
  commentId: F:TMG.GTAModel.PurposeBase.Root
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: Root
  nameWithType: PurposeBase.Root
  fullName: TMG.GTAModel.PurposeBase.Root
- uid: TMG.GTAModel.PurposeBase.CachesFlows
  commentId: F:TMG.GTAModel.PurposeBase.CachesFlows
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: CachesFlows
  nameWithType: PurposeBase.CachesFlows
  fullName: TMG.GTAModel.PurposeBase.CachesFlows
- uid: TMG.GTAModel.PurposeBase.Flows
  commentId: P:TMG.GTAModel.PurposeBase.Flows
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: Flows
  nameWithType: PurposeBase.Flows
  fullName: TMG.GTAModel.PurposeBase.Flows
- uid: TMG.GTAModel.PurposeBase.ModeSplit
  commentId: P:TMG.GTAModel.PurposeBase.ModeSplit
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: ModeSplit
  nameWithType: PurposeBase.ModeSplit
  fullName: TMG.GTAModel.PurposeBase.ModeSplit
- uid: TMG.GTAModel.PurposeBase.Name
  commentId: P:TMG.GTAModel.PurposeBase.Name
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: Name
  nameWithType: PurposeBase.Name
  fullName: TMG.GTAModel.PurposeBase.Name
- uid: TMG.GTAModel.PurposeBase.ProgressColour
  commentId: P:TMG.GTAModel.PurposeBase.ProgressColour
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: ProgressColour
  nameWithType: PurposeBase.ProgressColour
  fullName: TMG.GTAModel.PurposeBase.ProgressColour
- uid: TMG.GTAModel.PurposeBase.PurposeName
  commentId: P:TMG.GTAModel.PurposeBase.PurposeName
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: PurposeName
  nameWithType: PurposeBase.PurposeName
  fullName: TMG.GTAModel.PurposeBase.PurposeName
- uid: TMG.GTAModel.PurposeBase.ResultCacheFile
  commentId: P:TMG.GTAModel.PurposeBase.ResultCacheFile
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: ResultCacheFile
  nameWithType: PurposeBase.ResultCacheFile
  fullName: TMG.GTAModel.PurposeBase.ResultCacheFile
- uid: TMG.GTAModel.PurposeBase.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.PurposeBase.RuntimeValidation(System.String@)
  parent: TMG.GTAModel.PurposeBase
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: PurposeBase.RuntimeValidation(String)
  fullName: TMG.GTAModel.PurposeBase.RuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.GTAModel.PurposeBase.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: PurposeBase.RuntimeValidation
    fullName: TMG.GTAModel.PurposeBase.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.PurposeBase.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: PurposeBase.RuntimeValidation
    fullName: TMG.GTAModel.PurposeBase.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData{System.Single[][]},TMG.IModeChoiceNode,System.String)
  commentId: M:TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData{System.Single[][]},TMG.IModeChoiceNode,System.String)
  parent: TMG.GTAModel.PurposeBase
  isExternal: true
  name: WriteModeSplit(TreeData<Single[][]>, IModeChoiceNode, String)
  nameWithType: PurposeBase.WriteModeSplit(TreeData<Single[][]>, IModeChoiceNode, String)
  fullName: TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData<System.Single[][]>, TMG.IModeChoiceNode, System.String)
  nameWithType.vb: PurposeBase.WriteModeSplit(TreeData(Of Single()()), IModeChoiceNode, String)
  fullName.vb: TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData(Of System.Single()()), TMG.IModeChoiceNode, System.String)
  name.vb: WriteModeSplit(TreeData(Of Single()()), IModeChoiceNode, String)
  spec.csharp:
  - uid: TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData{System.Single[][]},TMG.IModeChoiceNode,System.String)
    name: WriteModeSplit
    nameWithType: PurposeBase.WriteModeSplit
    fullName: TMG.GTAModel.PurposeBase.WriteModeSplit
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.TreeData`1
    name: TreeData
    nameWithType: TreeData
    fullName: TMG.TreeData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IModeChoiceNode
    name: IModeChoiceNode
    nameWithType: IModeChoiceNode
    fullName: TMG.IModeChoiceNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.PurposeBase.WriteModeSplit(TMG.TreeData{System.Single[][]},TMG.IModeChoiceNode,System.String)
    name: WriteModeSplit
    nameWithType: PurposeBase.WriteModeSplit
    fullName: TMG.GTAModel.PurposeBase.WriteModeSplit
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.TreeData`1
    name: TreeData
    nameWithType: TreeData
    fullName: TMG.TreeData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IModeChoiceNode
    name: IModeChoiceNode
    nameWithType: IModeChoiceNode
    fullName: TMG.IModeChoiceNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  isExternal: false
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.IDemographicDistribution
  commentId: T:TMG.IDemographicDistribution
  parent: TMG
  isExternal: false
  name: IDemographicDistribution
  nameWithType: IDemographicDistribution
  fullName: TMG.IDemographicDistribution
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Categories*
  commentId: Overload:TMG.GTAModel.Purpose.PoRPoWPurpose.Categories
  isExternal: false
  name: Categories
  nameWithType: PoRPoWPurpose.Categories
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Categories
- uid: TMG.IDemographicCategoyPurpose.Categories
  commentId: P:TMG.IDemographicCategoyPurpose.Categories
  parent: TMG.IDemographicCategoyPurpose
  isExternal: false
  name: Categories
  nameWithType: IDemographicCategoyPurpose.Categories
  fullName: TMG.IDemographicCategoyPurpose.Categories
- uid: System.Collections.Generic.List{TMG.IDemographicCategoryGeneration}
  commentId: T:System.Collections.Generic.List{TMG.IDemographicCategoryGeneration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IDemographicCategoryGeneration>
  nameWithType: List<IDemographicCategoryGeneration>
  fullName: System.Collections.Generic.List<TMG.IDemographicCategoryGeneration>
  nameWithType.vb: List(Of IDemographicCategoryGeneration)
  fullName.vb: System.Collections.Generic.List(Of TMG.IDemographicCategoryGeneration)
  name.vb: List(Of IDemographicCategoryGeneration)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategoryGeneration
    name: IDemographicCategoryGeneration
    nameWithType: IDemographicCategoryGeneration
    fullName: TMG.IDemographicCategoryGeneration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategoryGeneration
    name: IDemographicCategoryGeneration
    nameWithType: IDemographicCategoryGeneration
    fullName: TMG.IDemographicCategoryGeneration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.PurposeBase.Progress
  commentId: P:TMG.GTAModel.PurposeBase.Progress
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: Progress
  nameWithType: PurposeBase.Progress
  fullName: TMG.GTAModel.PurposeBase.Progress
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Progress*
  commentId: Overload:TMG.GTAModel.Purpose.PoRPoWPurpose.Progress
  isExternal: false
  name: Progress
  nameWithType: PoRPoWPurpose.Progress
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.PurposeBase.Run
  commentId: M:TMG.GTAModel.PurposeBase.Run
  parent: TMG.GTAModel.PurposeBase
  isExternal: false
  name: Run()
  nameWithType: PurposeBase.Run()
  fullName: TMG.GTAModel.PurposeBase.Run()
  spec.csharp:
  - uid: TMG.GTAModel.PurposeBase.Run
    name: Run
    nameWithType: PurposeBase.Run
    fullName: TMG.GTAModel.PurposeBase.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.PurposeBase.Run
    name: Run
    nameWithType: PurposeBase.Run
    fullName: TMG.GTAModel.PurposeBase.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Run*
  commentId: Overload:TMG.GTAModel.Purpose.PoRPoWPurpose.Run
  isExternal: false
  name: Run
  nameWithType: PoRPoWPurpose.Run
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Run
- uid: TMG.IPurpose.Run
  commentId: M:TMG.IPurpose.Run
  parent: TMG.IPurpose
  isExternal: false
  name: Run()
  nameWithType: IPurpose.Run()
  fullName: TMG.IPurpose.Run()
  spec.csharp:
  - uid: TMG.IPurpose.Run
    name: Run
    nameWithType: IPurpose.Run
    fullName: TMG.IPurpose.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IPurpose.Run
    name: Run
    nameWithType: IPurpose.Run
    fullName: TMG.IPurpose.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Purpose.PoRPoWPurpose.Start*
  commentId: Overload:TMG.GTAModel.Purpose.PoRPoWPurpose.Start
  isExternal: false
  name: Start
  nameWithType: PoRPoWPurpose.Start
  fullName: TMG.GTAModel.Purpose.PoRPoWPurpose.Start
- uid: XTMF.ISelfContainedModule.Start
  commentId: M:XTMF.ISelfContainedModule.Start
  parent: XTMF.ISelfContainedModule
  isExternal: false
  name: Start()
  nameWithType: ISelfContainedModule.Start()
  fullName: XTMF.ISelfContainedModule.Start()
  spec.csharp:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
