### YamlMime:ManagedReference
items:
- uid: XTMF.XTMFRuntime
  commentId: T:XTMF.XTMFRuntime
  id: XTMFRuntime
  parent: XTMF
  children:
  - XTMF.XTMFRuntime.#ctor(XTMF.Configuration)
  - XTMF.XTMFRuntime.ActiveHost
  - XTMF.XTMFRuntime.Configuration
  - XTMF.XTMFRuntime.Dispose
  - XTMF.XTMFRuntime.Dispose(System.Boolean)
  - XTMF.XTMFRuntime.InitializeRemoteClient(System.String,System.Int32)
  - XTMF.XTMFRuntime.ModelSystemController
  - XTMF.XTMFRuntime.ProjectController
  - XTMF.XTMFRuntime.RunController
  - XTMF.XTMFRuntime.ShutDown
  langs:
  - csharp
  - vb
  name: XTMFRuntime
  nameWithType: XTMFRuntime
  fullName: XTMF.XTMFRuntime
  type: Class
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: XTMFRuntime
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 28
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public class XTMFRuntime
    content.vb: Public Class XTMFRuntime
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.XTMFRuntime.Configuration
  commentId: P:XTMF.XTMFRuntime.Configuration
  id: Configuration
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: XTMFRuntime.Configuration
  fullName: XTMF.XTMFRuntime.Configuration
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Configuration
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 34
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe configuration used for all of the settings\nand holding the data for the XTMF installation\n"
  example: []
  syntax:
    content: public Configuration Configuration { get; }
    parameters: []
    return:
      type: XTMF.Configuration
    content.vb: Public ReadOnly Property Configuration As Configuration
  overload: XTMF.XTMFRuntime.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.XTMFRuntime.ModelSystemController
  commentId: P:XTMF.XTMFRuntime.ModelSystemController
  id: ModelSystemController
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: ModelSystemController
  nameWithType: XTMFRuntime.ModelSystemController
  fullName: XTMF.XTMFRuntime.ModelSystemController
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemController
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 36
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModelSystemController ModelSystemController { get; }
    parameters: []
    return:
      type: XTMF.ModelSystemController
    content.vb: Public ReadOnly Property ModelSystemController As ModelSystemController
  overload: XTMF.XTMFRuntime.ModelSystemController*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.XTMFRuntime.ProjectController
  commentId: P:XTMF.XTMFRuntime.ProjectController
  id: ProjectController
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: ProjectController
  nameWithType: XTMFRuntime.ProjectController
  fullName: XTMF.XTMFRuntime.ProjectController
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectController
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 38
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ProjectController ProjectController { get; }
    parameters: []
    return:
      type: XTMF.ProjectController
    content.vb: Public ReadOnly Property ProjectController As ProjectController
  overload: XTMF.XTMFRuntime.ProjectController*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.XTMFRuntime.RunController
  commentId: P:XTMF.XTMFRuntime.RunController
  id: RunController
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: RunController
  nameWithType: XTMFRuntime.RunController
  fullName: XTMF.XTMFRuntime.RunController
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunController
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 40
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public RunController RunController { get; }
    parameters: []
    return:
      type: XTMF.Controller.RunController
    content.vb: Public ReadOnly Property RunController As RunController
  overload: XTMF.XTMFRuntime.RunController*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.XTMFRuntime.#ctor(XTMF.Configuration)
  commentId: M:XTMF.XTMFRuntime.#ctor(XTMF.Configuration)
  id: '#ctor(XTMF.Configuration)'
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: XTMFRuntime(Configuration)
  nameWithType: XTMFRuntime.XTMFRuntime(Configuration)
  fullName: XTMF.XTMFRuntime.XTMFRuntime(XTMF.Configuration)
  type: Constructor
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 42
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public XTMFRuntime(Configuration configuration = null)
    parameters:
    - id: configuration
      type: XTMF.Configuration
    content.vb: Public Sub New(configuration As Configuration = Nothing)
  overload: XTMF.XTMFRuntime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntime.ActiveHost
  commentId: P:XTMF.XTMFRuntime.ActiveHost
  id: ActiveHost
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: ActiveHost
  nameWithType: XTMFRuntime.ActiveHost
  fullName: XTMF.XTMFRuntime.ActiveHost
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ActiveHost
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 64
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreates a new instance of XTMF allowing for you to\nrun all of the systems contained within\n"
  example: []
  syntax:
    content: public IHost ActiveHost { get; }
    parameters: []
    return:
      type: XTMF.Networking.IHost
    content.vb: Public ReadOnly Property ActiveHost As IHost
  overload: XTMF.XTMFRuntime.ActiveHost*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.XTMFRuntime.InitializeRemoteClient(System.String,System.Int32)
  commentId: M:XTMF.XTMFRuntime.InitializeRemoteClient(System.String,System.Int32)
  id: InitializeRemoteClient(System.String,System.Int32)
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: InitializeRemoteClient(String, Int32)
  nameWithType: XTMFRuntime.InitializeRemoteClient(String, Int32)
  fullName: XTMF.XTMFRuntime.InitializeRemoteClient(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InitializeRemoteClient
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 66
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IClient InitializeRemoteClient(string address, int port)
    parameters:
    - id: address
      type: System.String
    - id: port
      type: System.Int32
    return:
      type: XTMF.Networking.IClient
    content.vb: Public Function InitializeRemoteClient(address As String, port As Integer) As IClient
  overload: XTMF.XTMFRuntime.InitializeRemoteClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntime.ShutDown
  commentId: M:XTMF.XTMFRuntime.ShutDown
  id: ShutDown
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: ShutDown()
  nameWithType: XTMFRuntime.ShutDown()
  fullName: XTMF.XTMFRuntime.ShutDown()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ShutDown
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 77
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nTerminate the runtime\n"
  example: []
  syntax:
    content: public void ShutDown()
    content.vb: Public Sub ShutDown
  overload: XTMF.XTMFRuntime.ShutDown*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntime.Dispose
  commentId: M:XTMF.XTMFRuntime.Dispose
  id: Dispose
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: XTMFRuntime.Dispose()
  fullName: XTMF.XTMFRuntime.Dispose()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 81
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: XTMF.XTMFRuntime.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntime.Dispose(System.Boolean)
  commentId: M:XTMF.XTMFRuntime.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: XTMF.XTMFRuntime
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: XTMFRuntime.Dispose(Boolean)
  fullName: XTMF.XTMFRuntime.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/XTMFRuntime.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/Code/XTMF1.1/XTMFRuntime.cs
    startLine: 87
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: protected virtual void Dispose(bool all)
    parameters:
    - id: all
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(all As Boolean)
  overload: XTMF.XTMFRuntime.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.XTMFRuntime.Configuration*
  commentId: Overload:XTMF.XTMFRuntime.Configuration
  isExternal: false
  name: Configuration
  nameWithType: XTMFRuntime.Configuration
  fullName: XTMF.XTMFRuntime.Configuration
- uid: XTMF.Configuration
  commentId: T:XTMF.Configuration
  parent: XTMF
  isExternal: false
  name: Configuration
  nameWithType: Configuration
  fullName: XTMF.Configuration
- uid: XTMF.XTMFRuntime.ModelSystemController*
  commentId: Overload:XTMF.XTMFRuntime.ModelSystemController
  isExternal: false
  name: ModelSystemController
  nameWithType: XTMFRuntime.ModelSystemController
  fullName: XTMF.XTMFRuntime.ModelSystemController
- uid: XTMF.ModelSystemController
  commentId: T:XTMF.ModelSystemController
  parent: XTMF
  isExternal: false
  name: ModelSystemController
  nameWithType: ModelSystemController
  fullName: XTMF.ModelSystemController
- uid: XTMF.XTMFRuntime.ProjectController*
  commentId: Overload:XTMF.XTMFRuntime.ProjectController
  isExternal: false
  name: ProjectController
  nameWithType: XTMFRuntime.ProjectController
  fullName: XTMF.XTMFRuntime.ProjectController
- uid: XTMF.ProjectController
  commentId: T:XTMF.ProjectController
  parent: XTMF
  isExternal: false
  name: ProjectController
  nameWithType: ProjectController
  fullName: XTMF.ProjectController
- uid: XTMF.XTMFRuntime.RunController*
  commentId: Overload:XTMF.XTMFRuntime.RunController
  isExternal: false
  name: RunController
  nameWithType: XTMFRuntime.RunController
  fullName: XTMF.XTMFRuntime.RunController
- uid: XTMF.Controller.RunController
  commentId: T:XTMF.Controller.RunController
  parent: XTMF.Controller
  isExternal: false
  name: RunController
  nameWithType: RunController
  fullName: XTMF.Controller.RunController
- uid: XTMF.Controller
  commentId: N:XTMF.Controller
  isExternal: false
  name: XTMF.Controller
  nameWithType: XTMF.Controller
  fullName: XTMF.Controller
- uid: XTMF.XTMFRuntime.#ctor*
  commentId: Overload:XTMF.XTMFRuntime.#ctor
  isExternal: false
  name: XTMFRuntime
  nameWithType: XTMFRuntime.XTMFRuntime
  fullName: XTMF.XTMFRuntime.XTMFRuntime
- uid: XTMF.XTMFRuntime.ActiveHost*
  commentId: Overload:XTMF.XTMFRuntime.ActiveHost
  isExternal: false
  name: ActiveHost
  nameWithType: XTMFRuntime.ActiveHost
  fullName: XTMF.XTMFRuntime.ActiveHost
- uid: XTMF.Networking.IHost
  commentId: T:XTMF.Networking.IHost
  parent: XTMF.Networking
  isExternal: false
  name: IHost
  nameWithType: IHost
  fullName: XTMF.Networking.IHost
- uid: XTMF.Networking
  commentId: N:XTMF.Networking
  isExternal: false
  name: XTMF.Networking
  nameWithType: XTMF.Networking
  fullName: XTMF.Networking
- uid: XTMF.XTMFRuntime.InitializeRemoteClient*
  commentId: Overload:XTMF.XTMFRuntime.InitializeRemoteClient
  isExternal: false
  name: InitializeRemoteClient
  nameWithType: XTMFRuntime.InitializeRemoteClient
  fullName: XTMF.XTMFRuntime.InitializeRemoteClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.Networking.IClient
  commentId: T:XTMF.Networking.IClient
  parent: XTMF.Networking
  isExternal: false
  name: IClient
  nameWithType: IClient
  fullName: XTMF.Networking.IClient
- uid: XTMF.XTMFRuntime.ShutDown*
  commentId: Overload:XTMF.XTMFRuntime.ShutDown
  isExternal: false
  name: ShutDown
  nameWithType: XTMFRuntime.ShutDown
  fullName: XTMF.XTMFRuntime.ShutDown
- uid: XTMF.XTMFRuntime.Dispose*
  commentId: Overload:XTMF.XTMFRuntime.Dispose
  isExternal: false
  name: Dispose
  nameWithType: XTMFRuntime.Dispose
  fullName: XTMF.XTMFRuntime.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
