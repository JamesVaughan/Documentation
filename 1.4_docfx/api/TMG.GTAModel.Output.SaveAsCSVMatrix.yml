### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix
  commentId: T:TMG.GTAModel.Output.SaveAsCSVMatrix
  id: SaveAsCSVMatrix
  parent: TMG.GTAModel.Output
  children:
  - TMG.GTAModel.Output.SaveAsCSVMatrix.Name
  - TMG.GTAModel.Output.SaveAsCSVMatrix.Progress
  - TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour
  - TMG.GTAModel.Output.SaveAsCSVMatrix.Root
  - TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation(System.String@)
  - TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  - TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[],System.String)
  - TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[][],System.String)
  langs:
  - csharp
  - vb
  name: SaveAsCSVMatrix
  nameWithType: SaveAsCSVMatrix
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix
  type: Class
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveAsCSVMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 30
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: 'public class SaveAsCSVMatrix : ISaveODData<float>, IModule'
    content.vb: >-
      Public Class SaveAsCSVMatrix
          Implements ISaveODData(Of Single), IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Input.ISaveODData{System.Single}
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.Root
  commentId: F:TMG.GTAModel.Output.SaveAsCSVMatrix.Root
  id: Root
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: SaveAsCSVMatrix.Root
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.Name
  commentId: P:TMG.GTAModel.Output.SaveAsCSVMatrix.Name
  id: Name
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SaveAsCSVMatrix.Name
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.Progress
  commentId: P:TMG.GTAModel.Output.SaveAsCSVMatrix.Progress
  id: Progress
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: SaveAsCSVMatrix.Progress
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 37
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour
  commentId: P:TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: SaveAsCSVMatrix.ProgressColour
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 42
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: SaveAsCSVMatrix.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: SaveAsCSVMatrix.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  commentId: M:TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  id: SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: SaveMatrix(SparseTwinIndex<Single>, String)
  nameWithType: SaveAsCSVMatrix.SaveMatrix(SparseTwinIndex<Single>, String)
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(Datastructure.SparseTwinIndex<System.Single>, System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 59
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void SaveMatrix(SparseTwinIndex<float> matrix, string fileName)
    parameters:
    - id: matrix
      type: Datastructure.SparseTwinIndex{System.Single}
    - id: fileName
      type: System.String
    content.vb: Public Sub SaveMatrix(matrix As SparseTwinIndex(Of Single), fileName As String)
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix*
  implements:
  - TMG.Input.ISaveODData{System.Single}.SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  nameWithType.vb: SaveAsCSVMatrix.SaveMatrix(SparseTwinIndex(Of Single), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(Datastructure.SparseTwinIndex(Of System.Single), System.String)
  name.vb: SaveMatrix(SparseTwinIndex(Of Single), String)
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[][],System.String)
  commentId: M:TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[][],System.String)
  id: SaveMatrix(System.Single[][],System.String)
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: SaveMatrix(Single[][], String)
  nameWithType: SaveAsCSVMatrix.SaveMatrix(Single[][], String)
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[][], System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 64
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void SaveMatrix(float[][] data, string fileName)
    parameters:
    - id: data
      type: System.Single[][]
    - id: fileName
      type: System.String
    content.vb: Public Sub SaveMatrix(data As Single()(), fileName As String)
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix*
  implements:
  - TMG.Input.ISaveODData{System.Single}.SaveMatrix(System.Single[][],System.String)
  nameWithType.vb: SaveAsCSVMatrix.SaveMatrix(Single()(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single()(), System.String)
  name.vb: SaveMatrix(Single()(), String)
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[],System.String)
  commentId: M:TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[],System.String)
  id: SaveMatrix(System.Single[],System.String)
  parent: TMG.GTAModel.Output.SaveAsCSVMatrix
  langs:
  - csharp
  - vb
  name: SaveMatrix(Single[], String)
  nameWithType: SaveAsCSVMatrix.SaveMatrix(Single[], String)
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single[], System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveAsCSVMatrix.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveAsCSVMatrix.cs
    startLine: 69
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void SaveMatrix(float[] data, string fileName)
    parameters:
    - id: data
      type: System.Single[]
    - id: fileName
      type: System.String
    content.vb: Public Sub SaveMatrix(data As Single(), fileName As String)
  overload: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix*
  implements:
  - TMG.Input.ISaveODData{System.Single}.SaveMatrix(System.Single[],System.String)
  nameWithType.vb: SaveAsCSVMatrix.SaveMatrix(Single(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix(System.Single(), System.String)
  name.vb: SaveMatrix(Single(), String)
references:
- uid: TMG.GTAModel.Output
  commentId: N:TMG.GTAModel.Output
  isExternal: false
  name: TMG.GTAModel.Output
  nameWithType: TMG.GTAModel.Output
  fullName: TMG.GTAModel.Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Input.ISaveODData{System.Single}
  commentId: T:TMG.Input.ISaveODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.ISaveODData`1
  name: ISaveODData<Single>
  nameWithType: ISaveODData<Single>
  fullName: TMG.Input.ISaveODData<System.Single>
  nameWithType.vb: ISaveODData(Of Single)
  fullName.vb: TMG.Input.ISaveODData(Of System.Single)
  name.vb: ISaveODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Input.ISaveODData`1
  commentId: T:TMG.Input.ISaveODData`1
  isExternal: false
  name: ISaveODData<T>
  nameWithType: ISaveODData<T>
  fullName: TMG.Input.ISaveODData<T>
  nameWithType.vb: ISaveODData(Of T)
  fullName.vb: TMG.Input.ISaveODData(Of T)
  name.vb: ISaveODData(Of T)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.Name*
  commentId: Overload:TMG.GTAModel.Output.SaveAsCSVMatrix.Name
  isExternal: false
  name: Name
  nameWithType: SaveAsCSVMatrix.Name
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.Progress*
  commentId: Overload:TMG.GTAModel.Output.SaveAsCSVMatrix.Progress
  isExternal: false
  name: Progress
  nameWithType: SaveAsCSVMatrix.Progress
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour*
  commentId: Overload:TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: SaveAsCSVMatrix.ProgressColour
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: SaveAsCSVMatrix.RuntimeValidation
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix*
  commentId: Overload:TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix
  isExternal: false
  name: SaveMatrix
  nameWithType: SaveAsCSVMatrix.SaveMatrix
  fullName: TMG.GTAModel.Output.SaveAsCSVMatrix.SaveMatrix
- uid: TMG.Input.ISaveODData{System.Single}.SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  commentId: M:TMG.Input.ISaveODData{System.Single}.SaveMatrix(Datastructure.SparseTwinIndex{System.Single},System.String)
  parent: TMG.Input.ISaveODData{System.Single}
  definition: TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
  name: SaveMatrix(SparseTwinIndex<Single>, String)
  nameWithType: ISaveODData<Single>.SaveMatrix(SparseTwinIndex<Single>, String)
  fullName: TMG.Input.ISaveODData<System.Single>.SaveMatrix(Datastructure.SparseTwinIndex<System.Single>, System.String)
  nameWithType.vb: ISaveODData(Of Single).SaveMatrix(SparseTwinIndex(Of Single), String)
  fullName.vb: TMG.Input.ISaveODData(Of System.Single).SaveMatrix(Datastructure.SparseTwinIndex(Of System.Single), System.String)
  name.vb: SaveMatrix(SparseTwinIndex(Of Single), String)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
    name: SaveMatrix
    nameWithType: ISaveODData<Single>.SaveMatrix
    fullName: TMG.Input.ISaveODData<System.Single>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
    name: SaveMatrix
    nameWithType: ISaveODData(Of Single).SaveMatrix
    fullName: TMG.Input.ISaveODData(Of System.Single).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTwinIndex{System.Single}
  commentId: T:Datastructure.SparseTwinIndex{System.Single}
  parent: Datastructure
  definition: Datastructure.SparseTwinIndex`1
  name: SparseTwinIndex<Single>
  nameWithType: SparseTwinIndex<Single>
  fullName: Datastructure.SparseTwinIndex<System.Single>
  nameWithType.vb: SparseTwinIndex(Of Single)
  fullName.vb: Datastructure.SparseTwinIndex(Of System.Single)
  name.vb: SparseTwinIndex(Of Single)
  spec.csharp:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
  commentId: M:TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
  isExternal: true
  name: SaveMatrix(SparseTwinIndex<T>, String)
  nameWithType: ISaveODData<T>.SaveMatrix(SparseTwinIndex<T>, String)
  fullName: TMG.Input.ISaveODData<T>.SaveMatrix(Datastructure.SparseTwinIndex<T>, System.String)
  nameWithType.vb: ISaveODData(Of T).SaveMatrix(SparseTwinIndex(Of T), String)
  fullName.vb: TMG.Input.ISaveODData(Of T).SaveMatrix(Datastructure.SparseTwinIndex(Of T), System.String)
  name.vb: SaveMatrix(SparseTwinIndex(Of T), String)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
    name: SaveMatrix
    nameWithType: ISaveODData<T>.SaveMatrix
    fullName: TMG.Input.ISaveODData<T>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(Datastructure.SparseTwinIndex{`0},System.String)
    name: SaveMatrix
    nameWithType: ISaveODData(Of T).SaveMatrix
    fullName: TMG.Input.ISaveODData(Of T).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTwinIndex`1
  commentId: T:Datastructure.SparseTwinIndex`1
  isExternal: false
  name: SparseTwinIndex<T>
  nameWithType: SparseTwinIndex<T>
  fullName: Datastructure.SparseTwinIndex<T>
  nameWithType.vb: SparseTwinIndex(Of T)
  fullName.vb: Datastructure.SparseTwinIndex(Of T)
  name.vb: SparseTwinIndex(Of T)
  spec.csharp:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure
  commentId: N:Datastructure
  isExternal: false
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.Input.ISaveODData{System.Single}.SaveMatrix(System.Single[][],System.String)
  commentId: M:TMG.Input.ISaveODData{System.Single}.SaveMatrix(System.Single[][],System.String)
  parent: TMG.Input.ISaveODData{System.Single}
  definition: TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
  name: SaveMatrix(Single[][], String)
  nameWithType: ISaveODData<Single>.SaveMatrix(Single[][], String)
  fullName: TMG.Input.ISaveODData<System.Single>.SaveMatrix(System.Single[][], System.String)
  nameWithType.vb: ISaveODData(Of Single).SaveMatrix(Single()(), String)
  fullName.vb: TMG.Input.ISaveODData(Of System.Single).SaveMatrix(System.Single()(), System.String)
  name.vb: SaveMatrix(Single()(), String)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData<Single>.SaveMatrix
    fullName: TMG.Input.ISaveODData<System.Single>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData(Of Single).SaveMatrix
    fullName: TMG.Input.ISaveODData(Of System.Single).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single[][]
  name: Single[][]
  nameWithType: Single[][]
  fullName: System.Single[][]
  nameWithType.vb: Single()()
  fullName.vb: System.Single()()
  name.vb: Single()()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
  commentId: M:TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
  isExternal: true
  name: SaveMatrix(T[][], String)
  nameWithType: ISaveODData<T>.SaveMatrix(T[][], String)
  fullName: TMG.Input.ISaveODData<T>.SaveMatrix(T[][], System.String)
  nameWithType.vb: ISaveODData(Of T).SaveMatrix(T()(), String)
  fullName.vb: TMG.Input.ISaveODData(Of T).SaveMatrix(T()(), System.String)
  name.vb: SaveMatrix(T()(), String)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData<T>.SaveMatrix
    fullName: TMG.Input.ISaveODData<T>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[][],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData(Of T).SaveMatrix
    fullName: TMG.Input.ISaveODData(Of T).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ISaveODData{System.Single}.SaveMatrix(System.Single[],System.String)
  commentId: M:TMG.Input.ISaveODData{System.Single}.SaveMatrix(System.Single[],System.String)
  parent: TMG.Input.ISaveODData{System.Single}
  definition: TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
  name: SaveMatrix(Single[], String)
  nameWithType: ISaveODData<Single>.SaveMatrix(Single[], String)
  fullName: TMG.Input.ISaveODData<System.Single>.SaveMatrix(System.Single[], System.String)
  nameWithType.vb: ISaveODData(Of Single).SaveMatrix(Single(), String)
  fullName.vb: TMG.Input.ISaveODData(Of System.Single).SaveMatrix(System.Single(), System.String)
  name.vb: SaveMatrix(Single(), String)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData<Single>.SaveMatrix
    fullName: TMG.Input.ISaveODData<System.Single>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData(Of Single).SaveMatrix
    fullName: TMG.Input.ISaveODData(Of System.Single).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
  commentId: M:TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
  isExternal: true
  name: SaveMatrix(T[], String)
  nameWithType: ISaveODData<T>.SaveMatrix(T[], String)
  fullName: TMG.Input.ISaveODData<T>.SaveMatrix(T[], System.String)
  nameWithType.vb: ISaveODData(Of T).SaveMatrix(T(), String)
  fullName.vb: TMG.Input.ISaveODData(Of T).SaveMatrix(T(), System.String)
  name.vb: SaveMatrix(T(), String)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData<T>.SaveMatrix
    fullName: TMG.Input.ISaveODData<T>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODData`1.SaveMatrix(`0[],System.String)
    name: SaveMatrix
    nameWithType: ISaveODData(Of T).SaveMatrix
    fullName: TMG.Input.ISaveODData(Of T).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
