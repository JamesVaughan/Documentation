### YamlMime:ManagedReference
items:
- uid: XTMF.XTMFRuntimeException
  commentId: T:XTMF.XTMFRuntimeException
  id: XTMFRuntimeException
  parent: XTMF
  children:
  - XTMF.XTMFRuntimeException.#ctor
  - XTMF.XTMFRuntimeException.#ctor(System.String)
  - XTMF.XTMFRuntimeException.#ctor(XTMF.IModule,System.Exception,System.String)
  - XTMF.XTMFRuntimeException.#ctor(XTMF.IModule,System.String)
  - XTMF.XTMFRuntimeException.Module
  langs:
  - csharp
  - vb
  name: XTMFRuntimeException
  nameWithType: XTMFRuntimeException
  fullName: XTMF.XTMFRuntimeException
  type: Class
  source:
    remote:
      path: Code/XTMFInterfaces/XTMFRuntimeException.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: XTMFRuntimeException
    path: ../../../XTMF/Code/XTMFInterfaces/XTMFRuntimeException.cs
    startLine: 22
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: >-
      [Serializable]

      public class XTMFRuntimeException : Exception, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      Public Class XTMFRuntimeException

          Inherits Exception

          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  derivedClasses:
  - TMG.Emme.EmmeToolCouldNotBeFoundException
  - TMG.Emme.EmmeToolParameterException
  - TMG.Emme.EmmeToolRuntimeException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.XTMFRuntimeException.Module
  commentId: P:XTMF.XTMFRuntimeException.Module
  id: Module
  parent: XTMF.XTMFRuntimeException
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: XTMFRuntimeException.Module
  fullName: XTMF.XTMFRuntimeException.Module
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/XTMFRuntimeException.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Module
    path: ../../../XTMF/Code/XTMFInterfaces/XTMFRuntimeException.cs
    startLine: 29
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe module that caused the error.\nCheck for null.\n"
  example: []
  syntax:
    content: public IModule Module { get; }
    parameters: []
    return:
      type: XTMF.IModule
    content.vb: Public ReadOnly Property Module As IModule
  overload: XTMF.XTMFRuntimeException.Module*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.XTMFRuntimeException.#ctor
  commentId: M:XTMF.XTMFRuntimeException.#ctor
  id: '#ctor'
  parent: XTMF.XTMFRuntimeException
  langs:
  - csharp
  - vb
  name: XTMFRuntimeException()
  nameWithType: XTMFRuntimeException.XTMFRuntimeException()
  fullName: XTMF.XTMFRuntimeException.XTMFRuntimeException()
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/XTMFRuntimeException.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMFInterfaces/XTMFRuntimeException.cs
    startLine: 31
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public XTMFRuntimeException()
    content.vb: Public Sub New
  overload: XTMF.XTMFRuntimeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntimeException.#ctor(System.String)
  commentId: M:XTMF.XTMFRuntimeException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: XTMF.XTMFRuntimeException
  langs:
  - csharp
  - vb
  name: XTMFRuntimeException(String)
  nameWithType: XTMFRuntimeException.XTMFRuntimeException(String)
  fullName: XTMF.XTMFRuntimeException.XTMFRuntimeException(System.String)
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/XTMFRuntimeException.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMFInterfaces/XTMFRuntimeException.cs
    startLine: 35
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: >-
      [Obsolete("Use XTMFRuntimeException(IModule module, string message) instead.")]

      public XTMFRuntimeException(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: >-
      <Obsolete("Use XTMFRuntimeException(IModule module, string message) instead.")>

      Public Sub New(message As String)
  overload: XTMF.XTMFRuntimeException.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use XTMFRuntimeException(IModule module, string message) instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntimeException.#ctor(XTMF.IModule,System.String)
  commentId: M:XTMF.XTMFRuntimeException.#ctor(XTMF.IModule,System.String)
  id: '#ctor(XTMF.IModule,System.String)'
  parent: XTMF.XTMFRuntimeException
  langs:
  - csharp
  - vb
  name: XTMFRuntimeException(IModule, String)
  nameWithType: XTMFRuntimeException.XTMFRuntimeException(IModule, String)
  fullName: XTMF.XTMFRuntimeException.XTMFRuntimeException(XTMF.IModule, System.String)
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/XTMFRuntimeException.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMFInterfaces/XTMFRuntimeException.cs
    startLine: 41
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public XTMFRuntimeException(IModule module, string message)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: message
      type: System.String
    content.vb: Public Sub New(module As IModule, message As String)
  overload: XTMF.XTMFRuntimeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.XTMFRuntimeException.#ctor(XTMF.IModule,System.Exception,System.String)
  commentId: M:XTMF.XTMFRuntimeException.#ctor(XTMF.IModule,System.Exception,System.String)
  id: '#ctor(XTMF.IModule,System.Exception,System.String)'
  parent: XTMF.XTMFRuntimeException
  langs:
  - csharp
  - vb
  name: XTMFRuntimeException(IModule, Exception, String)
  nameWithType: XTMFRuntimeException.XTMFRuntimeException(IModule, Exception, String)
  fullName: XTMF.XTMFRuntimeException.XTMFRuntimeException(XTMF.IModule, System.Exception, System.String)
  type: Constructor
  source:
    remote:
      path: Code/XTMFInterfaces/XTMFRuntimeException.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMFInterfaces/XTMFRuntimeException.cs
    startLine: 47
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public XTMFRuntimeException(IModule module, Exception wrapedException, string message = null)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: wrapedException
      type: System.Exception
    - id: message
      type: System.String
    content.vb: Public Sub New(module As IModule, wrapedException As Exception, message As String = Nothing)
  overload: XTMF.XTMFRuntimeException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: XTMF.XTMFRuntimeException.Module*
  commentId: Overload:XTMF.XTMFRuntimeException.Module
  isExternal: false
  name: Module
  nameWithType: XTMFRuntimeException.Module
  fullName: XTMF.XTMFRuntimeException.Module
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: XTMF.XTMFRuntimeException.#ctor*
  commentId: Overload:XTMF.XTMFRuntimeException.#ctor
  isExternal: false
  name: XTMFRuntimeException
  nameWithType: XTMFRuntimeException.XTMFRuntimeException
  fullName: XTMF.XTMFRuntimeException.XTMFRuntimeException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
