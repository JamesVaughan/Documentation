### YamlMime:ManagedReference
items:
- uid: TMG.Emme.ModellerController
  commentId: T:TMG.Emme.ModellerController
  id: ModellerController
  parent: TMG.Emme
  children:
  - TMG.Emme.ModellerController.#ctor(XTMF.IModule,System.String,System.String,System.Boolean,System.String)
  - TMG.Emme.ModellerController.CheckToolExists(XTMF.IModule,System.String)
  - TMG.Emme.ModellerController.CleanLogbook(XTMF.IModule)
  - TMG.Emme.ModellerController.Dispose(System.Boolean)
  - TMG.Emme.ModellerController.Finalize
  - TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String)
  - TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String,System.Action{System.Single},System.String@)
  - TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String,System.String@)
  - TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[])
  - TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.Action{System.Single},System.String@)
  - TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.String@)
  langs:
  - csharp
  - vb
  name: ModellerController
  nameWithType: ModellerController
  fullName: TMG.Emme.ModellerController
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModellerController
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 27
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: 'public sealed class ModellerController : Controller, IDisposable'
    content.vb: >-
      Public NotInheritable Class ModellerController
          Inherits Controller
          Implements IDisposable
  inheritance:
  - System.Object
  - TMG.Emme.Controller
  implements:
  - System.IDisposable
  inheritedMembers:
  - TMG.Emme.Controller.Emme
  - TMG.Emme.Controller.FromEmme
  - TMG.Emme.Controller.ToEmme
  - TMG.Emme.Controller.FailTimer
  - TMG.Emme.Controller.LaunchInNewWindow
  - TMG.Emme.Controller.ProjectFile
  - TMG.Emme.Controller.Close
  - TMG.Emme.Controller.Dispose
  - TMG.Emme.Controller.ToEmmeFloat(System.Single)
  - TMG.Emme.Controller.ToEmmeFloat(System.Single,System.Text.StringBuilder)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TMG.Emme.ModellerController.#ctor(XTMF.IModule,System.String,System.String,System.Boolean,System.String)
  commentId: M:TMG.Emme.ModellerController.#ctor(XTMF.IModule,System.String,System.String,System.Boolean,System.String)
  id: '#ctor(XTMF.IModule,System.String,System.String,System.Boolean,System.String)'
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: ModellerController(IModule, String, String, Boolean, String)
  nameWithType: ModellerController.ModellerController(IModule, String, String, Boolean, String)
  fullName: TMG.Emme.ModellerController.ModellerController(XTMF.IModule, System.String, System.String, System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 109
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  summary: "\n"
  example: []
  syntax:
    content: public ModellerController(IModule module, string projectFile, string databank = null, bool performanceAnalysis = false, string userInitials = "XTMF")
    parameters:
    - id: module
      type: XTMF.IModule
    - id: projectFile
      type: System.String
      description: ''
    - id: databank
      type: System.String
    - id: performanceAnalysis
      type: System.Boolean
      description: ''
    - id: userInitials
      type: System.String
      description: ''
    content.vb: Public Sub New(module As IModule, projectFile As String, databank As String = Nothing, performanceAnalysis As Boolean = False, userInitials As String = "XTMF")
  overload: TMG.Emme.ModellerController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.ModellerController.Finalize
  commentId: M:TMG.Emme.ModellerController.Finalize
  id: Finalize
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ModellerController.Finalize()
  fullName: TMG.Emme.ModellerController.Finalize()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Finalize
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 185
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: TMG.Emme.ModellerController.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.Emme.ModellerController.CleanLogbook(XTMF.IModule)
  commentId: M:TMG.Emme.ModellerController.CleanLogbook(XTMF.IModule)
  id: CleanLogbook(XTMF.IModule)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: CleanLogbook(IModule)
  nameWithType: ModellerController.CleanLogbook(IModule)
  fullName: TMG.Emme.ModellerController.CleanLogbook(XTMF.IModule)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CleanLogbook
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 194
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  summary: "\nTry to clean out the Emme Modeller&apos;s log-book\n"
  example: []
  syntax:
    content: public bool CleanLogbook(IModule module)
    parameters:
    - id: module
      type: XTMF.IModule
    return:
      type: System.Boolean
      description: If we successfully cleaned the log book
    content.vb: Public Function CleanLogbook(module As IModule) As Boolean
  overload: TMG.Emme.ModellerController.CleanLogbook*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.ModellerController.CheckToolExists(XTMF.IModule,System.String)
  commentId: M:TMG.Emme.ModellerController.CheckToolExists(XTMF.IModule,System.String)
  id: CheckToolExists(XTMF.IModule,System.String)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: CheckToolExists(IModule, String)
  nameWithType: ModellerController.CheckToolExists(IModule, String)
  fullName: TMG.Emme.ModellerController.CheckToolExists(XTMF.IModule, System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CheckToolExists
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 288
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool CheckToolExists(IModule module, string toolNamespace)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: toolNamespace
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckToolExists(module As IModule, toolNamespace As String) As Boolean
  overload: TMG.Emme.ModellerController.CheckToolExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String)
  commentId: M:TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String)
  id: Run(XTMF.IModule,System.String,System.String)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Run(IModule, String, String)
  nameWithType: ModellerController.Run(IModule, String, String)
  fullName: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 310
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public override bool Run(IModule module, string macroName, string arguments)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: macroName
      type: System.String
    - id: arguments
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Run(module As IModule, macroName As String, arguments As String) As Boolean
  overridden: TMG.Emme.Controller.Run(XTMF.IModule,System.String,System.String)
  overload: TMG.Emme.ModellerController.Run*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String,System.String@)
  commentId: M:TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String,System.String@)
  id: Run(XTMF.IModule,System.String,System.String,System.String@)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Run(IModule, String, String, ref String)
  nameWithType: ModellerController.Run(IModule, String, String, ref String)
  fullName: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 316
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool Run(IModule module, string macroName, string arguments, ref string returnValue)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: macroName
      type: System.String
    - id: arguments
      type: System.String
    - id: returnValue
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Run(module As IModule, macroName As String, arguments As String, ByRef returnValue As String) As Boolean
  overload: TMG.Emme.ModellerController.Run*
  nameWithType.vb: ModellerController.Run(IModule, String, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, System.String, ByRef System.String)
  name.vb: Run(IModule, String, String, ByRef String)
- uid: TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String,System.Action{System.Single},System.String@)
  commentId: M:TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,System.String,System.Action{System.Single},System.String@)
  id: Run(XTMF.IModule,System.String,System.String,System.Action{System.Single},System.String@)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Run(IModule, String, String, Action<Single>, ref String)
  nameWithType: ModellerController.Run(IModule, String, String, Action<Single>, ref String)
  fullName: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, System.String, System.Action<System.Single>, ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 321
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool Run(IModule module, string macroName, string arguments, Action<float> progressUpdate, ref string returnValue)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: macroName
      type: System.String
    - id: arguments
      type: System.String
    - id: progressUpdate
      type: System.Action{System.Single}
    - id: returnValue
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Run(module As IModule, macroName As String, arguments As String, progressUpdate As Action(Of Single), ByRef returnValue As String) As Boolean
  overload: TMG.Emme.ModellerController.Run*
  nameWithType.vb: ModellerController.Run(IModule, String, String, Action(Of Single), ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, System.String, System.Action(Of System.Single), ByRef System.String)
  name.vb: Run(IModule, String, String, Action(Of Single), ByRef String)
- uid: TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[])
  commentId: M:TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[])
  id: Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[])
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Run(IModule, String, ModellerControllerParameter[])
  nameWithType: ModellerController.Run(IModule, String, ModellerControllerParameter[])
  fullName: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, TMG.Emme.ModellerControllerParameter[])
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 354
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool Run(IModule module, string macroName, ModellerControllerParameter[] arguments)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: macroName
      type: System.String
    - id: arguments
      type: TMG.Emme.ModellerControllerParameter[]
    return:
      type: System.Boolean
    content.vb: Public Function Run(module As IModule, macroName As String, arguments As ModellerControllerParameter()) As Boolean
  overload: TMG.Emme.ModellerController.Run*
  nameWithType.vb: ModellerController.Run(IModule, String, ModellerControllerParameter())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, TMG.Emme.ModellerControllerParameter())
  name.vb: Run(IModule, String, ModellerControllerParameter())
- uid: TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.String@)
  commentId: M:TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.String@)
  id: Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.String@)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Run(IModule, String, ModellerControllerParameter[], ref String)
  nameWithType: ModellerController.Run(IModule, String, ModellerControllerParameter[], ref String)
  fullName: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, TMG.Emme.ModellerControllerParameter[], ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 360
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool Run(IModule module, string macroName, ModellerControllerParameter[] arguments, ref string returnValue)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: macroName
      type: System.String
    - id: arguments
      type: TMG.Emme.ModellerControllerParameter[]
    - id: returnValue
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Run(module As IModule, macroName As String, arguments As ModellerControllerParameter(), ByRef returnValue As String) As Boolean
  overload: TMG.Emme.ModellerController.Run*
  nameWithType.vb: ModellerController.Run(IModule, String, ModellerControllerParameter(), ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, TMG.Emme.ModellerControllerParameter(), ByRef System.String)
  name.vb: Run(IModule, String, ModellerControllerParameter(), ByRef String)
- uid: TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.Action{System.Single},System.String@)
  commentId: M:TMG.Emme.ModellerController.Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.Action{System.Single},System.String@)
  id: Run(XTMF.IModule,System.String,TMG.Emme.ModellerControllerParameter[],System.Action{System.Single},System.String@)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Run(IModule, String, ModellerControllerParameter[], Action<Single>, ref String)
  nameWithType: ModellerController.Run(IModule, String, ModellerControllerParameter[], Action<Single>, ref String)
  fullName: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, TMG.Emme.ModellerControllerParameter[], System.Action<System.Single>, ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Run
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 365
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool Run(IModule module, string macroName, ModellerControllerParameter[] arguments, Action<float> progressUpdate, ref string returnValue)
    parameters:
    - id: module
      type: XTMF.IModule
    - id: macroName
      type: System.String
    - id: arguments
      type: TMG.Emme.ModellerControllerParameter[]
    - id: progressUpdate
      type: System.Action{System.Single}
    - id: returnValue
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Run(module As IModule, macroName As String, arguments As ModellerControllerParameter(), progressUpdate As Action(Of Single), ByRef returnValue As String) As Boolean
  overload: TMG.Emme.ModellerController.Run*
  nameWithType.vb: ModellerController.Run(IModule, String, ModellerControllerParameter(), Action(Of Single), ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.ModellerController.Run(XTMF.IModule, System.String, TMG.Emme.ModellerControllerParameter(), System.Action(Of System.Single), ByRef System.String)
  name.vb: Run(IModule, String, ModellerControllerParameter(), Action(Of Single), ByRef String)
- uid: TMG.Emme.ModellerController.Dispose(System.Boolean)
  commentId: M:TMG.Emme.ModellerController.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TMG.Emme.ModellerController
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ModellerController.Dispose(Boolean)
  fullName: TMG.Emme.ModellerController.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/ModellerController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../XTMF/Code/TMG.Emme/ModellerController.cs
    startLine: 407
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: protected override void Dispose(bool finalizer)
    parameters:
    - id: finalizer
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(finalizer As Boolean)
  overridden: TMG.Emme.Controller.Dispose(System.Boolean)
  overload: TMG.Emme.ModellerController.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: TMG.Emme
  commentId: N:TMG.Emme
  isExternal: false
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  isExternal: false
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: TMG.Emme.Controller.Emme
  commentId: F:TMG.Emme.Controller.Emme
  parent: TMG.Emme.Controller
  isExternal: false
  name: Emme
  nameWithType: Controller.Emme
  fullName: TMG.Emme.Controller.Emme
- uid: TMG.Emme.Controller.FromEmme
  commentId: F:TMG.Emme.Controller.FromEmme
  parent: TMG.Emme.Controller
  isExternal: false
  name: FromEmme
  nameWithType: Controller.FromEmme
  fullName: TMG.Emme.Controller.FromEmme
- uid: TMG.Emme.Controller.ToEmme
  commentId: F:TMG.Emme.Controller.ToEmme
  parent: TMG.Emme.Controller
  isExternal: false
  name: ToEmme
  nameWithType: Controller.ToEmme
  fullName: TMG.Emme.Controller.ToEmme
- uid: TMG.Emme.Controller.FailTimer
  commentId: P:TMG.Emme.Controller.FailTimer
  parent: TMG.Emme.Controller
  isExternal: false
  name: FailTimer
  nameWithType: Controller.FailTimer
  fullName: TMG.Emme.Controller.FailTimer
- uid: TMG.Emme.Controller.LaunchInNewWindow
  commentId: P:TMG.Emme.Controller.LaunchInNewWindow
  parent: TMG.Emme.Controller
  isExternal: false
  name: LaunchInNewWindow
  nameWithType: Controller.LaunchInNewWindow
  fullName: TMG.Emme.Controller.LaunchInNewWindow
- uid: TMG.Emme.Controller.ProjectFile
  commentId: P:TMG.Emme.Controller.ProjectFile
  parent: TMG.Emme.Controller
  isExternal: false
  name: ProjectFile
  nameWithType: Controller.ProjectFile
  fullName: TMG.Emme.Controller.ProjectFile
- uid: TMG.Emme.Controller.Close
  commentId: M:TMG.Emme.Controller.Close
  parent: TMG.Emme.Controller
  isExternal: false
  name: Close()
  nameWithType: Controller.Close()
  fullName: TMG.Emme.Controller.Close()
  spec.csharp:
  - uid: TMG.Emme.Controller.Close
    name: Close
    nameWithType: Controller.Close
    fullName: TMG.Emme.Controller.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Controller.Close
    name: Close
    nameWithType: Controller.Close
    fullName: TMG.Emme.Controller.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller.Dispose
  commentId: M:TMG.Emme.Controller.Dispose
  parent: TMG.Emme.Controller
  isExternal: false
  name: Dispose()
  nameWithType: Controller.Dispose()
  fullName: TMG.Emme.Controller.Dispose()
  spec.csharp:
  - uid: TMG.Emme.Controller.Dispose
    name: Dispose
    nameWithType: Controller.Dispose
    fullName: TMG.Emme.Controller.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Controller.Dispose
    name: Dispose
    nameWithType: Controller.Dispose
    fullName: TMG.Emme.Controller.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller.ToEmmeFloat(System.Single)
  commentId: M:TMG.Emme.Controller.ToEmmeFloat(System.Single)
  parent: TMG.Emme.Controller
  isExternal: true
  name: ToEmmeFloat(Single)
  nameWithType: Controller.ToEmmeFloat(Single)
  fullName: TMG.Emme.Controller.ToEmmeFloat(System.Single)
  spec.csharp:
  - uid: TMG.Emme.Controller.ToEmmeFloat(System.Single)
    name: ToEmmeFloat
    nameWithType: Controller.ToEmmeFloat
    fullName: TMG.Emme.Controller.ToEmmeFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Controller.ToEmmeFloat(System.Single)
    name: ToEmmeFloat
    nameWithType: Controller.ToEmmeFloat
    fullName: TMG.Emme.Controller.ToEmmeFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller.ToEmmeFloat(System.Single,System.Text.StringBuilder)
  commentId: M:TMG.Emme.Controller.ToEmmeFloat(System.Single,System.Text.StringBuilder)
  parent: TMG.Emme.Controller
  isExternal: true
  name: ToEmmeFloat(Single, StringBuilder)
  nameWithType: Controller.ToEmmeFloat(Single, StringBuilder)
  fullName: TMG.Emme.Controller.ToEmmeFloat(System.Single, System.Text.StringBuilder)
  spec.csharp:
  - uid: TMG.Emme.Controller.ToEmmeFloat(System.Single,System.Text.StringBuilder)
    name: ToEmmeFloat
    nameWithType: Controller.ToEmmeFloat
    fullName: TMG.Emme.Controller.ToEmmeFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Controller.ToEmmeFloat(System.Single,System.Text.StringBuilder)
    name: ToEmmeFloat
    nameWithType: Controller.ToEmmeFloat
    fullName: TMG.Emme.Controller.ToEmmeFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme.ModellerController.#ctor*
  commentId: Overload:TMG.Emme.ModellerController.#ctor
  isExternal: false
  name: ModellerController
  nameWithType: ModellerController.ModellerController
  fullName: TMG.Emme.ModellerController.ModellerController
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Emme.ModellerController.Finalize*
  commentId: Overload:TMG.Emme.ModellerController.Finalize
  isExternal: false
  name: Finalize
  nameWithType: ModellerController.Finalize
  fullName: TMG.Emme.ModellerController.Finalize
- uid: TMG.Emme.ModellerController.CleanLogbook*
  commentId: Overload:TMG.Emme.ModellerController.CleanLogbook
  isExternal: false
  name: CleanLogbook
  nameWithType: ModellerController.CleanLogbook
  fullName: TMG.Emme.ModellerController.CleanLogbook
- uid: TMG.Emme.ModellerController.CheckToolExists*
  commentId: Overload:TMG.Emme.ModellerController.CheckToolExists
  isExternal: false
  name: CheckToolExists
  nameWithType: ModellerController.CheckToolExists
  fullName: TMG.Emme.ModellerController.CheckToolExists
- uid: TMG.Emme.Controller.Run(XTMF.IModule,System.String,System.String)
  commentId: M:TMG.Emme.Controller.Run(XTMF.IModule,System.String,System.String)
  parent: TMG.Emme.Controller
  isExternal: true
  name: Run(IModule, String, String)
  nameWithType: Controller.Run(IModule, String, String)
  fullName: TMG.Emme.Controller.Run(XTMF.IModule, System.String, System.String)
  spec.csharp:
  - uid: TMG.Emme.Controller.Run(XTMF.IModule,System.String,System.String)
    name: Run
    nameWithType: Controller.Run
    fullName: TMG.Emme.Controller.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Controller.Run(XTMF.IModule,System.String,System.String)
    name: Run
    nameWithType: Controller.Run
    fullName: TMG.Emme.Controller.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.ModellerController.Run*
  commentId: Overload:TMG.Emme.ModellerController.Run
  isExternal: false
  name: Run
  nameWithType: ModellerController.Run
  fullName: TMG.Emme.ModellerController.Run
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  name: Action<Single>
  nameWithType: Action<Single>
  fullName: System.Action<System.Single>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of System.Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.ModellerControllerParameter[]
  name: ModellerControllerParameter[]
  nameWithType: ModellerControllerParameter[]
  fullName: TMG.Emme.ModellerControllerParameter[]
  nameWithType.vb: ModellerControllerParameter()
  fullName.vb: TMG.Emme.ModellerControllerParameter()
  name.vb: ModellerControllerParameter()
  spec.csharp:
  - uid: TMG.Emme.ModellerControllerParameter
    name: ModellerControllerParameter
    nameWithType: ModellerControllerParameter
    fullName: TMG.Emme.ModellerControllerParameter
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Emme.ModellerControllerParameter
    name: ModellerControllerParameter
    nameWithType: ModellerControllerParameter
    fullName: TMG.Emme.ModellerControllerParameter
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Emme.Controller.Dispose(System.Boolean)
  commentId: M:TMG.Emme.Controller.Dispose(System.Boolean)
  parent: TMG.Emme.Controller
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Controller.Dispose(Boolean)
  fullName: TMG.Emme.Controller.Dispose(System.Boolean)
  spec.csharp:
  - uid: TMG.Emme.Controller.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Controller.Dispose
    fullName: TMG.Emme.Controller.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Controller.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Controller.Dispose
    fullName: TMG.Emme.Controller.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.ModellerController.Dispose*
  commentId: Overload:TMG.Emme.ModellerController.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ModellerController.Dispose
  fullName: TMG.Emme.ModellerController.Dispose
