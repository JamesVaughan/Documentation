### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Tally.StationAccessTally
  commentId: T:TMG.GTAModel.Tally.StationAccessTally
  id: StationAccessTally
  parent: TMG.GTAModel.Tally
  children:
  - TMG.GTAModel.Tally.StationAccessTally.CountFromOrigin
  - TMG.GTAModel.Tally.StationAccessTally.IncludeTally(System.Single[][])
  - TMG.GTAModel.Tally.StationAccessTally.LineHaull
  - TMG.GTAModel.Tally.StationAccessTally.Sum(System.Single[][])
  - TMG.GTAModel.Tally.StationAccessTally.Time
  langs:
  - csharp
  - vb
  name: StationAccessTally
  nameWithType: StationAccessTally
  fullName: TMG.GTAModel.Tally.StationAccessTally
  type: Class
  source:
    remote:
      path: Code/GTAModel/Tally/StationAccessTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationAccessTally
    path: ../../../XTMF/Code/GTAModel/Tally/StationAccessTally.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Tally
  syntax:
    content: 'public class StationAccessTally : DirectModeAggregationTally, IModeAggregationTally, IModule'
    content.vb: >-
      Public Class StationAccessTally
          Inherits DirectModeAggregationTally
          Implements IModeAggregationTally, IModule
  inheritance:
  - System.Object
  - TMG.GTAModel.DirectModeAggregationTally
  implements:
  - TMG.IModeAggregationTally
  - XTMF.IModule
  inheritedMembers:
  - TMG.GTAModel.DirectModeAggregationTally.ModeNames
  - TMG.GTAModel.DirectModeAggregationTally.PurposeNames
  - TMG.GTAModel.DirectModeAggregationTally.Root
  - TMG.GTAModel.DirectModeAggregationTally.ModeIndexes
  - TMG.GTAModel.DirectModeAggregationTally.PurposeIndexes
  - TMG.GTAModel.DirectModeAggregationTally.Name
  - TMG.GTAModel.DirectModeAggregationTally.Progress
  - TMG.GTAModel.DirectModeAggregationTally.ProgressColour
  - TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation(System.String@)
  - TMG.GTAModel.DirectModeAggregationTally.GetMode(System.Int32)
  - TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List{TMG.TreeData{System.Single[][]}},System.Int32)
  - TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData{System.Single[][]},System.Int32,System.Int32@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Tally.StationAccessTally.CountFromOrigin
  commentId: F:TMG.GTAModel.Tally.StationAccessTally.CountFromOrigin
  id: CountFromOrigin
  parent: TMG.GTAModel.Tally.StationAccessTally
  langs:
  - csharp
  - vb
  name: CountFromOrigin
  nameWithType: StationAccessTally.CountFromOrigin
  fullName: TMG.GTAModel.Tally.StationAccessTally.CountFromOrigin
  type: Field
  source:
    remote:
      path: Code/GTAModel/Tally/StationAccessTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CountFromOrigin
    path: ../../../XTMF/Code/GTAModel/Tally/StationAccessTally.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Tally
  syntax:
    content: >-
      [RunParameter("Count From Origin", true, "Should we be tallying from the origin to the intermediate zone\r\nor should we be counting from the intermediate zone to the destination?")]

      public bool CountFromOrigin
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Count From Origin", True, "Should we be tallying from the origin to the intermediate zone" & vbCrLf & "or should we be counting from the intermediate zone to the destination?")>

      Public CountFromOrigin As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Count From Origin
    - type: System.Boolean
      value: true
    - type: System.String
      value: >-
        Should we be tallying from the origin to the intermediate zone

        or should we be counting from the intermediate zone to the destination?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Tally.StationAccessTally.LineHaull
  commentId: F:TMG.GTAModel.Tally.StationAccessTally.LineHaull
  id: LineHaull
  parent: TMG.GTAModel.Tally.StationAccessTally
  langs:
  - csharp
  - vb
  name: LineHaull
  nameWithType: StationAccessTally.LineHaull
  fullName: TMG.GTAModel.Tally.StationAccessTally.LineHaull
  type: Field
  source:
    remote:
      path: Code/GTAModel/Tally/StationAccessTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LineHaull
    path: ../../../XTMF/Code/GTAModel/Tally/StationAccessTally.cs
    startLine: 36
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Tally
  syntax:
    content: >-
      [RunParameter("Count Line Hull", false, "Should we be tallying the line haul (access station to egress station).\r\nThis option takes priority over Count From Origin.")]

      public bool LineHaull
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Count Line Hull", False, "Should we be tallying the line haul (access station to egress station)." & vbCrLf & "This option takes priority over Count From Origin.")>

      Public LineHaull As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Count Line Hull
    - type: System.Boolean
      value: false
    - type: System.String
      value: >-
        Should we be tallying the line haul (access station to egress station).

        This option takes priority over Count From Origin.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Tally.StationAccessTally.Time
  commentId: F:TMG.GTAModel.Tally.StationAccessTally.Time
  id: Time
  parent: TMG.GTAModel.Tally.StationAccessTally
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: StationAccessTally.Time
  fullName: TMG.GTAModel.Tally.StationAccessTally.Time
  type: Field
  source:
    remote:
      path: Code/GTAModel/Tally/StationAccessTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Time
    path: ../../../XTMF/Code/GTAModel/Tally/StationAccessTally.cs
    startLine: 39
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Tally
  syntax:
    content: >-
      [RunParameter("Simulation Time", "7:00AM", typeof (Time), "The time of day to use for the split.")]

      public Time Time
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("Simulation Time", "7:00AM", GetType(Time), "The time of day to use for the split.")>

      Public Time As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Simulation Time
    - type: System.String
      value: 7:00AM
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: The time of day to use for the split.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Tally.StationAccessTally.IncludeTally(System.Single[][])
  commentId: M:TMG.GTAModel.Tally.StationAccessTally.IncludeTally(System.Single[][])
  id: IncludeTally(System.Single[][])
  parent: TMG.GTAModel.Tally.StationAccessTally
  langs:
  - csharp
  - vb
  name: IncludeTally(Single[][])
  nameWithType: StationAccessTally.IncludeTally(Single[][])
  fullName: TMG.GTAModel.Tally.StationAccessTally.IncludeTally(System.Single[][])
  type: Method
  source:
    remote:
      path: Code/GTAModel/Tally/StationAccessTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IncludeTally
    path: ../../../XTMF/Code/GTAModel/Tally/StationAccessTally.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Tally
  syntax:
    content: public override void IncludeTally(float[][] currentTally)
    parameters:
    - id: currentTally
      type: System.Single[][]
    content.vb: Public Overrides Sub IncludeTally(currentTally As Single()())
  overridden: TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single[][])
  overload: TMG.GTAModel.Tally.StationAccessTally.IncludeTally*
  nameWithType.vb: StationAccessTally.IncludeTally(Single()())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TMG.GTAModel.Tally.StationAccessTally.IncludeTally(System.Single()())
  name.vb: IncludeTally(Single()())
- uid: TMG.GTAModel.Tally.StationAccessTally.Sum(System.Single[][])
  commentId: M:TMG.GTAModel.Tally.StationAccessTally.Sum(System.Single[][])
  id: Sum(System.Single[][])
  parent: TMG.GTAModel.Tally.StationAccessTally
  langs:
  - csharp
  - vb
  name: Sum(Single[][])
  nameWithType: StationAccessTally.Sum(Single[][])
  fullName: TMG.GTAModel.Tally.StationAccessTally.Sum(System.Single[][])
  type: Method
  source:
    remote:
      path: Code/GTAModel/Tally/StationAccessTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Sum
    path: ../../../XTMF/Code/GTAModel/Tally/StationAccessTally.cs
    startLine: 157
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Tally
  syntax:
    content: public float Sum(float[][] data)
    parameters:
    - id: data
      type: System.Single[][]
    return:
      type: System.Single
    content.vb: Public Function Sum(data As Single()()) As Single
  overload: TMG.GTAModel.Tally.StationAccessTally.Sum*
  nameWithType.vb: StationAccessTally.Sum(Single()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Tally.StationAccessTally.Sum(System.Single()())
  name.vb: Sum(Single()())
references:
- uid: TMG.GTAModel.Tally
  commentId: N:TMG.GTAModel.Tally
  isExternal: false
  name: TMG.GTAModel.Tally
  nameWithType: TMG.GTAModel.Tally
  fullName: TMG.GTAModel.Tally
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.GTAModel.DirectModeAggregationTally
  commentId: T:TMG.GTAModel.DirectModeAggregationTally
  parent: TMG.GTAModel
  isExternal: false
  name: DirectModeAggregationTally
  nameWithType: DirectModeAggregationTally
  fullName: TMG.GTAModel.DirectModeAggregationTally
- uid: TMG.IModeAggregationTally
  commentId: T:TMG.IModeAggregationTally
  parent: TMG
  isExternal: false
  name: IModeAggregationTally
  nameWithType: IModeAggregationTally
  fullName: TMG.IModeAggregationTally
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.GTAModel.DirectModeAggregationTally.ModeNames
  commentId: F:TMG.GTAModel.DirectModeAggregationTally.ModeNames
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: ModeNames
  nameWithType: DirectModeAggregationTally.ModeNames
  fullName: TMG.GTAModel.DirectModeAggregationTally.ModeNames
- uid: TMG.GTAModel.DirectModeAggregationTally.PurposeNames
  commentId: F:TMG.GTAModel.DirectModeAggregationTally.PurposeNames
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: PurposeNames
  nameWithType: DirectModeAggregationTally.PurposeNames
  fullName: TMG.GTAModel.DirectModeAggregationTally.PurposeNames
- uid: TMG.GTAModel.DirectModeAggregationTally.Root
  commentId: F:TMG.GTAModel.DirectModeAggregationTally.Root
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: Root
  nameWithType: DirectModeAggregationTally.Root
  fullName: TMG.GTAModel.DirectModeAggregationTally.Root
- uid: TMG.GTAModel.DirectModeAggregationTally.ModeIndexes
  commentId: F:TMG.GTAModel.DirectModeAggregationTally.ModeIndexes
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: ModeIndexes
  nameWithType: DirectModeAggregationTally.ModeIndexes
  fullName: TMG.GTAModel.DirectModeAggregationTally.ModeIndexes
- uid: TMG.GTAModel.DirectModeAggregationTally.PurposeIndexes
  commentId: F:TMG.GTAModel.DirectModeAggregationTally.PurposeIndexes
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: PurposeIndexes
  nameWithType: DirectModeAggregationTally.PurposeIndexes
  fullName: TMG.GTAModel.DirectModeAggregationTally.PurposeIndexes
- uid: TMG.GTAModel.DirectModeAggregationTally.Name
  commentId: P:TMG.GTAModel.DirectModeAggregationTally.Name
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: Name
  nameWithType: DirectModeAggregationTally.Name
  fullName: TMG.GTAModel.DirectModeAggregationTally.Name
- uid: TMG.GTAModel.DirectModeAggregationTally.Progress
  commentId: P:TMG.GTAModel.DirectModeAggregationTally.Progress
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: Progress
  nameWithType: DirectModeAggregationTally.Progress
  fullName: TMG.GTAModel.DirectModeAggregationTally.Progress
- uid: TMG.GTAModel.DirectModeAggregationTally.ProgressColour
  commentId: P:TMG.GTAModel.DirectModeAggregationTally.ProgressColour
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: false
  name: ProgressColour
  nameWithType: DirectModeAggregationTally.ProgressColour
  fullName: TMG.GTAModel.DirectModeAggregationTally.ProgressColour
- uid: TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation(System.String@)
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: DirectModeAggregationTally.RuntimeValidation(String)
  fullName: TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: DirectModeAggregationTally.RuntimeValidation
    fullName: TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: DirectModeAggregationTally.RuntimeValidation
    fullName: TMG.GTAModel.DirectModeAggregationTally.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DirectModeAggregationTally.GetMode(System.Int32)
  commentId: M:TMG.GTAModel.DirectModeAggregationTally.GetMode(System.Int32)
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: true
  name: GetMode(Int32)
  nameWithType: DirectModeAggregationTally.GetMode(Int32)
  fullName: TMG.GTAModel.DirectModeAggregationTally.GetMode(System.Int32)
  spec.csharp:
  - uid: TMG.GTAModel.DirectModeAggregationTally.GetMode(System.Int32)
    name: GetMode
    nameWithType: DirectModeAggregationTally.GetMode
    fullName: TMG.GTAModel.DirectModeAggregationTally.GetMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DirectModeAggregationTally.GetMode(System.Int32)
    name: GetMode
    nameWithType: DirectModeAggregationTally.GetMode
    fullName: TMG.GTAModel.DirectModeAggregationTally.GetMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List{TMG.TreeData{System.Single[][]}},System.Int32)
  commentId: M:TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List{TMG.TreeData{System.Single[][]}},System.Int32)
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: true
  name: GetResult(List<TreeData<Single[][]>>, Int32)
  nameWithType: DirectModeAggregationTally.GetResult(List<TreeData<Single[][]>>, Int32)
  fullName: TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List<TMG.TreeData<System.Single[][]>>, System.Int32)
  nameWithType.vb: DirectModeAggregationTally.GetResult(List(Of TreeData(Of Single()())), Int32)
  fullName.vb: TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List(Of TMG.TreeData(Of System.Single()())), System.Int32)
  name.vb: GetResult(List(Of TreeData(Of Single()())), Int32)
  spec.csharp:
  - uid: TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List{TMG.TreeData{System.Single[][]}},System.Int32)
    name: GetResult
    nameWithType: DirectModeAggregationTally.GetResult
    fullName: TMG.GTAModel.DirectModeAggregationTally.GetResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.TreeData`1
    name: TreeData
    nameWithType: TreeData
    fullName: TMG.TreeData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DirectModeAggregationTally.GetResult(System.Collections.Generic.List{TMG.TreeData{System.Single[][]}},System.Int32)
    name: GetResult
    nameWithType: DirectModeAggregationTally.GetResult
    fullName: TMG.GTAModel.DirectModeAggregationTally.GetResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.TreeData`1
    name: TreeData
    nameWithType: TreeData
    fullName: TMG.TreeData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData{System.Single[][]},System.Int32,System.Int32@)
  commentId: M:TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData{System.Single[][]},System.Int32,System.Int32@)
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: true
  name: GetResult(TreeData<Single[][]>, Int32, Int32)
  nameWithType: DirectModeAggregationTally.GetResult(TreeData<Single[][]>, Int32, Int32)
  fullName: TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData<System.Single[][]>, System.Int32, System.Int32)
  nameWithType.vb: DirectModeAggregationTally.GetResult(TreeData(Of Single()()), Int32, Int32)
  fullName.vb: TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData(Of System.Single()()), System.Int32, System.Int32)
  name.vb: GetResult(TreeData(Of Single()()), Int32, Int32)
  spec.csharp:
  - uid: TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData{System.Single[][]},System.Int32,System.Int32@)
    name: GetResult
    nameWithType: DirectModeAggregationTally.GetResult
    fullName: TMG.GTAModel.DirectModeAggregationTally.GetResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.TreeData`1
    name: TreeData
    nameWithType: TreeData
    fullName: TMG.TreeData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DirectModeAggregationTally.GetResult(TMG.TreeData{System.Single[][]},System.Int32,System.Int32@)
    name: GetResult
    nameWithType: DirectModeAggregationTally.GetResult
    fullName: TMG.GTAModel.DirectModeAggregationTally.GetResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.TreeData`1
    name: TreeData
    nameWithType: TreeData
    fullName: TMG.TreeData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  isExternal: false
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single[][])
  commentId: M:TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single[][])
  parent: TMG.GTAModel.DirectModeAggregationTally
  isExternal: true
  name: IncludeTally(Single[][])
  nameWithType: DirectModeAggregationTally.IncludeTally(Single[][])
  fullName: TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single[][])
  nameWithType.vb: DirectModeAggregationTally.IncludeTally(Single()())
  fullName.vb: TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single()())
  name.vb: IncludeTally(Single()())
  spec.csharp:
  - uid: TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single[][])
    name: IncludeTally
    nameWithType: DirectModeAggregationTally.IncludeTally
    fullName: TMG.GTAModel.DirectModeAggregationTally.IncludeTally
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DirectModeAggregationTally.IncludeTally(System.Single[][])
    name: IncludeTally
    nameWithType: DirectModeAggregationTally.IncludeTally
    fullName: TMG.GTAModel.DirectModeAggregationTally.IncludeTally
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Tally.StationAccessTally.IncludeTally*
  commentId: Overload:TMG.GTAModel.Tally.StationAccessTally.IncludeTally
  isExternal: false
  name: IncludeTally
  nameWithType: StationAccessTally.IncludeTally
  fullName: TMG.GTAModel.Tally.StationAccessTally.IncludeTally
- uid: System.Single[][]
  name: Single[][]
  nameWithType: Single[][]
  fullName: System.Single[][]
  nameWithType.vb: Single()()
  fullName.vb: System.Single()()
  name.vb: Single()()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.GTAModel.Tally.StationAccessTally.Sum*
  commentId: Overload:TMG.GTAModel.Tally.StationAccessTally.Sum
  isExternal: false
  name: Sum
  nameWithType: StationAccessTally.Sum
  fullName: TMG.GTAModel.Tally.StationAccessTally.Sum
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
