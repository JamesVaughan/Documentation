### YamlMime:ManagedReference
items:
- uid: XTMF.ModuleRepository
  commentId: T:XTMF.ModuleRepository
  id: ModuleRepository
  parent: XTMF
  children:
  - XTMF.ModuleRepository.AddModule(System.Type)
  - XTMF.ModuleRepository.GetEnumerator
  - XTMF.ModuleRepository.GetModuleType(System.String)
  - XTMF.ModuleRepository.Modules
  - XTMF.ModuleRepository.System#Collections#IEnumerable#GetEnumerator
  - XTMF.ModuleRepository.Unload(System.Type)
  langs:
  - csharp
  - vb
  name: ModuleRepository
  nameWithType: ModuleRepository
  fullName: XTMF.ModuleRepository
  type: Class
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModuleRepository
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 24
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: 'public class ModuleRepository : IModuleRepository, IEnumerable<Type>, IEnumerable'
    content.vb: >-
      Public Class ModuleRepository
          Implements IModuleRepository, IEnumerable(Of Type), IEnumerable
  inheritance:
  - System.Object
  implements:
  - XTMF.IModuleRepository
  - System.Collections.Generic.IEnumerable{System.Type}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ModuleRepository.Modules
  commentId: P:XTMF.ModuleRepository.Modules
  id: Modules
  parent: XTMF.ModuleRepository
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: ModuleRepository.Modules
  fullName: XTMF.ModuleRepository.Modules
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Modules
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 28
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IList<Type> Modules { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Type}
    content.vb: Public ReadOnly Property Modules As IList(Of Type)
  overload: XTMF.ModuleRepository.Modules*
  implements:
  - XTMF.IModuleRepository.Modules
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModuleRepository.AddModule(System.Type)
  commentId: M:XTMF.ModuleRepository.AddModule(System.Type)
  id: AddModule(System.Type)
  parent: XTMF.ModuleRepository
  langs:
  - csharp
  - vb
  name: AddModule(Type)
  nameWithType: ModuleRepository.AddModule(Type)
  fullName: XTMF.ModuleRepository.AddModule(System.Type)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddModule
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 30
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool AddModule(Type module)
    parameters:
    - id: module
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function AddModule(module As Type) As Boolean
  overload: XTMF.ModuleRepository.AddModule*
  implements:
  - XTMF.IModuleRepository.AddModule(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleRepository.GetEnumerator
  commentId: M:XTMF.ModuleRepository.GetEnumerator
  id: GetEnumerator
  parent: XTMF.ModuleRepository
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ModuleRepository.GetEnumerator()
  fullName: XTMF.ModuleRepository.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetEnumerator
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 44
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IEnumerator<Type> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Type}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Type)
  overload: XTMF.ModuleRepository.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleRepository.GetModuleType(System.String)
  commentId: M:XTMF.ModuleRepository.GetModuleType(System.String)
  id: GetModuleType(System.String)
  parent: XTMF.ModuleRepository
  langs:
  - csharp
  - vb
  name: GetModuleType(String)
  nameWithType: ModuleRepository.GetModuleType(String)
  fullName: XTMF.ModuleRepository.GetModuleType(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetModuleType
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 46
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Type GetModuleType(string typeName)
    parameters:
    - id: typeName
      type: System.String
    return:
      type: System.Type
    content.vb: Public Function GetModuleType(typeName As String) As Type
  overload: XTMF.ModuleRepository.GetModuleType*
  implements:
  - XTMF.IModuleRepository.GetModuleType(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleRepository.System#Collections#IEnumerable#GetEnumerator
  commentId: M:XTMF.ModuleRepository.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: XTMF.ModuleRepository
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ModuleRepository.IEnumerable.GetEnumerator()
  fullName: XTMF.ModuleRepository.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 51
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: XTMF.ModuleRepository.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModuleRepository.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: XTMF.ModuleRepository.Unload(System.Type)
  commentId: M:XTMF.ModuleRepository.Unload(System.Type)
  id: Unload(System.Type)
  parent: XTMF.ModuleRepository
  langs:
  - csharp
  - vb
  name: Unload(Type)
  nameWithType: ModuleRepository.Unload(Type)
  fullName: XTMF.ModuleRepository.Unload(System.Type)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/ModuleRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Unload
    path: ../../../XTMF/Code/XTMF1.1/ModuleRepository.cs
    startLine: 56
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Unload(Type type)
    parameters:
    - id: type
      type: System.Type
    content.vb: Public Sub Unload(type As Type)
  overload: XTMF.ModuleRepository.Unload*
  implements:
  - XTMF.IModuleRepository.Unload(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModuleRepository
  commentId: T:XTMF.IModuleRepository
  parent: XTMF
  isExternal: false
  name: IModuleRepository
  nameWithType: IModuleRepository
  fullName: XTMF.IModuleRepository
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: XTMF.ModuleRepository.Modules*
  commentId: Overload:XTMF.ModuleRepository.Modules
  isExternal: false
  name: Modules
  nameWithType: ModuleRepository.Modules
  fullName: XTMF.ModuleRepository.Modules
- uid: XTMF.IModuleRepository.Modules
  commentId: P:XTMF.IModuleRepository.Modules
  parent: XTMF.IModuleRepository
  isExternal: false
  name: Modules
  nameWithType: IModuleRepository.Modules
  fullName: XTMF.IModuleRepository.Modules
- uid: System.Collections.Generic.IList{System.Type}
  commentId: T:System.Collections.Generic.IList{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Type>
  nameWithType: IList<Type>
  fullName: System.Collections.Generic.IList<System.Type>
  nameWithType.vb: IList(Of Type)
  fullName.vb: System.Collections.Generic.IList(Of System.Type)
  name.vb: IList(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModuleRepository.AddModule*
  commentId: Overload:XTMF.ModuleRepository.AddModule
  isExternal: false
  name: AddModule
  nameWithType: ModuleRepository.AddModule
  fullName: XTMF.ModuleRepository.AddModule
- uid: XTMF.IModuleRepository.AddModule(System.Type)
  commentId: M:XTMF.IModuleRepository.AddModule(System.Type)
  parent: XTMF.IModuleRepository
  isExternal: true
  name: AddModule(Type)
  nameWithType: IModuleRepository.AddModule(Type)
  fullName: XTMF.IModuleRepository.AddModule(System.Type)
  spec.csharp:
  - uid: XTMF.IModuleRepository.AddModule(System.Type)
    name: AddModule
    nameWithType: IModuleRepository.AddModule
    fullName: XTMF.IModuleRepository.AddModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModuleRepository.AddModule(System.Type)
    name: AddModule
    nameWithType: IModuleRepository.AddModule
    fullName: XTMF.IModuleRepository.AddModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ModuleRepository.GetEnumerator*
  commentId: Overload:XTMF.ModuleRepository.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ModuleRepository.GetEnumerator
  fullName: XTMF.ModuleRepository.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Type}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Type}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Type>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Type).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<Type>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of Type).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Type).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Type}
  commentId: T:System.Collections.Generic.IEnumerator{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Type>
  nameWithType: IEnumerator<Type>
  fullName: System.Collections.Generic.IEnumerator<System.Type>
  nameWithType.vb: IEnumerator(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Type)
  name.vb: IEnumerator(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModuleRepository.GetModuleType*
  commentId: Overload:XTMF.ModuleRepository.GetModuleType
  isExternal: false
  name: GetModuleType
  nameWithType: ModuleRepository.GetModuleType
  fullName: XTMF.ModuleRepository.GetModuleType
- uid: XTMF.IModuleRepository.GetModuleType(System.String)
  commentId: M:XTMF.IModuleRepository.GetModuleType(System.String)
  parent: XTMF.IModuleRepository
  isExternal: true
  name: GetModuleType(String)
  nameWithType: IModuleRepository.GetModuleType(String)
  fullName: XTMF.IModuleRepository.GetModuleType(System.String)
  spec.csharp:
  - uid: XTMF.IModuleRepository.GetModuleType(System.String)
    name: GetModuleType
    nameWithType: IModuleRepository.GetModuleType
    fullName: XTMF.IModuleRepository.GetModuleType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModuleRepository.GetModuleType(System.String)
    name: GetModuleType
    nameWithType: IModuleRepository.GetModuleType
    fullName: XTMF.IModuleRepository.GetModuleType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ModuleRepository.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:XTMF.ModuleRepository.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: ModuleRepository.IEnumerable.GetEnumerator
  fullName: XTMF.ModuleRepository.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModuleRepository.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: XTMF.ModuleRepository.Unload*
  commentId: Overload:XTMF.ModuleRepository.Unload
  isExternal: false
  name: Unload
  nameWithType: ModuleRepository.Unload
  fullName: XTMF.ModuleRepository.Unload
- uid: XTMF.IModuleRepository.Unload(System.Type)
  commentId: M:XTMF.IModuleRepository.Unload(System.Type)
  parent: XTMF.IModuleRepository
  isExternal: true
  name: Unload(Type)
  nameWithType: IModuleRepository.Unload(Type)
  fullName: XTMF.IModuleRepository.Unload(System.Type)
  spec.csharp:
  - uid: XTMF.IModuleRepository.Unload(System.Type)
    name: Unload
    nameWithType: IModuleRepository.Unload
    fullName: XTMF.IModuleRepository.Unload
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModuleRepository.Unload(System.Type)
    name: Unload
    nameWithType: IModuleRepository.Unload
    fullName: XTMF.IModuleRepository.Unload
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
