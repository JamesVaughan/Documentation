### YamlMime:ManagedReference
items:
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  commentId: T:TMG.NetworkEstimation.GeneticNetworkEstimationHost
  id: GeneticNetworkEstimationHost
  parent: TMG.NetworkEstimation
  children:
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.CrossExponent
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose(System.Boolean)
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.EvaluationFile
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Host
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.MaxMutationPercent
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationExponent
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationProbability
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkBaseDirectory
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterInstructions
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Parameters
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Population
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.PopulationSize
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.RemoteModelSystemName
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Reseed
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation(System.String@)
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations
  - TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem
  langs:
  - csharp
  - vb
  name: GeneticNetworkEstimationHost
  nameWithType: GeneticNetworkEstimationHost
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  type: Class
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GeneticNetworkEstimationHost
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 32
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: 'public class GeneticNetworkEstimationHost : I4StepModel, ITravelDemandModel, IModelSystemTemplate, ISelfContainedModule, IModule, IIterativeModel, IDisposable'
    content.vb: >-
      Public Class GeneticNetworkEstimationHost

          Implements I4StepModel, ITravelDemandModel, IModelSystemTemplate, ISelfContainedModule, IModule, IIterativeModel, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - TMG.NetworkEstimation.AdvancedGeneticNetworkEstimationHost
  implements:
  - TMG.I4StepModel
  - TMG.ITravelDemandModel
  - XTMF.IModelSystemTemplate
  - XTMF.ISelfContainedModule
  - XTMF.IModule
  - TMG.IIterativeModel
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CrossExponent
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.CrossExponent
  id: CrossExponent
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: CrossExponent
  nameWithType: GeneticNetworkEstimationHost.CrossExponent
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CrossExponent
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CrossExponent
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 35
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Cross Exponent", 2.2F, "The exponent used for selecting the parameters to breed.")]

      public float CrossExponent
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Cross Exponent", 2.2F, "The exponent used for selecting the parameters to breed.")>

      Public CrossExponent As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Cross Exponent
    - type: System.Single
      value: 2.2000000499999999
    - type: System.String
      value: The exponent used for selecting the parameters to breed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.EvaluationFile
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.EvaluationFile
  id: EvaluationFile
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: EvaluationFile
  nameWithType: GeneticNetworkEstimationHost.EvaluationFile
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.EvaluationFile
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EvaluationFile
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 38
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("EvaluationFile", "Evaluation.csv", "The file that we store the evaluation in.")]

      public string EvaluationFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("EvaluationFile", "Evaluation.csv", "The file that we store the evaluation in.")>

      Public EvaluationFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: EvaluationFile
    - type: System.String
      value: Evaluation.csv
    - type: System.String
      value: The file that we store the evaluation in.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Host
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Host
  id: Host
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: GeneticNetworkEstimationHost.Host
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Host
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Host
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 40
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public IHost Host
    return:
      type: XTMF.Networking.IHost
    content.vb: Public Host As IHost
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.MaxMutationPercent
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.MaxMutationPercent
  id: MaxMutationPercent
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: MaxMutationPercent
  nameWithType: GeneticNetworkEstimationHost.MaxMutationPercent
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.MaxMutationPercent
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaxMutationPercent
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 43
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Max Mutation", 0.4F, "The maximum amount  (in 0 to 1) that a parameter can be mutated")]

      public float MaxMutationPercent
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Max Mutation", 0.4F, "The maximum amount  (in 0 to 1) that a parameter can be mutated")>

      Public MaxMutationPercent As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Mutation
    - type: System.Single
      value: 0.40000000600000002
    - type: System.String
      value: The maximum amount  (in 0 to 1) that a parameter can be mutated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationExponent
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationExponent
  id: MutationExponent
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: MutationExponent
  nameWithType: GeneticNetworkEstimationHost.MutationExponent
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationExponent
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MutationExponent
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 46
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Mutation Exponent", 2F, "The exponent used for mutation")]

      public float MutationExponent
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Mutation Exponent", 2F, "The exponent used for mutation")>

      Public MutationExponent As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Mutation Exponent
    - type: System.Single
      value: 2
    - type: System.String
      value: The exponent used for mutation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationProbability
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationProbability
  id: MutationProbability
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: MutationProbability
  nameWithType: GeneticNetworkEstimationHost.MutationProbability
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.MutationProbability
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MutationProbability
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 49
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Mutation Probability", 3.1F, "The number of mutations per person.  The remainder will be applied with a probability.")]

      public float MutationProbability
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Mutation Probability", 3.1F, "The number of mutations per person.  The remainder will be applied with a probability.")>

      Public MutationProbability As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Mutation Probability
    - type: System.Single
      value: 3.0999998999999998
    - type: System.String
      value: The number of mutations per person.  The remainder will be applied with a probability.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkBaseDirectory
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkBaseDirectory
  id: NetworkBaseDirectory
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: NetworkBaseDirectory
  nameWithType: GeneticNetworkEstimationHost.NetworkBaseDirectory
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkBaseDirectory
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkBaseDirectory
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 52
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Network Base Directory", "D:\\EMMENetworks\\Test_Transit", "The original data bank's base directory")]

      public string NetworkBaseDirectory
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Network Base Directory", "D:\EMMENetworks\Test_Transit", "The original data bank's base directory")>

      Public NetworkBaseDirectory As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Network Base Directory
    - type: System.String
      value: D:\EMMENetworks\Test_Transit
    - type: System.String
      value: The original data bank's base directory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterInstructions
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterInstructions
  id: ParameterInstructions
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: ParameterInstructions
  nameWithType: GeneticNetworkEstimationHost.ParameterInstructions
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterInstructions
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParameterInstructions
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 55
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Parameter Instructions", "../../Input/ParameterInstructions.xml", "Describes which and how the parameters will be estimated.")]

      public string ParameterInstructions
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Parameter Instructions", "../../Input/ParameterInstructions.xml", "Describes which and how the parameters will be estimated.")>

      Public ParameterInstructions As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Parameter Instructions
    - type: System.String
      value: ../../Input/ParameterInstructions.xml
    - type: System.String
      value: Describes which and how the parameters will be estimated.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.PopulationSize
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.PopulationSize
  id: PopulationSize
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: PopulationSize
  nameWithType: GeneticNetworkEstimationHost.PopulationSize
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.PopulationSize
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PopulationSize
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 58
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Population Size", 100, "The total population to be calculated.")]

      public int PopulationSize
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Population Size", 100, "The total population to be calculated.")>

      Public PopulationSize As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Population Size
    - type: System.Int32
      value: 100
    - type: System.String
      value: The total population to be calculated.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RemoteModelSystemName
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.RemoteModelSystemName
  id: RemoteModelSystemName
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: RemoteModelSystemName
  nameWithType: GeneticNetworkEstimationHost.RemoteModelSystemName
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RemoteModelSystemName
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RemoteModelSystemName
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 61
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("ModelSystemName", "Genetic Network Estimation", "The name of the model system that will be deployed to the remote machines.")]

      public string RemoteModelSystemName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("ModelSystemName", "Genetic Network Estimation", "The name of the model system that will be deployed to the remote machines.")>

      Public RemoteModelSystemName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: ModelSystemName
    - type: System.String
      value: Genetic Network Estimation
    - type: System.String
      value: The name of the model system that will be deployed to the remote machines.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Reseed
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Reseed
  id: Reseed
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Reseed
  nameWithType: GeneticNetworkEstimationHost.Reseed
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Reseed
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Reseed
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 64
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Reseed", 10, "The number of units in the population that will be reseeded with completely different values each generation.")]

      public int Reseed
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Reseed", 10, "The number of units in the population that will be reseeded with completely different values each generation.")>

      Public Reseed As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Reseed
    - type: System.Int32
      value: 10
    - type: System.String
      value: The number of units in the population that will be reseeded with completely different values each generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Parameters
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Parameters
  id: Parameters
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: GeneticNetworkEstimationHost.Parameters
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Parameters
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parameters
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 66
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: protected ParameterSetting[] Parameters
    return:
      type: TMG.NetworkEstimation.ParameterSetting[]
    content.vb: Protected Parameters As ParameterSetting()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Population
  commentId: F:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Population
  id: Population
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Population
  nameWithType: GeneticNetworkEstimationHost.Population
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Population
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Population
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 68
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: protected GeneticNetworkEstimationHost.ParameterSet[] Population
    return:
      type: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet[]
    content.vb: Protected Population As GeneticNetworkEstimationHost.ParameterSet()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration
  id: CurrentIteration
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: CurrentIteration
  nameWithType: GeneticNetworkEstimationHost.CurrentIteration
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CurrentIteration
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 85
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public int CurrentIteration { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurrentIteration As Integer
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration*
  implements:
  - TMG.IIterativeModel.CurrentIteration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory
  id: InputBaseDirectory
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: InputBaseDirectory
  nameWithType: GeneticNetworkEstimationHost.InputBaseDirectory
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InputBaseDirectory
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 91
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string InputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InputBaseDirectory As String
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.InputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes
  id: Modes
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Modes
  nameWithType: GeneticNetworkEstimationHost.Modes
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Modes
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 97
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public List<IModeChoiceNode> Modes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TMG.IModeChoiceNode}
    content.vb: Public ReadOnly Property Modes As List(Of IModeChoiceNode)
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes*
  implements:
  - TMG.I4StepModel.Modes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name
  id: Name
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GeneticNetworkEstimationHost.Name
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 103
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment
  id: NetworkAssignment
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: NetworkAssignment
  nameWithType: GeneticNetworkEstimationHost.NetworkAssignment
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkAssignment
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 109
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public INetworkAssignment NetworkAssignment { get; set; }
    parameters: []
    return:
      type: TMG.INetworkAssignment
    content.vb: Public Property NetworkAssignment As INetworkAssignment
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment*
  implements:
  - TMG.I4StepModel.NetworkAssignment
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData
  id: NetworkData
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: NetworkData
  nameWithType: GeneticNetworkEstimationHost.NetworkData
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkData
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 116
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public IList<INetworkData> NetworkData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TMG.INetworkData}
    content.vb: Public ReadOnly Property NetworkData As IList(Of INetworkData)
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData*
  implements:
  - TMG.ITravelDemandModel.NetworkData
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory
  id: OutputBaseDirectory
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: OutputBaseDirectory
  nameWithType: GeneticNetworkEstimationHost.OutputBaseDirectory
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutputBaseDirectory
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 119
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string OutputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputBaseDirectory As String
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.OutputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress
  id: Progress
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: GeneticNetworkEstimationHost.Progress
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 125
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour
  id: ProgressColour
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: GeneticNetworkEstimationHost.ProgressColour
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 131
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose
  id: Purpose
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Purpose
  nameWithType: GeneticNetworkEstimationHost.Purpose
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Purpose
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 136
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public List<IPurpose> Purpose { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TMG.IPurpose}
    content.vb: Public Property Purpose As List(Of IPurpose)
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose*
  implements:
  - TMG.I4StepModel.Purpose
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations
  id: TotalIterations
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: TotalIterations
  nameWithType: GeneticNetworkEstimationHost.TotalIterations
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TotalIterations
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 143
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Generations", 50, "The total number of generations to run.")]

      public int TotalIterations { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Generations", 50, "The total number of generations to run.")>

      Public Property TotalIterations As Integer
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations*
  implements:
  - TMG.IIterativeModel.TotalIterations
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Generations
    - type: System.Int32
      value: 50
    - type: System.String
      value: The total number of generations to run.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem
  commentId: P:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem
  id: ZoneSystem
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: ZoneSystem
  nameWithType: GeneticNetworkEstimationHost.ZoneSystem
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ZoneSystem
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 150
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public IZoneSystem ZoneSystem { get; }
    parameters: []
    return:
      type: TMG.IZoneSystem
    content.vb: Public ReadOnly Property ZoneSystem As IZoneSystem
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem*
  implements:
  - TMG.ITravelDemandModel.ZoneSystem
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest
  id: ExitRequest
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: ExitRequest()
  nameWithType: GeneticNetworkEstimationHost.ExitRequest()
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExitRequest
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 156
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public bool ExitRequest()
    return:
      type: System.Boolean
    content.vb: Public Function ExitRequest As Boolean
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest*
  implements:
  - XTMF.IModelSystemTemplate.ExitRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation(System.String@)
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: GeneticNetworkEstimationHost.RuntimeValidation(ref String)
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 182
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: GeneticNetworkEstimationHost.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start
  id: Start
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: GeneticNetworkEstimationHost.Start()
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Start
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 207
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start*
  implements:
  - XTMF.ISelfContainedModule.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString
  id: ToString
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GeneticNetworkEstimationHost.ToString()
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToString
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 273
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation
  id: GenerateInitialPopulation
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: GenerateInitialPopulation()
  nameWithType: GeneticNetworkEstimationHost.GenerateInitialPopulation()
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GenerateInitialPopulation
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 278
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: protected virtual void GenerateInitialPopulation()
    content.vb: Protected Overridable Sub GenerateInitialPopulation
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration
  id: GenerateNextGeneration
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: GenerateNextGeneration()
  nameWithType: GeneticNetworkEstimationHost.GenerateNextGeneration()
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GenerateNextGeneration
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 306
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: protected virtual void GenerateNextGeneration()
    content.vb: Protected Overridable Sub GenerateNextGeneration
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose
  id: Dispose
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: GeneticNetworkEstimationHost.Dispose()
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 722
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose(System.Boolean)
  commentId: M:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: TMG.NetworkEstimation.GeneticNetworkEstimationHost
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: GeneticNetworkEstimationHost.Dispose(Boolean)
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../XTMF/Code/NetworkEstimation/GeneticNetworkEstimationHost.cs
    startLine: 728
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: protected virtual void Dispose(bool managedOnly)
    parameters:
    - id: managedOnly
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(managedOnly As Boolean)
  overload: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: TMG.NetworkEstimation
  commentId: N:TMG.NetworkEstimation
  isExternal: false
  name: TMG.NetworkEstimation
  nameWithType: TMG.NetworkEstimation
  fullName: TMG.NetworkEstimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.I4StepModel
  commentId: T:TMG.I4StepModel
  parent: TMG
  isExternal: false
  name: I4StepModel
  nameWithType: I4StepModel
  fullName: TMG.I4StepModel
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  isExternal: false
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.ISelfContainedModule
  commentId: T:XTMF.ISelfContainedModule
  parent: XTMF
  isExternal: false
  name: ISelfContainedModule
  nameWithType: ISelfContainedModule
  fullName: XTMF.ISelfContainedModule
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.IIterativeModel
  commentId: T:TMG.IIterativeModel
  parent: TMG
  isExternal: false
  name: IIterativeModel
  nameWithType: IIterativeModel
  fullName: TMG.IIterativeModel
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.Networking.IHost
  commentId: T:XTMF.Networking.IHost
  parent: XTMF.Networking
  isExternal: false
  name: IHost
  nameWithType: IHost
  fullName: XTMF.Networking.IHost
- uid: XTMF.Networking
  commentId: N:XTMF.Networking
  isExternal: false
  name: XTMF.Networking
  nameWithType: XTMF.Networking
  fullName: XTMF.Networking
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.NetworkEstimation.ParameterSetting[]
  name: ParameterSetting[]
  nameWithType: ParameterSetting[]
  fullName: TMG.NetworkEstimation.ParameterSetting[]
  nameWithType.vb: ParameterSetting()
  fullName.vb: TMG.NetworkEstimation.ParameterSetting()
  name.vb: ParameterSetting()
  spec.csharp:
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet[]
  name: GeneticNetworkEstimationHost.ParameterSet[]
  nameWithType: GeneticNetworkEstimationHost.ParameterSet[]
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet[]
  nameWithType.vb: GeneticNetworkEstimationHost.ParameterSet()
  fullName.vb: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet()
  name.vb: GeneticNetworkEstimationHost.ParameterSet()
  spec.csharp:
  - uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet
    name: GeneticNetworkEstimationHost.ParameterSet
    nameWithType: GeneticNetworkEstimationHost.ParameterSet
    fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet
    name: GeneticNetworkEstimationHost.ParameterSet
    nameWithType: GeneticNetworkEstimationHost.ParameterSet
    fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ParameterSet
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration
  isExternal: false
  name: CurrentIteration
  nameWithType: GeneticNetworkEstimationHost.CurrentIteration
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.CurrentIteration
- uid: TMG.IIterativeModel.CurrentIteration
  commentId: P:TMG.IIterativeModel.CurrentIteration
  parent: TMG.IIterativeModel
  isExternal: false
  name: CurrentIteration
  nameWithType: IIterativeModel.CurrentIteration
  fullName: TMG.IIterativeModel.CurrentIteration
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory
  isExternal: false
  name: InputBaseDirectory
  nameWithType: GeneticNetworkEstimationHost.InputBaseDirectory
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.InputBaseDirectory
- uid: XTMF.IModelSystemTemplate.InputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.InputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: InputBaseDirectory
  nameWithType: IModelSystemTemplate.InputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.InputBaseDirectory
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes
  isExternal: false
  name: Modes
  nameWithType: GeneticNetworkEstimationHost.Modes
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Modes
- uid: TMG.I4StepModel.Modes
  commentId: P:TMG.I4StepModel.Modes
  parent: TMG.I4StepModel
  isExternal: false
  name: Modes
  nameWithType: I4StepModel.Modes
  fullName: TMG.I4StepModel.Modes
- uid: System.Collections.Generic.List{TMG.IModeChoiceNode}
  commentId: T:System.Collections.Generic.List{TMG.IModeChoiceNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModeChoiceNode>
  nameWithType: List<IModeChoiceNode>
  fullName: System.Collections.Generic.List<TMG.IModeChoiceNode>
  nameWithType.vb: List(Of IModeChoiceNode)
  fullName.vb: System.Collections.Generic.List(Of TMG.IModeChoiceNode)
  name.vb: List(Of IModeChoiceNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IModeChoiceNode
    name: IModeChoiceNode
    nameWithType: IModeChoiceNode
    fullName: TMG.IModeChoiceNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IModeChoiceNode
    name: IModeChoiceNode
    nameWithType: IModeChoiceNode
    fullName: TMG.IModeChoiceNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name
  isExternal: false
  name: Name
  nameWithType: GeneticNetworkEstimationHost.Name
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment
  isExternal: false
  name: NetworkAssignment
  nameWithType: GeneticNetworkEstimationHost.NetworkAssignment
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkAssignment
- uid: TMG.I4StepModel.NetworkAssignment
  commentId: P:TMG.I4StepModel.NetworkAssignment
  parent: TMG.I4StepModel
  isExternal: false
  name: NetworkAssignment
  nameWithType: I4StepModel.NetworkAssignment
  fullName: TMG.I4StepModel.NetworkAssignment
- uid: TMG.INetworkAssignment
  commentId: T:TMG.INetworkAssignment
  parent: TMG
  isExternal: false
  name: INetworkAssignment
  nameWithType: INetworkAssignment
  fullName: TMG.INetworkAssignment
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData
  isExternal: false
  name: NetworkData
  nameWithType: GeneticNetworkEstimationHost.NetworkData
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.NetworkData
- uid: TMG.ITravelDemandModel.NetworkData
  commentId: P:TMG.ITravelDemandModel.NetworkData
  parent: TMG.ITravelDemandModel
  isExternal: false
  name: NetworkData
  nameWithType: ITravelDemandModel.NetworkData
  fullName: TMG.ITravelDemandModel.NetworkData
- uid: System.Collections.Generic.IList{TMG.INetworkData}
  commentId: T:System.Collections.Generic.IList{TMG.INetworkData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INetworkData>
  nameWithType: IList<INetworkData>
  fullName: System.Collections.Generic.IList<TMG.INetworkData>
  nameWithType.vb: IList(Of INetworkData)
  fullName.vb: System.Collections.Generic.IList(Of TMG.INetworkData)
  name.vb: IList(Of INetworkData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory
  isExternal: false
  name: OutputBaseDirectory
  nameWithType: GeneticNetworkEstimationHost.OutputBaseDirectory
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.OutputBaseDirectory
- uid: XTMF.IModelSystemTemplate.OutputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.OutputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: OutputBaseDirectory
  nameWithType: IModelSystemTemplate.OutputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.OutputBaseDirectory
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress
  isExternal: false
  name: Progress
  nameWithType: GeneticNetworkEstimationHost.Progress
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: GeneticNetworkEstimationHost.ProgressColour
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose
  isExternal: false
  name: Purpose
  nameWithType: GeneticNetworkEstimationHost.Purpose
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Purpose
- uid: TMG.I4StepModel.Purpose
  commentId: P:TMG.I4StepModel.Purpose
  parent: TMG.I4StepModel
  isExternal: false
  name: Purpose
  nameWithType: I4StepModel.Purpose
  fullName: TMG.I4StepModel.Purpose
- uid: System.Collections.Generic.List{TMG.IPurpose}
  commentId: T:System.Collections.Generic.List{TMG.IPurpose}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IPurpose>
  nameWithType: List<IPurpose>
  fullName: System.Collections.Generic.List<TMG.IPurpose>
  nameWithType.vb: List(Of IPurpose)
  fullName.vb: System.Collections.Generic.List(Of TMG.IPurpose)
  name.vb: List(Of IPurpose)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IPurpose
    name: IPurpose
    nameWithType: IPurpose
    fullName: TMG.IPurpose
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IPurpose
    name: IPurpose
    nameWithType: IPurpose
    fullName: TMG.IPurpose
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations
  isExternal: false
  name: TotalIterations
  nameWithType: GeneticNetworkEstimationHost.TotalIterations
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.TotalIterations
- uid: TMG.IIterativeModel.TotalIterations
  commentId: P:TMG.IIterativeModel.TotalIterations
  parent: TMG.IIterativeModel
  isExternal: false
  name: TotalIterations
  nameWithType: IIterativeModel.TotalIterations
  fullName: TMG.IIterativeModel.TotalIterations
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem
  isExternal: false
  name: ZoneSystem
  nameWithType: GeneticNetworkEstimationHost.ZoneSystem
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ZoneSystem
- uid: TMG.ITravelDemandModel.ZoneSystem
  commentId: P:TMG.ITravelDemandModel.ZoneSystem
  parent: TMG.ITravelDemandModel
  isExternal: false
  name: ZoneSystem
  nameWithType: ITravelDemandModel.ZoneSystem
  fullName: TMG.ITravelDemandModel.ZoneSystem
- uid: TMG.IZoneSystem
  commentId: T:TMG.IZoneSystem
  parent: TMG
  isExternal: false
  name: IZoneSystem
  nameWithType: IZoneSystem
  fullName: TMG.IZoneSystem
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest
  isExternal: false
  name: ExitRequest
  nameWithType: GeneticNetworkEstimationHost.ExitRequest
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ExitRequest
- uid: XTMF.IModelSystemTemplate.ExitRequest
  commentId: M:XTMF.IModelSystemTemplate.ExitRequest
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: ExitRequest()
  nameWithType: IModelSystemTemplate.ExitRequest()
  fullName: XTMF.IModelSystemTemplate.ExitRequest()
  spec.csharp:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: GeneticNetworkEstimationHost.RuntimeValidation
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start
  isExternal: false
  name: Start
  nameWithType: GeneticNetworkEstimationHost.Start
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Start
- uid: XTMF.ISelfContainedModule.Start
  commentId: M:XTMF.ISelfContainedModule.Start
  parent: XTMF.ISelfContainedModule
  isExternal: false
  name: Start()
  nameWithType: ISelfContainedModule.Start()
  fullName: XTMF.ISelfContainedModule.Start()
  spec.csharp:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString
  isExternal: false
  name: ToString
  nameWithType: GeneticNetworkEstimationHost.ToString
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.ToString
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation
  isExternal: false
  name: GenerateInitialPopulation
  nameWithType: GeneticNetworkEstimationHost.GenerateInitialPopulation
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateInitialPopulation
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration
  isExternal: false
  name: GenerateNextGeneration
  nameWithType: GeneticNetworkEstimationHost.GenerateNextGeneration
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.GenerateNextGeneration
- uid: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose*
  commentId: Overload:TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose
  isExternal: false
  name: Dispose
  nameWithType: GeneticNetworkEstimationHost.Dispose
  fullName: TMG.NetworkEstimation.GeneticNetworkEstimationHost.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
