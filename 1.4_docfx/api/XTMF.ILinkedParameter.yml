### YamlMime:ManagedReference
items:
- uid: XTMF.ILinkedParameter
  commentId: T:XTMF.ILinkedParameter
  id: ILinkedParameter
  parent: XTMF
  children:
  - XTMF.ILinkedParameter.Add(XTMF.IModuleParameter,System.String@)
  - XTMF.ILinkedParameter.Name
  - XTMF.ILinkedParameter.Parameters
  - XTMF.ILinkedParameter.Remove(XTMF.IModuleParameter,System.String@)
  - XTMF.ILinkedParameter.SetValue(System.String,System.String@)
  - XTMF.ILinkedParameter.Value
  langs:
  - csharp
  - vb
  name: ILinkedParameter
  nameWithType: ILinkedParameter
  fullName: XTMF.ILinkedParameter
  type: Interface
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ILinkedParameter
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 25
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nDefines the LinkedParameter structure for XTMF, allowing a single assignment to affect multiple parameters across different modules.\n"
  example: []
  syntax:
    content: public interface ILinkedParameter
    content.vb: Public Interface ILinkedParameter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: XTMF.ILinkedParameter.Name
  commentId: P:XTMF.ILinkedParameter.Name
  id: Name
  parent: XTMF.ILinkedParameter
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ILinkedParameter.Name
  fullName: XTMF.ILinkedParameter.Name
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 30
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe name of the linked parameters\n"
  example: []
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: XTMF.ILinkedParameter.Name*
  modifiers.csharp:
  - get
  - set
- uid: XTMF.ILinkedParameter.Parameters
  commentId: P:XTMF.ILinkedParameter.Parameters
  id: Parameters
  parent: XTMF.ILinkedParameter
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: ILinkedParameter.Parameters
  fullName: XTMF.ILinkedParameter.Parameters
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parameters
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 35
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe list of parameters that are linked\n"
  example: []
  syntax:
    content: List<IModuleParameter> Parameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.IModuleParameter}
    content.vb: ReadOnly Property Parameters As List(Of IModuleParameter)
  overload: XTMF.ILinkedParameter.Parameters*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.ILinkedParameter.Value
  commentId: P:XTMF.ILinkedParameter.Value
  id: Value
  parent: XTMF.ILinkedParameter
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ILinkedParameter.Value
  fullName: XTMF.ILinkedParameter.Value
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Value
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 40
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe string value that all parameters will be assigned to\n"
  example: []
  syntax:
    content: string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Value As String
  overload: XTMF.ILinkedParameter.Value*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.ILinkedParameter.Add(XTMF.IModuleParameter,System.String@)
  commentId: M:XTMF.ILinkedParameter.Add(XTMF.IModuleParameter,System.String@)
  id: Add(XTMF.IModuleParameter,System.String@)
  parent: XTMF.ILinkedParameter
  langs:
  - csharp
  - vb
  name: Add(IModuleParameter, ref String)
  nameWithType: ILinkedParameter.Add(IModuleParameter, ref String)
  fullName: XTMF.ILinkedParameter.Add(XTMF.IModuleParameter, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 49
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nAttempt to add the parameter to the set of linked parameters\n"
  remarks: If this new parameter is of a non compatible type from the set value this parameter can not be added.
  example: []
  syntax:
    content: bool Add(IModuleParameter parameter, ref string error)
    parameters:
    - id: parameter
      type: XTMF.IModuleParameter
      description: The parameter to try to add
    - id: error
      type: System.String
      description: An error message in case of failure
    return:
      type: System.Boolean
      description: If we were able to add the parameter
    content.vb: Function Add(parameter As IModuleParameter, ByRef error As String) As Boolean
  overload: XTMF.ILinkedParameter.Add*
  nameWithType.vb: ILinkedParameter.Add(IModuleParameter, ByRef String)
  fullName.vb: XTMF.ILinkedParameter.Add(XTMF.IModuleParameter, ByRef System.String)
  name.vb: Add(IModuleParameter, ByRef String)
- uid: XTMF.ILinkedParameter.Remove(XTMF.IModuleParameter,System.String@)
  commentId: M:XTMF.ILinkedParameter.Remove(XTMF.IModuleParameter,System.String@)
  id: Remove(XTMF.IModuleParameter,System.String@)
  parent: XTMF.ILinkedParameter
  langs:
  - csharp
  - vb
  name: Remove(IModuleParameter, ref String)
  nameWithType: ILinkedParameter.Remove(IModuleParameter, ref String)
  fullName: XTMF.ILinkedParameter.Remove(XTMF.IModuleParameter, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Remove
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 57
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nRemove a parameter from the LinkedParameter\n"
  example: []
  syntax:
    content: bool Remove(IModuleParameter parameter, ref string error)
    parameters:
    - id: parameter
      type: XTMF.IModuleParameter
      description: The parameter to remove
    - id: error
      type: System.String
      description: An error message in case of failure
    return:
      type: System.Boolean
      description: True if the parameter was removed
    content.vb: Function Remove(parameter As IModuleParameter, ByRef error As String) As Boolean
  overload: XTMF.ILinkedParameter.Remove*
  nameWithType.vb: ILinkedParameter.Remove(IModuleParameter, ByRef String)
  fullName.vb: XTMF.ILinkedParameter.Remove(XTMF.IModuleParameter, ByRef System.String)
  name.vb: Remove(IModuleParameter, ByRef String)
- uid: XTMF.ILinkedParameter.SetValue(System.String,System.String@)
  commentId: M:XTMF.ILinkedParameter.SetValue(System.String,System.String@)
  id: SetValue(System.String,System.String@)
  parent: XTMF.ILinkedParameter
  langs:
  - csharp
  - vb
  name: SetValue(String, ref String)
  nameWithType: ILinkedParameter.SetValue(String, ref String)
  fullName: XTMF.ILinkedParameter.SetValue(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetValue
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/ILinkedParameter.cs
    startLine: 65
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe value that is to be set to all of the parameters\n"
  example: []
  syntax:
    content: bool SetValue(string value, ref string error)
    parameters:
    - id: value
      type: System.String
      description: A string that represents it
    - id: error
      type: System.String
      description: An error message in case of failure
    return:
      type: System.Boolean
      description: If we were successful in assinging the value to all of the parameters
    content.vb: Function SetValue(value As String, ByRef error As String) As Boolean
  overload: XTMF.ILinkedParameter.SetValue*
  nameWithType.vb: ILinkedParameter.SetValue(String, ByRef String)
  fullName.vb: XTMF.ILinkedParameter.SetValue(System.String, ByRef System.String)
  name.vb: SetValue(String, ByRef String)
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: XTMF.ILinkedParameter.Name*
  commentId: Overload:XTMF.ILinkedParameter.Name
  isExternal: false
  name: Name
  nameWithType: ILinkedParameter.Name
  fullName: XTMF.ILinkedParameter.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.ILinkedParameter.Parameters*
  commentId: Overload:XTMF.ILinkedParameter.Parameters
  isExternal: false
  name: Parameters
  nameWithType: ILinkedParameter.Parameters
  fullName: XTMF.ILinkedParameter.Parameters
- uid: System.Collections.Generic.List{XTMF.IModuleParameter}
  commentId: T:System.Collections.Generic.List{XTMF.IModuleParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModuleParameter>
  nameWithType: List<IModuleParameter>
  fullName: System.Collections.Generic.List<XTMF.IModuleParameter>
  nameWithType.vb: List(Of IModuleParameter)
  fullName.vb: System.Collections.Generic.List(Of XTMF.IModuleParameter)
  name.vb: List(Of IModuleParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.ILinkedParameter.Value*
  commentId: Overload:XTMF.ILinkedParameter.Value
  isExternal: false
  name: Value
  nameWithType: ILinkedParameter.Value
  fullName: XTMF.ILinkedParameter.Value
- uid: XTMF.ILinkedParameter.Add*
  commentId: Overload:XTMF.ILinkedParameter.Add
  isExternal: false
  name: Add
  nameWithType: ILinkedParameter.Add
  fullName: XTMF.ILinkedParameter.Add
- uid: XTMF.IModuleParameter
  commentId: T:XTMF.IModuleParameter
  parent: XTMF
  isExternal: false
  name: IModuleParameter
  nameWithType: IModuleParameter
  fullName: XTMF.IModuleParameter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ILinkedParameter.Remove*
  commentId: Overload:XTMF.ILinkedParameter.Remove
  isExternal: false
  name: Remove
  nameWithType: ILinkedParameter.Remove
  fullName: XTMF.ILinkedParameter.Remove
- uid: XTMF.ILinkedParameter.SetValue*
  commentId: Overload:XTMF.ILinkedParameter.SetValue
  isExternal: false
  name: SetValue
  nameWithType: ILinkedParameter.SetValue
  fullName: XTMF.ILinkedParameter.SetValue
