### YamlMime:ManagedReference
items:
- uid: TMG.Modes.IStationCollectionMode
  commentId: T:TMG.Modes.IStationCollectionMode
  id: IStationCollectionMode
  parent: TMG.Modes
  children:
  - TMG.Modes.IStationCollectionMode.Access
  - TMG.Modes.IStationCollectionMode.GetSubchoiceSplit(TMG.IZone,TMG.IZone,XTMF.Time)
  langs:
  - csharp
  - vb
  name: IStationCollectionMode
  nameWithType: IStationCollectionMode
  fullName: TMG.Modes.IStationCollectionMode
  type: Interface
  source:
    remote:
      path: Code/TMGInterfaces/Modes/IStationCollectionMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IStationCollectionMode
    path: ../../../XTMF/Code/TMGInterfaces/Modes/IStationCollectionMode.cs
    startLine: 23
  assemblies:
  - TMGInterfaces
  namespace: TMG.Modes
  syntax:
    content: 'public interface IStationCollectionMode : IMode, IModeChoiceNode, IModule'
    content.vb: >-
      Public Interface IStationCollectionMode

          Inherits IMode
  inheritedMembers:
  - TMG.IMode.NetworkType
  - TMG.IMode.NonPersonalVehicle
  - TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.IModeChoiceNode.CurrentlyFeasible
  - TMG.IModeChoiceNode.ModeName
  - TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  - XTMF.IModule.Name
  - XTMF.IModule.Progress
  - XTMF.IModule.ProgressColour
  - XTMF.IModule.RuntimeValidation(System.String@)
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TMG.Modes.IStationCollectionMode.Access
  commentId: P:TMG.Modes.IStationCollectionMode.Access
  id: Access
  parent: TMG.Modes.IStationCollectionMode
  langs:
  - csharp
  - vb
  name: Access
  nameWithType: IStationCollectionMode.Access
  fullName: TMG.Modes.IStationCollectionMode.Access
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/Modes/IStationCollectionMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Access
    path: ../../../XTMF/Code/TMGInterfaces/Modes/IStationCollectionMode.cs
    startLine: 28
  assemblies:
  - TMGInterfaces
  namespace: TMG.Modes
  summary: "\nIs this mode in access or egress mode?\n"
  example: []
  syntax:
    content: bool Access { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Access As Boolean
  overload: TMG.Modes.IStationCollectionMode.Access*
  modifiers.csharp:
  - get
  - set
- uid: TMG.Modes.IStationCollectionMode.GetSubchoiceSplit(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.Modes.IStationCollectionMode.GetSubchoiceSplit(TMG.IZone,TMG.IZone,XTMF.Time)
  id: GetSubchoiceSplit(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.Modes.IStationCollectionMode
  langs:
  - csharp
  - vb
  name: GetSubchoiceSplit(IZone, IZone, Time)
  nameWithType: IStationCollectionMode.GetSubchoiceSplit(IZone, IZone, Time)
  fullName: TMG.Modes.IStationCollectionMode.GetSubchoiceSplit(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/Modes/IStationCollectionMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetSubchoiceSplit
    path: ../../../XTMF/Code/TMGInterfaces/Modes/IStationCollectionMode.cs
    startLine: 38
  assemblies:
  - TMGInterfaces
  namespace: TMG.Modes
  summary: "\nGets the choices for an origin/destination and stores where the access station is\n"
  example: []
  syntax:
    content: Tuple<IZone[], IZone[], float[]> GetSubchoiceSplit(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
      description: Where the trip will be starting from
    - id: destination
      type: TMG.IZone
      description: Where the trip will be going to
    - id: time
      type: XTMF.Time
      description: The time of day of the trip
    return:
      type: System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}
      description: >-
        An array of access station zones and another array of the

        correlated probabilities of using that access station
    content.vb: Function GetSubchoiceSplit(origin As IZone, destination As IZone, time As Time) As Tuple(Of IZone(), IZone(), Single())
  overload: TMG.Modes.IStationCollectionMode.GetSubchoiceSplit*
references:
- uid: TMG.Modes
  commentId: N:TMG.Modes
  isExternal: false
  name: TMG.Modes
  nameWithType: TMG.Modes
  fullName: TMG.Modes
- uid: TMG.IMode.NetworkType
  commentId: P:TMG.IMode.NetworkType
  parent: TMG.IMode
  isExternal: false
  name: NetworkType
  nameWithType: IMode.NetworkType
  fullName: TMG.IMode.NetworkType
- uid: TMG.IMode.NonPersonalVehicle
  commentId: P:TMG.IMode.NonPersonalVehicle
  parent: TMG.IMode
  isExternal: false
  name: NonPersonalVehicle
  nameWithType: IMode.NonPersonalVehicle
  fullName: TMG.IMode.NonPersonalVehicle
- uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IMode
  isExternal: false
  name: Cost(IZone, IZone, Time)
  nameWithType: IMode.Cost(IZone, IZone, Time)
  fullName: TMG.IMode.Cost(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Cost
    nameWithType: IMode.Cost
    fullName: TMG.IMode.Cost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Cost
    nameWithType: IMode.Cost
    fullName: TMG.IMode.Cost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IMode
  isExternal: false
  name: TravelTime(IZone, IZone, Time)
  nameWithType: IMode.TravelTime(IZone, IZone, Time)
  fullName: TMG.IMode.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: IMode.TravelTime
    fullName: TMG.IMode.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: IMode.TravelTime
    fullName: TMG.IMode.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IModeChoiceNode.CurrentlyFeasible
  commentId: P:TMG.IModeChoiceNode.CurrentlyFeasible
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: CurrentlyFeasible
  nameWithType: IModeChoiceNode.CurrentlyFeasible
  fullName: TMG.IModeChoiceNode.CurrentlyFeasible
- uid: TMG.IModeChoiceNode.ModeName
  commentId: P:TMG.IModeChoiceNode.ModeName
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: ModeName
  nameWithType: IModeChoiceNode.ModeName
  fullName: TMG.IModeChoiceNode.ModeName
- uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: CalculateV(IZone, IZone, Time)
  nameWithType: IModeChoiceNode.CalculateV(IZone, IZone, Time)
  fullName: TMG.IModeChoiceNode.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IModeChoiceNode.CalculateV
    fullName: TMG.IModeChoiceNode.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IModeChoiceNode.CalculateV
    fullName: TMG.IModeChoiceNode.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: Feasible(IZone, IZone, Time)
  nameWithType: IModeChoiceNode.Feasible(IZone, IZone, Time)
  fullName: TMG.IModeChoiceNode.Feasible(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: IModeChoiceNode.Feasible
    fullName: TMG.IModeChoiceNode.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: IModeChoiceNode.Feasible
    fullName: TMG.IModeChoiceNode.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IMode
  commentId: T:TMG.IMode
  parent: TMG
  isExternal: false
  name: IMode
  nameWithType: IMode
  fullName: TMG.IMode
- uid: TMG.IModeChoiceNode
  commentId: T:TMG.IModeChoiceNode
  parent: TMG
  isExternal: false
  name: IModeChoiceNode
  nameWithType: IModeChoiceNode
  fullName: TMG.IModeChoiceNode
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Modes.IStationCollectionMode.Access*
  commentId: Overload:TMG.Modes.IStationCollectionMode.Access
  isExternal: false
  name: Access
  nameWithType: IStationCollectionMode.Access
  fullName: TMG.Modes.IStationCollectionMode.Access
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Modes.IStationCollectionMode.GetSubchoiceSplit*
  commentId: Overload:TMG.Modes.IStationCollectionMode.GetSubchoiceSplit
  isExternal: false
  name: GetSubchoiceSplit
  nameWithType: IStationCollectionMode.GetSubchoiceSplit
  fullName: TMG.Modes.IStationCollectionMode.GetSubchoiceSplit
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}
  commentId: T:System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}
  parent: System
  definition: System.Tuple`3
  name: Tuple<IZone[], IZone[], Single[]>
  nameWithType: Tuple<IZone[], IZone[], Single[]>
  fullName: System.Tuple<TMG.IZone[], TMG.IZone[], System.Single[]>
  nameWithType.vb: Tuple(Of IZone(), IZone(), Single())
  fullName.vb: System.Tuple(Of TMG.IZone(), TMG.IZone(), System.Single())
  name.vb: Tuple(Of IZone(), IZone(), Single())
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
