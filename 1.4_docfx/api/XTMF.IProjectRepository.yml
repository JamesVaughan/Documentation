### YamlMime:ManagedReference
items:
- uid: XTMF.IProjectRepository
  commentId: T:XTMF.IProjectRepository
  id: IProjectRepository
  parent: XTMF
  children:
  - XTMF.IProjectRepository.ActiveProject
  - XTMF.IProjectRepository.AddProject(XTMF.IProject)
  - XTMF.IProjectRepository.Projects
  - XTMF.IProjectRepository.Remove(XTMF.IProject)
  - XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
  - XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  - XTMF.IProjectRepository.ValidateProjectName(System.String)
  langs:
  - csharp
  - vb
  name: IProjectRepository
  nameWithType: IProjectRepository
  fullName: XTMF.IProjectRepository
  type: Interface
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IProjectRepository
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 22
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: 'public interface IProjectRepository : IEnumerable<IProject>, IEnumerable'
    content.vb: >-
      Public Interface IProjectRepository

          Inherits IEnumerable(Of IProject)
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{XTMF.IProject}.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: XTMF.IProjectRepository.ActiveProject
  commentId: P:XTMF.IProjectRepository.ActiveProject
  id: ActiveProject
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: ActiveProject
  nameWithType: IProjectRepository.ActiveProject
  fullName: XTMF.IProjectRepository.ActiveProject
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ActiveProject
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 28
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe project that is currently\nbeing used in XTMF\n"
  example: []
  syntax:
    content: IProject ActiveProject { get; }
    parameters: []
    return:
      type: XTMF.IProject
    content.vb: ReadOnly Property ActiveProject As IProject
  overload: XTMF.IProjectRepository.ActiveProject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.IProjectRepository.Projects
  commentId: P:XTMF.IProjectRepository.Projects
  id: Projects
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: Projects
  nameWithType: IProjectRepository.Projects
  fullName: XTMF.IProjectRepository.Projects
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Projects
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 34
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nProvides access to all of the projects\nin this XTMF installation\n"
  example: []
  syntax:
    content: IList<IProject> Projects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{XTMF.IProject}
    content.vb: ReadOnly Property Projects As IList(Of IProject)
  overload: XTMF.IProjectRepository.Projects*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.IProjectRepository.AddProject(XTMF.IProject)
  commentId: M:XTMF.IProjectRepository.AddProject(XTMF.IProject)
  id: AddProject(XTMF.IProject)
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: AddProject(IProject)
  nameWithType: IProjectRepository.AddProject(IProject)
  fullName: XTMF.IProjectRepository.AddProject(XTMF.IProject)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddProject
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 42
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nAdd a new project to the repository\n"
  remarks: All project names need to be unique and contain no invalid path characters (will return false otherwise)
  example: []
  syntax:
    content: bool AddProject(IProject project)
    parameters:
    - id: project
      type: XTMF.IProject
      description: The project you wish to add
    return:
      type: System.Boolean
      description: Returns true if the project was added, false otherwise
    content.vb: Function AddProject(project As IProject) As Boolean
  overload: XTMF.IProjectRepository.AddProject*
- uid: XTMF.IProjectRepository.Remove(XTMF.IProject)
  commentId: M:XTMF.IProjectRepository.Remove(XTMF.IProject)
  id: Remove(XTMF.IProject)
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: Remove(IProject)
  nameWithType: IProjectRepository.Remove(IProject)
  fullName: XTMF.IProjectRepository.Remove(XTMF.IProject)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Remove
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 47
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nRemove the selected project\n"
  example: []
  syntax:
    content: bool Remove(IProject project)
    parameters:
    - id: project
      type: XTMF.IProject
    return:
      type: System.Boolean
    content.vb: Function Remove(project As IProject) As Boolean
  overload: XTMF.IProjectRepository.Remove*
- uid: XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
  commentId: M:XTMF.IProjectRepository.RenameProject(XTMF.IProject,System.String)
  id: RenameProject(XTMF.IProject,System.String)
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: RenameProject(IProject, String)
  nameWithType: IProjectRepository.RenameProject(IProject, String)
  fullName: XTMF.IProjectRepository.RenameProject(XTMF.IProject, System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RenameProject
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 55
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nRename a project, moving all of the run data as well\n"
  example: []
  syntax:
    content: bool RenameProject(IProject project, string newName)
    parameters:
    - id: project
      type: XTMF.IProject
      description: The project to work with
    - id: newName
      type: System.String
      description: The new name of the project
    return:
      type: System.Boolean
      description: If the project was renamed properly
    content.vb: Function RenameProject(project As IProject, newName As String) As Boolean
  overload: XTMF.IProjectRepository.RenameProject*
- uid: XTMF.IProjectRepository.ValidateProjectName(System.String)
  commentId: M:XTMF.IProjectRepository.ValidateProjectName(System.String)
  id: ValidateProjectName(System.String)
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: ValidateProjectName(String)
  nameWithType: IProjectRepository.ValidateProjectName(String)
  fullName: XTMF.IProjectRepository.ValidateProjectName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateProjectName
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 63
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nMake sure that the project&apos;s name is both unique\nand a valid name for a project\n"
  example: []
  syntax:
    content: bool ValidateProjectName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name that you wish to test
    return:
      type: System.Boolean
      description: If the name is valid, true, otherwise false.
    content.vb: Function ValidateProjectName(name As String) As Boolean
  overload: XTMF.IProjectRepository.ValidateProjectName*
- uid: XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  commentId: M:XTMF.IProjectRepository.SetDescription(XTMF.IProject,System.String,System.String@)
  id: SetDescription(XTMF.IProject,System.String,System.String@)
  parent: XTMF.IProjectRepository
  langs:
  - csharp
  - vb
  name: SetDescription(IProject, String, ref String)
  nameWithType: IProjectRepository.SetDescription(IProject, String, ref String)
  fullName: XTMF.IProjectRepository.SetDescription(XTMF.IProject, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetDescription
    path: ../../../XTMF/Code/XTMFInterfaces/Interfaces/IProjectRepository.cs
    startLine: 72
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nSet the description of a project\n"
  example: []
  syntax:
    content: bool SetDescription(IProject project, string newDescription, ref string error)
    parameters:
    - id: project
      type: XTMF.IProject
      description: The project to change
    - id: newDescription
      type: System.String
      description: The description to set it to.
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: True if the operation completes successfully, false otherwise.
    content.vb: Function SetDescription(project As IProject, newDescription As String, ByRef error As String) As Boolean
  overload: XTMF.IProjectRepository.SetDescription*
  nameWithType.vb: IProjectRepository.SetDescription(IProject, String, ByRef String)
  fullName.vb: XTMF.IProjectRepository.SetDescription(XTMF.IProject, System.String, ByRef System.String)
  name.vb: SetDescription(IProject, String, ByRef String)
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Collections.Generic.IEnumerable{XTMF.IProject}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{XTMF.IProject}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{XTMF.IProject}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IProject>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<XTMF.IProject>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IProject).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IProject).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IProject>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<XTMF.IProject>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IProject).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of XTMF.IProject).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{XTMF.IProject}
  commentId: T:System.Collections.Generic.IEnumerable{XTMF.IProject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IProject>
  nameWithType: IEnumerable<IProject>
  fullName: System.Collections.Generic.IEnumerable<XTMF.IProject>
  nameWithType.vb: IEnumerable(Of IProject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IProject)
  name.vb: IEnumerable(Of IProject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.IProjectRepository.ActiveProject*
  commentId: Overload:XTMF.IProjectRepository.ActiveProject
  isExternal: false
  name: ActiveProject
  nameWithType: IProjectRepository.ActiveProject
  fullName: XTMF.IProjectRepository.ActiveProject
- uid: XTMF.IProject
  commentId: T:XTMF.IProject
  parent: XTMF
  isExternal: false
  name: IProject
  nameWithType: IProject
  fullName: XTMF.IProject
- uid: XTMF.IProjectRepository.Projects*
  commentId: Overload:XTMF.IProjectRepository.Projects
  isExternal: false
  name: Projects
  nameWithType: IProjectRepository.Projects
  fullName: XTMF.IProjectRepository.Projects
- uid: System.Collections.Generic.IList{XTMF.IProject}
  commentId: T:System.Collections.Generic.IList{XTMF.IProject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IProject>
  nameWithType: IList<IProject>
  fullName: System.Collections.Generic.IList<XTMF.IProject>
  nameWithType.vb: IList(Of IProject)
  fullName.vb: System.Collections.Generic.IList(Of XTMF.IProject)
  name.vb: IList(Of IProject)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProject
    name: IProject
    nameWithType: IProject
    fullName: XTMF.IProject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IProjectRepository.AddProject*
  commentId: Overload:XTMF.IProjectRepository.AddProject
  isExternal: false
  name: AddProject
  nameWithType: IProjectRepository.AddProject
  fullName: XTMF.IProjectRepository.AddProject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.IProjectRepository.Remove*
  commentId: Overload:XTMF.IProjectRepository.Remove
  isExternal: false
  name: Remove
  nameWithType: IProjectRepository.Remove
  fullName: XTMF.IProjectRepository.Remove
- uid: XTMF.IProjectRepository.RenameProject*
  commentId: Overload:XTMF.IProjectRepository.RenameProject
  isExternal: false
  name: RenameProject
  nameWithType: IProjectRepository.RenameProject
  fullName: XTMF.IProjectRepository.RenameProject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.IProjectRepository.ValidateProjectName*
  commentId: Overload:XTMF.IProjectRepository.ValidateProjectName
  isExternal: false
  name: ValidateProjectName
  nameWithType: IProjectRepository.ValidateProjectName
  fullName: XTMF.IProjectRepository.ValidateProjectName
- uid: XTMF.IProjectRepository.SetDescription*
  commentId: Overload:XTMF.IProjectRepository.SetDescription
  isExternal: false
  name: SetDescription
  nameWithType: IProjectRepository.SetDescription
  fullName: XTMF.IProjectRepository.SetDescription
