### YamlMime:ManagedReference
items:
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  commentId: T:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  id: TransitAssignmentTool.Class
  parent: TMG.Emme.NetworkAssignment
  children:
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPenaltyMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPerception
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.CongestionMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.DemandMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FareMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FarePerception
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.InVehicleMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.LinkFareAttribute
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ModeList
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.PerceivedTravelTimeMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation(System.String@)
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.SegmentFareAttribute
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitTimePerception
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkMatrixNumber
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionAttribute
  - TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptions
  langs:
  - csharp
  - vb
  name: TransitAssignmentTool.Class
  nameWithType: TransitAssignmentTool.Class
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Class
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 243
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: 'public class Class : IModule'
    content.vb: >-
      Public Class Class

          Implements IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.DemandMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.DemandMatrixNumber
  id: DemandMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: DemandMatrixNumber
  nameWithType: TransitAssignmentTool.Class.DemandMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.DemandMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DemandMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 246
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Demand Matrix Number", 1, "The number of the full matrix containing transit demand ODs")]

      public int DemandMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Demand Matrix Number", 1, "The number of the full matrix containing transit demand ODs")>

      Public DemandMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demand Matrix Number
    - type: System.Int32
      value: 1
    - type: System.String
      value: The number of the full matrix containing transit demand ODs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionAttribute
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionAttribute
  id: WalkPerceptionAttribute
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: WalkPerceptionAttribute
  nameWithType: TransitAssignmentTool.Class.WalkPerceptionAttribute
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionAttribute
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkPerceptionAttribute
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 249
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Walk Perception Attribute", "@walkp", "The ID of the LINK extra attribute in which to store walk time perception. Should have a default value of 1.0.")]

      public string WalkPerceptionAttribute
    return:
      type: System.String
    content.vb: >-
      <Parameter("Walk Perception Attribute", "@walkp", "The ID of the LINK extra attribute in which to store walk time perception. Should have a default value of 1.0.")>

      Public WalkPerceptionAttribute As String
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Walk Perception Attribute
    - type: System.String
      value: '@walkp'
    - type: System.String
      value: The ID of the LINK extra attribute in which to store walk time perception. Should have a default value of 1.0.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.LinkFareAttribute
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.LinkFareAttribute
  id: LinkFareAttribute
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: LinkFareAttribute
  nameWithType: TransitAssignmentTool.Class.LinkFareAttribute
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.LinkFareAttribute
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkFareAttribute
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 252
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Link Fare Attribute", "@lfare", "The ID of the LINK extra attribute containing actual fare costs.")]

      public string LinkFareAttribute
    return:
      type: System.String
    content.vb: >-
      <Parameter("Link Fare Attribute", "@lfare", "The ID of the LINK extra attribute containing actual fare costs.")>

      Public LinkFareAttribute As String
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Link Fare Attribute
    - type: System.String
      value: '@lfare'
    - type: System.String
      value: The ID of the LINK extra attribute containing actual fare costs.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.SegmentFareAttribute
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.SegmentFareAttribute
  id: SegmentFareAttribute
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: SegmentFareAttribute
  nameWithType: TransitAssignmentTool.Class.SegmentFareAttribute
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.SegmentFareAttribute
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SegmentFareAttribute
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 255
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Segment Fare Attribute", "@sfare", "The ID of the SEGMENT extra attribute containing actual fare costs.")]

      public string SegmentFareAttribute
    return:
      type: System.String
    content.vb: >-
      <Parameter("Segment Fare Attribute", "@sfare", "The ID of the SEGMENT extra attribute containing actual fare costs.")>

      Public SegmentFareAttribute As String
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Segment Fare Attribute
    - type: System.String
      value: '@sfare'
    - type: System.String
      value: The ID of the SEGMENT extra attribute containing actual fare costs.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.InVehicleMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.InVehicleMatrixNumber
  id: InVehicleMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: InVehicleMatrixNumber
  nameWithType: TransitAssignmentTool.Class.InVehicleMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.InVehicleMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InVehicleMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 258
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("In-vehicle Times Matrix", 0, "The number of the FULL matrix in which to save in-vehicle travel time. Enter 0 to skip saving this matrix")]

      public int InVehicleMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("In-vehicle Times Matrix", 0, "The number of the FULL matrix in which to save in-vehicle travel time. Enter 0 to skip saving this matrix")>

      Public InVehicleMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: In-vehicle Times Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save in-vehicle travel time. Enter 0 to skip saving this matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkMatrixNumber
  id: WalkMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: WalkMatrixNumber
  nameWithType: TransitAssignmentTool.Class.WalkMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 261
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("WalkTimes Matrix", 0, "The number of the FULL matrix in which to save total walk time. Enter 0 to skip saving this matrix")]

      public int WalkMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("WalkTimes Matrix", 0, "The number of the FULL matrix in which to save total walk time. Enter 0 to skip saving this matrix")>

      Public WalkMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: WalkTimes Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save total walk time. Enter 0 to skip saving this matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitMatrixNumber
  id: WaitMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: WaitMatrixNumber
  nameWithType: TransitAssignmentTool.Class.WaitMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 264
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Wait Times Matrix", 0, "The number of the FULL matrix in which to save total waiting time. Enter 0 to skip saving this matrix")]

      public int WaitMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Wait Times Matrix", 0, "The number of the FULL matrix in which to save total waiting time. Enter 0 to skip saving this matrix")>

      Public WaitMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Wait Times Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save total waiting time. Enter 0 to skip saving this matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FareMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FareMatrixNumber
  id: FareMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: FareMatrixNumber
  nameWithType: TransitAssignmentTool.Class.FareMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FareMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FareMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 267
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Fare Matrix", 0, "The number of the FULL matrix in which to save transit fares. Enter 0 to skip saving this matrix")]

      public int FareMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Fare Matrix", 0, "The number of the FULL matrix in which to save transit fares. Enter 0 to skip saving this matrix")>

      Public FareMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Fare Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save transit fares. Enter 0 to skip saving this matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.PerceivedTravelTimeMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.PerceivedTravelTimeMatrixNumber
  id: PerceivedTravelTimeMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: PerceivedTravelTimeMatrixNumber
  nameWithType: TransitAssignmentTool.Class.PerceivedTravelTimeMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.PerceivedTravelTimeMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PerceivedTravelTimeMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 270
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Perceived Travel Time Matrix", 0, "The number of the FULL matrix in which to save the incurred penalties. Enter 0 to skip saving this matrix")]

      public int PerceivedTravelTimeMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Perceived Travel Time Matrix", 0, "The number of the FULL matrix in which to save the incurred penalties. Enter 0 to skip saving this matrix")>

      Public PerceivedTravelTimeMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Perceived Travel Time Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save the incurred penalties. Enter 0 to skip saving this matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPenaltyMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPenaltyMatrixNumber
  id: BoardingPenaltyMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: BoardingPenaltyMatrixNumber
  nameWithType: TransitAssignmentTool.Class.BoardingPenaltyMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPenaltyMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BoardingPenaltyMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 273
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Boarding Penalty Matrix", 0, "The number of the FULL matrix in which to save the applied boarding penalties.  Enter 0 to skip this matrix.")]

      public int BoardingPenaltyMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Boarding Penalty Matrix", 0, "The number of the FULL matrix in which to save the applied boarding penalties.  Enter 0 to skip this matrix.")>

      Public BoardingPenaltyMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Boarding Penalty Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save the applied boarding penalties.  Enter 0 to skip this matrix.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.CongestionMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.CongestionMatrixNumber
  id: CongestionMatrixNumber
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: CongestionMatrixNumber
  nameWithType: TransitAssignmentTool.Class.CongestionMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.CongestionMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CongestionMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 276
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Congestion Matrix", 0, "The number of the FULL matrix in which to save transit congestion. Enter 0 to skip saving this matrix")]

      public int CongestionMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Congestion Matrix", 0, "The number of the FULL matrix in which to save transit congestion. Enter 0 to skip saving this matrix")>

      Public CongestionMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Congestion Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of the FULL matrix in which to save transit congestion. Enter 0 to skip saving this matrix
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPerception
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPerception
  id: BoardingPerception
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: BoardingPerception
  nameWithType: TransitAssignmentTool.Class.BoardingPerception
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.BoardingPerception
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BoardingPerception
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 279
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Boarding Penalty Perception", 1F, "Perception factor applied to boarding penalty component.")]

      public float BoardingPerception
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Boarding Penalty Perception", 1F, "Perception factor applied to boarding penalty component.")>

      Public BoardingPerception As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Boarding Penalty Perception
    - type: System.Single
      value: 1
    - type: System.String
      value: Perception factor applied to boarding penalty component.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FarePerception
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FarePerception
  id: FarePerception
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: FarePerception
  nameWithType: TransitAssignmentTool.Class.FarePerception
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.FarePerception
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FarePerception
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 282
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Fare Perception", 0F, "Perception factor applied to path transit fares, in $/hr.")]

      public float FarePerception
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Fare Perception", 0F, "Perception factor applied to path transit fares, in $/hr.")>

      Public FarePerception As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Fare Perception
    - type: System.Single
      value: 0
    - type: System.String
      value: Perception factor applied to path transit fares, in $/hr.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitTimePerception
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitTimePerception
  id: WaitTimePerception
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: WaitTimePerception
  nameWithType: TransitAssignmentTool.Class.WaitTimePerception
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WaitTimePerception
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitTimePerception
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 285
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Wait Time Perception", 1F, "Perception factor applied to wait time component.")]

      public float WaitTimePerception
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Wait Time Perception", 1F, "Perception factor applied to wait time component.")>

      Public WaitTimePerception As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Wait Time Perception
    - type: System.Single
      value: 1
    - type: System.String
      value: Perception factor applied to wait time component.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ModeList
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ModeList
  id: ModeList
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: ModeList
  nameWithType: TransitAssignmentTool.Class.ModeList
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ModeList
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModeList
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 288
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Modes", "*", "A character array of all the modes applied to this class. '*' selects all.")]

      public string ModeList
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Modes", "*", "A character array of all the modes applied to this class. '*' selects all.")>

      Public ModeList As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Modes
    - type: System.String
      value: '*'
    - type: System.String
      value: A character array of all the modes applied to this class. '*' selects all.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: TransitAssignmentTool.Class.RuntimeValidation(ref String)
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 290
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: TransitAssignmentTool.Class.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptions
  commentId: F:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptions
  id: WalkPerceptions
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: WalkPerceptions
  nameWithType: TransitAssignmentTool.Class.WalkPerceptions
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptions
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkPerceptions
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 302
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [SubModelInformation(Description = "The classes for this multi-class assignment.")]

      public TransitAssignmentTool.Class.WalkPerceptionSegment[] WalkPerceptions
    return:
      type: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment[]
    content.vb: >-
      <SubModelInformation(Description:="The classes for this multi-class assignment.")>

      Public WalkPerceptions As TransitAssignmentTool.Class.WalkPerceptionSegment()
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The classes for this multi-class assignment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name
  commentId: P:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name
  id: Name
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TransitAssignmentTool.Class.Name
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 330
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress
  commentId: P:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress
  id: Progress
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: TransitAssignmentTool.Class.Progress
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 332
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour
  commentId: P:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour
  id: ProgressColour
  parent: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: TransitAssignmentTool.Class.ProgressColour
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/TmgTransitAssignmentTool.cs
    startLine: 334
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: TMG.Emme.NetworkAssignment
  commentId: N:TMG.Emme.NetworkAssignment
  isExternal: false
  name: TMG.Emme.NetworkAssignment
  nameWithType: TMG.Emme.NetworkAssignment
  fullName: TMG.Emme.NetworkAssignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation*
  commentId: Overload:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: TransitAssignmentTool.Class.RuntimeValidation
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment[]
  name: TransitAssignmentTool.Class.WalkPerceptionSegment[]
  nameWithType: TransitAssignmentTool.Class.WalkPerceptionSegment[]
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment[]
  nameWithType.vb: TransitAssignmentTool.Class.WalkPerceptionSegment()
  fullName.vb: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment()
  name.vb: TransitAssignmentTool.Class.WalkPerceptionSegment()
  spec.csharp:
  - uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment
    name: TransitAssignmentTool.Class.WalkPerceptionSegment
    nameWithType: TransitAssignmentTool.Class.WalkPerceptionSegment
    fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment
    name: TransitAssignmentTool.Class.WalkPerceptionSegment
    nameWithType: TransitAssignmentTool.Class.WalkPerceptionSegment
    fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.WalkPerceptionSegment
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name*
  commentId: Overload:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name
  isExternal: false
  name: Name
  nameWithType: TransitAssignmentTool.Class.Name
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress*
  commentId: Overload:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress
  isExternal: false
  name: Progress
  nameWithType: TransitAssignmentTool.Class.Progress
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour*
  commentId: Overload:TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: TransitAssignmentTool.Class.ProgressColour
  fullName: TMG.Emme.NetworkAssignment.TransitAssignmentTool.Class.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
