### YamlMime:ManagedReference
items:
- uid: DYL.Tasha.PersonLoader
  commentId: T:DYL.Tasha.PersonLoader
  id: PersonLoader
  parent: DYL.Tasha
  children:
  - DYL.Tasha.PersonLoader.#ctor
  - DYL.Tasha.PersonLoader.Dispose
  - DYL.Tasha.PersonLoader.Dispose(System.Boolean)
  - DYL.Tasha.PersonLoader.FileName
  - DYL.Tasha.PersonLoader.Finalize
  - DYL.Tasha.PersonLoader.Header
  - DYL.Tasha.PersonLoader.Load(Tasha.Common.ITashaHousehold)
  - DYL.Tasha.PersonLoader.Name
  - DYL.Tasha.PersonLoader.OutOfData
  - DYL.Tasha.PersonLoader.PersonAgeCol
  - DYL.Tasha.PersonLoader.PersonDriversLicenceCol
  - DYL.Tasha.PersonLoader.PersonEmploymentStatusCol
  - DYL.Tasha.PersonLoader.PersonEmploymentZoneCol
  - DYL.Tasha.PersonLoader.PersonFreeParkingCol
  - DYL.Tasha.PersonLoader.PersonGenderCol
  - DYL.Tasha.PersonLoader.PersonHouseholdID
  - DYL.Tasha.PersonLoader.PersonIDCol
  - DYL.Tasha.PersonLoader.PersonOccupationCol
  - DYL.Tasha.PersonLoader.PersonStudentCol
  - DYL.Tasha.PersonLoader.PersonStudentZoneCol
  - DYL.Tasha.PersonLoader.PersonTransitPassCol
  - DYL.Tasha.PersonLoader.Progress
  - DYL.Tasha.PersonLoader.ProgressColour
  - DYL.Tasha.PersonLoader.Reset
  - DYL.Tasha.PersonLoader.RuntimeValidation(System.String@)
  - DYL.Tasha.PersonLoader.SchoolLocationChoiceModel
  - DYL.Tasha.PersonLoader.TashaRuntime
  - DYL.Tasha.PersonLoader.TripchainLoader
  - DYL.Tasha.PersonLoader.UnknownZoneNumber
  - DYL.Tasha.PersonLoader.WorkLocationChoiceModel
  langs:
  - csharp
  - vb
  name: PersonLoader
  nameWithType: PersonLoader
  fullName: DYL.Tasha.PersonLoader
  type: Class
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonLoader
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 28
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: 'public class PersonLoader : IDatachainLoader<ITashaHousehold, ITashaPerson>, IModule, IDisposable'
    content.vb: >-
      Public Class PersonLoader

          Implements IDatachainLoader(Of ITashaHousehold, ITashaPerson), IModule, IDisposable
  inheritance:
  - System.Object
  implements:
  - XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}
  - XTMF.IModule
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DYL.Tasha.PersonLoader.FileName
  commentId: F:DYL.Tasha.PersonLoader.FileName
  id: FileName
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: PersonLoader.FileName
  fullName: DYL.Tasha.PersonLoader.FileName
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FileName
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 31
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("FileName", "Households/People.csv", "The file name of the csv file that we will load people from.")]

      public string FileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("FileName", "Households/People.csv", "The file name of the csv file that we will load people from.")>

      Public FileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: FileName
    - type: System.String
      value: Households/People.csv
    - type: System.String
      value: The file name of the csv file that we will load people from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.Header
  commentId: F:DYL.Tasha.PersonLoader.Header
  id: Header
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: PersonLoader.Header
  fullName: DYL.Tasha.PersonLoader.Header
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Header
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 34
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Header", false, "Is there a header in the CSV file?")]

      public bool Header
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Header", False, "Is there a header in the CSV file?")>

      Public Header As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Header
    - type: System.Boolean
      value: false
    - type: System.String
      value: Is there a header in the CSV file?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonAgeCol
  commentId: F:DYL.Tasha.PersonLoader.PersonAgeCol
  id: PersonAgeCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonAgeCol
  nameWithType: PersonLoader.PersonAgeCol
  fullName: DYL.Tasha.PersonLoader.PersonAgeCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonAgeCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 37
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Age", 2, "The 0 indexed column that represents a person's age.")]

      public int PersonAgeCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Age", 2, "The 0 indexed column that represents a person's age.")>

      Public PersonAgeCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Age
    - type: System.Int32
      value: 2
    - type: System.String
      value: The 0 indexed column that represents a person's age.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonDriversLicenceCol
  commentId: F:DYL.Tasha.PersonLoader.PersonDriversLicenceCol
  id: PersonDriversLicenceCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonDriversLicenceCol
  nameWithType: PersonLoader.PersonDriversLicenceCol
  fullName: DYL.Tasha.PersonLoader.PersonDriversLicenceCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonDriversLicenceCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 40
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("DriversLicence", 4, "The 0 indexed column that represents if a person has a driver's license.")]

      public int PersonDriversLicenceCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("DriversLicence", 4, "The 0 indexed column that represents if a person has a driver's license.")>

      Public PersonDriversLicenceCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: DriversLicence
    - type: System.Int32
      value: 4
    - type: System.String
      value: The 0 indexed column that represents if a person has a driver's license.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonEmploymentStatusCol
  commentId: F:DYL.Tasha.PersonLoader.PersonEmploymentStatusCol
  id: PersonEmploymentStatusCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonEmploymentStatusCol
  nameWithType: PersonLoader.PersonEmploymentStatusCol
  fullName: DYL.Tasha.PersonLoader.PersonEmploymentStatusCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonEmploymentStatusCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 43
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("EmploymentStatus", 6, "The 0 indexed column that represents a person's employment status.")]

      public int PersonEmploymentStatusCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("EmploymentStatus", 6, "The 0 indexed column that represents a person's employment status.")>

      Public PersonEmploymentStatusCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: EmploymentStatus
    - type: System.Int32
      value: 6
    - type: System.String
      value: The 0 indexed column that represents a person's employment status.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonEmploymentZoneCol
  commentId: F:DYL.Tasha.PersonLoader.PersonEmploymentZoneCol
  id: PersonEmploymentZoneCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonEmploymentZoneCol
  nameWithType: PersonLoader.PersonEmploymentZoneCol
  fullName: DYL.Tasha.PersonLoader.PersonEmploymentZoneCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonEmploymentZoneCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 46
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("EmploymentZone", 11, "The 0 indexed column that represents a person's work zone.")]

      public int PersonEmploymentZoneCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("EmploymentZone", 11, "The 0 indexed column that represents a person's work zone.")>

      Public PersonEmploymentZoneCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: EmploymentZone
    - type: System.Int32
      value: 11
    - type: System.String
      value: The 0 indexed column that represents a person's work zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonFreeParkingCol
  commentId: F:DYL.Tasha.PersonLoader.PersonFreeParkingCol
  id: PersonFreeParkingCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonFreeParkingCol
  nameWithType: PersonLoader.PersonFreeParkingCol
  fullName: DYL.Tasha.PersonLoader.PersonFreeParkingCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonFreeParkingCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 49
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("FreeParking", 8, "The 0 indexed column that represents a person receives free parking for work.")]

      public int PersonFreeParkingCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("FreeParking", 8, "The 0 indexed column that represents a person receives free parking for work.")>

      Public PersonFreeParkingCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: FreeParking
    - type: System.Int32
      value: 8
    - type: System.String
      value: The 0 indexed column that represents a person receives free parking for work.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonGenderCol
  commentId: F:DYL.Tasha.PersonLoader.PersonGenderCol
  id: PersonGenderCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonGenderCol
  nameWithType: PersonLoader.PersonGenderCol
  fullName: DYL.Tasha.PersonLoader.PersonGenderCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonGenderCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 52
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Gender", 3, "The 0 indexed column that represents a person's gender (M/F).")]

      public int PersonGenderCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Gender", 3, "The 0 indexed column that represents a person's gender (M/F).")>

      Public PersonGenderCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Gender
    - type: System.Int32
      value: 3
    - type: System.String
      value: The 0 indexed column that represents a person's gender (M/F).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonHouseholdID
  commentId: F:DYL.Tasha.PersonLoader.PersonHouseholdID
  id: PersonHouseholdID
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonHouseholdID
  nameWithType: PersonLoader.PersonHouseholdID
  fullName: DYL.Tasha.PersonLoader.PersonHouseholdID
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonHouseholdID
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 55
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Household ID", 0, "The 0 indexed column that represents a person's Household ID.")]

      public int PersonHouseholdID
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Household ID", 0, "The 0 indexed column that represents a person's Household ID.")>

      Public PersonHouseholdID As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Household ID
    - type: System.Int32
      value: 0
    - type: System.String
      value: The 0 indexed column that represents a person's Household ID.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonIDCol
  commentId: F:DYL.Tasha.PersonLoader.PersonIDCol
  id: PersonIDCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonIDCol
  nameWithType: PersonLoader.PersonIDCol
  fullName: DYL.Tasha.PersonLoader.PersonIDCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonIDCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 58
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("ID", 1, "The 0 indexed column that represents a person's ID.")]

      public int PersonIDCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("ID", 1, "The 0 indexed column that represents a person's ID.")>

      Public PersonIDCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: ID
    - type: System.Int32
      value: 1
    - type: System.String
      value: The 0 indexed column that represents a person's ID.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonOccupationCol
  commentId: F:DYL.Tasha.PersonLoader.PersonOccupationCol
  id: PersonOccupationCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonOccupationCol
  nameWithType: PersonLoader.PersonOccupationCol
  fullName: DYL.Tasha.PersonLoader.PersonOccupationCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonOccupationCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 61
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Occupation", 7, "The 0 indexed column that represents a person's occupation.")]

      public int PersonOccupationCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Occupation", 7, "The 0 indexed column that represents a person's occupation.")>

      Public PersonOccupationCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Occupation
    - type: System.Int32
      value: 7
    - type: System.String
      value: The 0 indexed column that represents a person's occupation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonStudentCol
  commentId: F:DYL.Tasha.PersonLoader.PersonStudentCol
  id: PersonStudentCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonStudentCol
  nameWithType: PersonLoader.PersonStudentCol
  fullName: DYL.Tasha.PersonLoader.PersonStudentCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonStudentCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 64
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Student", 9, "The 0 indexed column that represents a person is a student.")]

      public int PersonStudentCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Student", 9, "The 0 indexed column that represents a person is a student.")>

      Public PersonStudentCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Student
    - type: System.Int32
      value: 9
    - type: System.String
      value: The 0 indexed column that represents a person is a student.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonStudentZoneCol
  commentId: F:DYL.Tasha.PersonLoader.PersonStudentZoneCol
  id: PersonStudentZoneCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonStudentZoneCol
  nameWithType: PersonLoader.PersonStudentZoneCol
  fullName: DYL.Tasha.PersonLoader.PersonStudentZoneCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonStudentZoneCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 67
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("StudentZone", 14, "The 0 indexed column that represents a person's school zone.")]

      public int PersonStudentZoneCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("StudentZone", 14, "The 0 indexed column that represents a person's school zone.")>

      Public PersonStudentZoneCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: StudentZone
    - type: System.Int32
      value: 14
    - type: System.String
      value: The 0 indexed column that represents a person's school zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.PersonTransitPassCol
  commentId: F:DYL.Tasha.PersonLoader.PersonTransitPassCol
  id: PersonTransitPassCol
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonTransitPassCol
  nameWithType: PersonLoader.PersonTransitPassCol
  fullName: DYL.Tasha.PersonLoader.PersonTransitPassCol
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonTransitPassCol
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 70
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("TransitPass", 5, "The 0 indexed column that represents a person has a transit pass.")]

      public int PersonTransitPassCol
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("TransitPass", 5, "The 0 indexed column that represents a person has a transit pass.")>

      Public PersonTransitPassCol As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: TransitPass
    - type: System.Int32
      value: 5
    - type: System.String
      value: The 0 indexed column that represents a person has a transit pass.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.SchoolLocationChoiceModel
  commentId: F:DYL.Tasha.PersonLoader.SchoolLocationChoiceModel
  id: SchoolLocationChoiceModel
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: SchoolLocationChoiceModel
  nameWithType: PersonLoader.SchoolLocationChoiceModel
  fullName: DYL.Tasha.PersonLoader.SchoolLocationChoiceModel
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SchoolLocationChoiceModel
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 73
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [SubModelInformation(Description = "The school location choice model.", Required = false)]

      public ICalculation<ITashaPerson, IZone> SchoolLocationChoiceModel
    return:
      type: TMG.ICalculation{Tasha.Common.ITashaPerson,TMG.IZone}
    content.vb: >-
      <SubModelInformation(Description:="The school location choice model.", Required:=False)>

      Public SchoolLocationChoiceModel As ICalculation(Of ITashaPerson, IZone)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The school location choice model.
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.TashaRuntime
  commentId: F:DYL.Tasha.PersonLoader.TashaRuntime
  id: TashaRuntime
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: TashaRuntime
  nameWithType: PersonLoader.TashaRuntime
  fullName: DYL.Tasha.PersonLoader.TashaRuntime
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TashaRuntime
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 76
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public ITashaRuntime TashaRuntime
    return:
      type: Tasha.Common.ITashaRuntime
    content.vb: Public TashaRuntime As ITashaRuntime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.TripchainLoader
  commentId: F:DYL.Tasha.PersonLoader.TripchainLoader
  id: TripchainLoader
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: TripchainLoader
  nameWithType: PersonLoader.TripchainLoader
  fullName: DYL.Tasha.PersonLoader.TripchainLoader
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TripchainLoader
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 79
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [SubModelInformation(Description = "The loader for trips and their chains, only include this if you are not using a scheduler.", Required = false)]

      public IDatachainLoader<ITashaPerson, ITripChain> TripchainLoader
    return:
      type: XTMF.IDatachainLoader{Tasha.Common.ITashaPerson,Tasha.Common.ITripChain}
    content.vb: >-
      <SubModelInformation(Description:="The loader for trips and their chains, only include this if you are not using a scheduler.", Required:=False)>

      Public TripchainLoader As IDatachainLoader(Of ITashaPerson, ITripChain)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The loader for trips and their chains, only include this if you are not using a scheduler.
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.UnknownZoneNumber
  commentId: F:DYL.Tasha.PersonLoader.UnknownZoneNumber
  id: UnknownZoneNumber
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: UnknownZoneNumber
  nameWithType: PersonLoader.UnknownZoneNumber
  fullName: DYL.Tasha.PersonLoader.UnknownZoneNumber
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnknownZoneNumber
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 82
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [RunParameter("Unknown Zone#", 99999, "The zone number representing a zone that we don't know about")]

      public int UnknownZoneNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Unknown Zone#", 99999, "The zone number representing a zone that we don't know about")>

      Public UnknownZoneNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Unknown Zone#
    - type: System.Int32
      value: 99999
    - type: System.String
      value: The zone number representing a zone that we don't know about
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.WorkLocationChoiceModel
  commentId: F:DYL.Tasha.PersonLoader.WorkLocationChoiceModel
  id: WorkLocationChoiceModel
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: WorkLocationChoiceModel
  nameWithType: PersonLoader.WorkLocationChoiceModel
  fullName: DYL.Tasha.PersonLoader.WorkLocationChoiceModel
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WorkLocationChoiceModel
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 85
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: >-
      [SubModelInformation(Description = "The work location choice model.", Required = false)]

      public ICalculation<ITashaPerson, IZone> WorkLocationChoiceModel
    return:
      type: TMG.ICalculation{Tasha.Common.ITashaPerson,TMG.IZone}
    content.vb: >-
      <SubModelInformation(Description:="The work location choice model.", Required:=False)>

      Public WorkLocationChoiceModel As ICalculation(Of ITashaPerson, IZone)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The work location choice model.
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.#ctor
  commentId: M:DYL.Tasha.PersonLoader.#ctor
  id: '#ctor'
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: PersonLoader()
  nameWithType: PersonLoader.PersonLoader()
  fullName: DYL.Tasha.PersonLoader.PersonLoader()
  type: Constructor
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 93
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public PersonLoader()
    content.vb: Public Sub New
  overload: DYL.Tasha.PersonLoader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.Finalize
  commentId: M:DYL.Tasha.PersonLoader.Finalize
  id: Finalize
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: PersonLoader.Finalize()
  fullName: DYL.Tasha.PersonLoader.Finalize()
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Finalize
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 97
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: DYL.Tasha.PersonLoader.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: DYL.Tasha.PersonLoader.Name
  commentId: P:DYL.Tasha.PersonLoader.Name
  id: Name
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PersonLoader.Name
  fullName: DYL.Tasha.PersonLoader.Name
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 102
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: DYL.Tasha.PersonLoader.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.OutOfData
  commentId: P:DYL.Tasha.PersonLoader.OutOfData
  id: OutOfData
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: OutOfData
  nameWithType: PersonLoader.OutOfData
  fullName: DYL.Tasha.PersonLoader.OutOfData
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutOfData
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 108
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public bool OutOfData { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OutOfData As Boolean
  overload: DYL.Tasha.PersonLoader.OutOfData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.PersonLoader.Progress
  commentId: P:DYL.Tasha.PersonLoader.Progress
  id: Progress
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: PersonLoader.Progress
  fullName: DYL.Tasha.PersonLoader.Progress
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 113
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: DYL.Tasha.PersonLoader.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.PersonLoader.ProgressColour
  commentId: P:DYL.Tasha.PersonLoader.ProgressColour
  id: ProgressColour
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: PersonLoader.ProgressColour
  fullName: DYL.Tasha.PersonLoader.ProgressColour
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 118
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: DYL.Tasha.PersonLoader.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.PersonLoader.Dispose
  commentId: M:DYL.Tasha.PersonLoader.Dispose
  id: Dispose
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PersonLoader.Dispose()
  fullName: DYL.Tasha.PersonLoader.Dispose()
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 123
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: DYL.Tasha.PersonLoader.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.Dispose(System.Boolean)
  commentId: M:DYL.Tasha.PersonLoader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: PersonLoader.Dispose(Boolean)
  fullName: DYL.Tasha.PersonLoader.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 129
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: protected virtual void Dispose(bool managedOnly)
    parameters:
    - id: managedOnly
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(managedOnly As Boolean)
  overload: DYL.Tasha.PersonLoader.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: DYL.Tasha.PersonLoader.Load(Tasha.Common.ITashaHousehold)
  commentId: M:DYL.Tasha.PersonLoader.Load(Tasha.Common.ITashaHousehold)
  id: Load(Tasha.Common.ITashaHousehold)
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Load(ITashaHousehold)
  nameWithType: PersonLoader.Load(ITashaHousehold)
  fullName: DYL.Tasha.PersonLoader.Load(Tasha.Common.ITashaHousehold)
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Load
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 139
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public bool Load(ITashaHousehold household)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    return:
      type: System.Boolean
    content.vb: Public Function Load(household As ITashaHousehold) As Boolean
  overload: DYL.Tasha.PersonLoader.Load*
  implements:
  - XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}.Load(Tasha.Common.ITashaHousehold)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.Reset
  commentId: M:DYL.Tasha.PersonLoader.Reset
  id: Reset
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: PersonLoader.Reset()
  fullName: DYL.Tasha.PersonLoader.Reset()
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Reset
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 217
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: DYL.Tasha.PersonLoader.Reset*
  implements:
  - XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.PersonLoader.RuntimeValidation(System.String@)
  commentId: M:DYL.Tasha.PersonLoader.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: DYL.Tasha.PersonLoader
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: PersonLoader.RuntimeValidation(ref String)
  fullName: DYL.Tasha.PersonLoader.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/PersonLoader.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/LocationAllocationModel/PersonLoader.cs
    startLine: 241
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nThis is called before the start method as a way to pre-check that all of the parameters that are selected\nare in fact valid for this module.\n"
  example: []
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
      description: A string that should be assigned a detailed error
    return:
      type: System.Boolean
      description: If the validation was successful or if there was a problem
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: DYL.Tasha.PersonLoader.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: PersonLoader.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DYL.Tasha.PersonLoader.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: DYL.Tasha
  commentId: N:DYL.Tasha
  isExternal: false
  name: DYL.Tasha
  nameWithType: DYL.Tasha
  fullName: DYL.Tasha
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}
  commentId: T:XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}
  parent: XTMF
  definition: XTMF.IDatachainLoader`2
  name: IDatachainLoader<ITashaHousehold, ITashaPerson>
  nameWithType: IDatachainLoader<ITashaHousehold, ITashaPerson>
  fullName: XTMF.IDatachainLoader<Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson>
  nameWithType.vb: IDatachainLoader(Of ITashaHousehold, ITashaPerson)
  fullName.vb: XTMF.IDatachainLoader(Of Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson)
  name.vb: IDatachainLoader(Of ITashaHousehold, ITashaPerson)
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2
    name: IDatachainLoader
    nameWithType: IDatachainLoader
    fullName: XTMF.IDatachainLoader
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tasha.Common.ITashaPerson
    name: ITashaPerson
    nameWithType: ITashaPerson
    fullName: Tasha.Common.ITashaPerson
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDatachainLoader`2
    name: IDatachainLoader
    nameWithType: IDatachainLoader
    fullName: XTMF.IDatachainLoader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tasha.Common.ITashaPerson
    name: ITashaPerson
    nameWithType: ITashaPerson
    fullName: Tasha.Common.ITashaPerson
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.IDatachainLoader`2
  commentId: T:XTMF.IDatachainLoader`2
  isExternal: false
  name: IDatachainLoader<TGiven, TProduced>
  nameWithType: IDatachainLoader<TGiven, TProduced>
  fullName: XTMF.IDatachainLoader<TGiven, TProduced>
  nameWithType.vb: IDatachainLoader(Of TGiven, TProduced)
  fullName.vb: XTMF.IDatachainLoader(Of TGiven, TProduced)
  name.vb: IDatachainLoader(Of TGiven, TProduced)
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2
    name: IDatachainLoader
    nameWithType: IDatachainLoader
    fullName: XTMF.IDatachainLoader
  - name: <
    nameWithType: <
    fullName: <
  - name: TGiven
    nameWithType: TGiven
    fullName: TGiven
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProduced
    nameWithType: TProduced
    fullName: TProduced
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDatachainLoader`2
    name: IDatachainLoader
    nameWithType: IDatachainLoader
    fullName: XTMF.IDatachainLoader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGiven
    nameWithType: TGiven
    fullName: TGiven
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProduced
    nameWithType: TProduced
    fullName: TProduced
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.ICalculation{Tasha.Common.ITashaPerson,TMG.IZone}
  commentId: T:TMG.ICalculation{Tasha.Common.ITashaPerson,TMG.IZone}
  parent: TMG
  definition: TMG.ICalculation`2
  name: ICalculation<ITashaPerson, IZone>
  nameWithType: ICalculation<ITashaPerson, IZone>
  fullName: TMG.ICalculation<Tasha.Common.ITashaPerson, TMG.IZone>
  nameWithType.vb: ICalculation(Of ITashaPerson, IZone)
  fullName.vb: TMG.ICalculation(Of Tasha.Common.ITashaPerson, TMG.IZone)
  name.vb: ICalculation(Of ITashaPerson, IZone)
  spec.csharp:
  - uid: TMG.ICalculation`2
    name: ICalculation
    nameWithType: ICalculation
    fullName: TMG.ICalculation
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tasha.Common.ITashaPerson
    name: ITashaPerson
    nameWithType: ITashaPerson
    fullName: Tasha.Common.ITashaPerson
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.ICalculation`2
    name: ICalculation
    nameWithType: ICalculation
    fullName: TMG.ICalculation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tasha.Common.ITashaPerson
    name: ITashaPerson
    nameWithType: ITashaPerson
    fullName: Tasha.Common.ITashaPerson
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.ICalculation`2
  commentId: T:TMG.ICalculation`2
  isExternal: false
  name: ICalculation<D, O>
  nameWithType: ICalculation<D, O>
  fullName: TMG.ICalculation<D, O>
  nameWithType.vb: ICalculation(Of D, O)
  fullName.vb: TMG.ICalculation(Of D, O)
  name.vb: ICalculation(Of D, O)
  spec.csharp:
  - uid: TMG.ICalculation`2
    name: ICalculation
    nameWithType: ICalculation
    fullName: TMG.ICalculation
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: O
    nameWithType: O
    fullName: O
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.ICalculation`2
    name: ICalculation
    nameWithType: ICalculation
    fullName: TMG.ICalculation
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: O
    nameWithType: O
    fullName: O
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: Tasha.Common.ITashaRuntime
  commentId: T:Tasha.Common.ITashaRuntime
  parent: Tasha.Common
  isExternal: false
  name: ITashaRuntime
  nameWithType: ITashaRuntime
  fullName: Tasha.Common.ITashaRuntime
- uid: Tasha.Common
  commentId: N:Tasha.Common
  isExternal: false
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: XTMF.IDatachainLoader{Tasha.Common.ITashaPerson,Tasha.Common.ITripChain}
  commentId: T:XTMF.IDatachainLoader{Tasha.Common.ITashaPerson,Tasha.Common.ITripChain}
  parent: XTMF
  definition: XTMF.IDatachainLoader`2
  name: IDatachainLoader<ITashaPerson, ITripChain>
  nameWithType: IDatachainLoader<ITashaPerson, ITripChain>
  fullName: XTMF.IDatachainLoader<Tasha.Common.ITashaPerson, Tasha.Common.ITripChain>
  nameWithType.vb: IDatachainLoader(Of ITashaPerson, ITripChain)
  fullName.vb: XTMF.IDatachainLoader(Of Tasha.Common.ITashaPerson, Tasha.Common.ITripChain)
  name.vb: IDatachainLoader(Of ITashaPerson, ITripChain)
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2
    name: IDatachainLoader
    nameWithType: IDatachainLoader
    fullName: XTMF.IDatachainLoader
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tasha.Common.ITashaPerson
    name: ITashaPerson
    nameWithType: ITashaPerson
    fullName: Tasha.Common.ITashaPerson
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tasha.Common.ITripChain
    name: ITripChain
    nameWithType: ITripChain
    fullName: Tasha.Common.ITripChain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDatachainLoader`2
    name: IDatachainLoader
    nameWithType: IDatachainLoader
    fullName: XTMF.IDatachainLoader
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tasha.Common.ITashaPerson
    name: ITashaPerson
    nameWithType: ITashaPerson
    fullName: Tasha.Common.ITashaPerson
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tasha.Common.ITripChain
    name: ITripChain
    nameWithType: ITripChain
    fullName: Tasha.Common.ITripChain
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.PersonLoader.#ctor*
  commentId: Overload:DYL.Tasha.PersonLoader.#ctor
  isExternal: false
  name: PersonLoader
  nameWithType: PersonLoader.PersonLoader
  fullName: DYL.Tasha.PersonLoader.PersonLoader
- uid: DYL.Tasha.PersonLoader.Finalize*
  commentId: Overload:DYL.Tasha.PersonLoader.Finalize
  isExternal: false
  name: Finalize
  nameWithType: PersonLoader.Finalize
  fullName: DYL.Tasha.PersonLoader.Finalize
- uid: DYL.Tasha.PersonLoader.Name*
  commentId: Overload:DYL.Tasha.PersonLoader.Name
  isExternal: false
  name: Name
  nameWithType: PersonLoader.Name
  fullName: DYL.Tasha.PersonLoader.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: DYL.Tasha.PersonLoader.OutOfData*
  commentId: Overload:DYL.Tasha.PersonLoader.OutOfData
  isExternal: false
  name: OutOfData
  nameWithType: PersonLoader.OutOfData
  fullName: DYL.Tasha.PersonLoader.OutOfData
- uid: DYL.Tasha.PersonLoader.Progress*
  commentId: Overload:DYL.Tasha.PersonLoader.Progress
  isExternal: false
  name: Progress
  nameWithType: PersonLoader.Progress
  fullName: DYL.Tasha.PersonLoader.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DYL.Tasha.PersonLoader.ProgressColour*
  commentId: Overload:DYL.Tasha.PersonLoader.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: PersonLoader.ProgressColour
  fullName: DYL.Tasha.PersonLoader.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.PersonLoader.Dispose*
  commentId: Overload:DYL.Tasha.PersonLoader.Dispose
  isExternal: false
  name: Dispose
  nameWithType: PersonLoader.Dispose
  fullName: DYL.Tasha.PersonLoader.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.PersonLoader.Load*
  commentId: Overload:DYL.Tasha.PersonLoader.Load
  isExternal: false
  name: Load
  nameWithType: PersonLoader.Load
  fullName: DYL.Tasha.PersonLoader.Load
- uid: XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}.Load(Tasha.Common.ITashaHousehold)
  commentId: M:XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}.Load(Tasha.Common.ITashaHousehold)
  parent: XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}
  definition: XTMF.IDatachainLoader`2.Load(`0)
  name: Load(ITashaHousehold)
  nameWithType: IDatachainLoader<ITashaHousehold, ITashaPerson>.Load(ITashaHousehold)
  fullName: XTMF.IDatachainLoader<Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson>.Load(Tasha.Common.ITashaHousehold)
  nameWithType.vb: IDatachainLoader(Of ITashaHousehold, ITashaPerson).Load(ITashaHousehold)
  fullName.vb: XTMF.IDatachainLoader(Of Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson).Load(Tasha.Common.ITashaHousehold)
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2.Load(`0)
    name: Load
    nameWithType: IDatachainLoader<ITashaHousehold, ITashaPerson>.Load
    fullName: XTMF.IDatachainLoader<Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson>.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDatachainLoader`2.Load(`0)
    name: Load
    nameWithType: IDatachainLoader(Of ITashaHousehold, ITashaPerson).Load
    fullName: XTMF.IDatachainLoader(Of Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson).Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tasha.Common.ITashaHousehold
    name: ITashaHousehold
    nameWithType: ITashaHousehold
    fullName: Tasha.Common.ITashaHousehold
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ITashaHousehold
  commentId: T:Tasha.Common.ITashaHousehold
  parent: Tasha.Common
  isExternal: false
  name: ITashaHousehold
  nameWithType: ITashaHousehold
  fullName: Tasha.Common.ITashaHousehold
- uid: XTMF.IDatachainLoader`2.Load(`0)
  commentId: M:XTMF.IDatachainLoader`2.Load(`0)
  isExternal: false
  name: Load(TGiven)
  nameWithType: IDatachainLoader<TGiven, TProduced>.Load(TGiven)
  fullName: XTMF.IDatachainLoader<TGiven, TProduced>.Load(TGiven)
  nameWithType.vb: IDatachainLoader(Of TGiven, TProduced).Load(TGiven)
  fullName.vb: XTMF.IDatachainLoader(Of TGiven, TProduced).Load(TGiven)
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2.Load(`0)
    name: Load
    nameWithType: IDatachainLoader<TGiven, TProduced>.Load
    fullName: XTMF.IDatachainLoader<TGiven, TProduced>.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: TGiven
    nameWithType: TGiven
    fullName: TGiven
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDatachainLoader`2.Load(`0)
    name: Load
    nameWithType: IDatachainLoader(Of TGiven, TProduced).Load
    fullName: XTMF.IDatachainLoader(Of TGiven, TProduced).Load
  - name: (
    nameWithType: (
    fullName: (
  - name: TGiven
    nameWithType: TGiven
    fullName: TGiven
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.PersonLoader.Reset*
  commentId: Overload:DYL.Tasha.PersonLoader.Reset
  isExternal: false
  name: Reset
  nameWithType: PersonLoader.Reset
  fullName: DYL.Tasha.PersonLoader.Reset
- uid: XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}.Reset
  commentId: M:XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}.Reset
  parent: XTMF.IDatachainLoader{Tasha.Common.ITashaHousehold,Tasha.Common.ITashaPerson}
  definition: XTMF.IDatachainLoader`2.Reset
  name: Reset()
  nameWithType: IDatachainLoader<ITashaHousehold, ITashaPerson>.Reset()
  fullName: XTMF.IDatachainLoader<Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson>.Reset()
  nameWithType.vb: IDatachainLoader(Of ITashaHousehold, ITashaPerson).Reset()
  fullName.vb: XTMF.IDatachainLoader(Of Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson).Reset()
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2.Reset
    name: Reset
    nameWithType: IDatachainLoader<ITashaHousehold, ITashaPerson>.Reset
    fullName: XTMF.IDatachainLoader<Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDatachainLoader`2.Reset
    name: Reset
    nameWithType: IDatachainLoader(Of ITashaHousehold, ITashaPerson).Reset
    fullName: XTMF.IDatachainLoader(Of Tasha.Common.ITashaHousehold, Tasha.Common.ITashaPerson).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDatachainLoader`2.Reset
  commentId: M:XTMF.IDatachainLoader`2.Reset
  isExternal: false
  name: Reset()
  nameWithType: IDatachainLoader<TGiven, TProduced>.Reset()
  fullName: XTMF.IDatachainLoader<TGiven, TProduced>.Reset()
  nameWithType.vb: IDatachainLoader(Of TGiven, TProduced).Reset()
  fullName.vb: XTMF.IDatachainLoader(Of TGiven, TProduced).Reset()
  spec.csharp:
  - uid: XTMF.IDatachainLoader`2.Reset
    name: Reset
    nameWithType: IDatachainLoader<TGiven, TProduced>.Reset
    fullName: XTMF.IDatachainLoader<TGiven, TProduced>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDatachainLoader`2.Reset
    name: Reset
    nameWithType: IDatachainLoader(Of TGiven, TProduced).Reset
    fullName: XTMF.IDatachainLoader(Of TGiven, TProduced).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.PersonLoader.RuntimeValidation*
  commentId: Overload:DYL.Tasha.PersonLoader.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: PersonLoader.RuntimeValidation
  fullName: DYL.Tasha.PersonLoader.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
