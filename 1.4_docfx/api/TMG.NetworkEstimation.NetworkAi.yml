### YamlMime:ManagedReference
items:
- uid: TMG.NetworkEstimation.NetworkAi
  commentId: T:TMG.NetworkEstimation.NetworkAi
  id: NetworkAi
  parent: TMG.NetworkEstimation
  children:
  - TMG.NetworkEstimation.NetworkAi.CancelExploration
  - TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  - TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction(System.Double,System.Double,System.Double)
  - TMG.NetworkEstimation.NetworkAi.ErrorTallies
  - TMG.NetworkEstimation.NetworkAi.ErrorWeight
  - TMG.NetworkEstimation.NetworkAi.EvaluationFile
  - TMG.NetworkEstimation.NetworkAi.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  - TMG.NetworkEstimation.NetworkAi.InitialParameterFile
  - TMG.NetworkEstimation.NetworkAi.IterationsFromBest
  - TMG.NetworkEstimation.NetworkAi.MabsWeight
  - TMG.NetworkEstimation.NetworkAi.MomentumResidule
  - TMG.NetworkEstimation.NetworkAi.MomentumThreshhold
  - TMG.NetworkEstimation.NetworkAi.Name
  - TMG.NetworkEstimation.NetworkAi.PercentageStepCap
  - TMG.NetworkEstimation.NetworkAi.Progress
  - TMG.NetworkEstimation.NetworkAi.ProgressColour
  - TMG.NetworkEstimation.NetworkAi.RandomSeed
  - TMG.NetworkEstimation.NetworkAi.RerunFromLastRunParameters
  - TMG.NetworkEstimation.NetworkAi.RmseWeight
  - TMG.NetworkEstimation.NetworkAi.RuntimeValidation(System.String@)
  - TMG.NetworkEstimation.NetworkAi.StepWeight
  - TMG.NetworkEstimation.NetworkAi.TotalIterations
  - TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction
  - TMG.NetworkEstimation.NetworkAi.VolatilityThreshhold
  - TMG.NetworkEstimation.NetworkAi.WhiskerLength
  langs:
  - csharp
  - vb
  name: NetworkAi
  nameWithType: NetworkAi
  fullName: TMG.NetworkEstimation.NetworkAi
  type: Class
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkAi
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 28
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: 'public class NetworkAi : INetworkEstimationAI, IModule'
    content.vb: >-
      Public Class NetworkAi

          Implements INetworkEstimationAI, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.NetworkEstimation.INetworkEstimationAI
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.NetworkEstimation.NetworkAi.ErrorTallies
  commentId: F:TMG.NetworkEstimation.NetworkAi.ErrorTallies
  id: ErrorTallies
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: ErrorTallies
  nameWithType: NetworkAi.ErrorTallies
  fullName: TMG.NetworkEstimation.NetworkAi.ErrorTallies
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ErrorTallies
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 31
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [SubModelInformation(Description = "The things to use for calculating the error.", Required = false)]

      public List<IErrorTally> ErrorTallies
    return:
      type: System.Collections.Generic.List{TMG.NetworkEstimation.IErrorTally}
    content.vb: >-
      <SubModelInformation(Description:="The things to use for calculating the error.", Required:=False)>

      Public ErrorTallies As List(Of IErrorTally)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The things to use for calculating the error.
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.EvaluationFile
  commentId: F:TMG.NetworkEstimation.NetworkAi.EvaluationFile
  id: EvaluationFile
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: EvaluationFile
  nameWithType: NetworkAi.EvaluationFile
  fullName: TMG.NetworkEstimation.NetworkAi.EvaluationFile
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EvaluationFile
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 34
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Evaluation File", "../ParameterEvaluation.csv", "The path to the file that stores the values of the tested parameters.")]

      public string EvaluationFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Evaluation File", "../ParameterEvaluation.csv", "The path to the file that stores the values of the tested parameters.")>

      Public EvaluationFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Evaluation File
    - type: System.String
      value: ../ParameterEvaluation.csv
    - type: System.String
      value: The path to the file that stores the values of the tested parameters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.InitialParameterFile
  commentId: F:TMG.NetworkEstimation.NetworkAi.InitialParameterFile
  id: InitialParameterFile
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: InitialParameterFile
  nameWithType: NetworkAi.InitialParameterFile
  fullName: TMG.NetworkEstimation.NetworkAi.InitialParameterFile
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InitialParameterFile
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 37
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Initial Parameters", "", "Leave this empty if you don't want to set the initial Parameters, otherwise the file name for the parameters")]

      public string InitialParameterFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Initial Parameters", "", "Leave this empty if you don't want to set the initial Parameters, otherwise the file name for the parameters")>

      Public InitialParameterFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Initial Parameters
    - type: System.String
      value: ''
    - type: System.String
      value: Leave this empty if you don't want to set the initial Parameters, otherwise the file name for the parameters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.IterationsFromBest
  commentId: F:TMG.NetworkEstimation.NetworkAi.IterationsFromBest
  id: IterationsFromBest
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: IterationsFromBest
  nameWithType: NetworkAi.IterationsFromBest
  fullName: TMG.NetworkEstimation.NetworkAi.IterationsFromBest
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationsFromBest
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 40
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Iterations From Best", 5, "Number of iterations we can go before testing how far we are from the best.")]

      public int IterationsFromBest
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Iterations From Best", 5, "Number of iterations we can go before testing how far we are from the best.")>

      Public IterationsFromBest As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Iterations From Best
    - type: System.Int32
      value: 5
    - type: System.String
      value: Number of iterations we can go before testing how far we are from the best.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.MabsWeight
  commentId: F:TMG.NetworkEstimation.NetworkAi.MabsWeight
  id: MabsWeight
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: MabsWeight
  nameWithType: NetworkAi.MabsWeight
  fullName: TMG.NetworkEstimation.NetworkAi.MabsWeight
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MabsWeight
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 43
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("MABS Weight", 1F, "The weight applied to the mean absolute error in the evaluation function")]

      public float MabsWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("MABS Weight", 1F, "The weight applied to the mean absolute error in the evaluation function")>

      Public MabsWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: MABS Weight
    - type: System.Single
      value: 1
    - type: System.String
      value: The weight applied to the mean absolute error in the evaluation function
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.MomentumResidule
  commentId: F:TMG.NetworkEstimation.NetworkAi.MomentumResidule
  id: MomentumResidule
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: MomentumResidule
  nameWithType: NetworkAi.MomentumResidule
  fullName: TMG.NetworkEstimation.NetworkAi.MomentumResidule
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MomentumResidule
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 46
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Momentum Residual", 0.1F, "The amount of momentum that continues on from the previous iteration.")]

      public float MomentumResidule
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Momentum Residual", 0.1F, "The amount of momentum that continues on from the previous iteration.")>

      Public MomentumResidule As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Momentum Residual
    - type: System.Single
      value: 0.10000000100000001
    - type: System.String
      value: The amount of momentum that continues on from the previous iteration.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.MomentumThreshhold
  commentId: F:TMG.NetworkEstimation.NetworkAi.MomentumThreshhold
  id: MomentumThreshhold
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: MomentumThreshhold
  nameWithType: NetworkAi.MomentumThreshhold
  fullName: TMG.NetworkEstimation.NetworkAi.MomentumThreshhold
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MomentumThreshhold
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 49
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Momentum Threshold", 100F, "The threshold until there isn't enough momentum left in the system to continue if we have no momentum")]

      public float MomentumThreshhold
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Momentum Threshold", 100F, "The threshold until there isn't enough momentum left in the system to continue if we have no momentum")>

      Public MomentumThreshhold As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Momentum Threshold
    - type: System.Single
      value: 100
    - type: System.String
      value: The threshold until there isn't enough momentum left in the system to continue if we have no momentum
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.PercentageStepCap
  commentId: F:TMG.NetworkEstimation.NetworkAi.PercentageStepCap
  id: PercentageStepCap
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: PercentageStepCap
  nameWithType: NetworkAi.PercentageStepCap
  fullName: TMG.NetworkEstimation.NetworkAi.PercentageStepCap
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PercentageStepCap
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 52
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Percentage Step Cap", 0.1F, "The maximum amount that a kernel step can take in 1 iteration")]

      public float PercentageStepCap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Percentage Step Cap", 0.1F, "The maximum amount that a kernel step can take in 1 iteration")>

      Public PercentageStepCap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Percentage Step Cap
    - type: System.Single
      value: 0.10000000100000001
    - type: System.String
      value: The maximum amount that a kernel step can take in 1 iteration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.RandomSeed
  commentId: F:TMG.NetworkEstimation.NetworkAi.RandomSeed
  id: RandomSeed
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: RandomSeed
  nameWithType: NetworkAi.RandomSeed
  fullName: TMG.NetworkEstimation.NetworkAi.RandomSeed
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RandomSeed
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 55
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Random Seed", 12345, "The random seed to use for this estimation.")]

      public int RandomSeed
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Random Seed", 12345, "The random seed to use for this estimation.")>

      Public RandomSeed As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Random Seed
    - type: System.Int32
      value: 12345
    - type: System.String
      value: The random seed to use for this estimation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.RerunFromLastRunParameters
  commentId: F:TMG.NetworkEstimation.NetworkAi.RerunFromLastRunParameters
  id: RerunFromLastRunParameters
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: RerunFromLastRunParameters
  nameWithType: NetworkAi.RerunFromLastRunParameters
  fullName: TMG.NetworkEstimation.NetworkAi.RerunFromLastRunParameters
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RerunFromLastRunParameters
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 58
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Continue From Best", false, "Should we attempt to load the old values and find the one with the lowest error and continue from there?")]

      public bool RerunFromLastRunParameters
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Continue From Best", False, "Should we attempt to load the old values and find the one with the lowest error and continue from there?")>

      Public RerunFromLastRunParameters As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Continue From Best
    - type: System.Boolean
      value: false
    - type: System.String
      value: Should we attempt to load the old values and find the one with the lowest error and continue from there?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.RmseWeight
  commentId: F:TMG.NetworkEstimation.NetworkAi.RmseWeight
  id: RmseWeight
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: RmseWeight
  nameWithType: NetworkAi.RmseWeight
  fullName: TMG.NetworkEstimation.NetworkAi.RmseWeight
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RmseWeight
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 61
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("RMSE Weight", 1F, "The weight applied to the root mean square error in the evaluation function")]

      public float RmseWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("RMSE Weight", 1F, "The weight applied to the root mean square error in the evaluation function")>

      Public RmseWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: RMSE Weight
    - type: System.Single
      value: 1
    - type: System.String
      value: The weight applied to the root mean square error in the evaluation function
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.StepWeight
  commentId: F:TMG.NetworkEstimation.NetworkAi.StepWeight
  id: StepWeight
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: StepWeight
  nameWithType: NetworkAi.StepWeight
  fullName: TMG.NetworkEstimation.NetworkAi.StepWeight
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StepWeight
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 64
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Step Weight", 0.01F, "The amount that we will move our focus in each parameter dimension per iteration (multiplied against the gradient).")]

      public float StepWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Step Weight", 0.01F, "The amount that we will move our focus in each parameter dimension per iteration (multiplied against the gradient).")>

      Public StepWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Step Weight
    - type: System.Single
      value: 0.0099999997799999994
    - type: System.String
      value: The amount that we will move our focus in each parameter dimension per iteration (multiplied against the gradient).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.ErrorWeight
  commentId: F:TMG.NetworkEstimation.NetworkAi.ErrorWeight
  id: ErrorWeight
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: ErrorWeight
  nameWithType: NetworkAi.ErrorWeight
  fullName: TMG.NetworkEstimation.NetworkAi.ErrorWeight
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ErrorWeight
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 67
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Total Error Weight", 1F, "The weight applied to the total error in the evaluation function")]

      public float ErrorWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Total Error Weight", 1F, "The weight applied to the total error in the evaluation function")>

      Public ErrorWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Total Error Weight
    - type: System.Single
      value: 1
    - type: System.String
      value: The weight applied to the total error in the evaluation function
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.TotalIterations
  commentId: F:TMG.NetworkEstimation.NetworkAi.TotalIterations
  id: TotalIterations
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: TotalIterations
  nameWithType: NetworkAi.TotalIterations
  fullName: TMG.NetworkEstimation.NetworkAi.TotalIterations
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TotalIterations
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 70
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Total Iterations", 25, "The number of iterations to process.")]

      public int TotalIterations
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Total Iterations", 25, "The number of iterations to process.")>

      Public TotalIterations As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Total Iterations
    - type: System.Int32
      value: 25
    - type: System.String
      value: The number of iterations to process.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.VolatilityThreshhold
  commentId: F:TMG.NetworkEstimation.NetworkAi.VolatilityThreshhold
  id: VolatilityThreshhold
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: VolatilityThreshhold
  nameWithType: NetworkAi.VolatilityThreshhold
  fullName: TMG.NetworkEstimation.NetworkAi.VolatilityThreshhold
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: VolatilityThreshhold
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 73
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Volatility Threshold", 100F, "The threshold until there isn't enough volatility left in the system to continue if we have no momentum.")]

      public float VolatilityThreshhold
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Volatility Threshold", 100F, "The threshold until there isn't enough volatility left in the system to continue if we have no momentum.")>

      Public VolatilityThreshhold As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Volatility Threshold
    - type: System.Single
      value: 100
    - type: System.String
      value: The threshold until there isn't enough volatility left in the system to continue if we have no momentum.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.WhiskerLength
  commentId: F:TMG.NetworkEstimation.NetworkAi.WhiskerLength
  id: WhiskerLength
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: WhiskerLength
  nameWithType: NetworkAi.WhiskerLength
  fullName: TMG.NetworkEstimation.NetworkAi.WhiskerLength
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WhiskerLength
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 76
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Whisker Length", 0.1F, "The amount that we will search out to find orientation in each parameter dimension.")]

      public float WhiskerLength
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Whisker Length", 0.1F, "The amount that we will search out to find orientation in each parameter dimension.")>

      Public WhiskerLength As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Whisker Length
    - type: System.Single
      value: 0.10000000100000001
    - type: System.String
      value: The amount that we will search out to find orientation in each parameter dimension.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.Name
  commentId: P:TMG.NetworkEstimation.NetworkAi.Name
  id: Name
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NetworkAi.Name
  fullName: TMG.NetworkEstimation.NetworkAi.Name
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 98
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.NetworkEstimation.NetworkAi.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.Progress
  commentId: P:TMG.NetworkEstimation.NetworkAi.Progress
  id: Progress
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: NetworkAi.Progress
  fullName: TMG.NetworkEstimation.NetworkAi.Progress
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 104
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.NetworkEstimation.NetworkAi.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.ProgressColour
  commentId: P:TMG.NetworkEstimation.NetworkAi.ProgressColour
  id: ProgressColour
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: NetworkAi.ProgressColour
  fullName: TMG.NetworkEstimation.NetworkAi.ProgressColour
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 110
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.NetworkEstimation.NetworkAi.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction
  commentId: P:TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction
  id: UseComplexErrorFunction
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: UseComplexErrorFunction
  nameWithType: NetworkAi.UseComplexErrorFunction
  fullName: TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UseComplexErrorFunction
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 115
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Advanced Analysis Error Function", true, "Should we use the advanced function instead of using the RMSE et al.")]

      public bool UseComplexErrorFunction { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Advanced Analysis Error Function", True, "Should we use the advanced function instead of using the RMSE et al.")>

      Public Property UseComplexErrorFunction As Boolean
  overload: TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction*
  implements:
  - TMG.NetworkEstimation.INetworkEstimationAI.UseComplexErrorFunction
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Advanced Analysis Error Function
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should we use the advanced function instead of using the RMSE et al.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.CancelExploration
  commentId: M:TMG.NetworkEstimation.NetworkAi.CancelExploration
  id: CancelExploration
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: CancelExploration()
  nameWithType: NetworkAi.CancelExploration()
  fullName: TMG.NetworkEstimation.NetworkAi.CancelExploration()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CancelExploration
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 118
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public void CancelExploration()
    content.vb: Public Sub CancelExploration
  overload: TMG.NetworkEstimation.NetworkAi.CancelExploration*
  implements:
  - TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  commentId: M:TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  id: ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: ComplexErrorFunction(ParameterSetting[], TransitLine[], TransitLine[], Single[])
  nameWithType: NetworkAi.ComplexErrorFunction(ParameterSetting[], TransitLine[], TransitLine[], Single[])
  fullName: TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[], TMG.Emme.TransitLine[], TMG.Emme.TransitLine[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ComplexErrorFunction
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 123
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float ComplexErrorFunction(ParameterSetting[] parameters, TransitLine[] transitLine, TransitLine[] predicted, float[] aggToTruth)
    parameters:
    - id: parameters
      type: TMG.NetworkEstimation.ParameterSetting[]
    - id: transitLine
      type: TMG.Emme.TransitLine[]
    - id: predicted
      type: TMG.Emme.TransitLine[]
    - id: aggToTruth
      type: System.Single[]
    return:
      type: System.Single
    content.vb: Public Function ComplexErrorFunction(parameters As ParameterSetting(), transitLine As TransitLine(), predicted As TransitLine(), aggToTruth As Single()) As Single
  overload: TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction*
  implements:
  - TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  nameWithType.vb: NetworkAi.ComplexErrorFunction(ParameterSetting(), TransitLine(), TransitLine(), Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting(), TMG.Emme.TransitLine(), TMG.Emme.TransitLine(), System.Single())
  name.vb: ComplexErrorFunction(ParameterSetting(), TransitLine(), TransitLine(), Single())
- uid: TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction(System.Double,System.Double,System.Double)
  commentId: M:TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction(System.Double,System.Double,System.Double)
  id: ErrorCombinationFunction(System.Double,System.Double,System.Double)
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: ErrorCombinationFunction(Double, Double, Double)
  nameWithType: NetworkAi.ErrorCombinationFunction(Double, Double, Double)
  fullName: TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ErrorCombinationFunction
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 135
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float ErrorCombinationFunction(double rmse, double mabs, double terror)
    parameters:
    - id: rmse
      type: System.Double
    - id: mabs
      type: System.Double
    - id: terror
      type: System.Double
    return:
      type: System.Single
    content.vb: Public Function ErrorCombinationFunction(rmse As Double, mabs As Double, terror As Double) As Single
  overload: TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction*
  implements:
  - TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction(System.Double,System.Double,System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkAi.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  commentId: M:TMG.NetworkEstimation.NetworkAi.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  id: Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: Explore(ParameterSetting[], Action, Func<ParameterSetting[], Single>)
  nameWithType: NetworkAi.Explore(ParameterSetting[], Action, Func<ParameterSetting[], Single>)
  fullName: TMG.NetworkEstimation.NetworkAi.Explore(TMG.NetworkEstimation.ParameterSetting[], System.Action, System.Func<TMG.NetworkEstimation.ParameterSetting[], System.Single>)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Explore
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 143
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public void Explore(ParameterSetting[] parameters, Action updateProgress, Func<ParameterSetting[], float> evaluationfunction)
    parameters:
    - id: parameters
      type: TMG.NetworkEstimation.ParameterSetting[]
    - id: updateProgress
      type: System.Action
    - id: evaluationfunction
      type: System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single}
    content.vb: Public Sub Explore(parameters As ParameterSetting(), updateProgress As Action, evaluationfunction As Func(Of ParameterSetting(), Single))
  overload: TMG.NetworkEstimation.NetworkAi.Explore*
  implements:
  - TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  nameWithType.vb: NetworkAi.Explore(ParameterSetting(), Action, Func(Of ParameterSetting(), Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.NetworkAi.Explore(TMG.NetworkEstimation.ParameterSetting(), System.Action, System.Func(Of TMG.NetworkEstimation.ParameterSetting(), System.Single))
  name.vb: Explore(ParameterSetting(), Action, Func(Of ParameterSetting(), Single))
- uid: TMG.NetworkEstimation.NetworkAi.RuntimeValidation(System.String@)
  commentId: M:TMG.NetworkEstimation.NetworkAi.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.NetworkEstimation.NetworkAi
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: NetworkAi.RuntimeValidation(ref String)
  fullName: TMG.NetworkEstimation.NetworkAi.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkAI.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/NetworkEstimation/NetworkAI.cs
    startLine: 206
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.NetworkEstimation.NetworkAi.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: NetworkAi.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.NetworkAi.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.NetworkEstimation
  commentId: N:TMG.NetworkEstimation
  isExternal: false
  name: TMG.NetworkEstimation
  nameWithType: TMG.NetworkEstimation
  fullName: TMG.NetworkEstimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.NetworkEstimation.INetworkEstimationAI
  commentId: T:TMG.NetworkEstimation.INetworkEstimationAI
  parent: TMG.NetworkEstimation
  isExternal: false
  name: INetworkEstimationAI
  nameWithType: INetworkEstimationAI
  fullName: TMG.NetworkEstimation.INetworkEstimationAI
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Collections.Generic.List{TMG.NetworkEstimation.IErrorTally}
  commentId: T:System.Collections.Generic.List{TMG.NetworkEstimation.IErrorTally}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IErrorTally>
  nameWithType: List<IErrorTally>
  fullName: System.Collections.Generic.List<TMG.NetworkEstimation.IErrorTally>
  nameWithType.vb: List(Of IErrorTally)
  fullName.vb: System.Collections.Generic.List(Of TMG.NetworkEstimation.IErrorTally)
  name.vb: List(Of IErrorTally)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.NetworkEstimation.IErrorTally
    name: IErrorTally
    nameWithType: IErrorTally
    fullName: TMG.NetworkEstimation.IErrorTally
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.NetworkEstimation.IErrorTally
    name: IErrorTally
    nameWithType: IErrorTally
    fullName: TMG.NetworkEstimation.IErrorTally
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.NetworkEstimation.NetworkAi.Name*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.Name
  isExternal: false
  name: Name
  nameWithType: NetworkAi.Name
  fullName: TMG.NetworkEstimation.NetworkAi.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.NetworkEstimation.NetworkAi.Progress*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.Progress
  isExternal: false
  name: Progress
  nameWithType: NetworkAi.Progress
  fullName: TMG.NetworkEstimation.NetworkAi.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.NetworkEstimation.NetworkAi.ProgressColour*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: NetworkAi.ProgressColour
  fullName: TMG.NetworkEstimation.NetworkAi.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction
  isExternal: false
  name: UseComplexErrorFunction
  nameWithType: NetworkAi.UseComplexErrorFunction
  fullName: TMG.NetworkEstimation.NetworkAi.UseComplexErrorFunction
- uid: TMG.NetworkEstimation.INetworkEstimationAI.UseComplexErrorFunction
  commentId: P:TMG.NetworkEstimation.INetworkEstimationAI.UseComplexErrorFunction
  parent: TMG.NetworkEstimation.INetworkEstimationAI
  isExternal: false
  name: UseComplexErrorFunction
  nameWithType: INetworkEstimationAI.UseComplexErrorFunction
  fullName: TMG.NetworkEstimation.INetworkEstimationAI.UseComplexErrorFunction
- uid: TMG.NetworkEstimation.NetworkAi.CancelExploration*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.CancelExploration
  isExternal: false
  name: CancelExploration
  nameWithType: NetworkAi.CancelExploration
  fullName: TMG.NetworkEstimation.NetworkAi.CancelExploration
- uid: TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
  commentId: M:TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
  parent: TMG.NetworkEstimation.INetworkEstimationAI
  isExternal: false
  name: CancelExploration()
  nameWithType: INetworkEstimationAI.CancelExploration()
  fullName: TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration()
  spec.csharp:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
    name: CancelExploration
    nameWithType: INetworkEstimationAI.CancelExploration
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
    name: CancelExploration
    nameWithType: INetworkEstimationAI.CancelExploration
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.CancelExploration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction
  isExternal: false
  name: ComplexErrorFunction
  nameWithType: NetworkAi.ComplexErrorFunction
  fullName: TMG.NetworkEstimation.NetworkAi.ComplexErrorFunction
- uid: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  commentId: M:TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
  parent: TMG.NetworkEstimation.INetworkEstimationAI
  isExternal: true
  name: ComplexErrorFunction(ParameterSetting[], TransitLine[], TransitLine[], Single[])
  nameWithType: INetworkEstimationAI.ComplexErrorFunction(ParameterSetting[], TransitLine[], TransitLine[], Single[])
  fullName: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[], TMG.Emme.TransitLine[], TMG.Emme.TransitLine[], System.Single[])
  nameWithType.vb: INetworkEstimationAI.ComplexErrorFunction(ParameterSetting(), TransitLine(), TransitLine(), Single())
  fullName.vb: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting(), TMG.Emme.TransitLine(), TMG.Emme.TransitLine(), System.Single())
  name.vb: ComplexErrorFunction(ParameterSetting(), TransitLine(), TransitLine(), Single())
  spec.csharp:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
    name: ComplexErrorFunction
    nameWithType: INetworkEstimationAI.ComplexErrorFunction
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[],System.Single[])
    name: ComplexErrorFunction
    nameWithType: INetworkEstimationAI.ComplexErrorFunction
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.ComplexErrorFunction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.ParameterSetting[]
  name: ParameterSetting[]
  nameWithType: ParameterSetting[]
  fullName: TMG.NetworkEstimation.ParameterSetting[]
  nameWithType.vb: ParameterSetting()
  fullName.vb: TMG.NetworkEstimation.ParameterSetting()
  name.vb: ParameterSetting()
  spec.csharp:
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Emme.TransitLine[]
  name: TransitLine[]
  nameWithType: TransitLine[]
  fullName: TMG.Emme.TransitLine[]
  nameWithType.vb: TransitLine()
  fullName.vb: TMG.Emme.TransitLine()
  name.vb: TransitLine()
  spec.csharp:
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction
  isExternal: false
  name: ErrorCombinationFunction
  nameWithType: NetworkAi.ErrorCombinationFunction
  fullName: TMG.NetworkEstimation.NetworkAi.ErrorCombinationFunction
- uid: TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction(System.Double,System.Double,System.Double)
  commentId: M:TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction(System.Double,System.Double,System.Double)
  parent: TMG.NetworkEstimation.INetworkEstimationAI
  isExternal: true
  name: ErrorCombinationFunction(Double, Double, Double)
  nameWithType: INetworkEstimationAI.ErrorCombinationFunction(Double, Double, Double)
  fullName: TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction(System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction(System.Double,System.Double,System.Double)
    name: ErrorCombinationFunction
    nameWithType: INetworkEstimationAI.ErrorCombinationFunction
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction(System.Double,System.Double,System.Double)
    name: ErrorCombinationFunction
    nameWithType: INetworkEstimationAI.ErrorCombinationFunction
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.ErrorCombinationFunction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: TMG.NetworkEstimation.NetworkAi.Explore*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.Explore
  isExternal: false
  name: Explore
  nameWithType: NetworkAi.Explore
  fullName: TMG.NetworkEstimation.NetworkAi.Explore
- uid: TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  commentId: M:TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
  parent: TMG.NetworkEstimation.INetworkEstimationAI
  isExternal: true
  name: Explore(ParameterSetting[], Action, Func<ParameterSetting[], Single>)
  nameWithType: INetworkEstimationAI.Explore(ParameterSetting[], Action, Func<ParameterSetting[], Single>)
  fullName: TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting[], System.Action, System.Func<TMG.NetworkEstimation.ParameterSetting[], System.Single>)
  nameWithType.vb: INetworkEstimationAI.Explore(ParameterSetting(), Action, Func(Of ParameterSetting(), Single))
  fullName.vb: TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting(), System.Action, System.Func(Of TMG.NetworkEstimation.ParameterSetting(), System.Single))
  name.vb: Explore(ParameterSetting(), Action, Func(Of ParameterSetting(), Single))
  spec.csharp:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
    name: Explore
    nameWithType: INetworkEstimationAI.Explore
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.Explore
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.NetworkEstimation.INetworkEstimationAI.Explore(TMG.NetworkEstimation.ParameterSetting[],System.Action,System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single})
    name: Explore
    nameWithType: INetworkEstimationAI.Explore
    fullName: TMG.NetworkEstimation.INetworkEstimationAI.Explore
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single}
  commentId: T:System.Func{TMG.NetworkEstimation.ParameterSetting[],System.Single}
  parent: System
  definition: System.Func`2
  name: Func<ParameterSetting[], Single>
  nameWithType: Func<ParameterSetting[], Single>
  fullName: System.Func<TMG.NetworkEstimation.ParameterSetting[], System.Single>
  nameWithType.vb: Func(Of ParameterSetting(), Single)
  fullName.vb: System.Func(Of TMG.NetworkEstimation.ParameterSetting(), System.Single)
  name.vb: Func(Of ParameterSetting(), Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.NetworkAi.RuntimeValidation*
  commentId: Overload:TMG.NetworkEstimation.NetworkAi.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: NetworkAi.RuntimeValidation
  fullName: TMG.NetworkEstimation.NetworkAi.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
