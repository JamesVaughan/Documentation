### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution
  commentId: T:TMG.GTAModel.BlendedProportionalUpdateDistribution
  id: BlendedProportionalUpdateDistribution
  parent: TMG.GTAModel
  children:
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.BaseData
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.InteractiveModeSplit
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.LoadFrictionFileName
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.MultiBlendSets
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.Name
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.Parent
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.Root
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation(System.String@)
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.SaveFrictionFileName
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.Transpose
  - TMG.GTAModel.BlendedProportionalUpdateDistribution.UseProductionPercentages
  langs:
  - csharp
  - vb
  name: BlendedProportionalUpdateDistribution
  nameWithType: BlendedProportionalUpdateDistribution
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution
  type: Class
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BlendedProportionalUpdateDistribution
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: 'public class BlendedProportionalUpdateDistribution : IDemographicDistribution, IModule'
    content.vb: >-
      Public Class BlendedProportionalUpdateDistribution

          Implements IDemographicDistribution, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.IDemographicDistribution
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.BaseData
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.BaseData
  id: BaseData
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: BaseData
  nameWithType: BlendedProportionalUpdateDistribution.BaseData
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.BaseData
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BaseData
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "The base data that we will fit against.", Required = false)]

      public List<IReadODData<float>> BaseData
    return:
      type: System.Collections.Generic.List{TMG.Input.IReadODData{System.Single}}
    content.vb: >-
      <SubModelInformation(Description:="The base data that we will fit against.", Required:=False)>

      Public BaseData As List(Of IReadODData(Of Single))
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The base data that we will fit against.
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.LoadFrictionFileName
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.LoadFrictionFileName
  id: LoadFrictionFileName
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: LoadFrictionFileName
  nameWithType: BlendedProportionalUpdateDistribution.LoadFrictionFileName
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.LoadFrictionFileName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadFrictionFileName
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 43
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Load Friction File Name", "", "The start of the name of the file (First Default = FrictionCache1.bin) to load for friction, leaving this empty will generate new friction.")]

      public string LoadFrictionFileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Load Friction File Name", "", "The start of the name of the file (First Default = FrictionCache1.bin) to load for friction, leaving this empty will generate new friction.")>

      Public LoadFrictionFileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Load Friction File Name
    - type: System.String
      value: ''
    - type: System.String
      value: The start of the name of the file (First Default = FrictionCache1.bin) to load for friction, leaving this empty will generate new friction.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.MultiBlendSets
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.MultiBlendSets
  id: MultiBlendSets
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: MultiBlendSets
  nameWithType: BlendedProportionalUpdateDistribution.MultiBlendSets
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.MultiBlendSets
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MultiBlendSets
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 46
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "The Sets of demographic categories to blend together", Required = true)]

      public List<MultiBlendSet> MultiBlendSets
    return:
      type: System.Collections.Generic.List{TMG.GTAModel.MultiBlendSet}
    content.vb: >-
      <SubModelInformation(Description:="The Sets of demographic categories to blend together", Required:=True)>

      Public MultiBlendSets As List(Of MultiBlendSet)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The Sets of demographic categories to blend together
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Parent
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.Parent
  id: Parent
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: BlendedProportionalUpdateDistribution.Parent
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Parent
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parent
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 49
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public IPurpose Parent
    return:
      type: TMG.IPurpose
    content.vb: Public Parent As IPurpose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Root
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.Root
  id: Root
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: BlendedProportionalUpdateDistribution.Root
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public IDemographic4StepModelSystemTemplate Root
    return:
      type: TMG.IDemographic4StepModelSystemTemplate
    content.vb: Public Root As IDemographic4StepModelSystemTemplate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.SaveFrictionFileName
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.SaveFrictionFileName
  id: SaveFrictionFileName
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: SaveFrictionFileName
  nameWithType: BlendedProportionalUpdateDistribution.SaveFrictionFileName
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.SaveFrictionFileName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveFrictionFileName
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 57
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Save Friction File Name", "", "The start of the name of the file (First Default = FrictionCache1.bin). If this is empty nothing will be saved.")]

      public string SaveFrictionFileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Save Friction File Name", "", "The start of the name of the file (First Default = FrictionCache1.bin). If this is empty nothing will be saved.")>

      Public SaveFrictionFileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Save Friction File Name
    - type: System.String
      value: ''
    - type: System.String
      value: The start of the name of the file (First Default = FrictionCache1.bin). If this is empty nothing will be saved.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Transpose
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.Transpose
  id: Transpose
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: Transpose
  nameWithType: BlendedProportionalUpdateDistribution.Transpose
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Transpose
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Transpose
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 61
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Transpose Distribution", false, "Transpose the final result of the model.")]

      public bool Transpose
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Transpose Distribution", False, "Transpose the final result of the model.")>

      Public Transpose As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transpose Distribution
    - type: System.Boolean
      value: false
    - type: System.String
      value: Transpose the final result of the model.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.UseProductionPercentages
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.UseProductionPercentages
  id: UseProductionPercentages
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: UseProductionPercentages
  nameWithType: BlendedProportionalUpdateDistribution.UseProductionPercentages
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.UseProductionPercentages
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UseProductionPercentages
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 66
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Production Ratios", false, "The production from generation contains a generation rate and attraction contains the total number of people.")]

      public bool UseProductionPercentages
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Production Ratios", False, "The production from generation contains a generation rate and attraction contains the total number of people.")>

      Public UseProductionPercentages As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Production Ratios
    - type: System.Boolean
      value: false
    - type: System.String
      value: The production from generation contains a generation rate and attraction contains the total number of people.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.InteractiveModeSplit
  commentId: F:TMG.GTAModel.BlendedProportionalUpdateDistribution.InteractiveModeSplit
  id: InteractiveModeSplit
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: InteractiveModeSplit
  nameWithType: BlendedProportionalUpdateDistribution.InteractiveModeSplit
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.InteractiveModeSplit
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InteractiveModeSplit
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 69
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: protected IInteractiveModeSplit InteractiveModeSplit
    return:
      type: TMG.ModeSplit.IInteractiveModeSplit
    content.vb: Protected InteractiveModeSplit As IInteractiveModeSplit
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Name
  commentId: P:TMG.GTAModel.BlendedProportionalUpdateDistribution.Name
  id: Name
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BlendedProportionalUpdateDistribution.Name
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 77
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.BlendedProportionalUpdateDistribution.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress
  commentId: P:TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress
  id: Progress
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: BlendedProportionalUpdateDistribution.Progress
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 79
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour
  commentId: P:TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: BlendedProportionalUpdateDistribution.ProgressColour
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 81
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  commentId: M:TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  id: Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  nameWithType: BlendedProportionalUpdateDistribution.Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute(System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Distribute
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 86
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public IEnumerable<SparseTwinIndex<float>> Distribute(IEnumerable<SparseArray<float>> production, IEnumerable<SparseArray<float>> attraction, IEnumerable<IDemographicCategory> category)
    parameters:
    - id: production
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
    - id: attraction
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
    - id: category
      type: System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
    return:
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
    content.vb: Public Function Distribute(production As IEnumerable(Of SparseArray(Of Single)), attraction As IEnumerable(Of SparseArray(Of Single)), category As IEnumerable(Of IDemographicCategory)) As IEnumerable(Of SparseTwinIndex(Of Single))
  overload: TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute*
  implements:
  - TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  nameWithType.vb: BlendedProportionalUpdateDistribution.Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute(System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory))
  name.vb: Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.BlendedProportionalUpdateDistribution
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: BlendedProportionalUpdateDistribution.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/GTAModel/Distribution/BlendedProportionalUpdateDistribution.cs
    startLine: 147
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: BlendedProportionalUpdateDistribution.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  isExternal: false
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.IDemographicDistribution
  commentId: T:TMG.IDemographicDistribution
  parent: TMG
  isExternal: false
  name: IDemographicDistribution
  nameWithType: IDemographicDistribution
  fullName: TMG.IDemographicDistribution
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Collections.Generic.List{TMG.Input.IReadODData{System.Single}}
  commentId: T:System.Collections.Generic.List{TMG.Input.IReadODData{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IReadODData<Single>>
  nameWithType: List<IReadODData<Single>>
  fullName: System.Collections.Generic.List<TMG.Input.IReadODData<System.Single>>
  nameWithType.vb: List(Of IReadODData(Of Single))
  fullName.vb: System.Collections.Generic.List(Of TMG.Input.IReadODData(Of System.Single))
  name.vb: List(Of IReadODData(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{TMG.GTAModel.MultiBlendSet}
  commentId: T:System.Collections.Generic.List{TMG.GTAModel.MultiBlendSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MultiBlendSet>
  nameWithType: List<MultiBlendSet>
  fullName: System.Collections.Generic.List<TMG.GTAModel.MultiBlendSet>
  nameWithType.vb: List(Of MultiBlendSet)
  fullName.vb: System.Collections.Generic.List(Of TMG.GTAModel.MultiBlendSet)
  name.vb: List(Of MultiBlendSet)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.GTAModel.MultiBlendSet
    name: MultiBlendSet
    nameWithType: MultiBlendSet
    fullName: TMG.GTAModel.MultiBlendSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.GTAModel.MultiBlendSet
    name: MultiBlendSet
    nameWithType: MultiBlendSet
    fullName: TMG.GTAModel.MultiBlendSet
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IPurpose
  commentId: T:TMG.IPurpose
  parent: TMG
  isExternal: false
  name: IPurpose
  nameWithType: IPurpose
  fullName: TMG.IPurpose
- uid: TMG.IDemographic4StepModelSystemTemplate
  commentId: T:TMG.IDemographic4StepModelSystemTemplate
  parent: TMG
  isExternal: false
  name: IDemographic4StepModelSystemTemplate
  nameWithType: IDemographic4StepModelSystemTemplate
  fullName: TMG.IDemographic4StepModelSystemTemplate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.ModeSplit.IInteractiveModeSplit
  commentId: T:TMG.ModeSplit.IInteractiveModeSplit
  parent: TMG.ModeSplit
  isExternal: false
  name: IInteractiveModeSplit
  nameWithType: IInteractiveModeSplit
  fullName: TMG.ModeSplit.IInteractiveModeSplit
- uid: TMG.ModeSplit
  commentId: N:TMG.ModeSplit
  isExternal: false
  name: TMG.ModeSplit
  nameWithType: TMG.ModeSplit
  fullName: TMG.ModeSplit
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Name*
  commentId: Overload:TMG.GTAModel.BlendedProportionalUpdateDistribution.Name
  isExternal: false
  name: Name
  nameWithType: BlendedProportionalUpdateDistribution.Name
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress*
  commentId: Overload:TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress
  isExternal: false
  name: Progress
  nameWithType: BlendedProportionalUpdateDistribution.Progress
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour*
  commentId: Overload:TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: BlendedProportionalUpdateDistribution.ProgressColour
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute*
  commentId: Overload:TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute
  isExternal: false
  name: Distribute
  nameWithType: BlendedProportionalUpdateDistribution.Distribute
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.Distribute
- uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  commentId: M:TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  parent: TMG.IDemographicDistribution
  isExternal: true
  name: Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  nameWithType: IDemographicDistribution.Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  fullName: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>)
  nameWithType.vb: IDemographicDistribution.Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  fullName.vb: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory))
  name.vb: Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  spec.csharp:
  - uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
    name: Distribute
    nameWithType: IDemographicDistribution.Distribute
    fullName: TMG.IDemographicDistribution.Distribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
    name: Distribute
    nameWithType: IDemographicDistribution.Distribute
    fullName: TMG.IDemographicDistribution.Distribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparseArray<Single>>
  nameWithType: IEnumerable<SparseArray<Single>>
  fullName: System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>
  nameWithType.vb: IEnumerable(Of SparseArray(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single))
  name.vb: IEnumerable(Of SparseArray(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
  commentId: T:System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDemographicCategory>
  nameWithType: IEnumerable<IDemographicCategory>
  fullName: System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>
  nameWithType.vb: IEnumerable(Of IDemographicCategory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory)
  name.vb: IEnumerable(Of IDemographicCategory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparseTwinIndex<Single>>
  nameWithType: IEnumerable<SparseTwinIndex<Single>>
  fullName: System.Collections.Generic.IEnumerable<Datastructure.SparseTwinIndex<System.Single>>
  nameWithType.vb: IEnumerable(Of SparseTwinIndex(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Datastructure.SparseTwinIndex(Of System.Single))
  name.vb: IEnumerable(Of SparseTwinIndex(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: BlendedProportionalUpdateDistribution.RuntimeValidation
  fullName: TMG.GTAModel.BlendedProportionalUpdateDistribution.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
