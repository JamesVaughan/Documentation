### YamlMime:ManagedReference
items:
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  commentId: T:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  id: MultiClassRoadAssignmentTool.Class
  parent: TMG.Emme.NetworkAssignment
  children:
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.CostMatrix
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.DemandMatrixNumber
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkCost
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkTollAttributeID
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Mode
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.PathAnalyses
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation(System.String@)
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TimeMatrix
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollMatrix
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollWeight
  - TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.VolumeAttribute
  langs:
  - csharp
  - vb
  name: MultiClassRoadAssignmentTool.Class
  nameWithType: MultiClassRoadAssignmentTool.Class
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Class
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 65
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: 'public sealed class Class : IModule'
    content.vb: >-
      Public NotInheritable Class Class
          Implements IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Mode
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Mode
  id: Mode
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: MultiClassRoadAssignmentTool.Class.Mode
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Mode
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Mode
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 68
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Mode", 'c', "The mode for this class.")]

      public char Mode
    return:
      type: System.Char
    content.vb: >-
      <RunParameter("Mode", "c"c, "The mode for this class.")>

      Public Mode As Char
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Mode
    - type: System.Char
      value: c
    - type: System.String
      value: The mode for this class.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.DemandMatrixNumber
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.DemandMatrixNumber
  id: DemandMatrixNumber
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: DemandMatrixNumber
  nameWithType: MultiClassRoadAssignmentTool.Class.DemandMatrixNumber
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.DemandMatrixNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DemandMatrixNumber
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 71
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Demand Matrix", 0, "The id of the demand matrix to use.")]

      public int DemandMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Demand Matrix", 0, "The id of the demand matrix to use.")>

      Public DemandMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demand Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The id of the demand matrix to use.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TimeMatrix
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TimeMatrix
  id: TimeMatrix
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: TimeMatrix
  nameWithType: MultiClassRoadAssignmentTool.Class.TimeMatrix
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TimeMatrix
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TimeMatrix
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 74
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Time Matrix", 0, "The matrix number to save in vehicle travel times")]

      public int TimeMatrix
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Time Matrix", 0, "The matrix number to save in vehicle travel times")>

      Public TimeMatrix As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Time Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The matrix number to save in vehicle travel times
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.CostMatrix
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.CostMatrix
  id: CostMatrix
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: CostMatrix
  nameWithType: MultiClassRoadAssignmentTool.Class.CostMatrix
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.CostMatrix
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CostMatrix
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 77
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Cost Matrix", 0, "The matrix number to save the total cost into.")]

      public int CostMatrix
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Cost Matrix", 0, "The matrix number to save the total cost into.")>

      Public CostMatrix As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Cost Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The matrix number to save the total cost into.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollMatrix
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollMatrix
  id: TollMatrix
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: TollMatrix
  nameWithType: MultiClassRoadAssignmentTool.Class.TollMatrix
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollMatrix
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TollMatrix
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 80
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Toll Matrix", 0, "The matrix to save the toll costs into.")]

      public int TollMatrix
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Toll Matrix", 0, "The matrix to save the toll costs into.")>

      Public TollMatrix As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Toll Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The matrix to save the toll costs into.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.VolumeAttribute
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.VolumeAttribute
  id: VolumeAttribute
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: VolumeAttribute
  nameWithType: MultiClassRoadAssignmentTool.Class.VolumeAttribute
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.VolumeAttribute
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: VolumeAttribute
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 83
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("VolumeAttribute", "@auto_volume1", "The name of the attribute to save the volumes into (or None for no saving).")]

      public string VolumeAttribute
    return:
      type: System.String
    content.vb: >-
      <RunParameter("VolumeAttribute", "@auto_volume1", "The name of the attribute to save the volumes into (or None for no saving).")>

      Public VolumeAttribute As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: VolumeAttribute
    - type: System.String
      value: '@auto_volume1'
    - type: System.String
      value: The name of the attribute to save the volumes into (or None for no saving).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkTollAttributeID
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkTollAttributeID
  id: LinkTollAttributeID
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: LinkTollAttributeID
  nameWithType: MultiClassRoadAssignmentTool.Class.LinkTollAttributeID
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkTollAttributeID
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkTollAttributeID
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 86
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("TollAttributeID", "@toll", "The attribute containing the road tolls for this class of vehicle.")]

      public string LinkTollAttributeID
    return:
      type: System.String
    content.vb: >-
      <RunParameter("TollAttributeID", "@toll", "The attribute containing the road tolls for this class of vehicle.")>

      Public LinkTollAttributeID As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: TollAttributeID
    - type: System.String
      value: '@toll'
    - type: System.String
      value: The attribute containing the road tolls for this class of vehicle.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollWeight
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollWeight
  id: TollWeight
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: TollWeight
  nameWithType: MultiClassRoadAssignmentTool.Class.TollWeight
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.TollWeight
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TollWeight
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 89
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Toll Weight", 0F, "")]

      public float TollWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Toll Weight", 0F, "")>

      Public TollWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Toll Weight
    - type: System.Single
      value: 0
    - type: System.String
      value: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkCost
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkCost
  id: LinkCost
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: LinkCost
  nameWithType: MultiClassRoadAssignmentTool.Class.LinkCost
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.LinkCost
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkCost
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 92
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("LinkCost", 0F, "The penalty in minutes per dollar to apply when traversing a link.")]

      public float LinkCost
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("LinkCost", 0F, "The penalty in minutes per dollar to apply when traversing a link.")>

      Public LinkCost As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: LinkCost
    - type: System.Single
      value: 0
    - type: System.String
      value: The penalty in minutes per dollar to apply when traversing a link.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name
  commentId: P:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name
  id: Name
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MultiClassRoadAssignmentTool.Class.Name
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 94
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress
  commentId: P:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress
  id: Progress
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: MultiClassRoadAssignmentTool.Class.Progress
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 96
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour
  commentId: P:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour
  id: ProgressColour
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: MultiClassRoadAssignmentTool.Class.ProgressColour
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 98
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: MultiClassRoadAssignmentTool.Class.RuntimeValidation(ref String)
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 100
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: MultiClassRoadAssignmentTool.Class.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.PathAnalyses
  commentId: F:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.PathAnalyses
  id: PathAnalyses
  parent: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class
  langs:
  - csharp
  - vb
  name: PathAnalyses
  nameWithType: MultiClassRoadAssignmentTool.Class.PathAnalyses
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.PathAnalyses
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PathAnalyses
    path: ../../../XTMF/Code/TMG.Emme/NetworkAssignment/MultiClassRoadAssignment.cs
    startLine: 110
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.NetworkAssignment
  syntax:
    content: public MultiClassRoadAssignmentTool.Class.Analysis[] PathAnalyses
    return:
      type: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis[]
    content.vb: Public PathAnalyses As MultiClassRoadAssignmentTool.Class.Analysis()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.Emme.NetworkAssignment
  commentId: N:TMG.Emme.NetworkAssignment
  isExternal: false
  name: TMG.Emme.NetworkAssignment
  nameWithType: TMG.Emme.NetworkAssignment
  fullName: TMG.Emme.NetworkAssignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name
  isExternal: false
  name: Name
  nameWithType: MultiClassRoadAssignmentTool.Class.Name
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress
  isExternal: false
  name: Progress
  nameWithType: MultiClassRoadAssignmentTool.Class.Progress
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: MultiClassRoadAssignmentTool.Class.ProgressColour
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation*
  commentId: Overload:TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: MultiClassRoadAssignmentTool.Class.RuntimeValidation
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis[]
  name: MultiClassRoadAssignmentTool.Class.Analysis[]
  nameWithType: MultiClassRoadAssignmentTool.Class.Analysis[]
  fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis[]
  nameWithType.vb: MultiClassRoadAssignmentTool.Class.Analysis()
  fullName.vb: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis()
  name.vb: MultiClassRoadAssignmentTool.Class.Analysis()
  spec.csharp:
  - uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis
    name: MultiClassRoadAssignmentTool.Class.Analysis
    nameWithType: MultiClassRoadAssignmentTool.Class.Analysis
    fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis
    name: MultiClassRoadAssignmentTool.Class.Analysis
    nameWithType: MultiClassRoadAssignmentTool.Class.Analysis
    fullName: TMG.Emme.NetworkAssignment.MultiClassRoadAssignmentTool.Class.Analysis
  - name: ()
    nameWithType: ()
    fullName: ()
