### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  commentId: T:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  id: TollAttributeRoadAssignment
  parent: TMG.GTAModel.NetworkAssignment
  children:
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.BestRelativeGap
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.CostMatrixNumber
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandFileName
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandMatrixNumber
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute(TMG.Emme.Controller)
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.HighPerformanceMode
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkTollAttribute
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkUnitCost
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.MaxIterations
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.NormalizedGap
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.PeakHourFactor
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RelativeGap
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Root
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation(System.String@)
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ScenarioNumber
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.SolaFlag
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Tallies
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollMatrixNumber
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollPerceptionFactor
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TravelTimeMatrixNumber
  - TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.UseTransitBackground
  langs:
  - csharp
  - vb
  name: TollAttributeRoadAssignment
  nameWithType: TollAttributeRoadAssignment
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  type: Class
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TollAttributeRoadAssignment
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: 'public class TollAttributeRoadAssignment : IEmmeTool, IModule'
    content.vb: >-
      Public Class TollAttributeRoadAssignment

          Implements IEmmeTool, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Emme.IEmmeTool
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.BestRelativeGap
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.BestRelativeGap
  id: BestRelativeGap
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: BestRelativeGap
  nameWithType: TollAttributeRoadAssignment.BestRelativeGap
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.BestRelativeGap
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BestRelativeGap
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Best Relative Gap", 0.01F, "(%) Best Relative Gap convergence criteria.")]

      public float BestRelativeGap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Best Relative Gap", 0.01F, "(%) Best Relative Gap convergence criteria.")>

      Public BestRelativeGap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Best Relative Gap
    - type: System.Single
      value: 0.0099999997799999994
    - type: System.String
      value: (%) Best Relative Gap convergence criteria.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.CostMatrixNumber
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.CostMatrixNumber
  id: CostMatrixNumber
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: CostMatrixNumber
  nameWithType: TollAttributeRoadAssignment.CostMatrixNumber
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.CostMatrixNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CostMatrixNumber
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Travel Cost Matrix Number", 13, "The matrix number which will store the auto travel costs matrix. If the matrix exists already, it will be overwritten.")]

      public int CostMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Travel Cost Matrix Number", 13, "The matrix number which will store the auto travel costs matrix. If the matrix exists already, it will be overwritten.")>

      Public CostMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Travel Cost Matrix Number
    - type: System.Int32
      value: 13
    - type: System.String
      value: The matrix number which will store the auto travel costs matrix. If the matrix exists already, it will be overwritten.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandFileName
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandFileName
  id: DemandFileName
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: DemandFileName
  nameWithType: TollAttributeRoadAssignment.DemandFileName
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandFileName
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DemandFileName
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Demand File Name", "", "For debugging. Optional file name to export the tallied demand matrix. Otherwise, a temporary file will be used.")]

      public string DemandFileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Demand File Name", "", "For debugging. Optional file name to export the tallied demand matrix. Otherwise, a temporary file will be used.")>

      Public DemandFileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demand File Name
    - type: System.String
      value: ''
    - type: System.String
      value: For debugging. Optional file name to export the tallied demand matrix. Otherwise, a temporary file will be used.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandMatrixNumber
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandMatrixNumber
  id: DemandMatrixNumber
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: DemandMatrixNumber
  nameWithType: TollAttributeRoadAssignment.DemandMatrixNumber
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.DemandMatrixNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DemandMatrixNumber
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Demand Matrix Number", 10, "The matrix number which will store th auto OD matrix. If the matrix exists already, it will be overwritten.")]

      public int DemandMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Demand Matrix Number", 10, "The matrix number which will store th auto OD matrix. If the matrix exists already, it will be overwritten.")>

      Public DemandMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demand Matrix Number
    - type: System.Int32
      value: 10
    - type: System.String
      value: The matrix number which will store th auto OD matrix. If the matrix exists already, it will be overwritten.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.PeakHourFactor
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.PeakHourFactor
  id: PeakHourFactor
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: PeakHourFactor
  nameWithType: TollAttributeRoadAssignment.PeakHourFactor
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.PeakHourFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PeakHourFactor
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Peak Hour Factor", 0.468F, "Factor to convert the modeled time period into a one-hour assignment period.")]

      public float PeakHourFactor
    return:
      type: System.Single
    content.vb: >-
      <Parameter("Peak Hour Factor", 0.468F, "Factor to convert the modeled time period into a one-hour assignment period.")>

      Public PeakHourFactor As Single
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Peak Hour Factor
    - type: System.Single
      value: 0.467999995
    - type: System.String
      value: Factor to convert the modeled time period into a one-hour assignment period.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkUnitCost
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkUnitCost
  id: LinkUnitCost
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: LinkUnitCost
  nameWithType: TollAttributeRoadAssignment.LinkUnitCost
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkUnitCost
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkUnitCost
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Link Unit Cost", 0.153F, "The link unit cost in $/km, applied to all links")]

      public float LinkUnitCost
    return:
      type: System.Single
    content.vb: >-
      <Parameter("Link Unit Cost", 0.153F, "The link unit cost in $/km, applied to all links")>

      Public LinkUnitCost As Single
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Link Unit Cost
    - type: System.Single
      value: 0.152999997
    - type: System.String
      value: The link unit cost in $/km, applied to all links
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkTollAttribute
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkTollAttribute
  id: LinkTollAttribute
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: LinkTollAttribute
  nameWithType: TollAttributeRoadAssignment.LinkTollAttribute
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.LinkTollAttribute
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkTollAttribute
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Link Toll Attribute", "@toll", "Select a LINK extra attribute containing tolls (in $).")]

      public string LinkTollAttribute
    return:
      type: System.String
    content.vb: >-
      <Parameter("Link Toll Attribute", "@toll", "Select a LINK extra attribute containing tolls (in $).")>

      Public LinkTollAttribute As String
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Link Toll Attribute
    - type: System.String
      value: '@toll'
    - type: System.String
      value: Select a LINK extra attribute containing tolls (in $).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.HighPerformanceMode
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.HighPerformanceMode
  id: HighPerformanceMode
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: HighPerformanceMode
  nameWithType: TollAttributeRoadAssignment.HighPerformanceMode
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.HighPerformanceMode
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HighPerformanceMode
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 57
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("High Performance Flag", true, "When enabled, tells Emme to use all available cores for faster computation, but this will result in slower performance in other Windows processes. Disabling this option will leave at least one core available for other work while Emme is running.")]

      public bool HighPerformanceMode
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("High Performance Flag", True, "When enabled, tells Emme to use all available cores for faster computation, but this will result in slower performance in other Windows processes. Disabling this option will leave at least one core available for other work while Emme is running.")>

      Public HighPerformanceMode As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: High Performance Flag
    - type: System.Boolean
      value: true
    - type: System.String
      value: When enabled, tells Emme to use all available cores for faster computation, but this will result in slower performance in other Windows processes. Disabling this option will leave at least one core available for other work while Emme is running.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.MaxIterations
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.MaxIterations
  id: MaxIterations
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: MaxIterations
  nameWithType: TollAttributeRoadAssignment.MaxIterations
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.MaxIterations
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaxIterations
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 60
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Max Iterations", 100, "Maximum road assignment iterations")]

      public int MaxIterations
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Max Iterations", 100, "Maximum road assignment iterations")>

      Public MaxIterations As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Iterations
    - type: System.Int32
      value: 100
    - type: System.String
      value: Maximum road assignment iterations
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.NormalizedGap
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.NormalizedGap
  id: NormalizedGap
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: NormalizedGap
  nameWithType: TollAttributeRoadAssignment.NormalizedGap
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.NormalizedGap
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NormalizedGap
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 63
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Normalized Gap", 0.01F, "Normalized Gap convergence criteria.")]

      public float NormalizedGap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Normalized Gap", 0.01F, "Normalized Gap convergence criteria.")>

      Public NormalizedGap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Normalized Gap
    - type: System.Single
      value: 0.0099999997799999994
    - type: System.String
      value: Normalized Gap convergence criteria.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RelativeGap
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RelativeGap
  id: RelativeGap
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: RelativeGap
  nameWithType: TollAttributeRoadAssignment.RelativeGap
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RelativeGap
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RelativeGap
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 66
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Relative Gap", 0F, "Relative gap convergence criteria.")]

      public float RelativeGap
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Relative Gap", 0F, "Relative gap convergence criteria.")>

      Public RelativeGap As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Relative Gap
    - type: System.Single
      value: 0
    - type: System.String
      value: Relative gap convergence criteria.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Root
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Root
  id: Root
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: TollAttributeRoadAssignment.Root
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 69
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ScenarioNumber
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ScenarioNumber
  id: ScenarioNumber
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: ScenarioNumber
  nameWithType: TollAttributeRoadAssignment.ScenarioNumber
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ScenarioNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ScenarioNumber
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 72
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Scenario Number", 1, "The desired Emme network scenario. Must exist inside the databank.")]

      public int ScenarioNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Scenario Number", 1, "The desired Emme network scenario. Must exist inside the databank.")>

      Public ScenarioNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Scenario Number
    - type: System.Int32
      value: 1
    - type: System.String
      value: The desired Emme network scenario. Must exist inside the databank.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Tallies
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Tallies
  id: Tallies
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: Tallies
  nameWithType: TollAttributeRoadAssignment.Tallies
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Tallies
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Tallies
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 75
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [SubModelInformation(Description = "Tallies used for counting the number of trips between Origin and Destination", Required = false)]

      public List<IModeAggregationTally> Tallies
    return:
      type: System.Collections.Generic.List{TMG.IModeAggregationTally}
    content.vb: >-
      <SubModelInformation(Description:="Tallies used for counting the number of trips between Origin and Destination", Required:=False)>

      Public Tallies As List(Of IModeAggregationTally)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: Tallies used for counting the number of trips between Origin and Destination
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollMatrixNumber
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollMatrixNumber
  id: TollMatrixNumber
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: TollMatrixNumber
  nameWithType: TollAttributeRoadAssignment.TollMatrixNumber
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollMatrixNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TollMatrixNumber
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 78
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Tolls Matrix Number", 14, "The matrix number which will store the auto tolls matrix. If the matrix exists already, it will be overwritten.")]

      public int TollMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Tolls Matrix Number", 14, "The matrix number which will store the auto tolls matrix. If the matrix exists already, it will be overwritten.")>

      Public TollMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Tolls Matrix Number
    - type: System.Int32
      value: 14
    - type: System.String
      value: The matrix number which will store the auto tolls matrix. If the matrix exists already, it will be overwritten.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollPerceptionFactor
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollPerceptionFactor
  id: TollPerceptionFactor
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: TollPerceptionFactor
  nameWithType: TollAttributeRoadAssignment.TollPerceptionFactor
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TollPerceptionFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TollPerceptionFactor
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 81
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Toll Perception Factor", 50F, "Auto value of time, in $/hr")]

      public float TollPerceptionFactor
    return:
      type: System.Single
    content.vb: >-
      <Parameter("Toll Perception Factor", 50F, "Auto value of time, in $/hr")>

      Public TollPerceptionFactor As Single
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Toll Perception Factor
    - type: System.Single
      value: 50
    - type: System.String
      value: Auto value of time, in $/hr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TravelTimeMatrixNumber
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TravelTimeMatrixNumber
  id: TravelTimeMatrixNumber
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: TravelTimeMatrixNumber
  nameWithType: TollAttributeRoadAssignment.TravelTimeMatrixNumber
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.TravelTimeMatrixNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTimeMatrixNumber
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 84
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [RunParameter("Travel Time Matrix Number", 12, "The matrix number which will store the auto travel times matrix. If the matrix exists already, it will be overwritten.")]

      public int TravelTimeMatrixNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Travel Time Matrix Number", 12, "The matrix number which will store the auto travel times matrix. If the matrix exists already, it will be overwritten.")>

      Public TravelTimeMatrixNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Travel Time Matrix Number
    - type: System.Int32
      value: 12
    - type: System.String
      value: The matrix number which will store the auto travel times matrix. If the matrix exists already, it will be overwritten.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.UseTransitBackground
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.UseTransitBackground
  id: UseTransitBackground
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: UseTransitBackground
  nameWithType: TollAttributeRoadAssignment.UseTransitBackground
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.UseTransitBackground
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UseTransitBackground
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 87
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [Parameter("Transit Background Traffic Flag", true, "Flag to enable custom transit background traffic, ignoring segments with TTF = 2 (XROW lanes)")]

      public bool UseTransitBackground
    return:
      type: System.Boolean
    content.vb: >-
      <Parameter("Transit Background Traffic Flag", True, "Flag to enable custom transit background traffic, ignoring segments with TTF = 2 (XROW lanes)")>

      Public UseTransitBackground As Boolean
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transit Background Traffic Flag
    - type: System.Boolean
      value: true
    - type: System.String
      value: Flag to enable custom transit background traffic, ignoring segments with TTF = 2 (XROW lanes)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.SolaFlag
  commentId: F:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.SolaFlag
  id: SolaFlag
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: SolaFlag
  nameWithType: TollAttributeRoadAssignment.SolaFlag
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.SolaFlag
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SolaFlag
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 90
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: >-
      [Parameter("SOLA Flag", true, "Emme 4.1 and newer ONLY! Flag to use SOLA traffic assignment algorithm instead of standard.")]

      public bool SolaFlag
    return:
      type: System.Boolean
    content.vb: >-
      <Parameter("SOLA Flag", True, "Emme 4.1 and newer ONLY! Flag to use SOLA traffic assignment algorithm instead of standard.")>

      Public SolaFlag As Boolean
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: SOLA Flag
    - type: System.Boolean
      value: true
    - type: System.String
      value: Emme 4.1 and newer ONLY! Flag to use SOLA traffic assignment algorithm instead of standard.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name
  commentId: P:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name
  id: Name
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TollAttributeRoadAssignment.Name
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 96
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress
  commentId: P:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress
  id: Progress
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: TollAttributeRoadAssignment.Progress
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 102
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour
  commentId: P:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: TollAttributeRoadAssignment.ProgressColour
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 108
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute(TMG.Emme.Controller)
  commentId: M:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute(TMG.Emme.Controller)
  id: Execute(TMG.Emme.Controller)
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: Execute(Controller)
  nameWithType: TollAttributeRoadAssignment.Execute(Controller)
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute(TMG.Emme.Controller)
  type: Method
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 113
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: public bool Execute(Controller controller)
    parameters:
    - id: controller
      type: TMG.Emme.Controller
    return:
      type: System.Boolean
    content.vb: Public Function Execute(controller As Controller) As Boolean
  overload: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute*
  implements:
  - TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: TollAttributeRoadAssignment.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/NetworkAssignment/TollAttributeRoadAssignment.cs
    startLine: 160
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAssignment
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: TollAttributeRoadAssignment.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.NetworkAssignment
  commentId: N:TMG.GTAModel.NetworkAssignment
  isExternal: false
  name: TMG.GTAModel.NetworkAssignment
  nameWithType: TMG.GTAModel.NetworkAssignment
  fullName: TMG.GTAModel.NetworkAssignment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.IEmmeTool
  commentId: T:TMG.Emme.IEmmeTool
  parent: TMG.Emme
  isExternal: false
  name: IEmmeTool
  nameWithType: IEmmeTool
  fullName: TMG.Emme.IEmmeTool
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme
  commentId: N:TMG.Emme
  isExternal: false
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: System.Collections.Generic.List{TMG.IModeAggregationTally}
  commentId: T:System.Collections.Generic.List{TMG.IModeAggregationTally}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModeAggregationTally>
  nameWithType: List<IModeAggregationTally>
  fullName: System.Collections.Generic.List<TMG.IModeAggregationTally>
  nameWithType.vb: List(Of IModeAggregationTally)
  fullName.vb: System.Collections.Generic.List(Of TMG.IModeAggregationTally)
  name.vb: List(Of IModeAggregationTally)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IModeAggregationTally
    name: IModeAggregationTally
    nameWithType: IModeAggregationTally
    fullName: TMG.IModeAggregationTally
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IModeAggregationTally
    name: IModeAggregationTally
    nameWithType: IModeAggregationTally
    fullName: TMG.IModeAggregationTally
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name*
  commentId: Overload:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name
  isExternal: false
  name: Name
  nameWithType: TollAttributeRoadAssignment.Name
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress*
  commentId: Overload:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress
  isExternal: false
  name: Progress
  nameWithType: TollAttributeRoadAssignment.Progress
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour*
  commentId: Overload:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: TollAttributeRoadAssignment.ProgressColour
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute*
  commentId: Overload:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute
  isExternal: false
  name: Execute
  nameWithType: TollAttributeRoadAssignment.Execute
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.Execute
- uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  parent: TMG.Emme.IEmmeTool
  isExternal: false
  name: Execute(Controller)
  nameWithType: IEmmeTool.Execute(Controller)
  fullName: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  spec.csharp:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  isExternal: false
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: TollAttributeRoadAssignment.RuntimeValidation
  fullName: TMG.GTAModel.NetworkAssignment.TollAttributeRoadAssignment.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
