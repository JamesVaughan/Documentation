### YamlMime:ManagedReference
items:
- uid: XTMF.ProjectController
  commentId: T:XTMF.ProjectController
  id: ProjectController
  parent: XTMF
  children:
  - XTMF.ProjectController.#ctor(XTMF.XTMFRuntime)
  - XTMF.ProjectController.ClearEditingSessions
  - XTMF.ProjectController.CloneProject(XTMF.Project,System.String,System.String@)
  - XTMF.ProjectController.DeleteProject(System.String,System.String@)
  - XTMF.ProjectController.DeleteProject(XTMF.Project,System.String@)
  - XTMF.ProjectController.EditProject(XTMF.Project)
  - XTMF.ProjectController.EditProject(XTMF.Project,System.String@)
  - XTMF.ProjectController.ExportModelSystemAsString(XTMF.ModelSystemModel,System.String@,System.String@)
  - XTMF.ProjectController.ExportModelSystemAsString(XTMF.Project,System.Int32,System.String@,System.String@)
  - XTMF.ProjectController.GetProjects
  - XTMF.ProjectController.IsEditSessionOpenForProject(XTMF.Project)
  - XTMF.ProjectController.Load(System.String,System.String@)
  - XTMF.ProjectController.LoadOrCreate(System.String,System.String@)
  - XTMF.ProjectController.RenameProject(XTMF.Project,System.String,System.String@)
  - XTMF.ProjectController.SetDescription(XTMF.Project,System.String,System.String@)
  - XTMF.ProjectController.ValidateProjectName(System.String)
  langs:
  - csharp
  - vb
  name: ProjectController
  nameWithType: ProjectController
  fullName: XTMF.ProjectController
  type: Class
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectController
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 26
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public class ProjectController
    content.vb: Public Class ProjectController
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ProjectController.#ctor(XTMF.XTMFRuntime)
  commentId: M:XTMF.ProjectController.#ctor(XTMF.XTMFRuntime)
  id: '#ctor(XTMF.XTMFRuntime)'
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: ProjectController(XTMFRuntime)
  nameWithType: ProjectController.ProjectController(XTMFRuntime)
  fullName: XTMF.ProjectController.ProjectController(XTMF.XTMFRuntime)
  type: Constructor
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 30
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ProjectController(XTMFRuntime runtime)
    parameters:
    - id: runtime
      type: XTMF.XTMFRuntime
    content.vb: Public Sub New(runtime As XTMFRuntime)
  overload: XTMF.ProjectController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectController.EditProject(XTMF.Project)
  commentId: M:XTMF.ProjectController.EditProject(XTMF.Project)
  id: EditProject(XTMF.Project)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: EditProject(Project)
  nameWithType: ProjectController.EditProject(Project)
  fullName: XTMF.ProjectController.EditProject(XTMF.Project)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EditProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 54
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet a session to edit a project.\n"
  example: []
  syntax:
    content: public ProjectEditingSession EditProject(Project project)
    parameters:
    - id: project
      type: XTMF.Project
      description: The project to edit
    return:
      type: XTMF.ProjectEditingSession
    content.vb: Public Function EditProject(project As Project) As ProjectEditingSession
  overload: XTMF.ProjectController.EditProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectController.IsEditSessionOpenForProject(XTMF.Project)
  commentId: M:XTMF.ProjectController.IsEditSessionOpenForProject(XTMF.Project)
  id: IsEditSessionOpenForProject(XTMF.Project)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: IsEditSessionOpenForProject(Project)
  nameWithType: ProjectController.IsEditSessionOpenForProject(Project)
  fullName: XTMF.ProjectController.IsEditSessionOpenForProject(XTMF.Project)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsEditSessionOpenForProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 79
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsEditSessionOpenForProject(Project project)
    parameters:
    - id: project
      type: XTMF.Project
    return:
      type: System.Boolean
    content.vb: Public Function IsEditSessionOpenForProject(project As Project) As Boolean
  overload: XTMF.ProjectController.IsEditSessionOpenForProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectController.ClearEditingSessions
  commentId: M:XTMF.ProjectController.ClearEditingSessions
  id: ClearEditingSessions
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: ClearEditingSessions()
  nameWithType: ProjectController.ClearEditingSessions()
  fullName: XTMF.ProjectController.ClearEditingSessions()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClearEditingSessions
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 87
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void ClearEditingSessions()
    content.vb: Public Sub ClearEditingSessions
  overload: XTMF.ProjectController.ClearEditingSessions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectController.CloneProject(XTMF.Project,System.String,System.String@)
  commentId: M:XTMF.ProjectController.CloneProject(XTMF.Project,System.String,System.String@)
  id: CloneProject(XTMF.Project,System.String,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: CloneProject(Project, String, ref String)
  nameWithType: ProjectController.CloneProject(Project, String, ref String)
  fullName: XTMF.ProjectController.CloneProject(XTMF.Project, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CloneProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 104
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a clone of the given project with the given name.\n"
  example: []
  syntax:
    content: public bool CloneProject(Project toClone, string name, ref string error)
    parameters:
    - id: toClone
      type: XTMF.Project
      description: The project to clone
    - id: name
      type: System.String
      description: The name to give the clone
    - id: error
      type: System.String
      description: A description of the error
    return:
      type: System.Boolean
      description: True if the clone succeeded,
    content.vb: Public Function CloneProject(toClone As Project, name As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.CloneProject*
  nameWithType.vb: ProjectController.CloneProject(Project, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.CloneProject(XTMF.Project, System.String, ByRef System.String)
  name.vb: CloneProject(Project, String, ByRef String)
- uid: XTMF.ProjectController.RenameProject(XTMF.Project,System.String,System.String@)
  commentId: M:XTMF.ProjectController.RenameProject(XTMF.Project,System.String,System.String@)
  id: RenameProject(XTMF.Project,System.String,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: RenameProject(Project, String, ref String)
  nameWithType: ProjectController.RenameProject(Project, String, ref String)
  fullName: XTMF.ProjectController.RenameProject(XTMF.Project, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RenameProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 141
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRename the given project\n"
  example: []
  syntax:
    content: public bool RenameProject(Project project, string newName, ref string error)
    parameters:
    - id: project
      type: XTMF.Project
      description: The project to rename
    - id: newName
      type: System.String
      description: The name to save this project as
    - id: error
      type: System.String
      description: A description of why this operation has failed
    return:
      type: System.Boolean
      description: True if the rename succeeded, false otherwise.
    content.vb: Public Function RenameProject(project As Project, newName As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.RenameProject*
  nameWithType.vb: ProjectController.RenameProject(Project, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.RenameProject(XTMF.Project, System.String, ByRef System.String)
  name.vb: RenameProject(Project, String, ByRef String)
- uid: XTMF.ProjectController.SetDescription(XTMF.Project,System.String,System.String@)
  commentId: M:XTMF.ProjectController.SetDescription(XTMF.Project,System.String,System.String@)
  id: SetDescription(XTMF.Project,System.String,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: SetDescription(Project, String, ref String)
  nameWithType: ProjectController.SetDescription(Project, String, ref String)
  fullName: XTMF.ProjectController.SetDescription(XTMF.Project, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetDescription
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 153
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SetDescription(Project project, string newDescription, ref string error)
    parameters:
    - id: project
      type: XTMF.Project
    - id: newDescription
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SetDescription(project As Project, newDescription As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.SetDescription*
  nameWithType.vb: ProjectController.SetDescription(Project, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.SetDescription(XTMF.Project, System.String, ByRef System.String)
  name.vb: SetDescription(Project, String, ByRef String)
- uid: XTMF.ProjectController.Load(System.String,System.String@)
  commentId: M:XTMF.ProjectController.Load(System.String,System.String@)
  id: Load(System.String,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: Load(String, ref String)
  nameWithType: ProjectController.Load(String, ref String)
  fullName: XTMF.ProjectController.Load(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Load
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 210
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nLoads a project by name, fails if it doesn&apos;t exist already\n"
  example: []
  syntax:
    content: public Project Load(string name, ref string error)
    parameters:
    - id: name
      type: System.String
      description: The name of the project to load
    - id: error
      type: System.String
      description: Contains an error message in case of failure
    return:
      type: XTMF.Project
      description: The loaded project
    content.vb: Public Function Load(name As String, ByRef error As String) As Project
  overload: XTMF.ProjectController.Load*
  nameWithType.vb: ProjectController.Load(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.Load(System.String, ByRef System.String)
  name.vb: Load(String, ByRef String)
- uid: XTMF.ProjectController.LoadOrCreate(System.String,System.String@)
  commentId: M:XTMF.ProjectController.LoadOrCreate(System.String,System.String@)
  id: LoadOrCreate(System.String,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: LoadOrCreate(String, ref String)
  nameWithType: ProjectController.LoadOrCreate(String, ref String)
  fullName: XTMF.ProjectController.LoadOrCreate(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadOrCreate
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 231
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nLoads a project if it exists or creates a new project with the given name.\n"
  example: []
  syntax:
    content: public Project LoadOrCreate(string name, ref string error)
    parameters:
    - id: name
      type: System.String
      description: The name of the project
    - id: error
      type: System.String
      description: AContains an error message in case of failure
    return:
      type: XTMF.Project
      description: The loaded project
    content.vb: Public Function LoadOrCreate(name As String, ByRef error As String) As Project
  overload: XTMF.ProjectController.LoadOrCreate*
  nameWithType.vb: ProjectController.LoadOrCreate(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.LoadOrCreate(System.String, ByRef System.String)
  name.vb: LoadOrCreate(String, ByRef String)
- uid: XTMF.ProjectController.EditProject(XTMF.Project,System.String@)
  commentId: M:XTMF.ProjectController.EditProject(XTMF.Project,System.String@)
  id: EditProject(XTMF.Project,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: EditProject(Project, ref String)
  nameWithType: ProjectController.EditProject(Project, ref String)
  fullName: XTMF.ProjectController.EditProject(XTMF.Project, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EditProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 261
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGets an editing session for the project\n"
  example: []
  syntax:
    content: public ProjectEditingSession EditProject(Project project, ref string error)
    parameters:
    - id: project
      type: XTMF.Project
      description: The project to create the editing session for
    - id: error
      type: System.String
      description: An error message in case of failure
    return:
      type: XTMF.ProjectEditingSession
      description: The session to edit the project.
    content.vb: Public Function EditProject(project As Project, ByRef error As String) As ProjectEditingSession
  overload: XTMF.ProjectController.EditProject*
  nameWithType.vb: ProjectController.EditProject(Project, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.EditProject(XTMF.Project, ByRef System.String)
  name.vb: EditProject(Project, ByRef String)
- uid: XTMF.ProjectController.DeleteProject(System.String,System.String@)
  commentId: M:XTMF.ProjectController.DeleteProject(System.String,System.String@)
  id: DeleteProject(System.String,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: DeleteProject(String, ref String)
  nameWithType: ProjectController.DeleteProject(String, ref String)
  fullName: XTMF.ProjectController.DeleteProject(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DeleteProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 305
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nDeletes a project\n"
  example: []
  syntax:
    content: public bool DeleteProject(string name, ref string error)
    parameters:
    - id: name
      type: System.String
      description: The name of the project to delete
    - id: error
      type: System.String
      description: An error message in case of failure
    return:
      type: System.Boolean
      description: True if the project was deleted
    content.vb: Public Function DeleteProject(name As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.DeleteProject*
  nameWithType.vb: ProjectController.DeleteProject(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.DeleteProject(System.String, ByRef System.String)
  name.vb: DeleteProject(String, ByRef String)
- uid: XTMF.ProjectController.DeleteProject(XTMF.Project,System.String@)
  commentId: M:XTMF.ProjectController.DeleteProject(XTMF.Project,System.String@)
  id: DeleteProject(XTMF.Project,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: DeleteProject(Project, ref String)
  nameWithType: ProjectController.DeleteProject(Project, ref String)
  fullName: XTMF.ProjectController.DeleteProject(XTMF.Project, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DeleteProject
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 323
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nDeletes a project\n"
  example: []
  syntax:
    content: public bool DeleteProject(Project project, ref string error)
    parameters:
    - id: project
      type: XTMF.Project
      description: The project to delete
    - id: error
      type: System.String
      description: An error message in case of failure
    return:
      type: System.Boolean
      description: True if the project was deleted, false if it failed.
    content.vb: Public Function DeleteProject(project As Project, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.DeleteProject*
  nameWithType.vb: ProjectController.DeleteProject(Project, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.DeleteProject(XTMF.Project, ByRef System.String)
  name.vb: DeleteProject(Project, ByRef String)
- uid: XTMF.ProjectController.GetProjects
  commentId: M:XTMF.ProjectController.GetProjects
  id: GetProjects
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: GetProjects()
  nameWithType: ProjectController.GetProjects()
  fullName: XTMF.ProjectController.GetProjects()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetProjects
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 340
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet the list of projects currently active\n"
  example: []
  syntax:
    content: public List<Project> GetProjects()
    return:
      type: System.Collections.Generic.List{XTMF.Project}
      description: A snapshot of the projects that are currently active
    content.vb: Public Function GetProjects As List(Of Project)
  overload: XTMF.ProjectController.GetProjects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectController.ValidateProjectName(System.String)
  commentId: M:XTMF.ProjectController.ValidateProjectName(System.String)
  id: ValidateProjectName(System.String)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: ValidateProjectName(String)
  nameWithType: ProjectController.ValidateProjectName(String)
  fullName: XTMF.ProjectController.ValidateProjectName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateProjectName
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 349
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool ValidateProjectName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ValidateProjectName(name As String) As Boolean
  overload: XTMF.ProjectController.ValidateProjectName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ProjectController.ExportModelSystemAsString(XTMF.ModelSystemModel,System.String@,System.String@)
  commentId: M:XTMF.ProjectController.ExportModelSystemAsString(XTMF.ModelSystemModel,System.String@,System.String@)
  id: ExportModelSystemAsString(XTMF.ModelSystemModel,System.String@,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: ExportModelSystemAsString(ModelSystemModel, out String, ref String)
  nameWithType: ProjectController.ExportModelSystemAsString(ModelSystemModel, out String, ref String)
  fullName: XTMF.ProjectController.ExportModelSystemAsString(XTMF.ModelSystemModel, out System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportModelSystemAsString
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 367
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nExports the model system model to a string.\n"
  example: []
  syntax:
    content: public bool ExportModelSystemAsString(ModelSystemModel ms, out string modelSystemAsString, ref string error)
    parameters:
    - id: ms
      type: XTMF.ModelSystemModel
      description: The model system model to export
    - id: modelSystemAsString
      type: System.String
      description: The string to store the results into.
    - id: error
      type: System.String
      description: A description of the error if there is one.
    return:
      type: System.Boolean
      description: True if successful, false otherwise with description.
    content.vb: Public Function ExportModelSystemAsString(ms As ModelSystemModel, ByRef modelSystemAsString As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.ExportModelSystemAsString*
  nameWithType.vb: ProjectController.ExportModelSystemAsString(ModelSystemModel, ByRef String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.ExportModelSystemAsString(XTMF.ModelSystemModel, ByRef System.String, ByRef System.String)
  name.vb: ExportModelSystemAsString(ModelSystemModel, ByRef String, ByRef String)
- uid: XTMF.ProjectController.ExportModelSystemAsString(XTMF.Project,System.Int32,System.String@,System.String@)
  commentId: M:XTMF.ProjectController.ExportModelSystemAsString(XTMF.Project,System.Int32,System.String@,System.String@)
  id: ExportModelSystemAsString(XTMF.Project,System.Int32,System.String@,System.String@)
  parent: XTMF.ProjectController
  langs:
  - csharp
  - vb
  name: ExportModelSystemAsString(Project, Int32, out String, ref String)
  nameWithType: ProjectController.ExportModelSystemAsString(Project, Int32, out String, ref String)
  fullName: XTMF.ProjectController.ExportModelSystemAsString(XTMF.Project, System.Int32, out System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Controller/ProjectController.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExportModelSystemAsString
    path: ../../../XTMF/Code/XTMF1.1/Controller/ProjectController.cs
    startLine: 382
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nExports the model system model to a string.\n"
  example: []
  syntax:
    content: public bool ExportModelSystemAsString(Project project, int modelSystemIndex, out string modelSystemAsString, ref string error)
    parameters:
    - id: project
      type: XTMF.Project
      description: The project to export the model system from
    - id: modelSystemIndex
      type: System.Int32
      description: The index of the model system
    - id: modelSystemAsString
      type: System.String
      description: The string to store the results into.
    - id: error
      type: System.String
      description: A description of the error that occurred
    return:
      type: System.Boolean
      description: The if successful, false otherwise with description.
    content.vb: Public Function ExportModelSystemAsString(project As Project, modelSystemIndex As Integer, ByRef modelSystemAsString As String, ByRef error As String) As Boolean
  overload: XTMF.ProjectController.ExportModelSystemAsString*
  nameWithType.vb: ProjectController.ExportModelSystemAsString(Project, Int32, ByRef String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ProjectController.ExportModelSystemAsString(XTMF.Project, System.Int32, ByRef System.String, ByRef System.String)
  name.vb: ExportModelSystemAsString(Project, Int32, ByRef String, ByRef String)
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.ProjectController.#ctor*
  commentId: Overload:XTMF.ProjectController.#ctor
  isExternal: false
  name: ProjectController
  nameWithType: ProjectController.ProjectController
  fullName: XTMF.ProjectController.ProjectController
- uid: XTMF.XTMFRuntime
  commentId: T:XTMF.XTMFRuntime
  parent: XTMF
  isExternal: false
  name: XTMFRuntime
  nameWithType: XTMFRuntime
  fullName: XTMF.XTMFRuntime
- uid: XTMF.ProjectController.EditProject*
  commentId: Overload:XTMF.ProjectController.EditProject
  isExternal: false
  name: EditProject
  nameWithType: ProjectController.EditProject
  fullName: XTMF.ProjectController.EditProject
- uid: XTMF.Project
  commentId: T:XTMF.Project
  parent: XTMF
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: XTMF.Project
- uid: XTMF.ProjectEditingSession
  commentId: T:XTMF.ProjectEditingSession
  parent: XTMF
  isExternal: false
  name: ProjectEditingSession
  nameWithType: ProjectEditingSession
  fullName: XTMF.ProjectEditingSession
- uid: XTMF.ProjectController.IsEditSessionOpenForProject*
  commentId: Overload:XTMF.ProjectController.IsEditSessionOpenForProject
  isExternal: false
  name: IsEditSessionOpenForProject
  nameWithType: ProjectController.IsEditSessionOpenForProject
  fullName: XTMF.ProjectController.IsEditSessionOpenForProject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ProjectController.ClearEditingSessions*
  commentId: Overload:XTMF.ProjectController.ClearEditingSessions
  isExternal: false
  name: ClearEditingSessions
  nameWithType: ProjectController.ClearEditingSessions
  fullName: XTMF.ProjectController.ClearEditingSessions
- uid: XTMF.ProjectController.CloneProject*
  commentId: Overload:XTMF.ProjectController.CloneProject
  isExternal: false
  name: CloneProject
  nameWithType: ProjectController.CloneProject
  fullName: XTMF.ProjectController.CloneProject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ProjectController.RenameProject*
  commentId: Overload:XTMF.ProjectController.RenameProject
  isExternal: false
  name: RenameProject
  nameWithType: ProjectController.RenameProject
  fullName: XTMF.ProjectController.RenameProject
- uid: XTMF.ProjectController.SetDescription*
  commentId: Overload:XTMF.ProjectController.SetDescription
  isExternal: false
  name: SetDescription
  nameWithType: ProjectController.SetDescription
  fullName: XTMF.ProjectController.SetDescription
- uid: XTMF.ProjectController.Load*
  commentId: Overload:XTMF.ProjectController.Load
  isExternal: false
  name: Load
  nameWithType: ProjectController.Load
  fullName: XTMF.ProjectController.Load
- uid: XTMF.ProjectController.LoadOrCreate*
  commentId: Overload:XTMF.ProjectController.LoadOrCreate
  isExternal: false
  name: LoadOrCreate
  nameWithType: ProjectController.LoadOrCreate
  fullName: XTMF.ProjectController.LoadOrCreate
- uid: XTMF.ProjectController.DeleteProject*
  commentId: Overload:XTMF.ProjectController.DeleteProject
  isExternal: false
  name: DeleteProject
  nameWithType: ProjectController.DeleteProject
  fullName: XTMF.ProjectController.DeleteProject
- uid: XTMF.ProjectController.GetProjects*
  commentId: Overload:XTMF.ProjectController.GetProjects
  isExternal: false
  name: GetProjects
  nameWithType: ProjectController.GetProjects
  fullName: XTMF.ProjectController.GetProjects
- uid: System.Collections.Generic.List{XTMF.Project}
  commentId: T:System.Collections.Generic.List{XTMF.Project}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Project>
  nameWithType: List<Project>
  fullName: System.Collections.Generic.List<XTMF.Project>
  nameWithType.vb: List(Of Project)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Project)
  name.vb: List(Of Project)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Project
    name: Project
    nameWithType: Project
    fullName: XTMF.Project
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Project
    name: Project
    nameWithType: Project
    fullName: XTMF.Project
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.ProjectController.ValidateProjectName*
  commentId: Overload:XTMF.ProjectController.ValidateProjectName
  isExternal: false
  name: ValidateProjectName
  nameWithType: ProjectController.ValidateProjectName
  fullName: XTMF.ProjectController.ValidateProjectName
- uid: XTMF.ProjectController.ExportModelSystemAsString*
  commentId: Overload:XTMF.ProjectController.ExportModelSystemAsString
  isExternal: false
  name: ExportModelSystemAsString
  nameWithType: ProjectController.ExportModelSystemAsString
  fullName: XTMF.ProjectController.ExportModelSystemAsString
- uid: XTMF.ModelSystemModel
  commentId: T:XTMF.ModelSystemModel
  parent: XTMF
  isExternal: false
  name: ModelSystemModel
  nameWithType: ModelSystemModel
  fullName: XTMF.ModelSystemModel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
