### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation
  commentId: T:TMG.GTAModel.V2.Modes.SubwayAccessStation
  id: SubwayAccessStation
  parent: TMG.GTAModel.V2.Modes
  children:
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessCost
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessInVehicleTravelTime
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessModeName
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Closest
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.ClosestDistance
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.CostFactor
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.EgressNetworkName
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.FareTTC
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.First
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.InVehicleTravelTime
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.LogParkingFactor
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.MaxAccessToDestinationTime
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Name
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Parent
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.ParkingCost
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.PrimaryModeName
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Root
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation(System.String@)
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.Second
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.StationRanges
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.WaitTime
  - TMG.GTAModel.V2.Modes.SubwayAccessStation.WalkTime
  langs:
  - csharp
  - vb
  name: SubwayAccessStation
  nameWithType: SubwayAccessStation
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation
  type: Class
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SubwayAccessStation
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 26
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: 'public class SubwayAccessStation : IStationMode, IMode, IModeChoiceNode, IModule'
    content.vb: >-
      Public Class SubwayAccessStation

          Implements IStationMode, IMode, IModeChoiceNode, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.IStationMode
  - TMG.IMode
  - TMG.IModeChoiceNode
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessCost
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessCost
  id: AccessCost
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: AccessCost
  nameWithType: SubwayAccessStation.AccessCost
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessCost
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AccessCost
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Access Cost", 0F, "The cost of travelling from the origin to the access station.")]

      public float AccessCost
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Access Cost", 0F, "The cost of travelling from the origin to the access station.")>

      Public AccessCost As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Access Cost
    - type: System.Single
      value: 0
    - type: System.String
      value: The cost of travelling from the origin to the access station.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessInVehicleTravelTime
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessInVehicleTravelTime
  id: AccessInVehicleTravelTime
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: AccessInVehicleTravelTime
  nameWithType: SubwayAccessStation.AccessInVehicleTravelTime
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessInVehicleTravelTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AccessInVehicleTravelTime
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Access IVTT", 0F, "The factor to apply to the general time of travel.")]

      public float AccessInVehicleTravelTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Access IVTT", 0F, "The factor to apply to the general time of travel.")>

      Public AccessInVehicleTravelTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Access IVTT
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the general time of travel.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessModeName
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessModeName
  id: AccessModeName
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: AccessModeName
  nameWithType: SubwayAccessStation.AccessModeName
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.AccessModeName
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AccessModeName
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Access Network Name", "Auto", "The name of the network to use to get to the interchange.")]

      public string AccessModeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Access Network Name", "Auto", "The name of the network to use to get to the interchange.")>

      Public AccessModeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Access Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the network to use to get to the interchange.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Closest
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.Closest
  id: Closest
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Closest
  nameWithType: SubwayAccessStation.Closest
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Closest
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Closest
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Closest", 1.4437F, "The constant to be added if we are the closest station to the origin.")]

      public float Closest
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Closest", 1.4437F, "The constant to be added if we are the closest station to the origin.")>

      Public Closest As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Closest
    - type: System.Single
      value: 1.44369996
    - type: System.String
      value: The constant to be added if we are the closest station to the origin.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.ClosestDistance
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.ClosestDistance
  id: ClosestDistance
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: ClosestDistance
  nameWithType: SubwayAccessStation.ClosestDistance
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.ClosestDistance
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClosestDistance
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Closest Distance", 0F, "The factor to apply to the distance if this is the closest station between the origin and this station.")]

      public float ClosestDistance
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Closest Distance", 0F, "The factor to apply to the distance if this is the closest station between the origin and this station.")>

      Public ClosestDistance As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Closest Distance
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the distance if this is the closest station between the origin and this station.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.CostFactor
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.CostFactor
  id: CostFactor
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: CostFactor
  nameWithType: SubwayAccessStation.CostFactor
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.CostFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CostFactor
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Cost", 0F, "The factor applied to the cost after access.")]

      public float CostFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Cost", 0F, "The factor applied to the cost after access.")>

      Public CostFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Cost
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor applied to the cost after access.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.EgressNetworkName
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.EgressNetworkName
  id: EgressNetworkName
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: EgressNetworkName
  nameWithType: SubwayAccessStation.EgressNetworkName
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.EgressNetworkName
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EgressNetworkName
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Egress Network Name", "Transit", "The name of the network to use after going to the egress zone.")]

      public string EgressNetworkName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Egress Network Name", "Transit", "The name of the network to use after going to the egress zone.")>

      Public EgressNetworkName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Egress Network Name
    - type: System.String
      value: Transit
    - type: System.String
      value: The name of the network to use after going to the egress zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.First
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.First
  id: First
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: First
  nameWithType: SubwayAccessStation.First
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.First
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: First
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public INetworkData First
    return:
      type: TMG.INetworkData
    content.vb: Public First As INetworkData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.FareTTC
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.FareTTC
  id: FareTTC
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: FareTTC
  nameWithType: SubwayAccessStation.FareTTC
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.FareTTC
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FareTTC
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public float FareTTC
    return:
      type: System.Single
    content.vb: Public FareTTC As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.InVehicleTravelTime
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.InVehicleTravelTime
  id: InVehicleTravelTime
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: InVehicleTravelTime
  nameWithType: SubwayAccessStation.InVehicleTravelTime
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.InVehicleTravelTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InVehicleTravelTime
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 55
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("IVTT", 0F, "The factor to apply to the general time of travel.")]

      public float InVehicleTravelTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("IVTT", 0F, "The factor to apply to the general time of travel.")>

      Public InVehicleTravelTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: IVTT
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the general time of travel.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.LogParkingFactor
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.LogParkingFactor
  id: LogParkingFactor
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: LogParkingFactor
  nameWithType: SubwayAccessStation.LogParkingFactor
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.LogParkingFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LogParkingFactor
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 58
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Log Parking Factor", 0F, "The factor applied to the log of the number of parking spots.")]

      public float LogParkingFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Log Parking Factor", 0F, "The factor applied to the log of the number of parking spots.")>

      Public LogParkingFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Log Parking Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor applied to the log of the number of parking spots.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.MaxAccessToDestinationTime
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.MaxAccessToDestinationTime
  id: MaxAccessToDestinationTime
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: MaxAccessToDestinationTime
  nameWithType: SubwayAccessStation.MaxAccessToDestinationTime
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.MaxAccessToDestinationTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaxAccessToDestinationTime
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 61
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Max Access To Destination Time", 150F, "The maximum time in minutes that going from an access station to the destination.")]

      public float MaxAccessToDestinationTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Max Access To Destination Time", 150F, "The maximum time in minutes that going from an access station to the destination.")>

      Public MaxAccessToDestinationTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Access To Destination Time
    - type: System.Single
      value: 150
    - type: System.String
      value: The maximum time in minutes that going from an access station to the destination.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parent
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.Parent
  id: Parent
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: SubwayAccessStation.Parent
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parent
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parent
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 64
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public SubwayAccessMode Parent
    return:
      type: TMG.GTAModel.V2.Modes.SubwayAccessMode
    content.vb: Public Parent As SubwayAccessMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.ParkingCost
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.ParkingCost
  id: ParkingCost
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: ParkingCost
  nameWithType: SubwayAccessStation.ParkingCost
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.ParkingCost
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParkingCost
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 67
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Parking Cost", 0F, "The factor applied to the cost of parking at the access station.")]

      public float ParkingCost
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Parking Cost", 0F, "The factor applied to the cost of parking at the access station.")>

      Public ParkingCost As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Parking Cost
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor applied to the cost of parking at the access station.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.PrimaryModeName
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.PrimaryModeName
  id: PrimaryModeName
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: PrimaryModeName
  nameWithType: SubwayAccessStation.PrimaryModeName
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.PrimaryModeName
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PrimaryModeName
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 70
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Primary Network Name", "Transit", "The name of the network to use after the interchange.")]

      public string PrimaryModeName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Primary Network Name", "Transit", "The name of the network to use after the interchange.")>

      Public PrimaryModeName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Primary Network Name
    - type: System.String
      value: Transit
    - type: System.String
      value: The name of the network to use after the interchange.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Root
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.Root
  id: Root
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: SubwayAccessStation.Root
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 73
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public I4StepModel Root
    return:
      type: TMG.I4StepModel
    content.vb: Public Root As I4StepModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Second
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.Second
  id: Second
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Second
  nameWithType: SubwayAccessStation.Second
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Second
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Second
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 76
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public ITripComponentData Second
    return:
      type: TMG.ITripComponentData
    content.vb: Public Second As ITripComponentData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationRanges
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.StationRanges
  id: StationRanges
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: StationRanges
  nameWithType: SubwayAccessStation.StationRanges
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationRanges
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationRanges
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 79
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("All Station Zones", "7000", typeof (RangeSet), "The station numbers to check to make sure that we are the closest one.")]

      public RangeSet StationRanges
    return:
      type: Datastructure.RangeSet
    content.vb: >-
      <RunParameter("All Station Zones", "7000", GetType(RangeSet), "The station numbers to check to make sure that we are the closest one.")>

      Public StationRanges As RangeSet
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: All Station Zones
    - type: System.String
      value: "7000"
    - type: System.Type
      value: Datastructure.RangeSet
    - type: System.String
      value: The station numbers to check to make sure that we are the closest one.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.WaitTime
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.WaitTime
  id: WaitTime
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: WaitTime
  nameWithType: SubwayAccessStation.WaitTime
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.WaitTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitTime
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 82
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Wait Time", 0F, "The factor to apply to the wait time.")]

      public float WaitTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Wait Time", 0F, "The factor to apply to the wait time.")>

      Public WaitTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Wait Time
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the wait time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.WalkTime
  commentId: F:TMG.GTAModel.V2.Modes.SubwayAccessStation.WalkTime
  id: WalkTime
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: WalkTime
  nameWithType: SubwayAccessStation.WalkTime
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.WalkTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkTime
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 85
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Walk Time", 0F, "The factor to apply to the general time of travel.")]

      public float WalkTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Walk Time", 0F, "The factor to apply to the general time of travel.")>

      Public WalkTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Walk Time
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the general time of travel.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible
  id: CurrentlyFeasible
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: CurrentlyFeasible
  nameWithType: SubwayAccessStation.CurrentlyFeasible
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CurrentlyFeasible
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 97
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [Parameter("Demographic Category Feasible", 1F, "(Automated by IModeParameterDatabase)\r\nIs the currently processing demographic category feasible?")]

      public float CurrentlyFeasible { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <Parameter("Demographic Category Feasible", 1F, "(Automated by IModeParameterDatabase)" & vbCrLf & "Is the currently processing demographic category feasible?")>

      Public Property CurrentlyFeasible As Single
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible*
  implements:
  - TMG.IModeChoiceNode.CurrentlyFeasible
  attributes:
  - type: XTMF.ParameterAttribute
    ctor: XTMF.ParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demographic Category Feasible
    - type: System.Single
      value: 1
    - type: System.String
      value: >-
        (Automated by IModeParameterDatabase)

        Is the currently processing demographic category feasible?
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName
  id: ModeName
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: ModeName
  nameWithType: SubwayAccessStation.ModeName
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModeName
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 100
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Mode Name", "DAS 6000", "The name of this mixed mode option")]

      public string ModeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Mode Name", "DAS 6000", "The name of this mixed mode option")>

      Public Property ModeName As String
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName*
  implements:
  - TMG.IModeChoiceNode.ModeName
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Mode Name
    - type: System.String
      value: DAS 6000
    - type: System.String
      value: The name of this mixed mode option
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Name
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.Name
  id: Name
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SubwayAccessStation.Name
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 107
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType
  id: NetworkType
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: SubwayAccessStation.NetworkType
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkType
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 113
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public string NetworkType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NetworkType As String
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType*
  implements:
  - TMG.IMode.NetworkType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle
  id: NonPersonalVehicle
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: NonPersonalVehicle
  nameWithType: SubwayAccessStation.NonPersonalVehicle
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NonPersonalVehicle
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 118
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public bool NonPersonalVehicle { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NonPersonalVehicle As Boolean
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle*
  implements:
  - TMG.IMode.NonPersonalVehicle
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking
  id: Parking
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Parking
  nameWithType: SubwayAccessStation.Parking
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parking
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 123
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Parking Spots", 0, "The number of parking spots for this station.")]

      public int Parking { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Parking Spots", 0, "The number of parking spots for this station.")>

      Public Property Parking As Integer
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking*
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Parking Spots
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number of parking spots for this station.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress
  id: Progress
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: SubwayAccessStation.Progress
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 138
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: SubwayAccessStation.ProgressColour
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 143
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone
  commentId: P:TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone
  id: StationZone
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: StationZone
  nameWithType: SubwayAccessStation.StationZone
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone
  type: Property
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationZone
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 148
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: >-
      [RunParameter("Interchange Zone", 7000, "The zone number to use as the point of interchange.")]

      public int StationZone { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Interchange Zone", 7000, "The zone number to use as the point of interchange.")>

      Public Property StationZone As Integer
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone*
  implements:
  - TMG.IStationMode.StationZone
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Interchange Zone
    - type: System.Int32
      value: 7000
    - type: System.String
      value: The zone number to use as the point of interchange.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  id: CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: CalculateV(IZone, IZone, Time)
  nameWithType: SubwayAccessStation.CalculateV(IZone, IZone, Time)
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CalculateV
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 151
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public float CalculateV(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function CalculateV(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV*
  implements:
  - TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  id: Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Cost(IZone, IZone, Time)
  nameWithType: SubwayAccessStation.Cost(IZone, IZone, Time)
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Cost
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 185
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public float Cost(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function Cost(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost*
  implements:
  - TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  id: Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: Feasible(IZone, IZone, Time)
  nameWithType: SubwayAccessStation.Feasible(IZone, IZone, Time)
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Feasible
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 191
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public bool Feasible(IZone originZone, IZone destinationZone, Time time)
    parameters:
    - id: originZone
      type: TMG.IZone
    - id: destinationZone
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Function Feasible(originZone As IZone, destinationZone As IZone, time As Time) As Boolean
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible*
  implements:
  - TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: SubwayAccessStation.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 210
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: SubwayAccessStation.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.V2.Modes.SubwayAccessStation
  langs:
  - csharp
  - vb
  name: TravelTime(IZone, IZone, Time)
  nameWithType: SubwayAccessStation.TravelTime(IZone, IZone, Time)
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/V2/Modes/SubwayAccessStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../../XTMF/Code/GTAModel/V2/Modes/SubwayAccessStation.cs
    startLine: 238
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.V2.Modes
  syntax:
    content: public Time TravelTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Function TravelTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime*
  implements:
  - TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.GTAModel.V2.Modes
  commentId: N:TMG.GTAModel.V2.Modes
  isExternal: false
  name: TMG.GTAModel.V2.Modes
  nameWithType: TMG.GTAModel.V2.Modes
  fullName: TMG.GTAModel.V2.Modes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.IStationMode
  commentId: T:TMG.IStationMode
  parent: TMG
  isExternal: false
  name: IStationMode
  nameWithType: IStationMode
  fullName: TMG.IStationMode
- uid: TMG.IMode
  commentId: T:TMG.IMode
  parent: TMG
  isExternal: false
  name: IMode
  nameWithType: IMode
  fullName: TMG.IMode
- uid: TMG.IModeChoiceNode
  commentId: T:TMG.IModeChoiceNode
  parent: TMG
  isExternal: false
  name: IModeChoiceNode
  nameWithType: IModeChoiceNode
  fullName: TMG.IModeChoiceNode
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  parent: TMG
  isExternal: false
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
- uid: TMG.GTAModel.V2.Modes.SubwayAccessMode
  commentId: T:TMG.GTAModel.V2.Modes.SubwayAccessMode
  parent: TMG.GTAModel.V2.Modes
  isExternal: false
  name: SubwayAccessMode
  nameWithType: SubwayAccessMode
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessMode
- uid: TMG.I4StepModel
  commentId: T:TMG.I4StepModel
  parent: TMG
  isExternal: false
  name: I4StepModel
  nameWithType: I4StepModel
  fullName: TMG.I4StepModel
- uid: TMG.ITripComponentData
  commentId: T:TMG.ITripComponentData
  parent: TMG
  isExternal: false
  name: ITripComponentData
  nameWithType: ITripComponentData
  fullName: TMG.ITripComponentData
- uid: Datastructure.RangeSet
  commentId: T:Datastructure.RangeSet
  parent: Datastructure
  isExternal: false
  name: RangeSet
  nameWithType: RangeSet
  fullName: Datastructure.RangeSet
- uid: Datastructure
  commentId: N:Datastructure
  isExternal: false
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible
  isExternal: false
  name: CurrentlyFeasible
  nameWithType: SubwayAccessStation.CurrentlyFeasible
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.CurrentlyFeasible
- uid: TMG.IModeChoiceNode.CurrentlyFeasible
  commentId: P:TMG.IModeChoiceNode.CurrentlyFeasible
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: CurrentlyFeasible
  nameWithType: IModeChoiceNode.CurrentlyFeasible
  fullName: TMG.IModeChoiceNode.CurrentlyFeasible
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName
  isExternal: false
  name: ModeName
  nameWithType: SubwayAccessStation.ModeName
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.ModeName
- uid: TMG.IModeChoiceNode.ModeName
  commentId: P:TMG.IModeChoiceNode.ModeName
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: ModeName
  nameWithType: IModeChoiceNode.ModeName
  fullName: TMG.IModeChoiceNode.ModeName
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Name*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.Name
  isExternal: false
  name: Name
  nameWithType: SubwayAccessStation.Name
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType
  isExternal: false
  name: NetworkType
  nameWithType: SubwayAccessStation.NetworkType
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.NetworkType
- uid: TMG.IMode.NetworkType
  commentId: P:TMG.IMode.NetworkType
  parent: TMG.IMode
  isExternal: false
  name: NetworkType
  nameWithType: IMode.NetworkType
  fullName: TMG.IMode.NetworkType
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle
  isExternal: false
  name: NonPersonalVehicle
  nameWithType: SubwayAccessStation.NonPersonalVehicle
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.NonPersonalVehicle
- uid: TMG.IMode.NonPersonalVehicle
  commentId: P:TMG.IMode.NonPersonalVehicle
  parent: TMG.IMode
  isExternal: false
  name: NonPersonalVehicle
  nameWithType: IMode.NonPersonalVehicle
  fullName: TMG.IMode.NonPersonalVehicle
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking
  isExternal: false
  name: Parking
  nameWithType: SubwayAccessStation.Parking
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Parking
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress
  isExternal: false
  name: Progress
  nameWithType: SubwayAccessStation.Progress
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: SubwayAccessStation.ProgressColour
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone
  isExternal: false
  name: StationZone
  nameWithType: SubwayAccessStation.StationZone
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.StationZone
- uid: TMG.IStationMode.StationZone
  commentId: P:TMG.IStationMode.StationZone
  parent: TMG.IStationMode
  isExternal: false
  name: StationZone
  nameWithType: IStationMode.StationZone
  fullName: TMG.IStationMode.StationZone
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV
  isExternal: false
  name: CalculateV
  nameWithType: SubwayAccessStation.CalculateV
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.CalculateV
- uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: CalculateV(IZone, IZone, Time)
  nameWithType: IModeChoiceNode.CalculateV(IZone, IZone, Time)
  fullName: TMG.IModeChoiceNode.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IModeChoiceNode.CalculateV
    fullName: TMG.IModeChoiceNode.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IModeChoiceNode.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IModeChoiceNode.CalculateV
    fullName: TMG.IModeChoiceNode.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost
  isExternal: false
  name: Cost
  nameWithType: SubwayAccessStation.Cost
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Cost
- uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IMode
  isExternal: false
  name: Cost(IZone, IZone, Time)
  nameWithType: IMode.Cost(IZone, IZone, Time)
  fullName: TMG.IMode.Cost(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Cost
    nameWithType: IMode.Cost
    fullName: TMG.IMode.Cost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IMode.Cost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Cost
    nameWithType: IMode.Cost
    fullName: TMG.IMode.Cost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible
  isExternal: false
  name: Feasible
  nameWithType: SubwayAccessStation.Feasible
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.Feasible
- uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IModeChoiceNode
  isExternal: false
  name: Feasible(IZone, IZone, Time)
  nameWithType: IModeChoiceNode.Feasible(IZone, IZone, Time)
  fullName: TMG.IModeChoiceNode.Feasible(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: IModeChoiceNode.Feasible
    fullName: TMG.IModeChoiceNode.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IModeChoiceNode.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: IModeChoiceNode.Feasible
    fullName: TMG.IModeChoiceNode.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: SubwayAccessStation.RuntimeValidation
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime*
  commentId: Overload:TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime
  isExternal: false
  name: TravelTime
  nameWithType: SubwayAccessStation.TravelTime
  fullName: TMG.GTAModel.V2.Modes.SubwayAccessStation.TravelTime
- uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.IMode
  isExternal: false
  name: TravelTime(IZone, IZone, Time)
  nameWithType: IMode.TravelTime(IZone, IZone, Time)
  fullName: TMG.IMode.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: IMode.TravelTime
    fullName: TMG.IMode.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IMode.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: IMode.TravelTime
    fullName: TMG.IMode.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
