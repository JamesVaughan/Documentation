### YamlMime:ManagedReference
items:
- uid: DYL.Tasha.Person
  commentId: T:DYL.Tasha.Person
  id: Person
  parent: DYL.Tasha
  children:
  - DYL.Tasha.Person.#ctor
  - DYL.Tasha.Person.#ctor(Tasha.Common.ITashaHousehold,System.Int32,System.Int32,Tasha.Common.Occupation,TMG.TTSEmploymentStatus,Tasha.Common.StudentStatus,System.Boolean,System.Boolean)
  - DYL.Tasha.Person.Adult
  - DYL.Tasha.Person.Age
  - DYL.Tasha.Person.AuxTripChains
  - DYL.Tasha.Person.Child
  - DYL.Tasha.Person.Clone
  - DYL.Tasha.Person.EmploymentStatus
  - DYL.Tasha.Person.EmploymentZone
  - DYL.Tasha.Person.ExpansionFactor
  - DYL.Tasha.Person.Female
  - DYL.Tasha.Person.FreeParking
  - DYL.Tasha.Person.Household
  - DYL.Tasha.Person.Id
  - DYL.Tasha.Person.iterationData
  - DYL.Tasha.Person.Licence
  - DYL.Tasha.Person.Male
  - DYL.Tasha.Person.Occupation
  - DYL.Tasha.Person.PersonIterationData
  - DYL.Tasha.Person.PersonsMade
  - DYL.Tasha.Person.Recycle
  - DYL.Tasha.Person.SchoolZone
  - DYL.Tasha.Person.StudentStatus
  - DYL.Tasha.Person.TransitPass
  - DYL.Tasha.Person.TripChains
  - DYL.Tasha.Person.YoungAdult
  - DYL.Tasha.Person.Youth
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: Person
  fullName: DYL.Tasha.Person
  type: Class
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Person
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 29
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nRepresents a person in the TASHA simulation\n"
  example: []
  syntax:
    content: 'public sealed class Person : Attachable, ITashaPerson, IAttachable'
    content.vb: >-
      Public NotInheritable Class Person
          Inherits Attachable
          Implements ITashaPerson, IAttachable
  inheritance:
  - System.Object
  - DYL.Tasha.Attachable
  implements:
  - Tasha.Common.ITashaPerson
  - Tasha.Common.IAttachable
  inheritedMembers:
  - DYL.Tasha.Attachable.variables
  - DYL.Tasha.Attachable.Item(System.String)
  - DYL.Tasha.Attachable.Attach(System.String,System.Object)
  - DYL.Tasha.Attachable.GetVariable(System.String)
  - DYL.Tasha.Attachable.Keys
  - DYL.Tasha.Attachable.Release
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: DYL.Tasha.Person.PersonsMade
  commentId: F:DYL.Tasha.Person.PersonsMade
  id: PersonsMade
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: PersonsMade
  nameWithType: Person.PersonsMade
  fullName: DYL.Tasha.Person.PersonsMade
  type: Field
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonsMade
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 31
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public static int PersonsMade
    return:
      type: System.Int32
    content.vb: Public Shared PersonsMade As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DYL.Tasha.Person.#ctor(Tasha.Common.ITashaHousehold,System.Int32,System.Int32,Tasha.Common.Occupation,TMG.TTSEmploymentStatus,Tasha.Common.StudentStatus,System.Boolean,System.Boolean)
  commentId: M:DYL.Tasha.Person.#ctor(Tasha.Common.ITashaHousehold,System.Int32,System.Int32,Tasha.Common.Occupation,TMG.TTSEmploymentStatus,Tasha.Common.StudentStatus,System.Boolean,System.Boolean)
  id: '#ctor(Tasha.Common.ITashaHousehold,System.Int32,System.Int32,Tasha.Common.Occupation,TMG.TTSEmploymentStatus,Tasha.Common.StudentStatus,System.Boolean,System.Boolean)'
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Person(ITashaHousehold, Int32, Int32, Occupation, TTSEmploymentStatus, StudentStatus, Boolean, Boolean)
  nameWithType: Person.Person(ITashaHousehold, Int32, Int32, Occupation, TTSEmploymentStatus, StudentStatus, Boolean, Boolean)
  fullName: DYL.Tasha.Person.Person(Tasha.Common.ITashaHousehold, System.Int32, System.Int32, Tasha.Common.Occupation, TMG.TTSEmploymentStatus, Tasha.Common.StudentStatus, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 44
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nCreates a new person\n"
  example: []
  syntax:
    content: public Person(ITashaHousehold household, int id, int age, Occupation occupation, TTSEmploymentStatus employmentStatus, StudentStatus studentStatus, bool license, bool female)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
      description: The household that this person belongs to, may not be null!
    - id: id
      type: System.Int32
      description: The identifyer for this person
    - id: age
      type: System.Int32
      description: The age of this person
    - id: occupation
      type: Tasha.Common.Occupation
    - id: employmentStatus
      type: TMG.TTSEmploymentStatus
      description: How this person is employed, if at all
    - id: studentStatus
      type: Tasha.Common.StudentStatus
      description: If this person is a student, and if so what type of student
    - id: license
      type: System.Boolean
    - id: female
      type: System.Boolean
      description: Is this person female
    content.vb: Public Sub New(household As ITashaHousehold, id As Integer, age As Integer, occupation As Occupation, employmentStatus As TTSEmploymentStatus, studentStatus As StudentStatus, license As Boolean, female As Boolean)
  overload: DYL.Tasha.Person.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.#ctor
  commentId: M:DYL.Tasha.Person.#ctor
  id: '#ctor'
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Person()
  nameWithType: Person.Person()
  fullName: DYL.Tasha.Person.Person()
  type: Constructor
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 57
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public Person()
    content.vb: Public Sub New
  overload: DYL.Tasha.Person.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Adult
  commentId: P:DYL.Tasha.Person.Adult
  id: Adult
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Adult
  nameWithType: Person.Adult
  fullName: DYL.Tasha.Person.Adult
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Adult
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 67
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nIs this person an adult\n"
  example: []
  syntax:
    content: public bool Adult { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Adult As Boolean
  overload: DYL.Tasha.Person.Adult*
  implements:
  - Tasha.Common.ITashaPerson.Adult
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.Person.Age
  commentId: P:DYL.Tasha.Person.Age
  id: Age
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Age
  nameWithType: Person.Age
  fullName: DYL.Tasha.Person.Age
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Age
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 75
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nHow old is this person\n"
  example: []
  syntax:
    content: public int Age { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Age As Integer
  overload: DYL.Tasha.Person.Age*
  implements:
  - Tasha.Common.ITashaPerson.Age
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.AuxTripChains
  commentId: P:DYL.Tasha.Person.AuxTripChains
  id: AuxTripChains
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: AuxTripChains
  nameWithType: Person.AuxTripChains
  fullName: DYL.Tasha.Person.AuxTripChains
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AuxTripChains
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 77
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public List<ITripChain> AuxTripChains { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Tasha.Common.ITripChain}
    content.vb: Public Property AuxTripChains As List(Of ITripChain)
  overload: DYL.Tasha.Person.AuxTripChains*
  implements:
  - Tasha.Common.ITashaPerson.AuxTripChains
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Child
  commentId: P:DYL.Tasha.Person.Child
  id: Child
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: Person.Child
  fullName: DYL.Tasha.Person.Child
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Child
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 84
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public bool Child { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Child As Boolean
  overload: DYL.Tasha.Person.Child*
  implements:
  - Tasha.Common.ITashaPerson.Child
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.Person.EmploymentStatus
  commentId: P:DYL.Tasha.Person.EmploymentStatus
  id: EmploymentStatus
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: EmploymentStatus
  nameWithType: Person.EmploymentStatus
  fullName: DYL.Tasha.Person.EmploymentStatus
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmploymentStatus
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 92
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nIs this person employeed, and if so how?\n"
  example: []
  syntax:
    content: public TTSEmploymentStatus EmploymentStatus { get; set; }
    parameters: []
    return:
      type: TMG.TTSEmploymentStatus
    content.vb: Public Property EmploymentStatus As TTSEmploymentStatus
  overload: DYL.Tasha.Person.EmploymentStatus*
  implements:
  - Tasha.Common.ITashaPerson.EmploymentStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.EmploymentZone
  commentId: P:DYL.Tasha.Person.EmploymentZone
  id: EmploymentZone
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: EmploymentZone
  nameWithType: Person.EmploymentZone
  fullName: DYL.Tasha.Person.EmploymentZone
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmploymentZone
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 102
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nWhere this person is employed at\nnull otherwise\n"
  example: []
  syntax:
    content: public IZone EmploymentZone { get; set; }
    parameters: []
    return:
      type: TMG.IZone
    content.vb: Public Property EmploymentZone As IZone
  overload: DYL.Tasha.Person.EmploymentZone*
  implements:
  - Tasha.Common.ITashaPerson.EmploymentZone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.ExpansionFactor
  commentId: P:DYL.Tasha.Person.ExpansionFactor
  id: ExpansionFactor
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: ExpansionFactor
  nameWithType: Person.ExpansionFactor
  fullName: DYL.Tasha.Person.ExpansionFactor
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExpansionFactor
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 108
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public float ExpansionFactor { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property ExpansionFactor As Single
  overload: DYL.Tasha.Person.ExpansionFactor*
  implements:
  - Tasha.Common.ITashaPerson.ExpansionFactor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Female
  commentId: P:DYL.Tasha.Person.Female
  id: Female
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Female
  nameWithType: Person.Female
  fullName: DYL.Tasha.Person.Female
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Female
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 113
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nIs this person Female?\n"
  example: []
  syntax:
    content: public bool Female { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Female As Boolean
  overload: DYL.Tasha.Person.Female*
  implements:
  - Tasha.Common.ITashaPerson.Female
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.FreeParking
  commentId: P:DYL.Tasha.Person.FreeParking
  id: FreeParking
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: FreeParking
  nameWithType: Person.FreeParking
  fullName: DYL.Tasha.Person.FreeParking
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FreeParking
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 119
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public bool FreeParking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FreeParking As Boolean
  overload: DYL.Tasha.Person.FreeParking*
  implements:
  - Tasha.Common.ITashaPerson.FreeParking
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Household
  commentId: P:DYL.Tasha.Person.Household
  id: Household
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Household
  nameWithType: Person.Household
  fullName: DYL.Tasha.Person.Household
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Household
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 124
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nThe household this person belongs to\n"
  example: []
  syntax:
    content: public ITashaHousehold Household { get; set; }
    parameters: []
    return:
      type: Tasha.Common.ITashaHousehold
    content.vb: Public Property Household As ITashaHousehold
  overload: DYL.Tasha.Person.Household*
  implements:
  - Tasha.Common.ITashaPerson.Household
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Id
  commentId: P:DYL.Tasha.Person.Id
  id: Id
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Person.Id
  fullName: DYL.Tasha.Person.Id
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Id
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 133
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nWhat is this person&apos;s Identifyer\n"
  example: []
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: DYL.Tasha.Person.Id*
  implements:
  - Tasha.Common.ITashaPerson.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.iterationData
  commentId: P:DYL.Tasha.Person.iterationData
  id: iterationData
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: iterationData
  nameWithType: Person.iterationData
  fullName: DYL.Tasha.Person.iterationData
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: iterationData
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 135
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public IPersonIterationData[] iterationData { get; }
    parameters: []
    return:
      type: Tasha.Common.IPersonIterationData[]
    content.vb: Public ReadOnly Property iterationData As IPersonIterationData()
  overload: DYL.Tasha.Person.iterationData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.Person.Licence
  commentId: P:DYL.Tasha.Person.Licence
  id: Licence
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Licence
  nameWithType: Person.Licence
  fullName: DYL.Tasha.Person.Licence
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Licence
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 144
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nDoes this person have a driver&apos;s licence?\n"
  example: []
  syntax:
    content: public bool Licence { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Licence As Boolean
  overload: DYL.Tasha.Person.Licence*
  implements:
  - Tasha.Common.ITashaPerson.Licence
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Male
  commentId: P:DYL.Tasha.Person.Male
  id: Male
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Male
  nameWithType: Person.Male
  fullName: DYL.Tasha.Person.Male
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Male
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 153
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nIs this person Male?\n"
  example: []
  syntax:
    content: public bool Male { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Male As Boolean
  overload: DYL.Tasha.Person.Male*
  implements:
  - Tasha.Common.ITashaPerson.Male
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.Person.Occupation
  commentId: P:DYL.Tasha.Person.Occupation
  id: Occupation
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Occupation
  nameWithType: Person.Occupation
  fullName: DYL.Tasha.Person.Occupation
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Occupation
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 161
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nWhat type of job do they have, if any\n"
  example: []
  syntax:
    content: public Occupation Occupation { get; set; }
    parameters: []
    return:
      type: Tasha.Common.Occupation
    content.vb: Public Property Occupation As Occupation
  overload: DYL.Tasha.Person.Occupation*
  implements:
  - Tasha.Common.ITashaPerson.Occupation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.PersonIterationData
  commentId: P:DYL.Tasha.Person.PersonIterationData
  id: PersonIterationData
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: PersonIterationData
  nameWithType: Person.PersonIterationData
  fullName: DYL.Tasha.Person.PersonIterationData
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PersonIterationData
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 167
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public IList<IPersonIterationData> PersonIterationData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Tasha.Common.IPersonIterationData}
    content.vb: Public Property PersonIterationData As IList(Of IPersonIterationData)
  overload: DYL.Tasha.Person.PersonIterationData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.SchoolZone
  commentId: P:DYL.Tasha.Person.SchoolZone
  id: SchoolZone
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: SchoolZone
  nameWithType: Person.SchoolZone
  fullName: DYL.Tasha.Person.SchoolZone
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SchoolZone
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 177
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nWhere this person goes to school.\nnull otherwise\n"
  example: []
  syntax:
    content: public IZone SchoolZone { get; set; }
    parameters: []
    return:
      type: TMG.IZone
    content.vb: Public Property SchoolZone As IZone
  overload: DYL.Tasha.Person.SchoolZone*
  implements:
  - Tasha.Common.ITashaPerson.SchoolZone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.StudentStatus
  commentId: P:DYL.Tasha.Person.StudentStatus
  id: StudentStatus
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: StudentStatus
  nameWithType: Person.StudentStatus
  fullName: DYL.Tasha.Person.StudentStatus
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StudentStatus
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 186
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nIs this person a student, and if so what kind\n"
  example: []
  syntax:
    content: public StudentStatus StudentStatus { get; set; }
    parameters: []
    return:
      type: Tasha.Common.StudentStatus
    content.vb: Public Property StudentStatus As StudentStatus
  overload: DYL.Tasha.Person.StudentStatus*
  implements:
  - Tasha.Common.ITashaPerson.StudentStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.TransitPass
  commentId: P:DYL.Tasha.Person.TransitPass
  id: TransitPass
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: TransitPass
  nameWithType: Person.TransitPass
  fullName: DYL.Tasha.Person.TransitPass
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TransitPass
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 192
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public TransitPass TransitPass { get; set; }
    parameters: []
    return:
      type: Tasha.Common.TransitPass
    content.vb: Public Property TransitPass As TransitPass
  overload: DYL.Tasha.Person.TransitPass*
  implements:
  - Tasha.Common.ITashaPerson.TransitPass
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.TripChains
  commentId: P:DYL.Tasha.Person.TripChains
  id: TripChains
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: TripChains
  nameWithType: Person.TripChains
  fullName: DYL.Tasha.Person.TripChains
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TripChains
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 197
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nThe trip chains that belong to this person\n"
  example: []
  syntax:
    content: public List<ITripChain> TripChains { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Tasha.Common.ITripChain}
    content.vb: Public Property TripChains As List(Of ITripChain)
  overload: DYL.Tasha.Person.TripChains*
  implements:
  - Tasha.Common.ITashaPerson.TripChains
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.YoungAdult
  commentId: P:DYL.Tasha.Person.YoungAdult
  id: YoungAdult
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: YoungAdult
  nameWithType: Person.YoungAdult
  fullName: DYL.Tasha.Person.YoungAdult
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: YoungAdult
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 203
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public bool YoungAdult { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property YoungAdult As Boolean
  overload: DYL.Tasha.Person.YoungAdult*
  implements:
  - Tasha.Common.ITashaPerson.YoungAdult
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.Person.Youth
  commentId: P:DYL.Tasha.Person.Youth
  id: Youth
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Youth
  nameWithType: Person.Youth
  fullName: DYL.Tasha.Person.Youth
  type: Property
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Youth
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 211
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  summary: "\nIs this person a Youth\n"
  example: []
  syntax:
    content: public bool Youth { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Youth As Boolean
  overload: DYL.Tasha.Person.Youth*
  implements:
  - Tasha.Common.ITashaPerson.Youth
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DYL.Tasha.Person.Clone
  commentId: M:DYL.Tasha.Person.Clone
  id: Clone
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Person.Clone()
  fullName: DYL.Tasha.Person.Clone()
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Clone
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 216
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public ITashaPerson Clone()
    return:
      type: Tasha.Common.ITashaPerson
    content.vb: Public Function Clone As ITashaPerson
  overload: DYL.Tasha.Person.Clone*
  implements:
  - Tasha.Common.ITashaPerson.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DYL.Tasha.Person.Recycle
  commentId: M:DYL.Tasha.Person.Recycle
  id: Recycle
  parent: DYL.Tasha.Person
  langs:
  - csharp
  - vb
  name: Recycle()
  nameWithType: Person.Recycle()
  fullName: DYL.Tasha.Person.Recycle()
  type: Method
  source:
    remote:
      path: Code/LocationAllocationModel/Person.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Recycle
    path: ../../../XTMF/Code/LocationAllocationModel/Person.cs
    startLine: 221
  assemblies:
  - LocationAllocationModel
  namespace: DYL.Tasha
  syntax:
    content: public void Recycle()
    content.vb: Public Sub Recycle
  overload: DYL.Tasha.Person.Recycle*
  implements:
  - Tasha.Common.ITashaPerson.Recycle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DYL.Tasha
  commentId: N:DYL.Tasha
  isExternal: false
  name: DYL.Tasha
  nameWithType: DYL.Tasha
  fullName: DYL.Tasha
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DYL.Tasha.Attachable
  commentId: T:DYL.Tasha.Attachable
  parent: DYL.Tasha
  isExternal: false
  name: Attachable
  nameWithType: Attachable
  fullName: DYL.Tasha.Attachable
- uid: Tasha.Common.ITashaPerson
  commentId: T:Tasha.Common.ITashaPerson
  parent: Tasha.Common
  isExternal: false
  name: ITashaPerson
  nameWithType: ITashaPerson
  fullName: Tasha.Common.ITashaPerson
- uid: Tasha.Common.IAttachable
  commentId: T:Tasha.Common.IAttachable
  parent: Tasha.Common
  isExternal: false
  name: IAttachable
  nameWithType: IAttachable
  fullName: Tasha.Common.IAttachable
- uid: DYL.Tasha.Attachable.variables
  commentId: F:DYL.Tasha.Attachable.variables
  parent: DYL.Tasha.Attachable
  isExternal: false
  name: variables
  nameWithType: Attachable.variables
  fullName: DYL.Tasha.Attachable.variables
- uid: DYL.Tasha.Attachable.Item(System.String)
  commentId: P:DYL.Tasha.Attachable.Item(System.String)
  parent: DYL.Tasha.Attachable
  isExternal: true
  name: Item[String]
  nameWithType: Attachable.Item[String]
  fullName: DYL.Tasha.Attachable.Item[System.String]
  nameWithType.vb: Attachable.Item(String)
  fullName.vb: DYL.Tasha.Attachable.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: DYL.Tasha.Attachable.Item(System.String)
    name: Item
    nameWithType: Attachable.Item
    fullName: DYL.Tasha.Attachable.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: DYL.Tasha.Attachable.Item(System.String)
    name: Item
    nameWithType: Attachable.Item
    fullName: DYL.Tasha.Attachable.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.Attachable.Attach(System.String,System.Object)
  commentId: M:DYL.Tasha.Attachable.Attach(System.String,System.Object)
  parent: DYL.Tasha.Attachable
  isExternal: true
  name: Attach(String, Object)
  nameWithType: Attachable.Attach(String, Object)
  fullName: DYL.Tasha.Attachable.Attach(System.String, System.Object)
  spec.csharp:
  - uid: DYL.Tasha.Attachable.Attach(System.String,System.Object)
    name: Attach
    nameWithType: Attachable.Attach
    fullName: DYL.Tasha.Attachable.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DYL.Tasha.Attachable.Attach(System.String,System.Object)
    name: Attach
    nameWithType: Attachable.Attach
    fullName: DYL.Tasha.Attachable.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.Attachable.GetVariable(System.String)
  commentId: M:DYL.Tasha.Attachable.GetVariable(System.String)
  parent: DYL.Tasha.Attachable
  isExternal: true
  name: GetVariable(String)
  nameWithType: Attachable.GetVariable(String)
  fullName: DYL.Tasha.Attachable.GetVariable(System.String)
  spec.csharp:
  - uid: DYL.Tasha.Attachable.GetVariable(System.String)
    name: GetVariable
    nameWithType: Attachable.GetVariable
    fullName: DYL.Tasha.Attachable.GetVariable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DYL.Tasha.Attachable.GetVariable(System.String)
    name: GetVariable
    nameWithType: Attachable.GetVariable
    fullName: DYL.Tasha.Attachable.GetVariable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.Attachable.Keys
  commentId: P:DYL.Tasha.Attachable.Keys
  parent: DYL.Tasha.Attachable
  isExternal: false
  name: Keys
  nameWithType: Attachable.Keys
  fullName: DYL.Tasha.Attachable.Keys
- uid: DYL.Tasha.Attachable.Release
  commentId: M:DYL.Tasha.Attachable.Release
  parent: DYL.Tasha.Attachable
  isExternal: false
  name: Release()
  nameWithType: Attachable.Release()
  fullName: DYL.Tasha.Attachable.Release()
  spec.csharp:
  - uid: DYL.Tasha.Attachable.Release
    name: Release
    nameWithType: Attachable.Release
    fullName: DYL.Tasha.Attachable.Release
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DYL.Tasha.Attachable.Release
    name: Release
    nameWithType: Attachable.Release
    fullName: DYL.Tasha.Attachable.Release
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Tasha.Common
  commentId: N:Tasha.Common
  isExternal: false
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DYL.Tasha.Person.#ctor*
  commentId: Overload:DYL.Tasha.Person.#ctor
  isExternal: false
  name: Person
  nameWithType: Person.Person
  fullName: DYL.Tasha.Person.Person
- uid: Tasha.Common.ITashaHousehold
  commentId: T:Tasha.Common.ITashaHousehold
  parent: Tasha.Common
  isExternal: false
  name: ITashaHousehold
  nameWithType: ITashaHousehold
  fullName: Tasha.Common.ITashaHousehold
- uid: Tasha.Common.Occupation
  commentId: T:Tasha.Common.Occupation
  parent: Tasha.Common
  isExternal: false
  name: Occupation
  nameWithType: Occupation
  fullName: Tasha.Common.Occupation
- uid: TMG.TTSEmploymentStatus
  commentId: T:TMG.TTSEmploymentStatus
  parent: TMG
  isExternal: false
  name: TTSEmploymentStatus
  nameWithType: TTSEmploymentStatus
  fullName: TMG.TTSEmploymentStatus
- uid: Tasha.Common.StudentStatus
  commentId: T:Tasha.Common.StudentStatus
  parent: Tasha.Common
  isExternal: false
  name: StudentStatus
  nameWithType: StudentStatus
  fullName: Tasha.Common.StudentStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: DYL.Tasha.Person.Adult*
  commentId: Overload:DYL.Tasha.Person.Adult
  isExternal: false
  name: Adult
  nameWithType: Person.Adult
  fullName: DYL.Tasha.Person.Adult
- uid: Tasha.Common.ITashaPerson.Adult
  commentId: P:Tasha.Common.ITashaPerson.Adult
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Adult
  nameWithType: ITashaPerson.Adult
  fullName: Tasha.Common.ITashaPerson.Adult
- uid: DYL.Tasha.Person.Age*
  commentId: Overload:DYL.Tasha.Person.Age
  isExternal: false
  name: Age
  nameWithType: Person.Age
  fullName: DYL.Tasha.Person.Age
- uid: Tasha.Common.ITashaPerson.Age
  commentId: P:Tasha.Common.ITashaPerson.Age
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Age
  nameWithType: ITashaPerson.Age
  fullName: Tasha.Common.ITashaPerson.Age
- uid: DYL.Tasha.Person.AuxTripChains*
  commentId: Overload:DYL.Tasha.Person.AuxTripChains
  isExternal: false
  name: AuxTripChains
  nameWithType: Person.AuxTripChains
  fullName: DYL.Tasha.Person.AuxTripChains
- uid: Tasha.Common.ITashaPerson.AuxTripChains
  commentId: P:Tasha.Common.ITashaPerson.AuxTripChains
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: AuxTripChains
  nameWithType: ITashaPerson.AuxTripChains
  fullName: Tasha.Common.ITashaPerson.AuxTripChains
- uid: System.Collections.Generic.List{Tasha.Common.ITripChain}
  commentId: T:System.Collections.Generic.List{Tasha.Common.ITripChain}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ITripChain>
  nameWithType: List<ITripChain>
  fullName: System.Collections.Generic.List<Tasha.Common.ITripChain>
  nameWithType.vb: List(Of ITripChain)
  fullName.vb: System.Collections.Generic.List(Of Tasha.Common.ITripChain)
  name.vb: List(Of ITripChain)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tasha.Common.ITripChain
    name: ITripChain
    nameWithType: ITripChain
    fullName: Tasha.Common.ITripChain
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tasha.Common.ITripChain
    name: ITripChain
    nameWithType: ITripChain
    fullName: Tasha.Common.ITripChain
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DYL.Tasha.Person.Child*
  commentId: Overload:DYL.Tasha.Person.Child
  isExternal: false
  name: Child
  nameWithType: Person.Child
  fullName: DYL.Tasha.Person.Child
- uid: Tasha.Common.ITashaPerson.Child
  commentId: P:Tasha.Common.ITashaPerson.Child
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Child
  nameWithType: ITashaPerson.Child
  fullName: Tasha.Common.ITashaPerson.Child
- uid: DYL.Tasha.Person.EmploymentStatus*
  commentId: Overload:DYL.Tasha.Person.EmploymentStatus
  isExternal: false
  name: EmploymentStatus
  nameWithType: Person.EmploymentStatus
  fullName: DYL.Tasha.Person.EmploymentStatus
- uid: Tasha.Common.ITashaPerson.EmploymentStatus
  commentId: P:Tasha.Common.ITashaPerson.EmploymentStatus
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: EmploymentStatus
  nameWithType: ITashaPerson.EmploymentStatus
  fullName: Tasha.Common.ITashaPerson.EmploymentStatus
- uid: DYL.Tasha.Person.EmploymentZone*
  commentId: Overload:DYL.Tasha.Person.EmploymentZone
  isExternal: false
  name: EmploymentZone
  nameWithType: Person.EmploymentZone
  fullName: DYL.Tasha.Person.EmploymentZone
- uid: Tasha.Common.ITashaPerson.EmploymentZone
  commentId: P:Tasha.Common.ITashaPerson.EmploymentZone
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: EmploymentZone
  nameWithType: ITashaPerson.EmploymentZone
  fullName: Tasha.Common.ITashaPerson.EmploymentZone
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: DYL.Tasha.Person.ExpansionFactor*
  commentId: Overload:DYL.Tasha.Person.ExpansionFactor
  isExternal: false
  name: ExpansionFactor
  nameWithType: Person.ExpansionFactor
  fullName: DYL.Tasha.Person.ExpansionFactor
- uid: Tasha.Common.ITashaPerson.ExpansionFactor
  commentId: P:Tasha.Common.ITashaPerson.ExpansionFactor
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: ExpansionFactor
  nameWithType: ITashaPerson.ExpansionFactor
  fullName: Tasha.Common.ITashaPerson.ExpansionFactor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DYL.Tasha.Person.Female*
  commentId: Overload:DYL.Tasha.Person.Female
  isExternal: false
  name: Female
  nameWithType: Person.Female
  fullName: DYL.Tasha.Person.Female
- uid: Tasha.Common.ITashaPerson.Female
  commentId: P:Tasha.Common.ITashaPerson.Female
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Female
  nameWithType: ITashaPerson.Female
  fullName: Tasha.Common.ITashaPerson.Female
- uid: DYL.Tasha.Person.FreeParking*
  commentId: Overload:DYL.Tasha.Person.FreeParking
  isExternal: false
  name: FreeParking
  nameWithType: Person.FreeParking
  fullName: DYL.Tasha.Person.FreeParking
- uid: Tasha.Common.ITashaPerson.FreeParking
  commentId: P:Tasha.Common.ITashaPerson.FreeParking
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: FreeParking
  nameWithType: ITashaPerson.FreeParking
  fullName: Tasha.Common.ITashaPerson.FreeParking
- uid: DYL.Tasha.Person.Household*
  commentId: Overload:DYL.Tasha.Person.Household
  isExternal: false
  name: Household
  nameWithType: Person.Household
  fullName: DYL.Tasha.Person.Household
- uid: Tasha.Common.ITashaPerson.Household
  commentId: P:Tasha.Common.ITashaPerson.Household
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Household
  nameWithType: ITashaPerson.Household
  fullName: Tasha.Common.ITashaPerson.Household
- uid: DYL.Tasha.Person.Id*
  commentId: Overload:DYL.Tasha.Person.Id
  isExternal: false
  name: Id
  nameWithType: Person.Id
  fullName: DYL.Tasha.Person.Id
- uid: Tasha.Common.ITashaPerson.Id
  commentId: P:Tasha.Common.ITashaPerson.Id
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Id
  nameWithType: ITashaPerson.Id
  fullName: Tasha.Common.ITashaPerson.Id
- uid: DYL.Tasha.Person.iterationData*
  commentId: Overload:DYL.Tasha.Person.iterationData
  isExternal: false
  name: iterationData
  nameWithType: Person.iterationData
  fullName: DYL.Tasha.Person.iterationData
- uid: Tasha.Common.IPersonIterationData[]
  name: IPersonIterationData[]
  nameWithType: IPersonIterationData[]
  fullName: Tasha.Common.IPersonIterationData[]
  nameWithType.vb: IPersonIterationData()
  fullName.vb: Tasha.Common.IPersonIterationData()
  name.vb: IPersonIterationData()
  spec.csharp:
  - uid: Tasha.Common.IPersonIterationData
    name: IPersonIterationData
    nameWithType: IPersonIterationData
    fullName: Tasha.Common.IPersonIterationData
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Tasha.Common.IPersonIterationData
    name: IPersonIterationData
    nameWithType: IPersonIterationData
    fullName: Tasha.Common.IPersonIterationData
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DYL.Tasha.Person.Licence*
  commentId: Overload:DYL.Tasha.Person.Licence
  isExternal: false
  name: Licence
  nameWithType: Person.Licence
  fullName: DYL.Tasha.Person.Licence
- uid: Tasha.Common.ITashaPerson.Licence
  commentId: P:Tasha.Common.ITashaPerson.Licence
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Licence
  nameWithType: ITashaPerson.Licence
  fullName: Tasha.Common.ITashaPerson.Licence
- uid: DYL.Tasha.Person.Male*
  commentId: Overload:DYL.Tasha.Person.Male
  isExternal: false
  name: Male
  nameWithType: Person.Male
  fullName: DYL.Tasha.Person.Male
- uid: Tasha.Common.ITashaPerson.Male
  commentId: P:Tasha.Common.ITashaPerson.Male
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Male
  nameWithType: ITashaPerson.Male
  fullName: Tasha.Common.ITashaPerson.Male
- uid: DYL.Tasha.Person.Occupation*
  commentId: Overload:DYL.Tasha.Person.Occupation
  isExternal: false
  name: Occupation
  nameWithType: Person.Occupation
  fullName: DYL.Tasha.Person.Occupation
- uid: Tasha.Common.ITashaPerson.Occupation
  commentId: P:Tasha.Common.ITashaPerson.Occupation
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Occupation
  nameWithType: ITashaPerson.Occupation
  fullName: Tasha.Common.ITashaPerson.Occupation
- uid: DYL.Tasha.Person.PersonIterationData*
  commentId: Overload:DYL.Tasha.Person.PersonIterationData
  isExternal: false
  name: PersonIterationData
  nameWithType: Person.PersonIterationData
  fullName: DYL.Tasha.Person.PersonIterationData
- uid: System.Collections.Generic.IList{Tasha.Common.IPersonIterationData}
  commentId: T:System.Collections.Generic.IList{Tasha.Common.IPersonIterationData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPersonIterationData>
  nameWithType: IList<IPersonIterationData>
  fullName: System.Collections.Generic.IList<Tasha.Common.IPersonIterationData>
  nameWithType.vb: IList(Of IPersonIterationData)
  fullName.vb: System.Collections.Generic.IList(Of Tasha.Common.IPersonIterationData)
  name.vb: IList(Of IPersonIterationData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tasha.Common.IPersonIterationData
    name: IPersonIterationData
    nameWithType: IPersonIterationData
    fullName: Tasha.Common.IPersonIterationData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tasha.Common.IPersonIterationData
    name: IPersonIterationData
    nameWithType: IPersonIterationData
    fullName: Tasha.Common.IPersonIterationData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.Person.SchoolZone*
  commentId: Overload:DYL.Tasha.Person.SchoolZone
  isExternal: false
  name: SchoolZone
  nameWithType: Person.SchoolZone
  fullName: DYL.Tasha.Person.SchoolZone
- uid: Tasha.Common.ITashaPerson.SchoolZone
  commentId: P:Tasha.Common.ITashaPerson.SchoolZone
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: SchoolZone
  nameWithType: ITashaPerson.SchoolZone
  fullName: Tasha.Common.ITashaPerson.SchoolZone
- uid: DYL.Tasha.Person.StudentStatus*
  commentId: Overload:DYL.Tasha.Person.StudentStatus
  isExternal: false
  name: StudentStatus
  nameWithType: Person.StudentStatus
  fullName: DYL.Tasha.Person.StudentStatus
- uid: Tasha.Common.ITashaPerson.StudentStatus
  commentId: P:Tasha.Common.ITashaPerson.StudentStatus
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: StudentStatus
  nameWithType: ITashaPerson.StudentStatus
  fullName: Tasha.Common.ITashaPerson.StudentStatus
- uid: DYL.Tasha.Person.TransitPass*
  commentId: Overload:DYL.Tasha.Person.TransitPass
  isExternal: false
  name: TransitPass
  nameWithType: Person.TransitPass
  fullName: DYL.Tasha.Person.TransitPass
- uid: Tasha.Common.ITashaPerson.TransitPass
  commentId: P:Tasha.Common.ITashaPerson.TransitPass
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: TransitPass
  nameWithType: ITashaPerson.TransitPass
  fullName: Tasha.Common.ITashaPerson.TransitPass
- uid: Tasha.Common.TransitPass
  commentId: T:Tasha.Common.TransitPass
  parent: Tasha.Common
  isExternal: false
  name: TransitPass
  nameWithType: TransitPass
  fullName: Tasha.Common.TransitPass
- uid: DYL.Tasha.Person.TripChains*
  commentId: Overload:DYL.Tasha.Person.TripChains
  isExternal: false
  name: TripChains
  nameWithType: Person.TripChains
  fullName: DYL.Tasha.Person.TripChains
- uid: Tasha.Common.ITashaPerson.TripChains
  commentId: P:Tasha.Common.ITashaPerson.TripChains
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: TripChains
  nameWithType: ITashaPerson.TripChains
  fullName: Tasha.Common.ITashaPerson.TripChains
- uid: DYL.Tasha.Person.YoungAdult*
  commentId: Overload:DYL.Tasha.Person.YoungAdult
  isExternal: false
  name: YoungAdult
  nameWithType: Person.YoungAdult
  fullName: DYL.Tasha.Person.YoungAdult
- uid: Tasha.Common.ITashaPerson.YoungAdult
  commentId: P:Tasha.Common.ITashaPerson.YoungAdult
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: YoungAdult
  nameWithType: ITashaPerson.YoungAdult
  fullName: Tasha.Common.ITashaPerson.YoungAdult
- uid: DYL.Tasha.Person.Youth*
  commentId: Overload:DYL.Tasha.Person.Youth
  isExternal: false
  name: Youth
  nameWithType: Person.Youth
  fullName: DYL.Tasha.Person.Youth
- uid: Tasha.Common.ITashaPerson.Youth
  commentId: P:Tasha.Common.ITashaPerson.Youth
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Youth
  nameWithType: ITashaPerson.Youth
  fullName: Tasha.Common.ITashaPerson.Youth
- uid: DYL.Tasha.Person.Clone*
  commentId: Overload:DYL.Tasha.Person.Clone
  isExternal: false
  name: Clone
  nameWithType: Person.Clone
  fullName: DYL.Tasha.Person.Clone
- uid: Tasha.Common.ITashaPerson.Clone
  commentId: M:Tasha.Common.ITashaPerson.Clone
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Clone()
  nameWithType: ITashaPerson.Clone()
  fullName: Tasha.Common.ITashaPerson.Clone()
  spec.csharp:
  - uid: Tasha.Common.ITashaPerson.Clone
    name: Clone
    nameWithType: ITashaPerson.Clone
    fullName: Tasha.Common.ITashaPerson.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.ITashaPerson.Clone
    name: Clone
    nameWithType: ITashaPerson.Clone
    fullName: Tasha.Common.ITashaPerson.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DYL.Tasha.Person.Recycle*
  commentId: Overload:DYL.Tasha.Person.Recycle
  isExternal: false
  name: Recycle
  nameWithType: Person.Recycle
  fullName: DYL.Tasha.Person.Recycle
- uid: Tasha.Common.ITashaPerson.Recycle
  commentId: M:Tasha.Common.ITashaPerson.Recycle
  parent: Tasha.Common.ITashaPerson
  isExternal: false
  name: Recycle()
  nameWithType: ITashaPerson.Recycle()
  fullName: Tasha.Common.ITashaPerson.Recycle()
  spec.csharp:
  - uid: Tasha.Common.ITashaPerson.Recycle
    name: Recycle
    nameWithType: ITashaPerson.Recycle
    fullName: Tasha.Common.ITashaPerson.Recycle
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.ITashaPerson.Recycle
    name: Recycle
    nameWithType: ITashaPerson.Recycle
    fullName: Tasha.Common.ITashaPerson.Recycle
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
