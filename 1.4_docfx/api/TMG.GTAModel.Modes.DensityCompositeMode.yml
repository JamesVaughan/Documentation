### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Modes.DensityCompositeMode
  commentId: T:TMG.GTAModel.Modes.DensityCompositeMode
  id: DensityCompositeMode
  parent: TMG.GTAModel.Modes
  children:
  - TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.DensityCompositeMode.DestinationEmploymentDensity
  - TMG.GTAModel.Modes.DensityCompositeMode.DestinationPopulationDensity
  - TMG.GTAModel.Modes.DensityCompositeMode.OriginEmploymentDensity
  - TMG.GTAModel.Modes.DensityCompositeMode.OriginPopulationDensity
  langs:
  - csharp
  - vb
  name: DensityCompositeMode
  nameWithType: DensityCompositeMode
  fullName: TMG.GTAModel.Modes.DensityCompositeMode
  type: Class
  source:
    remote:
      path: Code/GTAModel/Modes/DensityCompositeMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DensityCompositeMode
    path: ../../XTMF/Code/GTAModel/Modes/DensityCompositeMode.cs
    startLine: 25
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: 'public class DensityCompositeMode : NestedChoice, IModeCategory, IModeChoiceNode, IModule'
    content.vb: >-
      Public Class DensityCompositeMode
          Inherits NestedChoice
          Implements IModeCategory, IModeChoiceNode, IModule
  inheritance:
  - System.Object
  - TMG.GTAModel.Modes.NestedChoice
  implements:
  - TMG.IModeCategory
  - TMG.IModeChoiceNode
  - XTMF.IModule
  inheritedMembers:
  - TMG.GTAModel.Modes.NestedChoice.Children
  - TMG.GTAModel.Modes.NestedChoice.Correlation
  - TMG.GTAModel.Modes.NestedChoice.CurrentlyFeasible
  - TMG.GTAModel.Modes.NestedChoice.ModeName
  - TMG.GTAModel.Modes.NestedChoice.Name
  - TMG.GTAModel.Modes.NestedChoice.Progress
  - TMG.GTAModel.Modes.NestedChoice.ProgressColour
  - TMG.GTAModel.Modes.NestedChoice.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.NestedChoice.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.NestedChoice.RuntimeValidation(System.String@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Modes.DensityCompositeMode.DestinationEmploymentDensity
  commentId: F:TMG.GTAModel.Modes.DensityCompositeMode.DestinationEmploymentDensity
  id: DestinationEmploymentDensity
  parent: TMG.GTAModel.Modes.DensityCompositeMode
  langs:
  - csharp
  - vb
  name: DestinationEmploymentDensity
  nameWithType: DensityCompositeMode.DestinationEmploymentDensity
  fullName: TMG.GTAModel.Modes.DensityCompositeMode.DestinationEmploymentDensity
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/DensityCompositeMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DestinationEmploymentDensity
    path: ../../XTMF/Code/GTAModel/Modes/DensityCompositeMode.cs
    startLine: 31
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Destination Employment Density", 0F, "The weight to use for the employment density of the destination zone.")]

      public float DestinationEmploymentDensity
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Destination Employment Density", 0F, "The weight to use for the employment density of the destination zone.")>

      Public DestinationEmploymentDensity As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Destination Employment Density
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to use for the employment density of the destination zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.DensityCompositeMode.DestinationPopulationDensity
  commentId: F:TMG.GTAModel.Modes.DensityCompositeMode.DestinationPopulationDensity
  id: DestinationPopulationDensity
  parent: TMG.GTAModel.Modes.DensityCompositeMode
  langs:
  - csharp
  - vb
  name: DestinationPopulationDensity
  nameWithType: DensityCompositeMode.DestinationPopulationDensity
  fullName: TMG.GTAModel.Modes.DensityCompositeMode.DestinationPopulationDensity
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/DensityCompositeMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DestinationPopulationDensity
    path: ../../XTMF/Code/GTAModel/Modes/DensityCompositeMode.cs
    startLine: 34
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Destination Population Density", 0F, "The weight to use for the population density of the destination zone.")]

      public float DestinationPopulationDensity
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Destination Population Density", 0F, "The weight to use for the population density of the destination zone.")>

      Public DestinationPopulationDensity As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Destination Population Density
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to use for the population density of the destination zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.DensityCompositeMode.OriginEmploymentDensity
  commentId: F:TMG.GTAModel.Modes.DensityCompositeMode.OriginEmploymentDensity
  id: OriginEmploymentDensity
  parent: TMG.GTAModel.Modes.DensityCompositeMode
  langs:
  - csharp
  - vb
  name: OriginEmploymentDensity
  nameWithType: DensityCompositeMode.OriginEmploymentDensity
  fullName: TMG.GTAModel.Modes.DensityCompositeMode.OriginEmploymentDensity
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/DensityCompositeMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OriginEmploymentDensity
    path: ../../XTMF/Code/GTAModel/Modes/DensityCompositeMode.cs
    startLine: 37
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Origin Employment Density", 0F, "The weight to use for the employment density of the origin zone.")]

      public float OriginEmploymentDensity
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Origin Employment Density", 0F, "The weight to use for the employment density of the origin zone.")>

      Public OriginEmploymentDensity As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Origin Employment Density
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to use for the employment density of the origin zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.DensityCompositeMode.OriginPopulationDensity
  commentId: F:TMG.GTAModel.Modes.DensityCompositeMode.OriginPopulationDensity
  id: OriginPopulationDensity
  parent: TMG.GTAModel.Modes.DensityCompositeMode
  langs:
  - csharp
  - vb
  name: OriginPopulationDensity
  nameWithType: DensityCompositeMode.OriginPopulationDensity
  fullName: TMG.GTAModel.Modes.DensityCompositeMode.OriginPopulationDensity
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/DensityCompositeMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OriginPopulationDensity
    path: ../../XTMF/Code/GTAModel/Modes/DensityCompositeMode.cs
    startLine: 40
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: >-
      [RunParameter("Origin Population Density", 0F, "The weight to use for the population density of the origin zone.")]

      public float OriginPopulationDensity
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Origin Population Density", 0F, "The weight to use for the population density of the origin zone.")>

      Public OriginPopulationDensity As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Origin Population Density
    - type: System.Single
      value: 0
    - type: System.String
      value: The weight to use for the population density of the origin zone.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  id: CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.DensityCompositeMode
  langs:
  - csharp
  - vb
  name: CalculateCombinedV(IZone, IZone, Time)
  nameWithType: DensityCompositeMode.CalculateCombinedV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/DensityCompositeMode.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CalculateCombinedV
    path: ../../XTMF/Code/GTAModel/Modes/DensityCompositeMode.cs
    startLine: 42
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes
  syntax:
    content: public override float CalculateCombinedV(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Overrides Function CalculateCombinedV(origin As IZone, destination As IZone, time As Time) As Single
  overridden: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  overload: TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TMG.GTAModel.Modes
  commentId: N:TMG.GTAModel.Modes
  isExternal: false
  name: TMG.GTAModel.Modes
  nameWithType: TMG.GTAModel.Modes
  fullName: TMG.GTAModel.Modes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.GTAModel.Modes.NestedChoice
  commentId: T:TMG.GTAModel.Modes.NestedChoice
  parent: TMG.GTAModel.Modes
  isExternal: false
  name: NestedChoice
  nameWithType: NestedChoice
  fullName: TMG.GTAModel.Modes.NestedChoice
- uid: TMG.IModeCategory
  commentId: T:TMG.IModeCategory
  parent: TMG
  isExternal: false
  name: IModeCategory
  nameWithType: IModeCategory
  fullName: TMG.IModeCategory
- uid: TMG.IModeChoiceNode
  commentId: T:TMG.IModeChoiceNode
  parent: TMG
  isExternal: false
  name: IModeChoiceNode
  nameWithType: IModeChoiceNode
  fullName: TMG.IModeChoiceNode
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.GTAModel.Modes.NestedChoice.Children
  commentId: P:TMG.GTAModel.Modes.NestedChoice.Children
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: Children
  nameWithType: NestedChoice.Children
  fullName: TMG.GTAModel.Modes.NestedChoice.Children
- uid: TMG.GTAModel.Modes.NestedChoice.Correlation
  commentId: P:TMG.GTAModel.Modes.NestedChoice.Correlation
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: Correlation
  nameWithType: NestedChoice.Correlation
  fullName: TMG.GTAModel.Modes.NestedChoice.Correlation
- uid: TMG.GTAModel.Modes.NestedChoice.CurrentlyFeasible
  commentId: P:TMG.GTAModel.Modes.NestedChoice.CurrentlyFeasible
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: CurrentlyFeasible
  nameWithType: NestedChoice.CurrentlyFeasible
  fullName: TMG.GTAModel.Modes.NestedChoice.CurrentlyFeasible
- uid: TMG.GTAModel.Modes.NestedChoice.ModeName
  commentId: P:TMG.GTAModel.Modes.NestedChoice.ModeName
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: ModeName
  nameWithType: NestedChoice.ModeName
  fullName: TMG.GTAModel.Modes.NestedChoice.ModeName
- uid: TMG.GTAModel.Modes.NestedChoice.Name
  commentId: P:TMG.GTAModel.Modes.NestedChoice.Name
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: Name
  nameWithType: NestedChoice.Name
  fullName: TMG.GTAModel.Modes.NestedChoice.Name
- uid: TMG.GTAModel.Modes.NestedChoice.Progress
  commentId: P:TMG.GTAModel.Modes.NestedChoice.Progress
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: Progress
  nameWithType: NestedChoice.Progress
  fullName: TMG.GTAModel.Modes.NestedChoice.Progress
- uid: TMG.GTAModel.Modes.NestedChoice.ProgressColour
  commentId: P:TMG.GTAModel.Modes.NestedChoice.ProgressColour
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: ProgressColour
  nameWithType: NestedChoice.ProgressColour
  fullName: TMG.GTAModel.Modes.NestedChoice.ProgressColour
- uid: TMG.GTAModel.Modes.NestedChoice.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.NestedChoice.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: CalculateV(IZone, IZone, Time)
  nameWithType: NestedChoice.CalculateV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.NestedChoice.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.GTAModel.Modes.NestedChoice.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: NestedChoice.CalculateV
    fullName: TMG.GTAModel.Modes.NestedChoice.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.Modes.NestedChoice.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: NestedChoice.CalculateV
    fullName: TMG.GTAModel.Modes.NestedChoice.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.NestedChoice.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.NestedChoice.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: Feasible(IZone, IZone, Time)
  nameWithType: NestedChoice.Feasible(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.NestedChoice.Feasible(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.GTAModel.Modes.NestedChoice.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: NestedChoice.Feasible
    fullName: TMG.GTAModel.Modes.NestedChoice.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.Modes.NestedChoice.Feasible(TMG.IZone,TMG.IZone,XTMF.Time)
    name: Feasible
    nameWithType: NestedChoice.Feasible
    fullName: TMG.GTAModel.Modes.NestedChoice.Feasible
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.NestedChoice.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Modes.NestedChoice.RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: NestedChoice.RuntimeValidation(String)
  fullName: TMG.GTAModel.Modes.NestedChoice.RuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.GTAModel.Modes.NestedChoice.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: NestedChoice.RuntimeValidation
    fullName: TMG.GTAModel.Modes.NestedChoice.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.Modes.NestedChoice.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: NestedChoice.RuntimeValidation
    fullName: TMG.GTAModel.Modes.NestedChoice.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.NestedChoice
  isExternal: false
  name: CalculateCombinedV(IZone, IZone, Time)
  nameWithType: NestedChoice.CalculateCombinedV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateCombinedV
    nameWithType: NestedChoice.CalculateCombinedV
    fullName: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateCombinedV
    nameWithType: NestedChoice.CalculateCombinedV
    fullName: TMG.GTAModel.Modes.NestedChoice.CalculateCombinedV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV*
  commentId: Overload:TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV
  isExternal: false
  name: CalculateCombinedV
  nameWithType: DensityCompositeMode.CalculateCombinedV
  fullName: TMG.GTAModel.Modes.DensityCompositeMode.CalculateCombinedV
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
