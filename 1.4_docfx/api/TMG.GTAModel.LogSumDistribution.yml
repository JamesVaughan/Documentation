### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.LogSumDistribution
  commentId: T:TMG.GTAModel.LogSumDistribution
  id: LogSumDistribution
  parent: TMG.GTAModel
  children:
  - TMG.GTAModel.LogSumDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  - TMG.GTAModel.LogSumDistribution.DoublyConstrained
  - TMG.GTAModel.LogSumDistribution.Epsilon
  - TMG.GTAModel.LogSumDistribution.ImpedianceParameter
  - TMG.GTAModel.LogSumDistribution.KFactorDataReader
  - TMG.GTAModel.LogSumDistribution.MaxIterations
  - TMG.GTAModel.LogSumDistribution.Name
  - TMG.GTAModel.LogSumDistribution.Progress
  - TMG.GTAModel.LogSumDistribution.ProgressColour
  - TMG.GTAModel.LogSumDistribution.Root
  - TMG.GTAModel.LogSumDistribution.RuntimeValidation(System.String@)
  - TMG.GTAModel.LogSumDistribution.SimulationTime
  - TMG.GTAModel.LogSumDistribution.SwapAttraction
  - TMG.GTAModel.LogSumDistribution.Transpose
  langs:
  - csharp
  - vb
  name: LogSumDistribution
  nameWithType: LogSumDistribution
  fullName: TMG.GTAModel.LogSumDistribution
  type: Class
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LogSumDistribution
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 31
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: 'public class LogSumDistribution : IDemographicDistribution, IModule'
    content.vb: >-
      Public Class LogSumDistribution
          Implements IDemographicDistribution, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.IDemographicDistribution
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.LogSumDistribution.DoublyConstrained
  commentId: F:TMG.GTAModel.LogSumDistribution.DoublyConstrained
  id: DoublyConstrained
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: DoublyConstrained
  nameWithType: LogSumDistribution.DoublyConstrained
  fullName: TMG.GTAModel.LogSumDistribution.DoublyConstrained
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DoublyConstrained
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Doubly Constrained", true, "Should we use a doubly constrained gravity model?")]

      public bool DoublyConstrained
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Doubly Constrained", True, "Should we use a doubly constrained gravity model?")>

      Public DoublyConstrained As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Doubly Constrained
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should we use a doubly constrained gravity model?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.Epsilon
  commentId: F:TMG.GTAModel.LogSumDistribution.Epsilon
  id: Epsilon
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: Epsilon
  nameWithType: LogSumDistribution.Epsilon
  fullName: TMG.GTAModel.LogSumDistribution.Epsilon
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Epsilon
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Max Error", 0.01F, "What should the maximum error be? (Between 0 and 1)")]

      public float Epsilon
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Max Error", 0.01F, "What should the maximum error be? (Between 0 and 1)")>

      Public Epsilon As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Error
    - type: System.Single
      value: 0.00999999978
    - type: System.String
      value: What should the maximum error be? (Between 0 and 1)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.ImpedianceParameter
  commentId: F:TMG.GTAModel.LogSumDistribution.ImpedianceParameter
  id: ImpedianceParameter
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: ImpedianceParameter
  nameWithType: LogSumDistribution.ImpedianceParameter
  fullName: TMG.GTAModel.LogSumDistribution.ImpedianceParameter
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ImpedianceParameter
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Correlation of Modes", 1F, "The correlation between the different modes. 1 means no correlation to 0 meaning perfect.")]

      public float ImpedianceParameter
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Correlation of Modes", 1F, "The correlation between the different modes. 1 means no correlation to 0 meaning perfect.")>

      Public ImpedianceParameter As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Correlation of Modes
    - type: System.Single
      value: 1
    - type: System.String
      value: The correlation between the different modes. 1 means no correlation to 0 meaning perfect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.KFactorDataReader
  commentId: F:TMG.GTAModel.LogSumDistribution.KFactorDataReader
  id: KFactorDataReader
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: KFactorDataReader
  nameWithType: LogSumDistribution.KFactorDataReader
  fullName: TMG.GTAModel.LogSumDistribution.KFactorDataReader
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: KFactorDataReader
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "K-Factor Data Read, Optional", Required = false)]

      public IReadODData<float> KFactorDataReader
    return:
      type: TMG.Input.IReadODData{System.Single}
    content.vb: >-
      <SubModelInformation(Description:="K-Factor Data Read, Optional", Required:=False)>

      Public KFactorDataReader As IReadODData(Of Single)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: K-Factor Data Read, Optional
    - name: Required
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.MaxIterations
  commentId: F:TMG.GTAModel.LogSumDistribution.MaxIterations
  id: MaxIterations
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: MaxIterations
  nameWithType: LogSumDistribution.MaxIterations
  fullName: TMG.GTAModel.LogSumDistribution.MaxIterations
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaxIterations
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Max Iterations", 300, "How many iterations should we cut of the distribution at?")]

      public int MaxIterations
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Max Iterations", 300, "How many iterations should we cut of the distribution at?")>

      Public MaxIterations As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Iterations
    - type: System.Int32
      value: 300
    - type: System.String
      value: How many iterations should we cut of the distribution at?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.Root
  commentId: F:TMG.GTAModel.LogSumDistribution.Root
  id: Root
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: LogSumDistribution.Root
  fullName: TMG.GTAModel.LogSumDistribution.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public IDemographic4StepModelSystemTemplate Root
    return:
      type: TMG.IDemographic4StepModelSystemTemplate
    content.vb: Public Root As IDemographic4StepModelSystemTemplate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.SimulationTime
  commentId: F:TMG.GTAModel.LogSumDistribution.SimulationTime
  id: SimulationTime
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: SimulationTime
  nameWithType: LogSumDistribution.SimulationTime
  fullName: TMG.GTAModel.LogSumDistribution.SimulationTime
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SimulationTime
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 59
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Simulation Time", "7:00AM", typeof (Time), "The time of day this will be simulating.")]

      public Time SimulationTime
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("Simulation Time", "7:00AM", GetType(Time), "The time of day this will be simulating.")>

      Public SimulationTime As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Simulation Time
    - type: System.String
      value: 7:00AM
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: The time of day this will be simulating.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.SwapAttraction
  commentId: F:TMG.GTAModel.LogSumDistribution.SwapAttraction
  id: SwapAttraction
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: SwapAttraction
  nameWithType: LogSumDistribution.SwapAttraction
  fullName: TMG.GTAModel.LogSumDistribution.SwapAttraction
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SwapAttraction
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 62
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Swap Attraction", false, "Switch attraction with production from generation.")]

      public bool SwapAttraction
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Swap Attraction", False, "Switch attraction with production from generation.")>

      Public SwapAttraction As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Swap Attraction
    - type: System.Boolean
      value: false
    - type: System.String
      value: Switch attraction with production from generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.Transpose
  commentId: F:TMG.GTAModel.LogSumDistribution.Transpose
  id: Transpose
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: Transpose
  nameWithType: LogSumDistribution.Transpose
  fullName: TMG.GTAModel.LogSumDistribution.Transpose
  type: Field
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Transpose
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 65
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Transpose Distribution", false, "Transpose the final result of the model.")]

      public bool Transpose
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Transpose Distribution", False, "Transpose the final result of the model.")>

      Public Transpose As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transpose Distribution
    - type: System.Boolean
      value: false
    - type: System.String
      value: Transpose the final result of the model.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.Name
  commentId: P:TMG.GTAModel.LogSumDistribution.Name
  id: Name
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LogSumDistribution.Name
  fullName: TMG.GTAModel.LogSumDistribution.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 74
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.LogSumDistribution.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.Progress
  commentId: P:TMG.GTAModel.LogSumDistribution.Progress
  id: Progress
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: LogSumDistribution.Progress
  fullName: TMG.GTAModel.LogSumDistribution.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 80
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.GTAModel.LogSumDistribution.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.ProgressColour
  commentId: P:TMG.GTAModel.LogSumDistribution.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: LogSumDistribution.ProgressColour
  fullName: TMG.GTAModel.LogSumDistribution.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 86
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; set; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.LogSumDistribution.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.LogSumDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  commentId: M:TMG.GTAModel.LogSumDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  id: Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  nameWithType: LogSumDistribution.Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  fullName: TMG.GTAModel.LogSumDistribution.Distribute(System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Distribute
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 92
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public IEnumerable<SparseTwinIndex<float>> Distribute(IEnumerable<SparseArray<float>> productions, IEnumerable<SparseArray<float>> attractions, IEnumerable<IDemographicCategory> category)
    parameters:
    - id: productions
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
    - id: attractions
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
    - id: category
      type: System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
    return:
      type: System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
    content.vb: Public Function Distribute(productions As IEnumerable(Of SparseArray(Of Single)), attractions As IEnumerable(Of SparseArray(Of Single)), category As IEnumerable(Of IDemographicCategory)) As IEnumerable(Of SparseTwinIndex(Of Single))
  overload: TMG.GTAModel.LogSumDistribution.Distribute*
  implements:
  - TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  nameWithType.vb: LogSumDistribution.Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.LogSumDistribution.Distribute(System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory))
  name.vb: Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
- uid: TMG.GTAModel.LogSumDistribution.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.LogSumDistribution.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.LogSumDistribution
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: LogSumDistribution.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.LogSumDistribution.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Distribution/LogSumDistribution.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/GTAModel/Distribution/LogSumDistribution.cs
    startLine: 119
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.LogSumDistribution.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: LogSumDistribution.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.LogSumDistribution.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  isExternal: false
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.IDemographicDistribution
  commentId: T:TMG.IDemographicDistribution
  parent: TMG
  isExternal: false
  name: IDemographicDistribution
  nameWithType: IDemographicDistribution
  fullName: TMG.IDemographicDistribution
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Input.IReadODData{System.Single}
  commentId: T:TMG.Input.IReadODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.IReadODData`1
  name: IReadODData<Single>
  nameWithType: IReadODData<Single>
  fullName: TMG.Input.IReadODData<System.Single>
  nameWithType.vb: IReadODData(Of Single)
  fullName.vb: TMG.Input.IReadODData(Of System.Single)
  name.vb: IReadODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IReadODData`1
  commentId: T:TMG.Input.IReadODData`1
  isExternal: false
  name: IReadODData<T>
  nameWithType: IReadODData<T>
  fullName: TMG.Input.IReadODData<T>
  nameWithType.vb: IReadODData(Of T)
  fullName.vb: TMG.Input.IReadODData(Of T)
  name.vb: IReadODData(Of T)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.IDemographic4StepModelSystemTemplate
  commentId: T:TMG.IDemographic4StepModelSystemTemplate
  parent: TMG
  isExternal: false
  name: IDemographic4StepModelSystemTemplate
  nameWithType: IDemographic4StepModelSystemTemplate
  fullName: TMG.IDemographic4StepModelSystemTemplate
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.GTAModel.LogSumDistribution.Name*
  commentId: Overload:TMG.GTAModel.LogSumDistribution.Name
  isExternal: false
  name: Name
  nameWithType: LogSumDistribution.Name
  fullName: TMG.GTAModel.LogSumDistribution.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.LogSumDistribution.Progress*
  commentId: Overload:TMG.GTAModel.LogSumDistribution.Progress
  isExternal: false
  name: Progress
  nameWithType: LogSumDistribution.Progress
  fullName: TMG.GTAModel.LogSumDistribution.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.LogSumDistribution.ProgressColour*
  commentId: Overload:TMG.GTAModel.LogSumDistribution.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: LogSumDistribution.ProgressColour
  fullName: TMG.GTAModel.LogSumDistribution.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.LogSumDistribution.Distribute*
  commentId: Overload:TMG.GTAModel.LogSumDistribution.Distribute
  isExternal: false
  name: Distribute
  nameWithType: LogSumDistribution.Distribute
  fullName: TMG.GTAModel.LogSumDistribution.Distribute
- uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  commentId: M:TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
  parent: TMG.IDemographicDistribution
  isExternal: true
  name: Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  nameWithType: IDemographicDistribution.Distribute(IEnumerable<SparseArray<Single>>, IEnumerable<SparseArray<Single>>, IEnumerable<IDemographicCategory>)
  fullName: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>, System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>)
  nameWithType.vb: IDemographicDistribution.Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  fullName.vb: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single)), System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory))
  name.vb: Distribute(IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of SparseArray(Of Single)), IEnumerable(Of IDemographicCategory))
  spec.csharp:
  - uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
    name: Distribute
    nameWithType: IDemographicDistribution.Distribute
    fullName: TMG.IDemographicDistribution.Distribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.IDemographicDistribution.Distribute(System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}},System.Collections.Generic.IEnumerable{TMG.IDemographicCategory})
    name: Distribute
    nameWithType: IDemographicDistribution.Distribute
    fullName: TMG.IDemographicDistribution.Distribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Datastructure.SparseArray{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparseArray<Single>>
  nameWithType: IEnumerable<SparseArray<Single>>
  fullName: System.Collections.Generic.IEnumerable<Datastructure.SparseArray<System.Single>>
  nameWithType.vb: IEnumerable(Of SparseArray(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Datastructure.SparseArray(Of System.Single))
  name.vb: IEnumerable(Of SparseArray(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
  commentId: T:System.Collections.Generic.IEnumerable{TMG.IDemographicCategory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDemographicCategory>
  nameWithType: IEnumerable<IDemographicCategory>
  fullName: System.Collections.Generic.IEnumerable<TMG.IDemographicCategory>
  nameWithType.vb: IEnumerable(Of IDemographicCategory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMG.IDemographicCategory)
  name.vb: IEnumerable(Of IDemographicCategory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IDemographicCategory
    name: IDemographicCategory
    nameWithType: IDemographicCategory
    fullName: TMG.IDemographicCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{Datastructure.SparseTwinIndex{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparseTwinIndex<Single>>
  nameWithType: IEnumerable<SparseTwinIndex<Single>>
  fullName: System.Collections.Generic.IEnumerable<Datastructure.SparseTwinIndex<System.Single>>
  nameWithType.vb: IEnumerable(Of SparseTwinIndex(Of Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Datastructure.SparseTwinIndex(Of System.Single))
  name.vb: IEnumerable(Of SparseTwinIndex(Of Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.LogSumDistribution.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.LogSumDistribution.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: LogSumDistribution.RuntimeValidation
  fullName: TMG.GTAModel.LogSumDistribution.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
