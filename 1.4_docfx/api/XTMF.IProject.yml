### YamlMime:ManagedReference
items:
- uid: XTMF.IProject
  commentId: T:XTMF.IProject
  id: IProject
  parent: XTMF
  children:
  - XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
  - XTMF.IProject.Description
  - XTMF.IProject.HasChanged
  - XTMF.IProject.LinkedParameters
  - XTMF.IProject.ModelSystemStructure
  - XTMF.IProject.Name
  - XTMF.IProject.Reload
  - XTMF.IProject.Save(System.String,System.String@)
  - XTMF.IProject.Save(System.String@)
  - XTMF.IProject.ValidateModelName(System.String)
  langs:
  - csharp
  - vb
  name: IProject
  nameWithType: IProject
  fullName: XTMF.IProject
  type: Interface
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IProject
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 22
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  syntax:
    content: public interface IProject
    content.vb: Public Interface IProject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: XTMF.IProject.Description
  commentId: P:XTMF.IProject.Description
  id: Description
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IProject.Description
  fullName: XTMF.IProject.Description
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Description
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 27
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nA description of what the project is for\n"
  example: []
  syntax:
    content: string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: XTMF.IProject.Description*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.IProject.HasChanged
  commentId: P:XTMF.IProject.HasChanged
  id: HasChanged
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: HasChanged
  nameWithType: IProject.HasChanged
  fullName: XTMF.IProject.HasChanged
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HasChanged
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 32
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nLets the project know if any of its setting shave changed\n"
  example: []
  syntax:
    content: bool HasChanged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property HasChanged As Boolean
  overload: XTMF.IProject.HasChanged*
  modifiers.csharp:
  - get
  - set
- uid: XTMF.IProject.LinkedParameters
  commentId: P:XTMF.IProject.LinkedParameters
  id: LinkedParameters
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: LinkedParameters
  nameWithType: IProject.LinkedParameters
  fullName: XTMF.IProject.LinkedParameters
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkedParameters
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 37
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nA List for each model of linked parameters\n"
  example: []
  syntax:
    content: List<List<ILinkedParameter>> LinkedParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{XTMF.ILinkedParameter}}
    content.vb: ReadOnly Property LinkedParameters As List(Of List(Of ILinkedParameter))
  overload: XTMF.IProject.LinkedParameters*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.IProject.ModelSystemStructure
  commentId: P:XTMF.IProject.ModelSystemStructure
  id: ModelSystemStructure
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: ModelSystemStructure
  nameWithType: IProject.ModelSystemStructure
  fullName: XTMF.IProject.ModelSystemStructure
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemStructure
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 42
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe models that this project contains\n"
  example: []
  syntax:
    content: List<IModelSystemStructure> ModelSystemStructure { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.IModelSystemStructure}
    content.vb: ReadOnly Property ModelSystemStructure As List(Of IModelSystemStructure)
  overload: XTMF.IProject.ModelSystemStructure*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: XTMF.IProject.Name
  commentId: P:XTMF.IProject.Name
  id: Name
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IProject.Name
  fullName: XTMF.IProject.Name
  type: Property
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 47
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nThe name of the project\n"
  example: []
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: XTMF.IProject.Name*
  modifiers.csharp:
  - get
  - set
- uid: XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
  commentId: M:XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
  id: CreateModelSystem(System.String@,System.Int32)
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref String, Int32)
  nameWithType: IProject.CreateModelSystem(ref String, Int32)
  fullName: XTMF.IProject.CreateModelSystem(ref System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 55
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nCreates the model system from the project structure.\n"
  example: []
  syntax:
    content: IModelSystemTemplate CreateModelSystem(ref string error, int modelSystem)
    parameters:
    - id: error
      type: System.String
      description: Additional information in case of an error
    - id: modelSystem
      type: System.Int32
      description: The model system index to create
    return:
      type: XTMF.IModelSystemTemplate
      description: The root of the model system, null if the Project Structure is invalid
    content.vb: Function CreateModelSystem(ByRef error As String, modelSystem As Integer) As IModelSystemTemplate
  overload: XTMF.IProject.CreateModelSystem*
  nameWithType.vb: IProject.CreateModelSystem(ByRef String, Int32)
  fullName.vb: XTMF.IProject.CreateModelSystem(ByRef System.String, System.Int32)
  name.vb: CreateModelSystem(ByRef String, Int32)
- uid: XTMF.IProject.Reload
  commentId: M:XTMF.IProject.Reload
  id: Reload
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: IProject.Reload()
  fullName: XTMF.IProject.Reload()
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Reload
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 60
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nReload the project to its saved state\n"
  example: []
  syntax:
    content: void Reload()
    content.vb: Sub Reload
  overload: XTMF.IProject.Reload*
- uid: XTMF.IProject.Save(System.String@)
  commentId: M:XTMF.IProject.Save(System.String@)
  id: Save(System.String@)
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: Save(ref String)
  nameWithType: IProject.Save(ref String)
  fullName: XTMF.IProject.Save(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 65
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nSave the project\n"
  example: []
  syntax:
    content: bool Save(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function Save(ByRef error As String) As Boolean
  overload: XTMF.IProject.Save*
  nameWithType.vb: IProject.Save(ByRef String)
  fullName.vb: XTMF.IProject.Save(ByRef System.String)
  name.vb: Save(ByRef String)
- uid: XTMF.IProject.Save(System.String,System.String@)
  commentId: M:XTMF.IProject.Save(System.String,System.String@)
  id: Save(System.String,System.String@)
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: Save(String, ref String)
  nameWithType: IProject.Save(String, ref String)
  fullName: XTMF.IProject.Save(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 72
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nSave the project to a given path\n"
  example: []
  syntax:
    content: bool Save(string path, ref string error)
    parameters:
    - id: path
      type: System.String
      description: The path to save to
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
    content.vb: Function Save(path As String, ByRef error As String) As Boolean
  overload: XTMF.IProject.Save*
  nameWithType.vb: IProject.Save(String, ByRef String)
  fullName.vb: XTMF.IProject.Save(System.String, ByRef System.String)
  name.vb: Save(String, ByRef String)
- uid: XTMF.IProject.ValidateModelName(System.String)
  commentId: M:XTMF.IProject.ValidateModelName(System.String)
  id: ValidateModelName(System.String)
  parent: XTMF.IProject
  langs:
  - csharp
  - vb
  name: ValidateModelName(String)
  nameWithType: IProject.ValidateModelName(String)
  fullName: XTMF.IProject.ValidateModelName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMFInterfaces/Interfaces/IProject.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateModelName
    path: ../../XTMF/Code/XTMFInterfaces/Interfaces/IProject.cs
    startLine: 82
  assemblies:
  - XTMFInterfaces
  namespace: XTMF
  summary: "\nChecks to make sure that this model name is acceptable for this\nproject.\n"
  remarks: >-
    Names are invalid if the name is a duplicate of another one already in the project,

    or if it contains characters now allowed in a file name.
  example: []
  syntax:
    content: bool ValidateModelName(string possibleNewModelName)
    parameters:
    - id: possibleNewModelName
      type: System.String
      description: The name that you want to validate
    return:
      type: System.Boolean
      description: If that name is valid for this project
    content.vb: Function ValidateModelName(possibleNewModelName As String) As Boolean
  overload: XTMF.IProject.ValidateModelName*
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: XTMF.IProject.Description*
  commentId: Overload:XTMF.IProject.Description
  isExternal: false
  name: Description
  nameWithType: IProject.Description
  fullName: XTMF.IProject.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.IProject.HasChanged*
  commentId: Overload:XTMF.IProject.HasChanged
  isExternal: false
  name: HasChanged
  nameWithType: IProject.HasChanged
  fullName: XTMF.IProject.HasChanged
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.IProject.LinkedParameters*
  commentId: Overload:XTMF.IProject.LinkedParameters
  isExternal: false
  name: LinkedParameters
  nameWithType: IProject.LinkedParameters
  fullName: XTMF.IProject.LinkedParameters
- uid: System.Collections.Generic.List{System.Collections.Generic.List{XTMF.ILinkedParameter}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{XTMF.ILinkedParameter}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<List<ILinkedParameter>>
  nameWithType: List<List<ILinkedParameter>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<XTMF.ILinkedParameter>>
  nameWithType.vb: List(Of List(Of ILinkedParameter))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of XTMF.ILinkedParameter))
  name.vb: List(Of List(Of ILinkedParameter))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.IProject.ModelSystemStructure*
  commentId: Overload:XTMF.IProject.ModelSystemStructure
  isExternal: false
  name: ModelSystemStructure
  nameWithType: IProject.ModelSystemStructure
  fullName: XTMF.IProject.ModelSystemStructure
- uid: System.Collections.Generic.List{XTMF.IModelSystemStructure}
  commentId: T:System.Collections.Generic.List{XTMF.IModelSystemStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModelSystemStructure>
  nameWithType: List<IModelSystemStructure>
  fullName: System.Collections.Generic.List<XTMF.IModelSystemStructure>
  nameWithType.vb: List(Of IModelSystemStructure)
  fullName.vb: System.Collections.Generic.List(Of XTMF.IModelSystemStructure)
  name.vb: List(Of IModelSystemStructure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IProject.Name*
  commentId: Overload:XTMF.IProject.Name
  isExternal: false
  name: Name
  nameWithType: IProject.Name
  fullName: XTMF.IProject.Name
- uid: XTMF.IProject.CreateModelSystem*
  commentId: Overload:XTMF.IProject.CreateModelSystem
  isExternal: false
  name: CreateModelSystem
  nameWithType: IProject.CreateModelSystem
  fullName: XTMF.IProject.CreateModelSystem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  isExternal: false
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.IProject.Reload*
  commentId: Overload:XTMF.IProject.Reload
  isExternal: false
  name: Reload
  nameWithType: IProject.Reload
  fullName: XTMF.IProject.Reload
- uid: XTMF.IProject.Save*
  commentId: Overload:XTMF.IProject.Save
  isExternal: false
  name: Save
  nameWithType: IProject.Save
  fullName: XTMF.IProject.Save
- uid: XTMF.IProject.ValidateModelName*
  commentId: Overload:XTMF.IProject.ValidateModelName
  isExternal: false
  name: ValidateModelName
  nameWithType: IProject.ValidateModelName
  fullName: XTMF.IProject.ValidateModelName
