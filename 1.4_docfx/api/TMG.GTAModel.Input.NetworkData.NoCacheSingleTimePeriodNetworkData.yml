### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  commentId: T:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  id: NoCacheSingleTimePeriodNetworkData
  parent: TMG.GTAModel.Input.NetworkData
  children:
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ApplyTimeBlending
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.CostReader
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NoUnload
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Regenerate
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Root
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation(System.String@)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTimeReader
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  - TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  langs:
  - csharp
  - vb
  name: NoCacheSingleTimePeriodNetworkData
  nameWithType: NoCacheSingleTimePeriodNetworkData
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  type: Class
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NoCacheSingleTimePeriodNetworkData
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 26
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: 'public class NoCacheSingleTimePeriodNetworkData : INetworkData, IDataSource<INetworkData>, IDataSource, IModule'
    content.vb: >-
      Public Class NoCacheSingleTimePeriodNetworkData
          Implements INetworkData, IDataSource(Of INetworkData), IDataSource, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.INetworkData
  - XTMF.IDataSource{TMG.INetworkData}
  - XTMF.IDataSource
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.CostReader
  commentId: F:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.CostReader
  id: CostReader
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: CostReader
  nameWithType: NoCacheSingleTimePeriodNetworkData.CostReader
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.CostReader
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CostReader
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "Provides cost data.")]

      public IReadODData<float> CostReader
    return:
      type: TMG.Input.IReadODData{System.Single}
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="Provides cost data.")>

      Public CostReader As IReadODData(Of Single)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: Provides cost data.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Regenerate
  commentId: F:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Regenerate
  id: Regenerate
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Regenerate
  nameWithType: NoCacheSingleTimePeriodNetworkData.Regenerate
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Regenerate
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Regenerate
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: >-
      [RunParameter("Regenerate", true, "Regenerate the data after the first iteration.")]

      public bool Regenerate
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Regenerate", True, "Regenerate the data after the first iteration.")>

      Public Regenerate As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Regenerate
    - type: System.Boolean
      value: true
    - type: System.String
      value: Regenerate the data after the first iteration.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NoUnload
  commentId: F:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NoUnload
  id: NoUnload
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: NoUnload
  nameWithType: NoCacheSingleTimePeriodNetworkData.NoUnload
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NoUnload
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NoUnload
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: >-
      [RunParameter("No Unload", false, "Don't unload the data between iterations.")]

      public bool NoUnload
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("No Unload", False, "Don't unload the data between iterations.")>

      Public NoUnload As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: No Unload
    - type: System.Boolean
      value: false
    - type: System.String
      value: Don't unload the data between iterations.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Root
  commentId: F:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Root
  id: Root
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: NoCacheSingleTimePeriodNetworkData.Root
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTimeReader
  commentId: F:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTimeReader
  id: TravelTimeReader
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelTimeReader
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelTimeReader
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTimeReader
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTimeReader
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "Provides Travel Time data.")]

      public IReadODData<float> TravelTimeReader
    return:
      type: TMG.Input.IReadODData{System.Single}
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="Provides Travel Time data.")>

      Public TravelTimeReader As IReadODData(Of Single)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: Provides Travel Time data.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ApplyTimeBlending
  commentId: F:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ApplyTimeBlending
  id: ApplyTimeBlending
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ApplyTimeBlending
  nameWithType: NoCacheSingleTimePeriodNetworkData.ApplyTimeBlending
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ApplyTimeBlending
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ApplyTimeBlending
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: >-
      [RunParameter("Apply Time Blending", false, "Apply a blending function to the travel times in ")]

      public bool ApplyTimeBlending
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Apply Time Blending", False, "Apply a blending function to the travel times in ")>

      Public ApplyTimeBlending As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Apply Time Blending
    - type: System.Boolean
      value: false
    - type: System.String
      value: 'Apply a blending function to the travel times in '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name
  commentId: P:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name
  id: Name
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NoCacheSingleTimePeriodNetworkData.Name
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 62
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType
  commentId: P:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType
  id: NetworkType
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: NoCacheSingleTimePeriodNetworkData.NetworkType
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkType
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 68
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: >-
      [RunParameter("Network Name", "Auto", "The name of this network data.")]

      public string NetworkType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Network Name", "Auto", "The name of this network data.")>

      Public Property NetworkType As String
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType*
  implements:
  - TMG.INetworkData.NetworkType
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of this network data.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress
  commentId: P:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress
  id: Progress
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: NoCacheSingleTimePeriodNetworkData.Progress
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 75
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour
  commentId: P:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: NoCacheSingleTimePeriodNetworkData.ProgressColour
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 80
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData
  id: GiveData
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: GiveData()
  nameWithType: NoCacheSingleTimePeriodNetworkData.GiveData()
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GiveData
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 85
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public INetworkData GiveData()
    return:
      type: TMG.INetworkData
    content.vb: Public Function GiveData As INetworkData
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData*
  implements:
  - XTMF.IDataSource{TMG.INetworkData}.GiveData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded
  commentId: P:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded
  id: Loaded
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: NoCacheSingleTimePeriodNetworkData.Loaded
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Loaded
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 90
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public bool Loaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Loaded As Boolean
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded*
  implements:
  - XTMF.IDataSource.Loaded
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData
  id: LoadData
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: LoadData()
  nameWithType: NoCacheSingleTimePeriodNetworkData.LoadData()
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadData
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 95
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public void LoadData()
    content.vb: Public Sub LoadData
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData*
  implements:
  - XTMF.IDataSource.LoadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: NoCacheSingleTimePeriodNetworkData.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 122
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  summary: "\nThis is called before the start method as a way to pre-check that all of the parameters that are selected\nare in fact valid for this module.\n"
  example: []
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
      description: A string that should be assigned a detailed error
    return:
      type: System.Boolean
      description: If the validation was successful or if there was a problem
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: NoCacheSingleTimePeriodNetworkData.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelCost(IZone, IZone, Time)
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelCost(IZone, IZone, Time)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelCost
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 133
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public float TravelCost(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function TravelCost(start As IZone, end As IZone, time As Time) As Single
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost*
  implements:
  - TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  id: TravelCost(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelCost(Int32, Int32, Time)
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelCost(Int32, Int32, Time)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelCost
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 138
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public float TravelCost(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function TravelCost(flatOrigin As Integer, flatDestination As Integer, time As Time) As Single
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost*
  implements:
  - TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelTime(IZone, IZone, Time)
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelTime(IZone, IZone, Time)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 144
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public Time TravelTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Function TravelTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime*
  implements:
  - TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  id: TravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: TravelTime(Int32, Int32, Time)
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelTime(Int32, Int32, Time)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 149
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public Time TravelTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Public Function TravelTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime*
  implements:
  - TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData
  id: UnloadData
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: UnloadData()
  nameWithType: NoCacheSingleTimePeriodNetworkData.UnloadData()
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnloadData
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 155
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public void UnloadData()
    content.vb: Public Sub UnloadData
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData*
  implements:
  - XTMF.IDataSource.UnloadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  id: ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ValidOd(IZone, IZone, Time)
  nameWithType: NoCacheSingleTimePeriodNetworkData.ValidOd(IZone, IZone, Time)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidOd
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 160
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public bool ValidOd(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Function ValidOd(start As IZone, end As IZone, time As Time) As Boolean
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd*
  implements:
  - TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  id: ValidOd(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: ValidOd(Int32, Int32, Time)
  nameWithType: NoCacheSingleTimePeriodNetworkData.ValidOd(Int32, Int32, Time)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidOd
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 165
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public bool ValidOd(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Public Function ValidOd(flatOrigin As Integer, flatDestination As Integer, time As Time) As Boolean
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd*
  implements:
  - TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  id: GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: GetAllData(IZone, IZone, Time, out Time, out Single)
  nameWithType: NoCacheSingleTimePeriodNetworkData.GetAllData(IZone, IZone, Time, out Time, out Single)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, out XTMF.Time, out System.Single)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 208
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public bool GetAllData(IZone start, IZone end, Time time, out Time ivtt, out float cost)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: XTMF.Time
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function GetAllData(start As IZone, end As IZone, time As Time, ByRef ivtt As Time, ByRef cost As Single) As Boolean
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData*
  implements:
  - TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  nameWithType.vb: NoCacheSingleTimePeriodNetworkData.GetAllData(IZone, IZone, Time, ByRef Time, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, ByRef XTMF.Time, ByRef System.Single)
  name.vb: GetAllData(IZone, IZone, Time, ByRef Time, ByRef Single)
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  commentId: M:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  id: GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  parent: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData
  langs:
  - csharp
  - vb
  name: GetAllData(Int32, Int32, Time, out Single, out Single)
  nameWithType: NoCacheSingleTimePeriodNetworkData.GetAllData(Int32, Int32, Time, out Single, out Single)
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/Code/GTAModel/Input/NetworkData/NoCacheSingleTimePeriodNetworkData.cs
    startLine: 217
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input.NetworkData
  syntax:
    content: public bool GetAllData(int start, int end, Time time, out float ivtt, out float cost)
    parameters:
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: System.Single
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function GetAllData(start As Integer, end As Integer, time As Time, ByRef ivtt As Single, ByRef cost As Single) As Boolean
  overload: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData*
  implements:
  - TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  nameWithType.vb: NoCacheSingleTimePeriodNetworkData.GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, ByRef System.Single, ByRef System.Single)
  name.vb: GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single)
references:
- uid: TMG.GTAModel.Input.NetworkData
  commentId: N:TMG.GTAModel.Input.NetworkData
  isExternal: false
  name: TMG.GTAModel.Input.NetworkData
  nameWithType: TMG.GTAModel.Input.NetworkData
  fullName: TMG.GTAModel.Input.NetworkData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  parent: TMG
  isExternal: false
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
- uid: XTMF.IDataSource{TMG.INetworkData}
  commentId: T:XTMF.IDataSource{TMG.INetworkData}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<INetworkData>
  nameWithType: IDataSource<INetworkData>
  fullName: XTMF.IDataSource<TMG.INetworkData>
  nameWithType.vb: IDataSource(Of INetworkData)
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData)
  name.vb: IDataSource(Of INetworkData)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  isExternal: false
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Input.IReadODData{System.Single}
  commentId: T:TMG.Input.IReadODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.IReadODData`1
  name: IReadODData<Single>
  nameWithType: IReadODData<Single>
  fullName: TMG.Input.IReadODData<System.Single>
  nameWithType.vb: IReadODData(Of Single)
  fullName.vb: TMG.Input.IReadODData(Of System.Single)
  name.vb: IReadODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IReadODData`1
  commentId: T:TMG.Input.IReadODData`1
  isExternal: false
  name: IReadODData<T>
  nameWithType: IReadODData<T>
  fullName: TMG.Input.IReadODData<T>
  nameWithType.vb: IReadODData(Of T)
  fullName.vb: TMG.Input.IReadODData(Of T)
  name.vb: IReadODData(Of T)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name
  isExternal: false
  name: Name
  nameWithType: NoCacheSingleTimePeriodNetworkData.Name
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType
  isExternal: false
  name: NetworkType
  nameWithType: NoCacheSingleTimePeriodNetworkData.NetworkType
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.NetworkType
- uid: TMG.INetworkData.NetworkType
  commentId: P:TMG.INetworkData.NetworkType
  parent: TMG.INetworkData
  isExternal: false
  name: NetworkType
  nameWithType: INetworkData.NetworkType
  fullName: TMG.INetworkData.NetworkType
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress
  isExternal: false
  name: Progress
  nameWithType: NoCacheSingleTimePeriodNetworkData.Progress
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: NoCacheSingleTimePeriodNetworkData.ProgressColour
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData
  isExternal: false
  name: GiveData
  nameWithType: NoCacheSingleTimePeriodNetworkData.GiveData
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GiveData
- uid: XTMF.IDataSource{TMG.INetworkData}.GiveData
  commentId: M:XTMF.IDataSource{TMG.INetworkData}.GiveData
  parent: XTMF.IDataSource{TMG.INetworkData}
  definition: XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<INetworkData>.GiveData()
  fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData()
  nameWithType.vb: IDataSource(Of INetworkData).GiveData()
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<INetworkData>.GiveData
    fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of INetworkData).GiveData
    fullName: XTMF.IDataSource(Of TMG.INetworkData).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1.GiveData
  commentId: M:XTMF.IDataSource`1.GiveData
  isExternal: false
  name: GiveData()
  nameWithType: IDataSource<T>.GiveData()
  fullName: XTMF.IDataSource<T>.GiveData()
  nameWithType.vb: IDataSource(Of T).GiveData()
  fullName.vb: XTMF.IDataSource(Of T).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<T>.GiveData
    fullName: XTMF.IDataSource<T>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of T).GiveData
    fullName: XTMF.IDataSource(Of T).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded
  isExternal: false
  name: Loaded
  nameWithType: NoCacheSingleTimePeriodNetworkData.Loaded
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.Loaded
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  isExternal: false
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData
  isExternal: false
  name: LoadData
  nameWithType: NoCacheSingleTimePeriodNetworkData.LoadData
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.LoadData
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  isExternal: false
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: NoCacheSingleTimePeriodNetworkData.RuntimeValidation
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost
  isExternal: false
  name: TravelCost
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelCost
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelCost
- uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: false
  name: TravelCost(IZone, IZone, Time)
  nameWithType: INetworkData.TravelCost(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelCost(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: TravelCost(Int32, Int32, Time)
  nameWithType: INetworkData.TravelCost(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelCost(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime
  isExternal: false
  name: TravelTime
  nameWithType: NoCacheSingleTimePeriodNetworkData.TravelTime
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.TravelTime
- uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: false
  name: TravelTime(IZone, IZone, Time)
  nameWithType: INetworkData.TravelTime(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: TravelTime(Int32, Int32, Time)
  nameWithType: INetworkData.TravelTime(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelTime(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData
  isExternal: false
  name: UnloadData
  nameWithType: NoCacheSingleTimePeriodNetworkData.UnloadData
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.UnloadData
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  isExternal: false
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd
  isExternal: false
  name: ValidOd
  nameWithType: NoCacheSingleTimePeriodNetworkData.ValidOd
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.ValidOd
- uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: false
  name: ValidOd(IZone, IZone, Time)
  nameWithType: INetworkData.ValidOd(IZone, IZone, Time)
  fullName: TMG.INetworkData.ValidOd(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: ValidOd(Int32, Int32, Time)
  nameWithType: INetworkData.ValidOd(Int32, Int32, Time)
  fullName: TMG.INetworkData.ValidOd(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData*
  commentId: Overload:TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData
  isExternal: false
  name: GetAllData
  nameWithType: NoCacheSingleTimePeriodNetworkData.GetAllData
  fullName: TMG.GTAModel.Input.NetworkData.NoCacheSingleTimePeriodNetworkData.GetAllData
- uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  parent: TMG.INetworkData
  isExternal: true
  name: GetAllData(IZone, IZone, Time, Time, Single)
  nameWithType: INetworkData.GetAllData(IZone, IZone, Time, Time, Single)
  fullName: TMG.INetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, XTMF.Time, System.Single)
  spec.csharp:
  - uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  parent: TMG.INetworkData
  isExternal: true
  name: GetAllData(Int32, Int32, Time, Single, Single)
  nameWithType: INetworkData.GetAllData(Int32, Int32, Time, Single, Single)
  fullName: TMG.INetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, System.Single, System.Single)
  spec.csharp:
  - uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
