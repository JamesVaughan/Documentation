### YamlMime:ManagedReference
items:
- uid: TMG.Emme.Tools.PDFExportType
  commentId: T:TMG.Emme.Tools.PDFExportType
  id: PDFExportType
  parent: TMG.Emme.Tools
  children:
  - TMG.Emme.Tools.PDFExportType.CustomHeight
  - TMG.Emme.Tools.PDFExportType.CustomUnit
  - TMG.Emme.Tools.PDFExportType.CustomWidth
  - TMG.Emme.Tools.PDFExportType.ExtendToMargins
  - TMG.Emme.Tools.PDFExportType.MarginBottom
  - TMG.Emme.Tools.PDFExportType.MarginLeft
  - TMG.Emme.Tools.PDFExportType.MarginRight
  - TMG.Emme.Tools.PDFExportType.MarginTop
  - TMG.Emme.Tools.PDFExportType.Orientation
  - TMG.Emme.Tools.PDFExportType.PaperSize
  langs:
  - csharp
  - vb
  name: PDFExportType
  nameWithType: PDFExportType
  fullName: TMG.Emme.Tools.PDFExportType
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PDFExportType
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 571
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: 'public class PDFExportType : EmmeWorksheetExportType, IModule'
    content.vb: >-
      Public Class PDFExportType
          Inherits EmmeWorksheetExportType
          Implements IModule
  inheritance:
  - System.Object
  - TMG.Emme.Tools.EmmeWorksheetExportType
  implements:
  - XTMF.IModule
  inheritedMembers:
  - TMG.Emme.Tools.EmmeWorksheetExportType.Detail
  - TMG.Emme.Tools.EmmeWorksheetExportType.Name
  - TMG.Emme.Tools.EmmeWorksheetExportType.Progress
  - TMG.Emme.Tools.EmmeWorksheetExportType.ProgressColour
  - TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation(System.String@)
  - TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation(System.String@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Emme.Tools.PDFExportType.MarginTop
  commentId: F:TMG.Emme.Tools.PDFExportType.MarginTop
  id: MarginTop
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: MarginTop
  nameWithType: PDFExportType.MarginTop
  fullName: TMG.Emme.Tools.PDFExportType.MarginTop
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MarginTop
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 575
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Margin Top", 0, "The top margin, in millimeters.")]

      public int MarginTop
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Margin Top", 0, "The top margin, in millimeters.")>

      Public MarginTop As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Margin Top
    - type: System.Int32
      value: 0
    - type: System.String
      value: The top margin, in millimeters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.MarginLeft
  commentId: F:TMG.Emme.Tools.PDFExportType.MarginLeft
  id: MarginLeft
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: MarginLeft
  nameWithType: PDFExportType.MarginLeft
  fullName: TMG.Emme.Tools.PDFExportType.MarginLeft
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MarginLeft
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 578
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Margin Left", 0, "The left margin, in millimeters.")]

      public int MarginLeft
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Margin Left", 0, "The left margin, in millimeters.")>

      Public MarginLeft As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Margin Left
    - type: System.Int32
      value: 0
    - type: System.String
      value: The left margin, in millimeters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.MarginRight
  commentId: F:TMG.Emme.Tools.PDFExportType.MarginRight
  id: MarginRight
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: MarginRight
  nameWithType: PDFExportType.MarginRight
  fullName: TMG.Emme.Tools.PDFExportType.MarginRight
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MarginRight
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 581
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Margin Right", 0, "The right margin, in millimeters.")]

      public int MarginRight
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Margin Right", 0, "The right margin, in millimeters.")>

      Public MarginRight As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Margin Right
    - type: System.Int32
      value: 0
    - type: System.String
      value: The right margin, in millimeters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.MarginBottom
  commentId: F:TMG.Emme.Tools.PDFExportType.MarginBottom
  id: MarginBottom
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: MarginBottom
  nameWithType: PDFExportType.MarginBottom
  fullName: TMG.Emme.Tools.PDFExportType.MarginBottom
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MarginBottom
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 584
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Margin Bottom", 0, "The bottom margin, in millimeters.")]

      public int MarginBottom
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Margin Bottom", 0, "The bottom margin, in millimeters.")>

      Public MarginBottom As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Margin Bottom
    - type: System.Int32
      value: 0
    - type: System.String
      value: The bottom margin, in millimeters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.ExtendToMargins
  commentId: F:TMG.Emme.Tools.PDFExportType.ExtendToMargins
  id: ExtendToMargins
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: ExtendToMargins
  nameWithType: PDFExportType.ExtendToMargins
  fullName: TMG.Emme.Tools.PDFExportType.ExtendToMargins
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExtendToMargins
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 588
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Extend to Margins", true, "If true, the view is extended to the edge of the margins. If false, the current worksheet view aspect ratio is maintained.")]

      public bool ExtendToMargins
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Extend to Margins", True, "If true, the view is extended to the edge of the margins. If false, the current worksheet view aspect ratio is maintained.")>

      Public ExtendToMargins As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Extend to Margins
    - type: System.Boolean
      value: true
    - type: System.String
      value: If true, the view is extended to the edge of the margins. If false, the current worksheet view aspect ratio is maintained.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.PaperSize
  commentId: F:TMG.Emme.Tools.PDFExportType.PaperSize
  id: PaperSize
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: PaperSize
  nameWithType: PDFExportType.PaperSize
  fullName: TMG.Emme.Tools.PDFExportType.PaperSize
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PaperSize
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 593
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Paper Size", NamedPaperSizes.LETTER, "Paper size. Can be set to CUSTOM or one of the following: A0, A1, A3, A4, A5, A6, A7, A8, A9, B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, C5E, COMM10E, DLE, EXECUTIVE, FOLIO, LEDGER, LETTER, LEGAL, or TABLOID.")]

      public NamedPaperSizes PaperSize
    return:
      type: TMG.Emme.Tools.NamedPaperSizes
    content.vb: >-
      <RunParameter("Paper Size", NamedPaperSizes.LETTER, "Paper size. Can be set to CUSTOM or one of the following: A0, A1, A3, A4, A5, A6, A7, A8, A9, B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, C5E, COMM10E, DLE, EXECUTIVE, FOLIO, LEDGER, LETTER, LEGAL, or TABLOID.")>

      Public PaperSize As NamedPaperSizes
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Paper Size
    - type: TMG.Emme.Tools.NamedPaperSizes
      value: 26
    - type: System.String
      value: 'Paper size. Can be set to CUSTOM or one of the following: A0, A1, A3, A4, A5, A6, A7, A8, A9, B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, C5E, COMM10E, DLE, EXECUTIVE, FOLIO, LEDGER, LETTER, LEGAL, or TABLOID.'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.Orientation
  commentId: F:TMG.Emme.Tools.PDFExportType.Orientation
  id: Orientation
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: Orientation
  nameWithType: PDFExportType.Orientation
  fullName: TMG.Emme.Tools.PDFExportType.Orientation
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Orientation
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 596
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Orientation", PaperOrientation.LANDSCAPE, "Paper orientation. Can be either PORTRAIT or LANDSCAPE.")]

      public PaperOrientation Orientation
    return:
      type: TMG.Emme.Tools.PaperOrientation
    content.vb: >-
      <RunParameter("Orientation", PaperOrientation.LANDSCAPE, "Paper orientation. Can be either PORTRAIT or LANDSCAPE.")>

      Public Orientation As PaperOrientation
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Orientation
    - type: TMG.Emme.Tools.PaperOrientation
      value: 1
    - type: System.String
      value: Paper orientation. Can be either PORTRAIT or LANDSCAPE.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.CustomWidth
  commentId: F:TMG.Emme.Tools.PDFExportType.CustomWidth
  id: CustomWidth
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: CustomWidth
  nameWithType: PDFExportType.CustomWidth
  fullName: TMG.Emme.Tools.PDFExportType.CustomWidth
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CustomWidth
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 600
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Custom Width", 11F, "If the Paper Size is set to CUSTOM, this will specify the paper width (in Custom Units")]

      public float CustomWidth
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Custom Width", 11F, "If the Paper Size is set to CUSTOM, this will specify the paper width (in Custom Units")>

      Public CustomWidth As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Custom Width
    - type: System.Single
      value: 11
    - type: System.String
      value: If the Paper Size is set to CUSTOM, this will specify the paper width (in Custom Units
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.CustomHeight
  commentId: F:TMG.Emme.Tools.PDFExportType.CustomHeight
  id: CustomHeight
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: CustomHeight
  nameWithType: PDFExportType.CustomHeight
  fullName: TMG.Emme.Tools.PDFExportType.CustomHeight
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CustomHeight
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 604
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Custom Height", 8.5F, "If the Paper Size is set to CUSTOM, this will specify the paper height (in Custom Units")]

      public float CustomHeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Custom Height", 8.5F, "If the Paper Size is set to CUSTOM, this will specify the paper height (in Custom Units")>

      Public CustomHeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Custom Height
    - type: System.Single
      value: 8.5
    - type: System.String
      value: If the Paper Size is set to CUSTOM, this will specify the paper height (in Custom Units
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.PDFExportType.CustomUnit
  commentId: F:TMG.Emme.Tools.PDFExportType.CustomUnit
  id: CustomUnit
  parent: TMG.Emme.Tools.PDFExportType
  langs:
  - csharp
  - vb
  name: CustomUnit
  nameWithType: PDFExportType.CustomUnit
  fullName: TMG.Emme.Tools.PDFExportType.CustomUnit
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CustomUnit
    path: ../../../XTMF/Code/TMG.Emme/Tools/ExportEmmeWorksheet.cs
    startLine: 608
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools
  syntax:
    content: >-
      [RunParameter("Custom Units", SizeUnit.INCHES, "If the paper size is set to CUSTOM, this will specify the units of width and height.")]

      public SizeUnit CustomUnit
    return:
      type: TMG.Emme.Tools.SizeUnit
    content.vb: >-
      <RunParameter("Custom Units", SizeUnit.INCHES, "If the paper size is set to CUSTOM, this will specify the units of width and height.")>

      Public CustomUnit As SizeUnit
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Custom Units
    - type: TMG.Emme.Tools.SizeUnit
      value: 0
    - type: System.String
      value: If the paper size is set to CUSTOM, this will specify the units of width and height.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.Emme.Tools
  commentId: N:TMG.Emme.Tools
  isExternal: false
  name: TMG.Emme.Tools
  nameWithType: TMG.Emme.Tools
  fullName: TMG.Emme.Tools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.Tools.EmmeWorksheetExportType
  commentId: T:TMG.Emme.Tools.EmmeWorksheetExportType
  parent: TMG.Emme.Tools
  isExternal: false
  name: EmmeWorksheetExportType
  nameWithType: EmmeWorksheetExportType
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.Emme.Tools.EmmeWorksheetExportType.Detail
  commentId: F:TMG.Emme.Tools.EmmeWorksheetExportType.Detail
  parent: TMG.Emme.Tools.EmmeWorksheetExportType
  isExternal: false
  name: Detail
  nameWithType: EmmeWorksheetExportType.Detail
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType.Detail
- uid: TMG.Emme.Tools.EmmeWorksheetExportType.Name
  commentId: P:TMG.Emme.Tools.EmmeWorksheetExportType.Name
  parent: TMG.Emme.Tools.EmmeWorksheetExportType
  isExternal: false
  name: Name
  nameWithType: EmmeWorksheetExportType.Name
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType.Name
- uid: TMG.Emme.Tools.EmmeWorksheetExportType.Progress
  commentId: P:TMG.Emme.Tools.EmmeWorksheetExportType.Progress
  parent: TMG.Emme.Tools.EmmeWorksheetExportType
  isExternal: false
  name: Progress
  nameWithType: EmmeWorksheetExportType.Progress
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType.Progress
- uid: TMG.Emme.Tools.EmmeWorksheetExportType.ProgressColour
  commentId: P:TMG.Emme.Tools.EmmeWorksheetExportType.ProgressColour
  parent: TMG.Emme.Tools.EmmeWorksheetExportType
  isExternal: false
  name: ProgressColour
  nameWithType: EmmeWorksheetExportType.ProgressColour
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType.ProgressColour
- uid: TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation(System.String@)
  commentId: M:TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation(System.String@)
  parent: TMG.Emme.Tools.EmmeWorksheetExportType
  isExternal: true
  name: LocalRuntimeValidation(String)
  nameWithType: EmmeWorksheetExportType.LocalRuntimeValidation(String)
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation(System.String@)
    name: LocalRuntimeValidation
    nameWithType: EmmeWorksheetExportType.LocalRuntimeValidation
    fullName: TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation(System.String@)
    name: LocalRuntimeValidation
    nameWithType: EmmeWorksheetExportType.LocalRuntimeValidation
    fullName: TMG.Emme.Tools.EmmeWorksheetExportType.LocalRuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation(System.String@)
  parent: TMG.Emme.Tools.EmmeWorksheetExportType
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: EmmeWorksheetExportType.RuntimeValidation(String)
  fullName: TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: EmmeWorksheetExportType.RuntimeValidation
    fullName: TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: EmmeWorksheetExportType.RuntimeValidation
    fullName: TMG.Emme.Tools.EmmeWorksheetExportType.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Emme.Tools.NamedPaperSizes
  commentId: T:TMG.Emme.Tools.NamedPaperSizes
  parent: TMG.Emme.Tools
  isExternal: false
  name: NamedPaperSizes
  nameWithType: NamedPaperSizes
  fullName: TMG.Emme.Tools.NamedPaperSizes
- uid: TMG.Emme.Tools.PaperOrientation
  commentId: T:TMG.Emme.Tools.PaperOrientation
  parent: TMG.Emme.Tools
  isExternal: false
  name: PaperOrientation
  nameWithType: PaperOrientation
  fullName: TMG.Emme.Tools.PaperOrientation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Emme.Tools.SizeUnit
  commentId: T:TMG.Emme.Tools.SizeUnit
  parent: TMG.Emme.Tools
  isExternal: false
  name: SizeUnit
  nameWithType: SizeUnit
  fullName: TMG.Emme.Tools.SizeUnit
