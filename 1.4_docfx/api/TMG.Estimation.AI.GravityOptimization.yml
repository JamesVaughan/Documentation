### YamlMime:ManagedReference
items:
- uid: TMG.Estimation.AI.GravityOptimization
  commentId: T:TMG.Estimation.AI.GravityOptimization
  id: GravityOptimization
  parent: TMG.Estimation.AI
  children:
  - TMG.Estimation.AI.GravityOptimization.ConfineToBounds
  - TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration
  - TMG.Estimation.AI.GravityOptimization.Degeneration
  - TMG.Estimation.AI.GravityOptimization.DistanceFactor
  - TMG.Estimation.AI.GravityOptimization.IncreaseOfEnergy
  - TMG.Estimation.AI.GravityOptimization.IterationComplete
  - TMG.Estimation.AI.GravityOptimization.MassFactor
  - TMG.Estimation.AI.GravityOptimization.Maximize
  - TMG.Estimation.AI.GravityOptimization.Name
  - TMG.Estimation.AI.GravityOptimization.NicheDistance
  - TMG.Estimation.AI.GravityOptimization.NumberOfParticles
  - TMG.Estimation.AI.GravityOptimization.NumberOfStars
  - TMG.Estimation.AI.GravityOptimization.ParticleMomentum
  - TMG.Estimation.AI.GravityOptimization.PreviousMassAverageWeight
  - TMG.Estimation.AI.GravityOptimization.Progress
  - TMG.Estimation.AI.GravityOptimization.ProgressColour
  - TMG.Estimation.AI.GravityOptimization.RandomSeed
  - TMG.Estimation.AI.GravityOptimization.RandomWeight
  - TMG.Estimation.AI.GravityOptimization.Root
  - TMG.Estimation.AI.GravityOptimization.RuntimeValidation(System.String@)
  - TMG.Estimation.AI.GravityOptimization.StarLog
  - TMG.Estimation.AI.GravityOptimization.StarWeight
  langs:
  - csharp
  - vb
  name: GravityOptimization
  nameWithType: GravityOptimization
  fullName: TMG.Estimation.AI.GravityOptimization
  type: Class
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GravityOptimization
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 28
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: 'public class GravityOptimization : IEstimationAI, IModule'
    content.vb: >-
      Public Class GravityOptimization

          Implements IEstimationAI, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Estimation.IEstimationAI
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Estimation.AI.GravityOptimization.Root
  commentId: F:TMG.Estimation.AI.GravityOptimization.Root
  id: Root
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: GravityOptimization.Root
  fullName: TMG.Estimation.AI.GravityOptimization.Root
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 33
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public IEstimationHost Root
    return:
      type: TMG.Estimation.IEstimationHost
    content.vb: Public Root As IEstimationHost
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.Name
  commentId: P:TMG.Estimation.AI.GravityOptimization.Name
  id: Name
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GravityOptimization.Name
  fullName: TMG.Estimation.AI.GravityOptimization.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 34
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Estimation.AI.GravityOptimization.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.Progress
  commentId: P:TMG.Estimation.AI.GravityOptimization.Progress
  id: Progress
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: GravityOptimization.Progress
  fullName: TMG.Estimation.AI.GravityOptimization.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 36
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.Estimation.AI.GravityOptimization.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.AI.GravityOptimization.ProgressColour
  commentId: P:TMG.Estimation.AI.GravityOptimization.ProgressColour
  id: ProgressColour
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: GravityOptimization.ProgressColour
  fullName: TMG.Estimation.AI.GravityOptimization.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 38
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Estimation.AI.GravityOptimization.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.AI.GravityOptimization.IncreaseOfEnergy
  commentId: F:TMG.Estimation.AI.GravityOptimization.IncreaseOfEnergy
  id: IncreaseOfEnergy
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: IncreaseOfEnergy
  nameWithType: GravityOptimization.IncreaseOfEnergy
  fullName: TMG.Estimation.AI.GravityOptimization.IncreaseOfEnergy
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IncreaseOfEnergy
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 41
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Increase of Energy", 0.001F, "The amount of energy to increase a particle if it doesn't hit its best value")]

      public float IncreaseOfEnergy
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Increase of Energy", 0.001F, "The amount of energy to increase a particle if it doesn't hit its best value")>

      Public IncreaseOfEnergy As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Increase of Energy
    - type: System.Single
      value: 0.00100000005
    - type: System.String
      value: The amount of energy to increase a particle if it doesn't hit its best value
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.StarLog
  commentId: F:TMG.Estimation.AI.GravityOptimization.StarLog
  id: StarLog
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: StarLog
  nameWithType: GravityOptimization.StarLog
  fullName: TMG.Estimation.AI.GravityOptimization.StarLog
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StarLog
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 44
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [SubModelInformation(Required = false, Description = "Save the changes to stars for each generation.")]

      public FileLocation StarLog
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=False, Description:="Save the changes to stars for each generation.")>

      Public StarLog As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Description
      type: System.String
      value: Save the changes to stars for each generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.NumberOfParticles
  commentId: F:TMG.Estimation.AI.GravityOptimization.NumberOfParticles
  id: NumberOfParticles
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: NumberOfParticles
  nameWithType: GravityOptimization.NumberOfParticles
  fullName: TMG.Estimation.AI.GravityOptimization.NumberOfParticles
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NumberOfParticles
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 73
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Particles", 100, "The number of particles for the system.")]

      public int NumberOfParticles
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Particles", 100, "The number of particles for the system.")>

      Public NumberOfParticles As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Particles
    - type: System.Int32
      value: 100
    - type: System.String
      value: The number of particles for the system.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.NumberOfStars
  commentId: F:TMG.Estimation.AI.GravityOptimization.NumberOfStars
  id: NumberOfStars
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: NumberOfStars
  nameWithType: GravityOptimization.NumberOfStars
  fullName: TMG.Estimation.AI.GravityOptimization.NumberOfStars
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NumberOfStars
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 76
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Stars", 5, "The number of stars for the system.")]

      public int NumberOfStars
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Stars", 5, "The number of stars for the system.")>

      Public NumberOfStars As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Stars
    - type: System.Int32
      value: 5
    - type: System.String
      value: The number of stars for the system.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.NicheDistance
  commentId: F:TMG.Estimation.AI.GravityOptimization.NicheDistance
  id: NicheDistance
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: NicheDistance
  nameWithType: GravityOptimization.NicheDistance
  fullName: TMG.Estimation.AI.GravityOptimization.NicheDistance
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NicheDistance
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 79
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("NicheDistance", 0.5F, "The minimum distance between two stars before they destroy each other.")]

      public float NicheDistance
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("NicheDistance", 0.5F, "The minimum distance between two stars before they destroy each other.")>

      Public NicheDistance As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: NicheDistance
    - type: System.Single
      value: 0.5
    - type: System.String
      value: The minimum distance between two stars before they destroy each other.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration
  commentId: M:TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration
  id: CreateJobsForIteration
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: CreateJobsForIteration()
  nameWithType: GravityOptimization.CreateJobsForIteration()
  fullName: TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateJobsForIteration
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 83
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public List<Job> CreateJobsForIteration()
    return:
      type: System.Collections.Generic.List{TMG.Estimation.Job}
    content.vb: Public Function CreateJobsForIteration As List(Of Job)
  overload: TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration*
  implements:
  - TMG.Estimation.IEstimationAI.CreateJobsForIteration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.ConfineToBounds
  commentId: F:TMG.Estimation.AI.GravityOptimization.ConfineToBounds
  id: ConfineToBounds
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: ConfineToBounds
  nameWithType: GravityOptimization.ConfineToBounds
  fullName: TMG.Estimation.AI.GravityOptimization.ConfineToBounds
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ConfineToBounds
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 297
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Confine To Bounds", true, "Limit the search to the given bounds as defined by the parameters.")]

      public bool ConfineToBounds
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Confine To Bounds", True, "Limit the search to the given bounds as defined by the parameters.")>

      Public ConfineToBounds As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Confine To Bounds
    - type: System.Boolean
      value: true
    - type: System.String
      value: Limit the search to the given bounds as defined by the parameters.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.StarWeight
  commentId: F:TMG.Estimation.AI.GravityOptimization.StarWeight
  id: StarWeight
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: StarWeight
  nameWithType: GravityOptimization.StarWeight
  fullName: TMG.Estimation.AI.GravityOptimization.StarWeight
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StarWeight
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 300
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("StarWeight", 2.3F, "The weight applied by a star to the particle's position.")]

      public float StarWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("StarWeight", 2.3F, "The weight applied by a star to the particle's position.")>

      Public StarWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: StarWeight
    - type: System.Single
      value: 2.2999999500000001
    - type: System.String
      value: The weight applied by a star to the particle's position.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.RandomWeight
  commentId: F:TMG.Estimation.AI.GravityOptimization.RandomWeight
  id: RandomWeight
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: RandomWeight
  nameWithType: GravityOptimization.RandomWeight
  fullName: TMG.Estimation.AI.GravityOptimization.RandomWeight
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RandomWeight
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 303
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("RandomWeight", 0.001F, "The weight applied to each parameter in a particle at each iteration.")]

      public float RandomWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("RandomWeight", 0.001F, "The weight applied to each parameter in a particle at each iteration.")>

      Public RandomWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: RandomWeight
    - type: System.Single
      value: 0.00100000005
    - type: System.String
      value: The weight applied to each parameter in a particle at each iteration.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.ParticleMomentum
  commentId: F:TMG.Estimation.AI.GravityOptimization.ParticleMomentum
  id: ParticleMomentum
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: ParticleMomentum
  nameWithType: GravityOptimization.ParticleMomentum
  fullName: TMG.Estimation.AI.GravityOptimization.ParticleMomentum
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParticleMomentum
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 306
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Particle Momentum", 0.3F, "The momentum to carry for the particle between generations.")]

      public float ParticleMomentum
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Particle Momentum", 0.3F, "The momentum to carry for the particle between generations.")>

      Public ParticleMomentum As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Particle Momentum
    - type: System.Single
      value: 0.30000001199999998
    - type: System.String
      value: The momentum to carry for the particle between generations.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.MassFactor
  commentId: F:TMG.Estimation.AI.GravityOptimization.MassFactor
  id: MassFactor
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: MassFactor
  nameWithType: GravityOptimization.MassFactor
  fullName: TMG.Estimation.AI.GravityOptimization.MassFactor
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MassFactor
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 516
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("MassFactor", 0F, "The factor to apply to the mass of a star while computing the particles attraction.")]

      public float MassFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("MassFactor", 0F, "The factor to apply to the mass of a star while computing the particles attraction.")>

      Public MassFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: MassFactor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the mass of a star while computing the particles attraction.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.PreviousMassAverageWeight
  commentId: F:TMG.Estimation.AI.GravityOptimization.PreviousMassAverageWeight
  id: PreviousMassAverageWeight
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: PreviousMassAverageWeight
  nameWithType: GravityOptimization.PreviousMassAverageWeight
  fullName: TMG.Estimation.AI.GravityOptimization.PreviousMassAverageWeight
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PreviousMassAverageWeight
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 519
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Previous Mass Average Weight", 0.5F, "The weight to use for computing the next mass for the stars. This value will be applied to the previous iterations mass and (1-it) will be applied to the current generation")]

      public float PreviousMassAverageWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Previous Mass Average Weight", 0.5F, "The weight to use for computing the next mass for the stars. This value will be applied to the previous iterations mass and (1-it) will be applied to the current generation")>

      Public PreviousMassAverageWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Previous Mass Average Weight
    - type: System.Single
      value: 0.5
    - type: System.String
      value: The weight to use for computing the next mass for the stars. This value will be applied to the previous iterations mass and (1-it) will be applied to the current generation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.Degeneration
  commentId: F:TMG.Estimation.AI.GravityOptimization.Degeneration
  id: Degeneration
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: Degeneration
  nameWithType: GravityOptimization.Degeneration
  fullName: TMG.Estimation.AI.GravityOptimization.Degeneration
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Degeneration
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 522
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Star Degeneration", 0.5F, "The rate at which a star that does not gain mass dies out.")]

      public float Degeneration
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Star Degeneration", 0.5F, "The rate at which a star that does not gain mass dies out.")>

      Public Degeneration As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Star Degeneration
    - type: System.Single
      value: 0.5
    - type: System.String
      value: The rate at which a star that does not gain mass dies out.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.DistanceFactor
  commentId: F:TMG.Estimation.AI.GravityOptimization.DistanceFactor
  id: DistanceFactor
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: DistanceFactor
  nameWithType: GravityOptimization.DistanceFactor
  fullName: TMG.Estimation.AI.GravityOptimization.DistanceFactor
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DistanceFactor
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 525
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("DistanceFactor", -2F, "The exponential factor to apply to the distance to get the 'inverse relationship' between the attractiveness of the star given its distance to the particle.")]

      public float DistanceFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("DistanceFactor", -2F, "The exponential factor to apply to the distance to get the 'inverse relationship' between the attractiveness of the star given its distance to the particle.")>

      Public DistanceFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: DistanceFactor
    - type: System.Single
      value: -2
    - type: System.String
      value: The exponential factor to apply to the distance to get the 'inverse relationship' between the attractiveness of the star given its distance to the particle.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.RandomSeed
  commentId: F:TMG.Estimation.AI.GravityOptimization.RandomSeed
  id: RandomSeed
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: RandomSeed
  nameWithType: GravityOptimization.RandomSeed
  fullName: TMG.Estimation.AI.GravityOptimization.RandomSeed
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RandomSeed
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 530
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Random Seed", 12345, "The random seed for the AI.")]

      public int RandomSeed
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Random Seed", 12345, "The random seed for the AI.")>

      Public RandomSeed As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Random Seed
    - type: System.Int32
      value: 12345
    - type: System.String
      value: The random seed for the AI.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.Maximize
  commentId: F:TMG.Estimation.AI.GravityOptimization.Maximize
  id: Maximize
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: Maximize
  nameWithType: GravityOptimization.Maximize
  fullName: TMG.Estimation.AI.GravityOptimization.Maximize
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Maximize
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 533
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: >-
      [RunParameter("Maximize", true, "Should we be maximizing (true) or minimizing (false) the fitness function?")]

      public bool Maximize
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Maximize", True, "Should we be maximizing (true) or minimizing (false) the fitness function?")>

      Public Maximize As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Maximize
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should we be maximizing (true) or minimizing (false) the fitness function?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.IterationComplete
  commentId: M:TMG.Estimation.AI.GravityOptimization.IterationComplete
  id: IterationComplete
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: IterationComplete()
  nameWithType: GravityOptimization.IterationComplete()
  fullName: TMG.Estimation.AI.GravityOptimization.IterationComplete()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationComplete
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 601
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public void IterationComplete()
    content.vb: Public Sub IterationComplete
  overload: TMG.Estimation.AI.GravityOptimization.IterationComplete*
  implements:
  - TMG.Estimation.IEstimationAI.IterationComplete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.AI.GravityOptimization.RuntimeValidation(System.String@)
  commentId: M:TMG.Estimation.AI.GravityOptimization.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Estimation.AI.GravityOptimization
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: GravityOptimization.RuntimeValidation(ref String)
  fullName: TMG.Estimation.AI.GravityOptimization.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GravityOptimization.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/TMG.Estimation/AI/GravityOptimization.cs
    startLine: 606
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation.AI
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Estimation.AI.GravityOptimization.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: GravityOptimization.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Estimation.AI.GravityOptimization.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Estimation.AI
  commentId: N:TMG.Estimation.AI
  isExternal: false
  name: TMG.Estimation.AI
  nameWithType: TMG.Estimation.AI
  fullName: TMG.Estimation.AI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Estimation.IEstimationAI
  commentId: T:TMG.Estimation.IEstimationAI
  parent: TMG.Estimation
  isExternal: false
  name: IEstimationAI
  nameWithType: IEstimationAI
  fullName: TMG.Estimation.IEstimationAI
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Estimation
  commentId: N:TMG.Estimation
  isExternal: false
  name: TMG.Estimation
  nameWithType: TMG.Estimation
  fullName: TMG.Estimation
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Estimation.IEstimationHost
  commentId: T:TMG.Estimation.IEstimationHost
  parent: TMG.Estimation
  isExternal: false
  name: IEstimationHost
  nameWithType: IEstimationHost
  fullName: TMG.Estimation.IEstimationHost
- uid: TMG.Estimation.AI.GravityOptimization.Name*
  commentId: Overload:TMG.Estimation.AI.GravityOptimization.Name
  isExternal: false
  name: Name
  nameWithType: GravityOptimization.Name
  fullName: TMG.Estimation.AI.GravityOptimization.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Estimation.AI.GravityOptimization.Progress*
  commentId: Overload:TMG.Estimation.AI.GravityOptimization.Progress
  isExternal: false
  name: Progress
  nameWithType: GravityOptimization.Progress
  fullName: TMG.Estimation.AI.GravityOptimization.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Estimation.AI.GravityOptimization.ProgressColour*
  commentId: Overload:TMG.Estimation.AI.GravityOptimization.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: GravityOptimization.ProgressColour
  fullName: TMG.Estimation.AI.GravityOptimization.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  isExternal: false
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration*
  commentId: Overload:TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration
  isExternal: false
  name: CreateJobsForIteration
  nameWithType: GravityOptimization.CreateJobsForIteration
  fullName: TMG.Estimation.AI.GravityOptimization.CreateJobsForIteration
- uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  commentId: M:TMG.Estimation.IEstimationAI.CreateJobsForIteration
  parent: TMG.Estimation.IEstimationAI
  isExternal: false
  name: CreateJobsForIteration()
  nameWithType: IEstimationAI.CreateJobsForIteration()
  fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration()
  spec.csharp:
  - uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
    name: CreateJobsForIteration
    nameWithType: IEstimationAI.CreateJobsForIteration
    fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
    name: CreateJobsForIteration
    nameWithType: IEstimationAI.CreateJobsForIteration
    fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{TMG.Estimation.Job}
  commentId: T:System.Collections.Generic.List{TMG.Estimation.Job}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Job>
  nameWithType: List<Job>
  fullName: System.Collections.Generic.List<TMG.Estimation.Job>
  nameWithType.vb: List(Of Job)
  fullName.vb: System.Collections.Generic.List(Of TMG.Estimation.Job)
  name.vb: List(Of Job)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Estimation.AI.GravityOptimization.IterationComplete*
  commentId: Overload:TMG.Estimation.AI.GravityOptimization.IterationComplete
  isExternal: false
  name: IterationComplete
  nameWithType: GravityOptimization.IterationComplete
  fullName: TMG.Estimation.AI.GravityOptimization.IterationComplete
- uid: TMG.Estimation.IEstimationAI.IterationComplete
  commentId: M:TMG.Estimation.IEstimationAI.IterationComplete
  parent: TMG.Estimation.IEstimationAI
  isExternal: false
  name: IterationComplete()
  nameWithType: IEstimationAI.IterationComplete()
  fullName: TMG.Estimation.IEstimationAI.IterationComplete()
  spec.csharp:
  - uid: TMG.Estimation.IEstimationAI.IterationComplete
    name: IterationComplete
    nameWithType: IEstimationAI.IterationComplete
    fullName: TMG.Estimation.IEstimationAI.IterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.IEstimationAI.IterationComplete
    name: IterationComplete
    nameWithType: IEstimationAI.IterationComplete
    fullName: TMG.Estimation.IEstimationAI.IterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.AI.GravityOptimization.RuntimeValidation*
  commentId: Overload:TMG.Estimation.AI.GravityOptimization.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: GravityOptimization.RuntimeValidation
  fullName: TMG.Estimation.AI.GravityOptimization.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
