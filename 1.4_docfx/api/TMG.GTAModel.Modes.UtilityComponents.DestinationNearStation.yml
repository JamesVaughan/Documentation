### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  commentId: T:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  id: DestinationNearStation
  parent: TMG.GTAModel.Modes.UtilityComponents
  children:
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Constant
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.DataSource
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation(System.String@)
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.StationIndex
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName
  - TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ZoneIndex
  langs:
  - csharp
  - vb
  name: DestinationNearStation
  nameWithType: DestinationNearStation
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  type: Class
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DestinationNearStation
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 27
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: 'public class DestinationNearStation : IUtilityComponent, IModule'
    content.vb: >-
      Public Class DestinationNearStation

          Implements IUtilityComponent, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Modes.IUtilityComponent
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Constant
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Constant
  id: Constant
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: DestinationNearStation.Constant
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Constant
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Constant
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 30
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Constant", 0F, "The utility to add if there is a station at the destination.")]

      public float Constant
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Constant", 0F, "The utility to add if there is a station at the destination.")>

      Public Constant As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Constant
    - type: System.Single
      value: 0
    - type: System.String
      value: The utility to add if there is a station at the destination.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.DataSource
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.DataSource
  id: DataSource
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: DataSource
  nameWithType: DestinationNearStation.DataSource
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.DataSource
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DataSource
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [SubModelInformation(Description = "The source for the station information.", Required = true)]

      public IDataLineSource<float[]> DataSource
    return:
      type: TMG.Input.IDataLineSource{System.Single[]}
    content.vb: >-
      <SubModelInformation(Description:="The source for the station information.", Required:=True)>

      Public DataSource As IDataLineSource(Of Single())
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The source for the station information.
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.StationIndex
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.StationIndex
  id: StationIndex
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: StationIndex
  nameWithType: DestinationNearStation.StationIndex
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.StationIndex
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationIndex
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 36
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Station Index", 0, "The 0 indexed index for the station column.")]

      public int StationIndex
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Station Index", 0, "The 0 indexed index for the station column.")>

      Public StationIndex As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Station Index
    - type: System.Int32
      value: 0
    - type: System.String
      value: The 0 indexed index for the station column.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ZoneIndex
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ZoneIndex
  id: ZoneIndex
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: ZoneIndex
  nameWithType: DestinationNearStation.ZoneIndex
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ZoneIndex
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ZoneIndex
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 39
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Zone Index", 0, "The 0 indexed index for the zone column.")]

      public int ZoneIndex
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Zone Index", 0, "The 0 indexed index for the zone column.")>

      Public ZoneIndex As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Zone Index
    - type: System.Int32
      value: 0
    - type: System.String
      value: The 0 indexed index for the zone column.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name
  id: Name
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DestinationNearStation.Name
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 45
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress
  id: Progress
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: DestinationNearStation.Progress
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 51
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: DestinationNearStation.ProgressColour
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName
  id: UtilityComponentName
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: UtilityComponentName
  nameWithType: DestinationNearStation.UtilityComponentName
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UtilityComponentName
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 61
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Component Name", "UniqueName", "The unique name for this utility component.")]

      public string UtilityComponentName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Component Name", "UniqueName", "The unique name for this utility component.")>

      Public Property UtilityComponentName As String
  overload: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName*
  implements:
  - TMG.Modes.IUtilityComponent.UtilityComponentName
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Component Name
    - type: System.String
      value: UniqueName
    - type: System.String
      value: The unique name for this utility component.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  id: CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: CalculateV(IZone, IZone, Time)
  nameWithType: DestinationNearStation.CalculateV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CalculateV
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 68
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public float CalculateV(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function CalculateV(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV*
  implements:
  - TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: DestinationNearStation.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/DestinationNearStation.cs
    startLine: 85
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: DestinationNearStation.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.Modes.UtilityComponents
  commentId: N:TMG.GTAModel.Modes.UtilityComponents
  isExternal: false
  name: TMG.GTAModel.Modes.UtilityComponents
  nameWithType: TMG.GTAModel.Modes.UtilityComponents
  fullName: TMG.GTAModel.Modes.UtilityComponents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Modes.IUtilityComponent
  commentId: T:TMG.Modes.IUtilityComponent
  parent: TMG.Modes
  isExternal: false
  name: IUtilityComponent
  nameWithType: IUtilityComponent
  fullName: TMG.Modes.IUtilityComponent
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Modes
  commentId: N:TMG.Modes
  isExternal: false
  name: TMG.Modes
  nameWithType: TMG.Modes
  fullName: TMG.Modes
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Input.IDataLineSource{System.Single[]}
  commentId: T:TMG.Input.IDataLineSource{System.Single[]}
  parent: TMG.Input
  definition: TMG.Input.IDataLineSource`1
  name: IDataLineSource<Single[]>
  nameWithType: IDataLineSource<Single[]>
  fullName: TMG.Input.IDataLineSource<System.Single[]>
  nameWithType.vb: IDataLineSource(Of Single())
  fullName.vb: TMG.Input.IDataLineSource(Of System.Single())
  name.vb: IDataLineSource(Of Single())
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IDataLineSource`1
  commentId: T:TMG.Input.IDataLineSource`1
  isExternal: false
  name: IDataLineSource<T>
  nameWithType: IDataLineSource<T>
  fullName: TMG.Input.IDataLineSource<T>
  nameWithType.vb: IDataLineSource(Of T)
  fullName.vb: TMG.Input.IDataLineSource(Of T)
  name.vb: IDataLineSource(Of T)
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name
  isExternal: false
  name: Name
  nameWithType: DestinationNearStation.Name
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress
  isExternal: false
  name: Progress
  nameWithType: DestinationNearStation.Progress
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: DestinationNearStation.ProgressColour
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName
  isExternal: false
  name: UtilityComponentName
  nameWithType: DestinationNearStation.UtilityComponentName
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.UtilityComponentName
- uid: TMG.Modes.IUtilityComponent.UtilityComponentName
  commentId: P:TMG.Modes.IUtilityComponent.UtilityComponentName
  parent: TMG.Modes.IUtilityComponent
  isExternal: false
  name: UtilityComponentName
  nameWithType: IUtilityComponent.UtilityComponentName
  fullName: TMG.Modes.IUtilityComponent.UtilityComponentName
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV
  isExternal: false
  name: CalculateV
  nameWithType: DestinationNearStation.CalculateV
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.CalculateV
- uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.Modes.IUtilityComponent
  isExternal: false
  name: CalculateV(IZone, IZone, Time)
  nameWithType: IUtilityComponent.CalculateV(IZone, IZone, Time)
  fullName: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IUtilityComponent.CalculateV
    fullName: TMG.Modes.IUtilityComponent.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IUtilityComponent.CalculateV
    fullName: TMG.Modes.IUtilityComponent.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: DestinationNearStation.RuntimeValidation
  fullName: TMG.GTAModel.Modes.UtilityComponents.DestinationNearStation.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
