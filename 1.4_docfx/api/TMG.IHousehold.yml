### YamlMime:ManagedReference
items:
- uid: TMG.IHousehold
  commentId: T:TMG.IHousehold
  id: IHousehold
  parent: TMG
  children:
  - TMG.IHousehold.Cars
  - TMG.IHousehold.Zone
  langs:
  - csharp
  - vb
  name: IHousehold
  nameWithType: IHousehold
  fullName: TMG.IHousehold
  type: Interface
  source:
    remote:
      path: Code/TMGInterfaces/Data/IHousehold.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IHousehold
    path: ../../../XTMF/Code/TMGInterfaces/Data/IHousehold.cs
    startLine: 20
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: public interface IHousehold
    content.vb: Public Interface IHousehold
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TMG.IHousehold.Cars
  commentId: P:TMG.IHousehold.Cars
  id: Cars
  parent: TMG.IHousehold
  langs:
  - csharp
  - vb
  name: Cars
  nameWithType: IHousehold.Cars
  fullName: TMG.IHousehold.Cars
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/Data/IHousehold.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Cars
    path: ../../../XTMF/Code/TMGInterfaces/Data/IHousehold.cs
    startLine: 22
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: int Cars { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Cars As Integer
  overload: TMG.IHousehold.Cars*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: TMG.IHousehold.Zone
  commentId: P:TMG.IHousehold.Zone
  id: Zone
  parent: TMG.IHousehold
  langs:
  - csharp
  - vb
  name: Zone
  nameWithType: IHousehold.Zone
  fullName: TMG.IHousehold.Zone
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/Data/IHousehold.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Zone
    path: ../../../XTMF/Code/TMGInterfaces/Data/IHousehold.cs
    startLine: 24
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: IZone Zone { get; }
    parameters: []
    return:
      type: TMG.IZone
    content.vb: ReadOnly Property Zone As IZone
  overload: TMG.IHousehold.Zone*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.IHousehold.Cars*
  commentId: Overload:TMG.IHousehold.Cars
  isExternal: false
  name: Cars
  nameWithType: IHousehold.Cars
  fullName: TMG.IHousehold.Cars
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.IHousehold.Zone*
  commentId: Overload:TMG.IHousehold.Zone
  isExternal: false
  name: Zone
  nameWithType: IHousehold.Zone
  fullName: TMG.IHousehold.Zone
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
