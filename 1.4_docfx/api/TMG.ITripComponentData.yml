### YamlMime:ManagedReference
items:
- uid: TMG.ITripComponentData
  commentId: T:TMG.ITripComponentData
  id: ITripComponentData
  parent: TMG
  children:
  - TMG.ITripComponentData.BoardingTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.ITripComponentData.BoardingTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.ITripComponentData.ClosestStations(TMG.IZone)
  - TMG.ITripComponentData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  - TMG.ITripComponentData.GetAllData(System.Int32,System.Int32,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  - TMG.ITripComponentData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  - TMG.ITripComponentData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  - TMG.ITripComponentData.InVehicleTravelTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.ITripComponentData.InVehicleTravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.ITripComponentData.Station(TMG.IZone)
  - TMG.ITripComponentData.WaitTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.ITripComponentData.WaitTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.ITripComponentData.WalkTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.ITripComponentData.WalkTime(TMG.IZone,TMG.IZone,XTMF.Time)
  langs:
  - csharp
  - vb
  name: ITripComponentData
  nameWithType: ITripComponentData
  fullName: TMG.ITripComponentData
  type: Interface
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ITripComponentData
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 22
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: 'public interface ITripComponentData : INetworkData, IDataSource<INetworkData>, IDataSource, IModule'
    content.vb: >-
      Public Interface ITripComponentData
          Inherits INetworkData
  inheritedMembers:
  - TMG.INetworkData.NetworkType
  - TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  - TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  - TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  - TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  - XTMF.IDataSource{TMG.INetworkData}.GiveData
  - XTMF.IDataSource.Loaded
  - XTMF.IDataSource.LoadData
  - XTMF.IDataSource.UnloadData
  - XTMF.IModule.Name
  - XTMF.IModule.Progress
  - XTMF.IModule.ProgressColour
  - XTMF.IModule.RuntimeValidation(System.String@)
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TMG.ITripComponentData.BoardingTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.ITripComponentData.BoardingTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: BoardingTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: BoardingTime(IZone, IZone, Time)
  nameWithType: ITripComponentData.BoardingTime(IZone, IZone, Time)
  fullName: TMG.ITripComponentData.BoardingTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BoardingTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 24
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time BoardingTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function BoardingTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.ITripComponentData.BoardingTime*
- uid: TMG.ITripComponentData.BoardingTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.ITripComponentData.BoardingTime(System.Int32,System.Int32,XTMF.Time)
  id: BoardingTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: BoardingTime(Int32, Int32, Time)
  nameWithType: ITripComponentData.BoardingTime(Int32, Int32, Time)
  fullName: TMG.ITripComponentData.BoardingTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BoardingTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 26
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time BoardingTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function BoardingTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.ITripComponentData.BoardingTime*
- uid: TMG.ITripComponentData.ClosestStations(TMG.IZone)
  commentId: M:TMG.ITripComponentData.ClosestStations(TMG.IZone)
  id: ClosestStations(TMG.IZone)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: ClosestStations(IZone)
  nameWithType: ITripComponentData.ClosestStations(IZone)
  fullName: TMG.ITripComponentData.ClosestStations(TMG.IZone)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClosestStations
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 28
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: int[] ClosestStations(IZone zone)
    parameters:
    - id: zone
      type: TMG.IZone
    return:
      type: System.Int32[]
    content.vb: Function ClosestStations(zone As IZone) As Integer()
  overload: TMG.ITripComponentData.ClosestStations*
- uid: TMG.ITripComponentData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  commentId: M:TMG.ITripComponentData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  id: GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: GetAllData(IZone, IZone, Time, out Time, out Time, out Time, out Time, out Single)
  nameWithType: ITripComponentData.GetAllData(IZone, IZone, Time, out Time, out Time, out Time, out Time, out Single)
  fullName: TMG.ITripComponentData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, out XTMF.Time, out XTMF.Time, out XTMF.Time, out XTMF.Time, out System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 30
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool GetAllData(IZone origin, IZone destination, Time time, out Time ivtt, out Time walk, out Time wait, out Time boarding, out float cost)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: XTMF.Time
    - id: walk
      type: XTMF.Time
    - id: wait
      type: XTMF.Time
    - id: boarding
      type: XTMF.Time
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Function GetAllData(origin As IZone, destination As IZone, time As Time, ByRef ivtt As Time, ByRef walk As Time, ByRef wait As Time, ByRef boarding As Time, ByRef cost As Single) As Boolean
  overload: TMG.ITripComponentData.GetAllData*
  nameWithType.vb: ITripComponentData.GetAllData(IZone, IZone, Time, ByRef Time, ByRef Time, ByRef Time, ByRef Time, ByRef Single)
  fullName.vb: TMG.ITripComponentData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time, ByRef System.Single)
  name.vb: GetAllData(IZone, IZone, Time, ByRef Time, ByRef Time, ByRef Time, ByRef Time, ByRef Single)
- uid: TMG.ITripComponentData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:TMG.ITripComponentData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  id: GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: GetAllData(IZone, IZone, Time, out Single, out Single, out Single, out Single, out Single)
  nameWithType: ITripComponentData.GetAllData(IZone, IZone, Time, out Single, out Single, out Single, out Single, out Single)
  fullName: TMG.ITripComponentData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, out System.Single, out System.Single, out System.Single, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 32
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool GetAllData(IZone origin, IZone destination, Time time, out float ivtt, out float walk, out float wait, out float boarding, out float cost)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: System.Single
    - id: walk
      type: System.Single
    - id: wait
      type: System.Single
    - id: boarding
      type: System.Single
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Function GetAllData(origin As IZone, destination As IZone, time As Time, ByRef ivtt As Single, ByRef walk As Single, ByRef wait As Single, ByRef boarding As Single, ByRef cost As Single) As Boolean
  overload: TMG.ITripComponentData.GetAllData*
  nameWithType.vb: ITripComponentData.GetAllData(IZone, IZone, Time, ByRef Single, ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  fullName.vb: TMG.ITripComponentData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  name.vb: GetAllData(IZone, IZone, Time, ByRef Single, ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: TMG.ITripComponentData.GetAllData(System.Int32,System.Int32,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  commentId: M:TMG.ITripComponentData.GetAllData(System.Int32,System.Int32,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  id: GetAllData(System.Int32,System.Int32,XTMF.Time,XTMF.Time@,XTMF.Time@,XTMF.Time@,XTMF.Time@,System.Single@)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: GetAllData(Int32, Int32, Time, out Time, out Time, out Time, out Time, out Single)
  nameWithType: ITripComponentData.GetAllData(Int32, Int32, Time, out Time, out Time, out Time, out Time, out Single)
  fullName: TMG.ITripComponentData.GetAllData(System.Int32, System.Int32, XTMF.Time, out XTMF.Time, out XTMF.Time, out XTMF.Time, out XTMF.Time, out System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 34
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool GetAllData(int flatOrigin, int flatDestination, Time time, out Time ivtt, out Time walk, out Time wait, out Time boarding, out float cost)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: XTMF.Time
    - id: walk
      type: XTMF.Time
    - id: wait
      type: XTMF.Time
    - id: boarding
      type: XTMF.Time
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Function GetAllData(flatOrigin As Integer, flatDestination As Integer, time As Time, ByRef ivtt As Time, ByRef walk As Time, ByRef wait As Time, ByRef boarding As Time, ByRef cost As Single) As Boolean
  overload: TMG.ITripComponentData.GetAllData*
  nameWithType.vb: ITripComponentData.GetAllData(Int32, Int32, Time, ByRef Time, ByRef Time, ByRef Time, ByRef Time, ByRef Single)
  fullName.vb: TMG.ITripComponentData.GetAllData(System.Int32, System.Int32, XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time, ByRef XTMF.Time, ByRef System.Single)
  name.vb: GetAllData(Int32, Int32, Time, ByRef Time, ByRef Time, ByRef Time, ByRef Time, ByRef Single)
- uid: TMG.ITripComponentData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:TMG.ITripComponentData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  id: GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: GetAllData(Int32, Int32, Time, out Single, out Single, out Single, out Single, out Single)
  nameWithType: ITripComponentData.GetAllData(Int32, Int32, Time, out Single, out Single, out Single, out Single, out Single)
  fullName: TMG.ITripComponentData.GetAllData(System.Int32, System.Int32, XTMF.Time, out System.Single, out System.Single, out System.Single, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 36
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool GetAllData(int flatOrigin, int flatDestination, Time time, out float ivtt, out float walk, out float wait, out float boarding, out float cost)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: System.Single
    - id: walk
      type: System.Single
    - id: wait
      type: System.Single
    - id: boarding
      type: System.Single
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Function GetAllData(flatOrigin As Integer, flatDestination As Integer, time As Time, ByRef ivtt As Single, ByRef walk As Single, ByRef wait As Single, ByRef boarding As Single, ByRef cost As Single) As Boolean
  overload: TMG.ITripComponentData.GetAllData*
  nameWithType.vb: ITripComponentData.GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  fullName.vb: TMG.ITripComponentData.GetAllData(System.Int32, System.Int32, XTMF.Time, ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  name.vb: GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: TMG.ITripComponentData.InVehicleTravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.ITripComponentData.InVehicleTravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: InVehicleTravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: InVehicleTravelTime(IZone, IZone, Time)
  nameWithType: ITripComponentData.InVehicleTravelTime(IZone, IZone, Time)
  fullName: TMG.ITripComponentData.InVehicleTravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InVehicleTravelTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 38
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time InVehicleTravelTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function InVehicleTravelTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.ITripComponentData.InVehicleTravelTime*
- uid: TMG.ITripComponentData.InVehicleTravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.ITripComponentData.InVehicleTravelTime(System.Int32,System.Int32,XTMF.Time)
  id: InVehicleTravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: InVehicleTravelTime(Int32, Int32, Time)
  nameWithType: ITripComponentData.InVehicleTravelTime(Int32, Int32, Time)
  fullName: TMG.ITripComponentData.InVehicleTravelTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InVehicleTravelTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 40
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time InVehicleTravelTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function InVehicleTravelTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.ITripComponentData.InVehicleTravelTime*
- uid: TMG.ITripComponentData.Station(TMG.IZone)
  commentId: M:TMG.ITripComponentData.Station(TMG.IZone)
  id: Station(TMG.IZone)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: Station(IZone)
  nameWithType: ITripComponentData.Station(IZone)
  fullName: TMG.ITripComponentData.Station(TMG.IZone)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Station
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 42
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: ITransitStation Station(IZone stationZone)
    parameters:
    - id: stationZone
      type: TMG.IZone
    return:
      type: TMG.ITransitStation
    content.vb: Function Station(stationZone As IZone) As ITransitStation
  overload: TMG.ITripComponentData.Station*
- uid: TMG.ITripComponentData.WaitTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.ITripComponentData.WaitTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: WaitTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: WaitTime(IZone, IZone, Time)
  nameWithType: ITripComponentData.WaitTime(IZone, IZone, Time)
  fullName: TMG.ITripComponentData.WaitTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 44
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time WaitTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function WaitTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.ITripComponentData.WaitTime*
- uid: TMG.ITripComponentData.WaitTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.ITripComponentData.WaitTime(System.Int32,System.Int32,XTMF.Time)
  id: WaitTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: WaitTime(Int32, Int32, Time)
  nameWithType: ITripComponentData.WaitTime(Int32, Int32, Time)
  fullName: TMG.ITripComponentData.WaitTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 46
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time WaitTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function WaitTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.ITripComponentData.WaitTime*
- uid: TMG.ITripComponentData.WalkTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.ITripComponentData.WalkTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: WalkTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: WalkTime(IZone, IZone, Time)
  nameWithType: ITripComponentData.WalkTime(IZone, IZone, Time)
  fullName: TMG.ITripComponentData.WalkTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 48
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time WalkTime(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function WalkTime(origin As IZone, destination As IZone, time As Time) As Time
  overload: TMG.ITripComponentData.WalkTime*
- uid: TMG.ITripComponentData.WalkTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.ITripComponentData.WalkTime(System.Int32,System.Int32,XTMF.Time)
  id: WalkTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.ITripComponentData
  langs:
  - csharp
  - vb
  name: WalkTime(Int32, Int32, Time)
  nameWithType: ITripComponentData.WalkTime(Int32, Int32, Time)
  fullName: TMG.ITripComponentData.WalkTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/ITripComponentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkTime
    path: ../../../XTMF/Code/TMGInterfaces/ITripComponentData.cs
    startLine: 50
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time WalkTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function WalkTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.ITripComponentData.WalkTime*
references:
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: TMG.INetworkData.NetworkType
  commentId: P:TMG.INetworkData.NetworkType
  parent: TMG.INetworkData
  isExternal: false
  name: NetworkType
  nameWithType: INetworkData.NetworkType
  fullName: TMG.INetworkData.NetworkType
- uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: false
  name: TravelCost(IZone, IZone, Time)
  nameWithType: INetworkData.TravelCost(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelCost(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: TravelCost(Int32, Int32, Time)
  nameWithType: INetworkData.TravelCost(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelCost(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
    name: TravelCost
    nameWithType: INetworkData.TravelCost
    fullName: TMG.INetworkData.TravelCost
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: false
  name: TravelTime(IZone, IZone, Time)
  nameWithType: INetworkData.TravelTime(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: TravelTime(Int32, Int32, Time)
  nameWithType: INetworkData.TravelTime(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelTime(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
    name: TravelTime
    nameWithType: INetworkData.TravelTime
    fullName: TMG.INetworkData.TravelTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  parent: TMG.INetworkData
  isExternal: true
  name: GetAllData(IZone, IZone, Time, Time, Single)
  nameWithType: INetworkData.GetAllData(IZone, IZone, Time, Time, Single)
  fullName: TMG.INetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, XTMF.Time, System.Single)
  spec.csharp:
  - uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  parent: TMG.INetworkData
  isExternal: true
  name: GetAllData(Int32, Int32, Time, Single, Single)
  nameWithType: INetworkData.GetAllData(Int32, Int32, Time, Single, Single)
  fullName: TMG.INetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, System.Single, System.Single)
  spec.csharp:
  - uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
    name: GetAllData
    nameWithType: INetworkData.GetAllData
    fullName: TMG.INetworkData.GetAllData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: false
  name: ValidOd(IZone, IZone, Time)
  nameWithType: INetworkData.ValidOd(IZone, IZone, Time)
  fullName: TMG.INetworkData.ValidOd(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  isExternal: true
  name: ValidOd(Int32, Int32, Time)
  nameWithType: INetworkData.ValidOd(Int32, Int32, Time)
  fullName: TMG.INetworkData.ValidOd(System.Int32, System.Int32, XTMF.Time)
  spec.csharp:
  - uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
    name: ValidOd
    nameWithType: INetworkData.ValidOd
    fullName: TMG.INetworkData.ValidOd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource{TMG.INetworkData}.GiveData
  commentId: M:XTMF.IDataSource{TMG.INetworkData}.GiveData
  parent: XTMF.IDataSource{TMG.INetworkData}
  definition: XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<INetworkData>.GiveData()
  fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData()
  nameWithType.vb: IDataSource(Of INetworkData).GiveData()
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<INetworkData>.GiveData
    fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of INetworkData).GiveData
    fullName: XTMF.IDataSource(Of TMG.INetworkData).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  isExternal: false
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  isExternal: false
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  isExternal: false
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  parent: TMG
  isExternal: false
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
- uid: XTMF.IDataSource`1.GiveData
  commentId: M:XTMF.IDataSource`1.GiveData
  isExternal: false
  name: GiveData()
  nameWithType: IDataSource<T>.GiveData()
  fullName: XTMF.IDataSource<T>.GiveData()
  nameWithType.vb: IDataSource(Of T).GiveData()
  fullName.vb: XTMF.IDataSource(Of T).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<T>.GiveData
    fullName: XTMF.IDataSource<T>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of T).GiveData
    fullName: XTMF.IDataSource(Of T).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource{TMG.INetworkData}
  commentId: T:XTMF.IDataSource{TMG.INetworkData}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<INetworkData>
  nameWithType: IDataSource<INetworkData>
  fullName: XTMF.IDataSource<TMG.INetworkData>
  nameWithType.vb: IDataSource(Of INetworkData)
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData)
  name.vb: IDataSource(Of INetworkData)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  isExternal: false
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.ITripComponentData.BoardingTime*
  commentId: Overload:TMG.ITripComponentData.BoardingTime
  isExternal: false
  name: BoardingTime
  nameWithType: ITripComponentData.BoardingTime
  fullName: TMG.ITripComponentData.BoardingTime
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  isExternal: false
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.ITripComponentData.ClosestStations*
  commentId: Overload:TMG.ITripComponentData.ClosestStations
  isExternal: false
  name: ClosestStations
  nameWithType: ITripComponentData.ClosestStations
  fullName: TMG.ITripComponentData.ClosestStations
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.ITripComponentData.GetAllData*
  commentId: Overload:TMG.ITripComponentData.GetAllData
  isExternal: false
  name: GetAllData
  nameWithType: ITripComponentData.GetAllData
  fullName: TMG.ITripComponentData.GetAllData
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.ITripComponentData.InVehicleTravelTime*
  commentId: Overload:TMG.ITripComponentData.InVehicleTravelTime
  isExternal: false
  name: InVehicleTravelTime
  nameWithType: ITripComponentData.InVehicleTravelTime
  fullName: TMG.ITripComponentData.InVehicleTravelTime
- uid: TMG.ITripComponentData.Station*
  commentId: Overload:TMG.ITripComponentData.Station
  isExternal: false
  name: Station
  nameWithType: ITripComponentData.Station
  fullName: TMG.ITripComponentData.Station
- uid: TMG.ITransitStation
  commentId: T:TMG.ITransitStation
  parent: TMG
  isExternal: false
  name: ITransitStation
  nameWithType: ITransitStation
  fullName: TMG.ITransitStation
- uid: TMG.ITripComponentData.WaitTime*
  commentId: Overload:TMG.ITripComponentData.WaitTime
  isExternal: false
  name: WaitTime
  nameWithType: ITripComponentData.WaitTime
  fullName: TMG.ITripComponentData.WaitTime
- uid: TMG.ITripComponentData.WalkTime*
  commentId: Overload:TMG.ITripComponentData.WalkTime
  isExternal: false
  name: WalkTime
  nameWithType: ITripComponentData.WalkTime
  fullName: TMG.ITripComponentData.WalkTime
