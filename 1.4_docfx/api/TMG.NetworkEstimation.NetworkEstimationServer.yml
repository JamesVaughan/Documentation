### YamlMime:ManagedReference
items:
- uid: TMG.NetworkEstimation.NetworkEstimationServer
  commentId: T:TMG.NetworkEstimation.NetworkEstimationServer
  id: NetworkEstimationServer
  parent: TMG.NetworkEstimation
  children:
  - TMG.NetworkEstimation.NetworkEstimationServer.#ctor(XTMF.IConfiguration)
  - TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest
  - TMG.NetworkEstimation.NetworkEstimationServer.Host
  - TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory
  - TMG.NetworkEstimation.NetworkEstimationServer.Name
  - TMG.NetworkEstimation.NetworkEstimationServer.NetworkBaseDirectory
  - TMG.NetworkEstimation.NetworkEstimationServer.NetworkEstimationModelSystemName
  - TMG.NetworkEstimation.NetworkEstimationServer.NumberOfChildren
  - TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory
  - TMG.NetworkEstimation.NetworkEstimationServer.ParameterEvaluationFile
  - TMG.NetworkEstimation.NetworkEstimationServer.Progress
  - TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour
  - TMG.NetworkEstimation.NetworkEstimationServer.ResultPort
  - TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation(System.String@)
  - TMG.NetworkEstimation.NetworkEstimationServer.Start
  langs:
  - csharp
  - vb
  name: NetworkEstimationServer
  nameWithType: NetworkEstimationServer
  fullName: TMG.NetworkEstimation.NetworkEstimationServer
  type: Class
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkEstimationServer
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 28
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: 'public class NetworkEstimationServer : IModelSystemTemplate, ISelfContainedModule, IModule'
    content.vb: >-
      Public Class NetworkEstimationServer
          Implements IModelSystemTemplate, ISelfContainedModule, IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IModelSystemTemplate
  - XTMF.ISelfContainedModule
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Host
  commentId: F:TMG.NetworkEstimation.NetworkEstimationServer.Host
  id: Host
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: NetworkEstimationServer.Host
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Host
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Host
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 33
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  summary: "\nOur connection to the XTMF host module\n"
  example: []
  syntax:
    content: public IHost Host
    return:
      type: XTMF.Networking.IHost
    content.vb: Public Host As IHost
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.NetworkBaseDirectory
  commentId: F:TMG.NetworkEstimation.NetworkEstimationServer.NetworkBaseDirectory
  id: NetworkBaseDirectory
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: NetworkBaseDirectory
  nameWithType: NetworkEstimationServer.NetworkBaseDirectory
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.NetworkBaseDirectory
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkBaseDirectory
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 36
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Network Base Directory", "D:\\Networks\\2006", "The original data bank's base directory")]

      public string NetworkBaseDirectory
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Network Base Directory", "D:\Networks\2006", "The original data bank's base directory")>

      Public NetworkBaseDirectory As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Network Base Directory
    - type: System.String
      value: D:\Networks\2006
    - type: System.String
      value: The original data bank's base directory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.NetworkEstimationModelSystemName
  commentId: F:TMG.NetworkEstimation.NetworkEstimationServer.NetworkEstimationModelSystemName
  id: NetworkEstimationModelSystemName
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: NetworkEstimationModelSystemName
  nameWithType: NetworkEstimationServer.NetworkEstimationModelSystemName
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.NetworkEstimationModelSystemName
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkEstimationModelSystemName
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 39
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Estimation MS", "Network Estimation", "The name of the Network Estimation Model System.")]

      public string NetworkEstimationModelSystemName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Estimation MS", "Network Estimation", "The name of the Network Estimation Model System.")>

      Public NetworkEstimationModelSystemName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Estimation MS
    - type: System.String
      value: Network Estimation
    - type: System.String
      value: The name of the Network Estimation Model System.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.NumberOfChildren
  commentId: F:TMG.NetworkEstimation.NetworkEstimationServer.NumberOfChildren
  id: NumberOfChildren
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: NumberOfChildren
  nameWithType: NetworkEstimationServer.NumberOfChildren
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.NumberOfChildren
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NumberOfChildren
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 42
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("#Children", 5, "The number of times we should spawn.")]

      public int NumberOfChildren
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("#Children", 5, "The number of times we should spawn.")>

      Public NumberOfChildren As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: '#Children'
    - type: System.Int32
      value: 5
    - type: System.String
      value: The number of times we should spawn.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.ParameterEvaluationFile
  commentId: F:TMG.NetworkEstimation.NetworkEstimationServer.ParameterEvaluationFile
  id: ParameterEvaluationFile
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: ParameterEvaluationFile
  nameWithType: NetworkEstimationServer.ParameterEvaluationFile
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.ParameterEvaluationFile
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParameterEvaluationFile
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 45
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("ResultFile", "ParameterEvaluation.csv", "Parameter Evaluation File.")]

      public string ParameterEvaluationFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("ResultFile", "ParameterEvaluation.csv", "Parameter Evaluation File.")>

      Public ParameterEvaluationFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: ResultFile
    - type: System.String
      value: ParameterEvaluation.csv
    - type: System.String
      value: Parameter Evaluation File.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.ResultPort
  commentId: F:TMG.NetworkEstimation.NetworkEstimationServer.ResultPort
  id: ResultPort
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: ResultPort
  nameWithType: NetworkEstimationServer.ResultPort
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.ResultPort
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ResultPort
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 48
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("ResultPort", 12345, "The Custom Port to use for sending back the results")]

      public int ResultPort
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("ResultPort", 12345, "The Custom Port to use for sending back the results")>

      Public ResultPort As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: ResultPort
    - type: System.Int32
      value: 12345
    - type: System.String
      value: The Custom Port to use for sending back the results
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.#ctor(XTMF.IConfiguration)
  commentId: M:TMG.NetworkEstimation.NetworkEstimationServer.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: NetworkEstimationServer(IConfiguration)
  nameWithType: NetworkEstimationServer.NetworkEstimationServer(IConfiguration)
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.NetworkEstimationServer(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 65
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public NetworkEstimationServer(IConfiguration config)
    parameters:
    - id: config
      type: XTMF.IConfiguration
    content.vb: Public Sub New(config As IConfiguration)
  overload: TMG.NetworkEstimation.NetworkEstimationServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory
  commentId: P:TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory
  id: InputBaseDirectory
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: InputBaseDirectory
  nameWithType: NetworkEstimationServer.InputBaseDirectory
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InputBaseDirectory
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 70
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string InputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InputBaseDirectory As String
  overload: TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.InputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Name
  commentId: P:TMG.NetworkEstimation.NetworkEstimationServer.Name
  id: Name
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NetworkEstimationServer.Name
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Name
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 76
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.NetworkEstimation.NetworkEstimationServer.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory
  commentId: P:TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory
  id: OutputBaseDirectory
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: OutputBaseDirectory
  nameWithType: NetworkEstimationServer.OutputBaseDirectory
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutputBaseDirectory
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 82
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string OutputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputBaseDirectory As String
  overload: TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.OutputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Progress
  commentId: P:TMG.NetworkEstimation.NetworkEstimationServer.Progress
  id: Progress
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: NetworkEstimationServer.Progress
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Progress
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 88
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.NetworkEstimation.NetworkEstimationServer.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour
  commentId: P:TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour
  id: ProgressColour
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: NetworkEstimationServer.ProgressColour
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 94
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest
  commentId: M:TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest
  id: ExitRequest
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: ExitRequest()
  nameWithType: NetworkEstimationServer.ExitRequest()
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExitRequest
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 99
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public bool ExitRequest()
    return:
      type: System.Boolean
    content.vb: Public Function ExitRequest As Boolean
  overload: TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest*
  implements:
  - XTMF.IModelSystemTemplate.ExitRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation(System.String@)
  commentId: M:TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: NetworkEstimationServer.RuntimeValidation(ref String)
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 117
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: NetworkEstimationServer.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Start
  commentId: M:TMG.NetworkEstimation.NetworkEstimationServer.Start
  id: Start
  parent: TMG.NetworkEstimation.NetworkEstimationServer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: NetworkEstimationServer.Start()
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Start()
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/NetworkEstimationServer.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Start
    path: ../../XTMF/Code/NetworkEstimation/NetworkEstimationServer.cs
    startLine: 122
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TMG.NetworkEstimation.NetworkEstimationServer.Start*
  implements:
  - XTMF.ISelfContainedModule.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.NetworkEstimation
  commentId: N:TMG.NetworkEstimation
  isExternal: false
  name: TMG.NetworkEstimation
  nameWithType: TMG.NetworkEstimation
  fullName: TMG.NetworkEstimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  isExternal: false
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.ISelfContainedModule
  commentId: T:XTMF.ISelfContainedModule
  parent: XTMF
  isExternal: false
  name: ISelfContainedModule
  nameWithType: ISelfContainedModule
  fullName: XTMF.ISelfContainedModule
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: XTMF.Networking.IHost
  commentId: T:XTMF.Networking.IHost
  parent: XTMF.Networking
  isExternal: false
  name: IHost
  nameWithType: IHost
  fullName: XTMF.Networking.IHost
- uid: XTMF.Networking
  commentId: N:XTMF.Networking
  isExternal: false
  name: XTMF.Networking
  nameWithType: XTMF.Networking
  fullName: XTMF.Networking
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.NetworkEstimation.NetworkEstimationServer.#ctor*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.#ctor
  isExternal: false
  name: NetworkEstimationServer
  nameWithType: NetworkEstimationServer.NetworkEstimationServer
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.NetworkEstimationServer
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  isExternal: false
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory
  isExternal: false
  name: InputBaseDirectory
  nameWithType: NetworkEstimationServer.InputBaseDirectory
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.InputBaseDirectory
- uid: XTMF.IModelSystemTemplate.InputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.InputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: InputBaseDirectory
  nameWithType: IModelSystemTemplate.InputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.InputBaseDirectory
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Name*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.Name
  isExternal: false
  name: Name
  nameWithType: NetworkEstimationServer.Name
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory
  isExternal: false
  name: OutputBaseDirectory
  nameWithType: NetworkEstimationServer.OutputBaseDirectory
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.OutputBaseDirectory
- uid: XTMF.IModelSystemTemplate.OutputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.OutputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: OutputBaseDirectory
  nameWithType: IModelSystemTemplate.OutputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.OutputBaseDirectory
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Progress*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.Progress
  isExternal: false
  name: Progress
  nameWithType: NetworkEstimationServer.Progress
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: NetworkEstimationServer.ProgressColour
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest
  isExternal: false
  name: ExitRequest
  nameWithType: NetworkEstimationServer.ExitRequest
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.ExitRequest
- uid: XTMF.IModelSystemTemplate.ExitRequest
  commentId: M:XTMF.IModelSystemTemplate.ExitRequest
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: ExitRequest()
  nameWithType: IModelSystemTemplate.ExitRequest()
  fullName: XTMF.IModelSystemTemplate.ExitRequest()
  spec.csharp:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: NetworkEstimationServer.RuntimeValidation
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.NetworkEstimationServer.Start*
  commentId: Overload:TMG.NetworkEstimation.NetworkEstimationServer.Start
  isExternal: false
  name: Start
  nameWithType: NetworkEstimationServer.Start
  fullName: TMG.NetworkEstimation.NetworkEstimationServer.Start
- uid: XTMF.ISelfContainedModule.Start
  commentId: M:XTMF.ISelfContainedModule.Start
  parent: XTMF.ISelfContainedModule
  isExternal: false
  name: Start()
  nameWithType: ISelfContainedModule.Start()
  fullName: XTMF.ISelfContainedModule.Start()
  spec.csharp:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
