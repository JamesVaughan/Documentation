### YamlMime:ManagedReference
items:
- uid: XTMF.ModuleParameters
  commentId: T:XTMF.ModuleParameters
  id: ModuleParameters
  parent: XTMF
  children:
  - XTMF.ModuleParameters.#ctor
  - XTMF.ModuleParameters.#ctor(System.Collections.Generic.IList{XTMF.IModuleParameter})
  - XTMF.ModuleParameters.Add(XTMF.ParameterAttribute,System.Type)
  - XTMF.ModuleParameters.BelongsTo
  - XTMF.ModuleParameters.Clone
  - XTMF.ModuleParameters.GetEnumerator
  - XTMF.ModuleParameters.Parameters
  - XTMF.ModuleParameters.Save
  - XTMF.ModuleParameters.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ModuleParameters
  nameWithType: ModuleParameters
  fullName: XTMF.ModuleParameters
  type: Class
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModuleParameters
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 23
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: 'public class ModuleParameters : IModuleParameters, IEnumerable<IModuleParameter>, IEnumerable'
    content.vb: >-
      Public Class ModuleParameters

          Implements IModuleParameters, IEnumerable(Of IModuleParameter), IEnumerable
  inheritance:
  - System.Object
  implements:
  - XTMF.IModuleParameters
  - System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ModuleParameters.#ctor
  commentId: M:XTMF.ModuleParameters.#ctor
  id: '#ctor'
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: ModuleParameters()
  nameWithType: ModuleParameters.ModuleParameters()
  fullName: XTMF.ModuleParameters.ModuleParameters()
  type: Constructor
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 25
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModuleParameters()
    content.vb: Public Sub New
  overload: XTMF.ModuleParameters.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleParameters.#ctor(System.Collections.Generic.IList{XTMF.IModuleParameter})
  commentId: M:XTMF.ModuleParameters.#ctor(System.Collections.Generic.IList{XTMF.IModuleParameter})
  id: '#ctor(System.Collections.Generic.IList{XTMF.IModuleParameter})'
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: ModuleParameters(IList<IModuleParameter>)
  nameWithType: ModuleParameters.ModuleParameters(IList<IModuleParameter>)
  fullName: XTMF.ModuleParameters.ModuleParameters(System.Collections.Generic.IList<XTMF.IModuleParameter>)
  type: Constructor
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 27
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModuleParameters(IList<IModuleParameter> givenParameters)
    parameters:
    - id: givenParameters
      type: System.Collections.Generic.IList{XTMF.IModuleParameter}
    content.vb: Public Sub New(givenParameters As IList(Of IModuleParameter))
  overload: XTMF.ModuleParameters.#ctor*
  nameWithType.vb: ModuleParameters.ModuleParameters(IList(Of IModuleParameter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModuleParameters.ModuleParameters(System.Collections.Generic.IList(Of XTMF.IModuleParameter))
  name.vb: ModuleParameters(IList(Of IModuleParameter))
- uid: XTMF.ModuleParameters.BelongsTo
  commentId: P:XTMF.ModuleParameters.BelongsTo
  id: BelongsTo
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: BelongsTo
  nameWithType: ModuleParameters.BelongsTo
  fullName: XTMF.ModuleParameters.BelongsTo
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BelongsTo
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 29
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemStructure BelongsTo { get; set; }
    parameters: []
    return:
      type: XTMF.IModelSystemStructure
    content.vb: Public Property BelongsTo As IModelSystemStructure
  overload: XTMF.ModuleParameters.BelongsTo*
  implements:
  - XTMF.IModuleParameters.BelongsTo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ModuleParameters.Parameters
  commentId: P:XTMF.ModuleParameters.Parameters
  id: Parameters
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: ModuleParameters.Parameters
  fullName: XTMF.ModuleParameters.Parameters
  type: Property
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parameters
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 31
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IList<IModuleParameter> Parameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{XTMF.IModuleParameter}
    content.vb: Public ReadOnly Property Parameters As IList(Of IModuleParameter)
  overload: XTMF.ModuleParameters.Parameters*
  implements:
  - XTMF.IModuleParameters.Parameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModuleParameters.Add(XTMF.ParameterAttribute,System.Type)
  commentId: M:XTMF.ModuleParameters.Add(XTMF.ParameterAttribute,System.Type)
  id: Add(XTMF.ParameterAttribute,System.Type)
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: Add(ParameterAttribute, Type)
  nameWithType: ModuleParameters.Add(ParameterAttribute, Type)
  fullName: XTMF.ModuleParameters.Add(XTMF.ParameterAttribute, System.Type)
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 33
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Add(ParameterAttribute param, Type t)
    parameters:
    - id: param
      type: XTMF.ParameterAttribute
    - id: t
      type: System.Type
    content.vb: Public Sub Add(param As ParameterAttribute, t As Type)
  overload: XTMF.ModuleParameters.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleParameters.Clone
  commentId: M:XTMF.ModuleParameters.Clone
  id: Clone
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ModuleParameters.Clone()
  fullName: XTMF.ModuleParameters.Clone()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Clone
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 35
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModuleParameters Clone()
    return:
      type: XTMF.IModuleParameters
    content.vb: Public Function Clone As IModuleParameters
  overload: XTMF.ModuleParameters.Clone*
  implements:
  - XTMF.IModuleParameters.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleParameters.GetEnumerator
  commentId: M:XTMF.ModuleParameters.GetEnumerator
  id: GetEnumerator
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ModuleParameters.GetEnumerator()
  fullName: XTMF.ModuleParameters.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetEnumerator
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 45
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IEnumerator<IModuleParameter> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{XTMF.IModuleParameter}
    content.vb: Public Function GetEnumerator As IEnumerator(Of IModuleParameter)
  overload: XTMF.ModuleParameters.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleParameters.Save
  commentId: M:XTMF.ModuleParameters.Save
  id: Save
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: ModuleParameters.Save()
  fullName: XTMF.ModuleParameters.Save()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 47
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: XTMF.ModuleParameters.Save*
  implements:
  - XTMF.IModuleParameters.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModuleParameters.System#Collections#IEnumerable#GetEnumerator
  commentId: M:XTMF.ModuleParameters.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: XTMF.ModuleParameters
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ModuleParameters.IEnumerable.GetEnumerator()
  fullName: XTMF.ModuleParameters.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF1.1/Editing/ModuleParameters.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../../XTMF/Code/XTMF1.1/Editing/ModuleParameters.cs
    startLine: 52
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: XTMF.ModuleParameters.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModuleParameters.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModuleParameters
  commentId: T:XTMF.IModuleParameters
  parent: XTMF
  isExternal: false
  name: IModuleParameters
  nameWithType: IModuleParameters
  fullName: XTMF.IModuleParameters
- uid: System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}
  commentId: T:System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IModuleParameter>
  nameWithType: IEnumerable<IModuleParameter>
  fullName: System.Collections.Generic.IEnumerable<XTMF.IModuleParameter>
  nameWithType.vb: IEnumerable(Of IModuleParameter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IModuleParameter)
  name.vb: IEnumerable(Of IModuleParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: XTMF.ModuleParameters.#ctor*
  commentId: Overload:XTMF.ModuleParameters.#ctor
  isExternal: false
  name: ModuleParameters
  nameWithType: ModuleParameters.ModuleParameters
  fullName: XTMF.ModuleParameters.ModuleParameters
- uid: System.Collections.Generic.IList{XTMF.IModuleParameter}
  commentId: T:System.Collections.Generic.IList{XTMF.IModuleParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IModuleParameter>
  nameWithType: IList<IModuleParameter>
  fullName: System.Collections.Generic.IList<XTMF.IModuleParameter>
  nameWithType.vb: IList(Of IModuleParameter)
  fullName.vb: System.Collections.Generic.IList(Of XTMF.IModuleParameter)
  name.vb: IList(Of IModuleParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModuleParameters.BelongsTo*
  commentId: Overload:XTMF.ModuleParameters.BelongsTo
  isExternal: false
  name: BelongsTo
  nameWithType: ModuleParameters.BelongsTo
  fullName: XTMF.ModuleParameters.BelongsTo
- uid: XTMF.IModuleParameters.BelongsTo
  commentId: P:XTMF.IModuleParameters.BelongsTo
  parent: XTMF.IModuleParameters
  isExternal: false
  name: BelongsTo
  nameWithType: IModuleParameters.BelongsTo
  fullName: XTMF.IModuleParameters.BelongsTo
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  isExternal: false
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: XTMF.ModuleParameters.Parameters*
  commentId: Overload:XTMF.ModuleParameters.Parameters
  isExternal: false
  name: Parameters
  nameWithType: ModuleParameters.Parameters
  fullName: XTMF.ModuleParameters.Parameters
- uid: XTMF.IModuleParameters.Parameters
  commentId: P:XTMF.IModuleParameters.Parameters
  parent: XTMF.IModuleParameters
  isExternal: false
  name: Parameters
  nameWithType: IModuleParameters.Parameters
  fullName: XTMF.IModuleParameters.Parameters
- uid: XTMF.ModuleParameters.Add*
  commentId: Overload:XTMF.ModuleParameters.Add
  isExternal: false
  name: Add
  nameWithType: ModuleParameters.Add
  fullName: XTMF.ModuleParameters.Add
- uid: XTMF.ParameterAttribute
  commentId: T:XTMF.ParameterAttribute
  parent: XTMF
  isExternal: false
  name: ParameterAttribute
  nameWithType: ParameterAttribute
  fullName: XTMF.ParameterAttribute
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: XTMF.ModuleParameters.Clone*
  commentId: Overload:XTMF.ModuleParameters.Clone
  isExternal: false
  name: Clone
  nameWithType: ModuleParameters.Clone
  fullName: XTMF.ModuleParameters.Clone
- uid: XTMF.IModuleParameters.Clone
  commentId: M:XTMF.IModuleParameters.Clone
  parent: XTMF.IModuleParameters
  isExternal: false
  name: Clone()
  nameWithType: IModuleParameters.Clone()
  fullName: XTMF.IModuleParameters.Clone()
  spec.csharp:
  - uid: XTMF.IModuleParameters.Clone
    name: Clone
    nameWithType: IModuleParameters.Clone
    fullName: XTMF.IModuleParameters.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModuleParameters.Clone
    name: Clone
    nameWithType: IModuleParameters.Clone
    fullName: XTMF.IModuleParameters.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModuleParameters.GetEnumerator*
  commentId: Overload:XTMF.ModuleParameters.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: ModuleParameters.GetEnumerator
  fullName: XTMF.ModuleParameters.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{XTMF.IModuleParameter}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IModuleParameter>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<XTMF.IModuleParameter>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IModuleParameter).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IModuleParameter).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IModuleParameter>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<XTMF.IModuleParameter>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IModuleParameter).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of XTMF.IModuleParameter).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{XTMF.IModuleParameter}
  commentId: T:System.Collections.Generic.IEnumerator{XTMF.IModuleParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<IModuleParameter>
  nameWithType: IEnumerator<IModuleParameter>
  fullName: System.Collections.Generic.IEnumerator<XTMF.IModuleParameter>
  nameWithType.vb: IEnumerator(Of IModuleParameter)
  fullName.vb: System.Collections.Generic.IEnumerator(Of XTMF.IModuleParameter)
  name.vb: IEnumerator(Of IModuleParameter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModuleParameter
    name: IModuleParameter
    nameWithType: IModuleParameter
    fullName: XTMF.IModuleParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModuleParameters.Save*
  commentId: Overload:XTMF.ModuleParameters.Save
  isExternal: false
  name: Save
  nameWithType: ModuleParameters.Save
  fullName: XTMF.ModuleParameters.Save
- uid: XTMF.IModuleParameters.Save
  commentId: M:XTMF.IModuleParameters.Save
  parent: XTMF.IModuleParameters
  isExternal: false
  name: Save()
  nameWithType: IModuleParameters.Save()
  fullName: XTMF.IModuleParameters.Save()
  spec.csharp:
  - uid: XTMF.IModuleParameters.Save
    name: Save
    nameWithType: IModuleParameters.Save
    fullName: XTMF.IModuleParameters.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModuleParameters.Save
    name: Save
    nameWithType: IModuleParameters.Save
    fullName: XTMF.IModuleParameters.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModuleParameters.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:XTMF.ModuleParameters.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: ModuleParameters.IEnumerable.GetEnumerator
  fullName: XTMF.ModuleParameters.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModuleParameters.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
