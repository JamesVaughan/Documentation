### YamlMime:ManagedReference
items:
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  commentId: T:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  id: Conditional
  parent: TMG.Frameworks.Data.Synthesis.Gibbs
  children:
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Cdf
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ColumnIndex
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalColumns
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalSource
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf(System.Single[])
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex(System.Int32[])
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData(System.Int32)
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Loaded
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Root
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation(System.String@)
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData
  - TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF#IDataSource#Loaded
  langs:
  - csharp
  - vb
  name: Conditional
  nameWithType: Conditional
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  type: Class
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Conditional
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 26
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: 'public class Conditional : IDataSource, IModule'
    content.vb: >-
      Public Class Conditional
          Implements IDataSource, IModule
  inheritance:
  - System.Object
  derivedClasses:
  - TMG.Frameworks.Data.Synthesis.Gibbs.ConditionalByPD
  implements:
  - XTMF.IDataSource
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Root
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Root
  id: Root
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: Conditional.Root
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Root
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 29
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public Pool Root
    return:
      type: TMG.Frameworks.Data.Synthesis.Gibbs.Pool
    content.vb: Public Root As Pool
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name
  id: Name
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Conditional.Name
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 31
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress
  id: Progress
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: Conditional.Progress
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 33
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour
  id: ProgressColour
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: Conditional.ProgressColour
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 35
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalColumns
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalColumns
  id: ConditionalColumns
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: ConditionalColumns
  nameWithType: Conditional.ConditionalColumns
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalColumns
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ConditionalColumns
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 37
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public DataModule<string>[] ConditionalColumns
    return:
      type: TMG.Frameworks.Data.DataModule{System.String}[]
    content.vb: Public ConditionalColumns As DataModule(Of String)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Cdf
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Cdf
  id: Cdf
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: Cdf
  nameWithType: Conditional.Cdf
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Cdf
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Cdf
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 39
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public float[] Cdf
    return:
      type: System.Single[]
    content.vb: Public Cdf As Single()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ColumnIndex
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ColumnIndex
  id: ColumnIndex
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: ColumnIndex
  nameWithType: Conditional.ColumnIndex
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ColumnIndex
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ColumnIndex
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 41
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: protected int[] ColumnIndex
    return:
      type: System.Int32[]
    content.vb: Protected ColumnIndex As Integer()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalSource
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalSource
  id: ConditionalSource
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: ConditionalSource
  nameWithType: Conditional.ConditionalSource
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConditionalSource
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ConditionalSource
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 48
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "A CSV file with each conditional attribute's value followed by the destination attribute value and probability [0,1].")]

      public FileLocation ConditionalSource
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="A CSV file with each conditional attribute's value followed by the destination attribute value and probability [0,1].")>

      Public ConditionalSource As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: A CSV file with each conditional attribute's value followed by the destination attribute value and probability [0,1].
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Loaded
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Loaded
  id: Loaded
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: Conditional.Loaded
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Loaded
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Loaded
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 50
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: protected bool Loaded
    return:
      type: System.Boolean
    content.vb: Protected Loaded As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone
  id: RequiresReloadingPerZone
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: RequiresReloadingPerZone
  nameWithType: Conditional.RequiresReloadingPerZone
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RequiresReloadingPerZone
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 52
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public virtual bool RequiresReloadingPerZone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property RequiresReloadingPerZone As Boolean
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF#IDataSource#Loaded
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF#IDataSource#Loaded
  id: XTMF#IDataSource#Loaded
  isEii: true
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: IDataSource.Loaded
  nameWithType: Conditional.IDataSource.Loaded
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF.IDataSource.Loaded
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: XTMF.IDataSource.Loaded
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 54
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: bool IDataSource.Loaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property XTMF.IDataSource.Loaded As Boolean Implements IDataSource.Loaded
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF#IDataSource#Loaded*
  implements:
  - XTMF.IDataSource.Loaded
  nameWithType.vb: Conditional.XTMF.IDataSource.Loaded
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: XTMF.IDataSource.Loaded
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData(System.Int32)
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData(System.Int32)
  id: LoadConditionalsData(System.Int32)
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: LoadConditionalsData(Int32)
  nameWithType: Conditional.LoadConditionalsData(Int32)
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData(System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadConditionalsData
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 59
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public virtual void LoadConditionalsData(int currentZone)
    parameters:
    - id: currentZone
      type: System.Int32
    content.vb: Public Overridable Sub LoadConditionalsData(currentZone As Integer)
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf(System.Single[])
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf(System.Single[])
  id: ConvertToCdf(System.Single[])
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: ConvertToCdf(Single[])
  nameWithType: Conditional.ConvertToCdf(Single[])
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf(System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ConvertToCdf
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 101
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: protected float[] ConvertToCdf(float[] prob)
    parameters:
    - id: prob
      type: System.Single[]
    return:
      type: System.Single[]
    content.vb: Protected Function ConvertToCdf(prob As Single()) As Single()
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf*
  nameWithType.vb: Conditional.ConvertToCdf(Single())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf(System.Single())
  name.vb: ConvertToCdf(Single())
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData
  id: GenerateBackendData
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: GenerateBackendData()
  nameWithType: Conditional.GenerateBackendData()
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GenerateBackendData
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 137
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: protected float[] GenerateBackendData()
    return:
      type: System.Single[]
    content.vb: Protected Function GenerateBackendData As Single()
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex(System.Int32[])
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex(System.Int32[])
  id: GetIndex(System.Int32[])
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: GetIndex(Int32[])
  nameWithType: Conditional.GetIndex(Int32[])
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex(System.Int32[])
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetIndex
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 151
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: protected int GetIndex(int[] indices)
    parameters:
    - id: indices
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Protected Function GetIndex(indices As Integer()) As Integer
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex*
  nameWithType.vb: Conditional.GetIndex(Int32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex(System.Int32())
  name.vb: GetIndex(Int32())
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation(System.String@)
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: Conditional.RuntimeValidation(ref String)
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 186
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public virtual bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: Conditional.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData
  id: LoadData
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: LoadData()
  nameWithType: Conditional.LoadData()
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadData
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 202
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public void LoadData()
    content.vb: Public Sub LoadData
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData*
  implements:
  - XTMF.IDataSource.LoadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData
  id: UnloadData
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional
  langs:
  - csharp
  - vb
  name: UnloadData()
  nameWithType: Conditional.UnloadData()
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnloadData
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Conditional.cs
    startLine: 207
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public void UnloadData()
    content.vb: Public Sub UnloadData
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData*
  implements:
  - XTMF.IDataSource.UnloadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.Frameworks.Data.Synthesis.Gibbs
  commentId: N:TMG.Frameworks.Data.Synthesis.Gibbs
  isExternal: false
  name: TMG.Frameworks.Data.Synthesis.Gibbs
  nameWithType: TMG.Frameworks.Data.Synthesis.Gibbs
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Pool
  commentId: T:TMG.Frameworks.Data.Synthesis.Gibbs.Pool
  parent: TMG.Frameworks.Data.Synthesis.Gibbs
  isExternal: false
  name: Pool
  nameWithType: Pool
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Pool
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name
  isExternal: false
  name: Name
  nameWithType: Conditional.Name
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress
  isExternal: false
  name: Progress
  nameWithType: Conditional.Progress
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: Conditional.ProgressColour
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data.DataModule{System.String}[]
  name: DataModule<String>[]
  nameWithType: DataModule<String>[]
  fullName: TMG.Frameworks.Data.DataModule<System.String>[]
  nameWithType.vb: DataModule(Of String)()
  fullName.vb: TMG.Frameworks.Data.DataModule(Of System.String)()
  name.vb: DataModule(Of String)()
  spec.csharp:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  isExternal: false
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone
  isExternal: false
  name: RequiresReloadingPerZone
  nameWithType: Conditional.RequiresReloadingPerZone
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RequiresReloadingPerZone
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF#IDataSource#Loaded*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF#IDataSource#Loaded
  isExternal: false
  name: IDataSource.Loaded
  nameWithType: Conditional.IDataSource.Loaded
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.XTMF.IDataSource.Loaded
  nameWithType.vb: Conditional.XTMF.IDataSource.Loaded
  name.vb: XTMF.IDataSource.Loaded
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  isExternal: false
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData
  isExternal: false
  name: LoadConditionalsData
  nameWithType: Conditional.LoadConditionalsData
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadConditionalsData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf
  isExternal: false
  name: ConvertToCdf
  nameWithType: Conditional.ConvertToCdf
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.ConvertToCdf
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData
  isExternal: false
  name: GenerateBackendData
  nameWithType: Conditional.GenerateBackendData
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GenerateBackendData
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex
  isExternal: false
  name: GetIndex
  nameWithType: Conditional.GetIndex
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.GetIndex
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: Conditional.RuntimeValidation
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData
  isExternal: false
  name: LoadData
  nameWithType: Conditional.LoadData
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.LoadData
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  isExternal: false
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData
  isExternal: false
  name: UnloadData
  nameWithType: Conditional.UnloadData
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Conditional.UnloadData
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  isExternal: false
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
