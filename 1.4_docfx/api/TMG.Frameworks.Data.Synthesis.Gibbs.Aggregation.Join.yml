### YamlMime:ManagedReference
items:
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  commentId: T:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  id: Aggregation.Join
  parent: TMG.Frameworks.Data.Synthesis.Gibbs
  children:
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.#ctor(XTMF.IConfiguration)
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.AggregationFile
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Parent
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.PrimaryAttribute
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RandomSeed
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Root
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation(System.String@)
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SaveAggregationTo
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryAttributes
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryPool
  - TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ZoneSystemSource
  langs:
  - csharp
  - vb
  name: Aggregation.Join
  nameWithType: Aggregation.Join
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  type: Class
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Join
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 33
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: 'public sealed class Join : IModule'
    content.vb: >-
      Public NotInheritable Class Join

          Implements IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Root
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Root
  id: Root
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: Aggregation.Join.Root
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Root
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 36
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public GibbsSampler Root
    return:
      type: TMG.Frameworks.Data.Synthesis.Gibbs.GibbsSampler
    content.vb: Public Root As GibbsSampler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Parent
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Parent
  id: Parent
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: Aggregation.Join.Parent
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Parent
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Parent
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 39
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public Aggregation Parent
    return:
      type: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation
    content.vb: Public Parent As Aggregation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryPool
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryPool
  id: SecondaryPool
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: SecondaryPool
  nameWithType: Aggregation.Join.SecondaryPool
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryPool
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SecondaryPool
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 41
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public DataModule<string> SecondaryPool
    return:
      type: TMG.Frameworks.Data.DataModule{System.String}
    content.vb: Public SecondaryPool As DataModule(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.#ctor(XTMF.IConfiguration)
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: Join(IConfiguration)
  nameWithType: Aggregation.Join.Join(IConfiguration)
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Join(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 45
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public Join(IConfiguration config)
    parameters:
    - id: config
      type: XTMF.IConfiguration
    content.vb: Public Sub New(config As IConfiguration)
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.PrimaryAttribute
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.PrimaryAttribute
  id: PrimaryAttribute
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: PrimaryAttribute
  nameWithType: Aggregation.Join.PrimaryAttribute
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.PrimaryAttribute
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PrimaryAttribute
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 51
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The attribute to bind to.")]

      public DataModule<string> PrimaryAttribute
    return:
      type: TMG.Frameworks.Data.DataModule{System.String}
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The attribute to bind to.")>

      Public PrimaryAttribute As DataModule(Of String)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The attribute to bind to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryAttributes
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryAttributes
  id: SecondaryAttributes
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: SecondaryAttributes
  nameWithType: Aggregation.Join.SecondaryAttributes
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SecondaryAttributes
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SecondaryAttributes
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 54
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "")]

      public DataModule<string>[] SecondaryAttributes
    return:
      type: TMG.Frameworks.Data.DataModule{System.String}[]
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="")>

      Public SecondaryAttributes As DataModule(Of String)()
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RandomSeed
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RandomSeed
  id: RandomSeed
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: RandomSeed
  nameWithType: Aggregation.Join.RandomSeed
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RandomSeed
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RandomSeed
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 57
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [RunParameter("Random Seed", 12345, "")]

      public int RandomSeed
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Random Seed", 12345, "")>

      Public RandomSeed As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Random Seed
    - type: System.Int32
      value: 12345
    - type: System.String
      value: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.AggregationFile
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.AggregationFile
  id: AggregationFile
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: AggregationFile
  nameWithType: Aggregation.Join.AggregationFile
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.AggregationFile
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AggregationFile
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 66
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "Aggregation file")]

      public FileLocation AggregationFile
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="Aggregation file")>

      Public AggregationFile As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: Aggregation file
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SaveAggregationTo
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SaveAggregationTo
  id: SaveAggregationTo
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: SaveAggregationTo
  nameWithType: Aggregation.Join.SaveAggregationTo
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.SaveAggregationTo
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveAggregationTo
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 69
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to save the combined form.")]

      public FileLocation SaveAggregationTo
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to save the combined form.")>

      Public SaveAggregationTo As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to save the combined form.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name
  id: Name
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Aggregation.Join.Name
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 71
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress
  id: Progress
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: Aggregation.Join.Progress
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 73
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour
  commentId: P:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour
  id: ProgressColour
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: Aggregation.Join.ProgressColour
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 75
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ZoneSystemSource
  commentId: F:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ZoneSystemSource
  id: ZoneSystemSource
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: ZoneSystemSource
  nameWithType: Aggregation.Join.ZoneSystemSource
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ZoneSystemSource
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ZoneSystemSource
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 78
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: >-
      [SubModelInformation(Required = false, Description = "An optional source to load the zone system from.  If left blank the Travel Demand Model Zone system will be used.")]

      public IDataSource<IZoneSystem> ZoneSystemSource
    return:
      type: XTMF.IDataSource{TMG.IZoneSystem}
    content.vb: >-
      <SubModelInformation(Required:=False, Description:="An optional source to load the zone system from.  If left blank the Travel Demand Model Zone system will be used.")>

      Public ZoneSystemSource As IDataSource(Of IZoneSystem)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Description
      type: System.String
      value: An optional source to load the zone system from.  If left blank the Travel Demand Model Zone system will be used.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute
  id: Execute
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: Aggregation.Join.Execute()
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 82
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation(System.String@)
  commentId: M:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: Aggregation.Join.RuntimeValidation(ref String)
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/TMG.Frameworks/Data/Synthesis/Gibbs/Aggregation.cs
    startLine: 221
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Synthesis.Gibbs
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: Aggregation.Join.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Frameworks.Data.Synthesis.Gibbs
  commentId: N:TMG.Frameworks.Data.Synthesis.Gibbs
  isExternal: false
  name: TMG.Frameworks.Data.Synthesis.Gibbs
  nameWithType: TMG.Frameworks.Data.Synthesis.Gibbs
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.GibbsSampler
  commentId: T:TMG.Frameworks.Data.Synthesis.Gibbs.GibbsSampler
  parent: TMG.Frameworks.Data.Synthesis.Gibbs
  isExternal: false
  name: GibbsSampler
  nameWithType: GibbsSampler
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.GibbsSampler
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation
  commentId: T:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation
  parent: TMG.Frameworks.Data.Synthesis.Gibbs
  isExternal: false
  name: Aggregation
  nameWithType: Aggregation
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation
- uid: TMG.Frameworks.Data.DataModule{System.String}
  commentId: T:TMG.Frameworks.Data.DataModule{System.String}
  parent: TMG.Frameworks.Data
  definition: TMG.Frameworks.Data.DataModule`1
  name: DataModule<String>
  nameWithType: DataModule<String>
  fullName: TMG.Frameworks.Data.DataModule<System.String>
  nameWithType.vb: DataModule(Of String)
  fullName.vb: TMG.Frameworks.Data.DataModule(Of System.String)
  name.vb: DataModule(Of String)
  spec.csharp:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data.DataModule`1
  commentId: T:TMG.Frameworks.Data.DataModule`1
  isExternal: false
  name: DataModule<TType>
  nameWithType: DataModule<TType>
  fullName: TMG.Frameworks.Data.DataModule<TType>
  nameWithType.vb: DataModule(Of TType)
  fullName.vb: TMG.Frameworks.Data.DataModule(Of TType)
  name.vb: DataModule(Of TType)
  spec.csharp:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: <
    nameWithType: <
    fullName: <
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data
  commentId: N:TMG.Frameworks.Data
  isExternal: false
  name: TMG.Frameworks.Data
  nameWithType: TMG.Frameworks.Data
  fullName: TMG.Frameworks.Data
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.#ctor*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.#ctor
  isExternal: false
  name: Join
  nameWithType: Aggregation.Join.Join
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Join
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  isExternal: false
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: TMG.Frameworks.Data.DataModule{System.String}[]
  name: DataModule<String>[]
  nameWithType: DataModule<String>[]
  fullName: TMG.Frameworks.Data.DataModule<System.String>[]
  nameWithType.vb: DataModule(Of String)()
  fullName.vb: TMG.Frameworks.Data.DataModule(Of System.String)()
  name.vb: DataModule(Of String)()
  spec.csharp:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Frameworks.Data.DataModule`1
    name: DataModule
    nameWithType: DataModule
    fullName: TMG.Frameworks.Data.DataModule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  isExternal: false
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name
  isExternal: false
  name: Name
  nameWithType: Aggregation.Join.Name
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress
  isExternal: false
  name: Progress
  nameWithType: Aggregation.Join.Progress
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: Aggregation.Join.ProgressColour
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource{TMG.IZoneSystem}
  commentId: T:XTMF.IDataSource{TMG.IZoneSystem}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<IZoneSystem>
  nameWithType: IDataSource<IZoneSystem>
  fullName: XTMF.IDataSource<TMG.IZoneSystem>
  nameWithType.vb: IDataSource(Of IZoneSystem)
  fullName.vb: XTMF.IDataSource(Of TMG.IZoneSystem)
  name.vb: IDataSource(Of IZoneSystem)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IZoneSystem
    name: IZoneSystem
    nameWithType: IZoneSystem
    fullName: TMG.IZoneSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IZoneSystem
    name: IZoneSystem
    nameWithType: IZoneSystem
    fullName: TMG.IZoneSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  isExternal: false
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute
  isExternal: false
  name: Execute
  nameWithType: Aggregation.Join.Execute
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.Execute
- uid: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation*
  commentId: Overload:TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: Aggregation.Join.RuntimeValidation
  fullName: TMG.Frameworks.Data.Synthesis.Gibbs.Aggregation.Join.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
