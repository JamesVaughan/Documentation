### YamlMime:ManagedReference
items:
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  commentId: T:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  id: ExtractLinkTransfers
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  children:
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.DemandMatrix
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute(TMG.Emme.Controller)
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Hypernetwork
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.LinkSet
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.PeakPeriodFactor
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation(System.String@)
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.SaveTo
  - TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ScenarioNumber
  langs:
  - csharp
  - vb
  name: ExtractLinkTransfers
  nameWithType: ExtractLinkTransfers
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  type: Class
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExtractLinkTransfers
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 24
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: 'public class ExtractLinkTransfers : IEmmeTool, IModule'
    content.vb: >-
      Public Class ExtractLinkTransfers

          Implements IEmmeTool, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Emme.IEmmeTool
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ScenarioNumber
  commentId: F:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ScenarioNumber
  id: ScenarioNumber
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: ScenarioNumber
  nameWithType: ExtractLinkTransfers.ScenarioNumber
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ScenarioNumber
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ScenarioNumber
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 28
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: >-
      [RunParameter("Scenario Number", 1, "The scenario to read the information from.")]

      public int ScenarioNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Scenario Number", 1, "The scenario to read the information from.")>

      Public ScenarioNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Scenario Number
    - type: System.Int32
      value: 1
    - type: System.String
      value: The scenario to read the information from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.DemandMatrix
  commentId: F:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.DemandMatrix
  id: DemandMatrix
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: DemandMatrix
  nameWithType: ExtractLinkTransfers.DemandMatrix
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.DemandMatrix
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DemandMatrix
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 31
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: >-
      [RunParameter("Demand Matrix", 0, "The matrix to use for analysis. A value of 0 will cause the tool to search for the demand matrix used in the most recent assignment.")]

      public int DemandMatrix
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Demand Matrix", 0, "The matrix to use for analysis. A value of 0 will cause the tool to search for the demand matrix used in the most recent assignment.")>

      Public DemandMatrix As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Demand Matrix
    - type: System.Int32
      value: 0
    - type: System.String
      value: The matrix to use for analysis. A value of 0 will cause the tool to search for the demand matrix used in the most recent assignment.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.LinkSet
  commentId: F:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.LinkSet
  id: LinkSet
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: LinkSet
  nameWithType: ExtractLinkTransfers.LinkSet
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.LinkSet
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkSet
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 34
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: >-
      [RunParameter("Link Set", "label:link1:link2", "A description of what links to apply this to. Needs to be in the form label:link1:link2. Links should be in the form 10000,10001. Separate link pair sets with a semicolon.")]

      public string LinkSet
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Link Set", "label:link1:link2", "A description of what links to apply this to. Needs to be in the form label:link1:link2. Links should be in the form 10000,10001. Separate link pair sets with a semicolon.")>

      Public LinkSet As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Link Set
    - type: System.String
      value: label:link1:link2
    - type: System.String
      value: A description of what links to apply this to. Needs to be in the form label:link1:link2. Links should be in the form 10000,10001. Separate link pair sets with a semicolon.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.PeakPeriodFactor
  commentId: F:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.PeakPeriodFactor
  id: PeakPeriodFactor
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: PeakPeriodFactor
  nameWithType: ExtractLinkTransfers.PeakPeriodFactor
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.PeakPeriodFactor
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PeakPeriodFactor
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 37
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: >-
      [RunParameter("Peak Period Factor", 1F, "The peak period factor to use. Note that the tool uses division here, so a value akin to the assignment period is expected.")]

      public float PeakPeriodFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Peak Period Factor", 1F, "The peak period factor to use. Note that the tool uses division here, so a value akin to the assignment period is expected.")>

      Public PeakPeriodFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Peak Period Factor
    - type: System.Single
      value: 1
    - type: System.String
      value: The peak period factor to use. Note that the tool uses division here, so a value akin to the assignment period is expected.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Hypernetwork
  commentId: F:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Hypernetwork
  id: Hypernetwork
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: Hypernetwork
  nameWithType: ExtractLinkTransfers.Hypernetwork
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Hypernetwork
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Hypernetwork
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 40
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: >-
      [RunParameter("Hypernetwork", false, "Set this to true if you wish to include links in the hypernetwork with the same shape.")]

      public bool Hypernetwork
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Hypernetwork", False, "Set this to true if you wish to include links in the hypernetwork with the same shape.")>

      Public Hypernetwork As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Hypernetwork
    - type: System.Boolean
      value: false
    - type: System.String
      value: Set this to true if you wish to include links in the hypernetwork with the same shape.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.SaveTo
  commentId: F:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.SaveTo
  id: SaveTo
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: SaveTo
  nameWithType: ExtractLinkTransfers.SaveTo
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.SaveTo
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveTo
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 43
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to save the results to.")]

      public FileLocation SaveTo
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to save the results to.")>

      Public SaveTo As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to save the results to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name
  commentId: P:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name
  id: Name
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExtractLinkTransfers.Name
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 45
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress
  commentId: P:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress
  id: Progress
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ExtractLinkTransfers.Progress
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 47
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour
  commentId: P:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour
  id: ProgressColour
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ExtractLinkTransfers.ProgressColour
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 49
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute(TMG.Emme.Controller)
  id: Execute(TMG.Emme.Controller)
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: Execute(Controller)
  nameWithType: ExtractLinkTransfers.Execute(Controller)
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute(TMG.Emme.Controller)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 53
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: public bool Execute(Controller controller)
    parameters:
    - id: controller
      type: TMG.Emme.Controller
    return:
      type: System.Boolean
    content.vb: Public Function Execute(controller As Controller) As Boolean
  overload: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute*
  implements:
  - TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation(System.String@)
  commentId: M:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ExtractLinkTransfers.RuntimeValidation(ref String)
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/TMG.Emme/Tools/Analysis/Transit/StrategyAnalysis/ExtractLinkTransfers.cs
    startLine: 82
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ExtractLinkTransfers.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  commentId: N:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  isExternal: false
  name: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  nameWithType: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.IEmmeTool
  commentId: T:TMG.Emme.IEmmeTool
  parent: TMG.Emme
  isExternal: false
  name: IEmmeTool
  nameWithType: IEmmeTool
  fullName: TMG.Emme.IEmmeTool
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme
  commentId: N:TMG.Emme
  isExternal: false
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  isExternal: false
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name*
  commentId: Overload:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name
  isExternal: false
  name: Name
  nameWithType: ExtractLinkTransfers.Name
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress*
  commentId: Overload:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress
  isExternal: false
  name: Progress
  nameWithType: ExtractLinkTransfers.Progress
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour*
  commentId: Overload:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: ExtractLinkTransfers.ProgressColour
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute*
  commentId: Overload:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute
  isExternal: false
  name: Execute
  nameWithType: ExtractLinkTransfers.Execute
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.Execute
- uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  parent: TMG.Emme.IEmmeTool
  isExternal: false
  name: Execute(Controller)
  nameWithType: IEmmeTool.Execute(Controller)
  fullName: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  spec.csharp:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  isExternal: false
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation*
  commentId: Overload:TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: ExtractLinkTransfers.RuntimeValidation
  fullName: TMG.Emme.Tools.Analysis.Transit.StrategyAnalysis.ExtractLinkTransfers.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
