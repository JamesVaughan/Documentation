### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Input.ODSegmentData
  commentId: T:TMG.GTAModel.Input.ODSegmentData
  id: ODSegmentData
  parent: TMG.GTAModel.Input
  children:
  - TMG.GTAModel.Input.ODSegmentData.DataElements
  - TMG.GTAModel.Input.ODSegmentData.GetDataFrom(System.Int32,System.Int32,System.Int32)
  - TMG.GTAModel.Input.ODSegmentData.Name
  - TMG.GTAModel.Input.ODSegmentData.Progress
  - TMG.GTAModel.Input.ODSegmentData.ProgressColour
  - TMG.GTAModel.Input.ODSegmentData.ReasonIndexes
  - TMG.GTAModel.Input.ODSegmentData.Root
  - TMG.GTAModel.Input.ODSegmentData.RuntimeValidation(System.String@)
  - TMG.GTAModel.Input.ODSegmentData.SegmentDataIsComplete
  - TMG.GTAModel.Input.ODSegmentData.SegmentDefinitions
  - TMG.GTAModel.Input.ODSegmentData.SegmentInformation
  langs:
  - csharp
  - vb
  name: ODSegmentData
  nameWithType: ODSegmentData
  fullName: TMG.GTAModel.Input.ODSegmentData
  type: Class
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ODSegmentData
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: 'public class ODSegmentData : IODDataSource<float[]>, IModule'
    content.vb: >-
      Public Class ODSegmentData
          Implements IODDataSource(Of Single()), IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Input.IODDataSource{System.Single[]}
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Input.ODSegmentData.DataElements
  commentId: F:TMG.GTAModel.Input.ODSegmentData.DataElements
  id: DataElements
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: DataElements
  nameWithType: ODSegmentData.DataElements
  fullName: TMG.GTAModel.Input.ODSegmentData.DataElements
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DataElements
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Data Elements", "1,2", typeof (NumberList), "What are the data indexes for segment information?")]

      public NumberList DataElements
    return:
      type: TMG.GTAModel.DataUtility.NumberList
    content.vb: >-
      <RunParameter("Data Elements", "1,2", GetType(NumberList), "What are the data indexes for segment information?")>

      Public DataElements As NumberList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Data Elements
    - type: System.String
      value: 1,2
    - type: System.Type
      value: TMG.GTAModel.DataUtility.NumberList
    - type: System.String
      value: What are the data indexes for segment information?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.ReasonIndexes
  commentId: F:TMG.GTAModel.Input.ODSegmentData.ReasonIndexes
  id: ReasonIndexes
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: ReasonIndexes
  nameWithType: ODSegmentData.ReasonIndexes
  fullName: TMG.GTAModel.Input.ODSegmentData.ReasonIndexes
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReasonIndexes
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 36
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Reasion Indexes", "0,1,2,3,4,5,6,7", typeof (NumberList), "What are the indexes for reasons?")]

      public NumberList ReasonIndexes
    return:
      type: TMG.GTAModel.DataUtility.NumberList
    content.vb: >-
      <RunParameter("Reasion Indexes", "0,1,2,3,4,5,6,7", GetType(NumberList), "What are the indexes for reasons?")>

      Public ReasonIndexes As NumberList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Reasion Indexes
    - type: System.String
      value: 0,1,2,3,4,5,6,7
    - type: System.Type
      value: TMG.GTAModel.DataUtility.NumberList
    - type: System.String
      value: What are the indexes for reasons?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.Root
  commentId: F:TMG.GTAModel.Input.ODSegmentData.Root
  id: Root
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ODSegmentData.Root
  fullName: TMG.GTAModel.Input.ODSegmentData.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 39
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.SegmentDataIsComplete
  commentId: F:TMG.GTAModel.Input.ODSegmentData.SegmentDataIsComplete
  id: SegmentDataIsComplete
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: SegmentDataIsComplete
  nameWithType: ODSegmentData.SegmentDataIsComplete
  fullName: TMG.GTAModel.Input.ODSegmentData.SegmentDataIsComplete
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SegmentDataIsComplete
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 42
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Complete Data", true, "The data contained in the Segment information is a complete set, set this to false if not everything is defined.")]

      public bool SegmentDataIsComplete
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Complete Data", True, "The data contained in the Segment information is a complete set, set this to false if not everything is defined.")>

      Public SegmentDataIsComplete As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Complete Data
    - type: System.Boolean
      value: true
    - type: System.String
      value: The data contained in the Segment information is a complete set, set this to false if not everything is defined.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.SegmentDefinitions
  commentId: F:TMG.GTAModel.Input.ODSegmentData.SegmentDefinitions
  id: SegmentDefinitions
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: SegmentDefinitions
  nameWithType: ODSegmentData.SegmentDefinitions
  fullName: TMG.GTAModel.Input.ODSegmentData.SegmentDefinitions
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SegmentDefinitions
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 45
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [SubModelInformation(Description = "Used to load in the data that defines a segment.", Required = true)]

      public IDataLineSource<float[]> SegmentDefinitions
    return:
      type: TMG.Input.IDataLineSource{System.Single[]}
    content.vb: >-
      <SubModelInformation(Description:="Used to load in the data that defines a segment.", Required:=True)>

      Public SegmentDefinitions As IDataLineSource(Of Single())
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: Used to load in the data that defines a segment.
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.SegmentInformation
  commentId: F:TMG.GTAModel.Input.ODSegmentData.SegmentInformation
  id: SegmentInformation
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: SegmentInformation
  nameWithType: ODSegmentData.SegmentInformation
  fullName: TMG.GTAModel.Input.ODSegmentData.SegmentInformation
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SegmentInformation
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 48
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [SubModelInformation(Description = "Reads the data payload for a segment.", Required = true)]

      public IDataSource<SparseTriIndex<float>> SegmentInformation
    return:
      type: XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
    content.vb: >-
      <SubModelInformation(Description:="Reads the data payload for a segment.", Required:=True)>

      Public SegmentInformation As IDataSource(Of SparseTriIndex(Of Single))
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: Reads the data payload for a segment.
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.Name
  commentId: P:TMG.GTAModel.Input.ODSegmentData.Name
  id: Name
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ODSegmentData.Name
  fullName: TMG.GTAModel.Input.ODSegmentData.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 52
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Input.ODSegmentData.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.Progress
  commentId: P:TMG.GTAModel.Input.ODSegmentData.Progress
  id: Progress
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ODSegmentData.Progress
  fullName: TMG.GTAModel.Input.ODSegmentData.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 58
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Input.ODSegmentData.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.ODSegmentData.ProgressColour
  commentId: P:TMG.GTAModel.Input.ODSegmentData.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ODSegmentData.ProgressColour
  fullName: TMG.GTAModel.Input.ODSegmentData.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 63
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Input.ODSegmentData.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.ODSegmentData.GetDataFrom(System.Int32,System.Int32,System.Int32)
  commentId: M:TMG.GTAModel.Input.ODSegmentData.GetDataFrom(System.Int32,System.Int32,System.Int32)
  id: GetDataFrom(System.Int32,System.Int32,System.Int32)
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: GetDataFrom(Int32, Int32, Int32)
  nameWithType: ODSegmentData.GetDataFrom(Int32, Int32, Int32)
  fullName: TMG.GTAModel.Input.ODSegmentData.GetDataFrom(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetDataFrom
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 68
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float[] GetDataFrom(int origin, int destination, int reason = 0)
    parameters:
    - id: origin
      type: System.Int32
    - id: destination
      type: System.Int32
    - id: reason
      type: System.Int32
    return:
      type: System.Single[]
    content.vb: Public Function GetDataFrom(origin As Integer, destination As Integer, reason As Integer = 0) As Single()
  overload: TMG.GTAModel.Input.ODSegmentData.GetDataFrom*
  implements:
  - TMG.Input.IODDataSource{System.Single[]}.GetDataFrom(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ODSegmentData.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Input.ODSegmentData.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Input.ODSegmentData
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ODSegmentData.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Input.ODSegmentData.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ODSegmentData.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../../XTMF/Code/GTAModel/Input/ODSegmentData.cs
    startLine: 97
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Input.ODSegmentData.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ODSegmentData.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.ODSegmentData.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.Input
  commentId: N:TMG.GTAModel.Input
  isExternal: false
  name: TMG.GTAModel.Input
  nameWithType: TMG.GTAModel.Input
  fullName: TMG.GTAModel.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Input.IODDataSource{System.Single[]}
  commentId: T:TMG.Input.IODDataSource{System.Single[]}
  parent: TMG.Input
  definition: TMG.Input.IODDataSource`1
  name: IODDataSource<Single[]>
  nameWithType: IODDataSource<Single[]>
  fullName: TMG.Input.IODDataSource<System.Single[]>
  nameWithType.vb: IODDataSource(Of Single())
  fullName.vb: TMG.Input.IODDataSource(Of System.Single())
  name.vb: IODDataSource(Of Single())
  spec.csharp:
  - uid: TMG.Input.IODDataSource`1
    name: IODDataSource
    nameWithType: IODDataSource
    fullName: TMG.Input.IODDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IODDataSource`1
    name: IODDataSource
    nameWithType: IODDataSource
    fullName: TMG.Input.IODDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Input.IODDataSource`1
  commentId: T:TMG.Input.IODDataSource`1
  isExternal: false
  name: IODDataSource<T>
  nameWithType: IODDataSource<T>
  fullName: TMG.Input.IODDataSource<T>
  nameWithType.vb: IODDataSource(Of T)
  fullName.vb: TMG.Input.IODDataSource(Of T)
  name.vb: IODDataSource(Of T)
  spec.csharp:
  - uid: TMG.Input.IODDataSource`1
    name: IODDataSource
    nameWithType: IODDataSource
    fullName: TMG.Input.IODDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IODDataSource`1
    name: IODDataSource
    nameWithType: IODDataSource
    fullName: TMG.Input.IODDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.GTAModel.DataUtility.NumberList
  commentId: T:TMG.GTAModel.DataUtility.NumberList
  parent: TMG.GTAModel.DataUtility
  isExternal: false
  name: NumberList
  nameWithType: NumberList
  fullName: TMG.GTAModel.DataUtility.NumberList
- uid: TMG.GTAModel.DataUtility
  commentId: N:TMG.GTAModel.DataUtility
  isExternal: false
  name: TMG.GTAModel.DataUtility
  nameWithType: TMG.GTAModel.DataUtility
  fullName: TMG.GTAModel.DataUtility
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Input.IDataLineSource{System.Single[]}
  commentId: T:TMG.Input.IDataLineSource{System.Single[]}
  parent: TMG.Input
  definition: TMG.Input.IDataLineSource`1
  name: IDataLineSource<Single[]>
  nameWithType: IDataLineSource<Single[]>
  fullName: TMG.Input.IDataLineSource<System.Single[]>
  nameWithType.vb: IDataLineSource(Of Single())
  fullName.vb: TMG.Input.IDataLineSource(Of System.Single())
  name.vb: IDataLineSource(Of Single())
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IDataLineSource`1
  commentId: T:TMG.Input.IDataLineSource`1
  isExternal: false
  name: IDataLineSource<T>
  nameWithType: IDataLineSource<T>
  fullName: TMG.Input.IDataLineSource<T>
  nameWithType.vb: IDataLineSource(Of T)
  fullName.vb: TMG.Input.IDataLineSource(Of T)
  name.vb: IDataLineSource(Of T)
  spec.csharp:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IDataLineSource`1
    name: IDataLineSource
    nameWithType: IDataLineSource
    fullName: TMG.Input.IDataLineSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
  commentId: T:XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<SparseTriIndex<Single>>
  nameWithType: IDataSource<SparseTriIndex<Single>>
  fullName: XTMF.IDataSource<Datastructure.SparseTriIndex<System.Single>>
  nameWithType.vb: IDataSource(Of SparseTriIndex(Of Single))
  fullName.vb: XTMF.IDataSource(Of Datastructure.SparseTriIndex(Of System.Single))
  name.vb: IDataSource(Of SparseTriIndex(Of Single))
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  isExternal: false
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ODSegmentData.Name*
  commentId: Overload:TMG.GTAModel.Input.ODSegmentData.Name
  isExternal: false
  name: Name
  nameWithType: ODSegmentData.Name
  fullName: TMG.GTAModel.Input.ODSegmentData.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Input.ODSegmentData.Progress*
  commentId: Overload:TMG.GTAModel.Input.ODSegmentData.Progress
  isExternal: false
  name: Progress
  nameWithType: ODSegmentData.Progress
  fullName: TMG.GTAModel.Input.ODSegmentData.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Input.ODSegmentData.ProgressColour*
  commentId: Overload:TMG.GTAModel.Input.ODSegmentData.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: ODSegmentData.ProgressColour
  fullName: TMG.GTAModel.Input.ODSegmentData.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ODSegmentData.GetDataFrom*
  commentId: Overload:TMG.GTAModel.Input.ODSegmentData.GetDataFrom
  isExternal: false
  name: GetDataFrom
  nameWithType: ODSegmentData.GetDataFrom
  fullName: TMG.GTAModel.Input.ODSegmentData.GetDataFrom
- uid: TMG.Input.IODDataSource{System.Single[]}.GetDataFrom(System.Int32,System.Int32,System.Int32)
  commentId: M:TMG.Input.IODDataSource{System.Single[]}.GetDataFrom(System.Int32,System.Int32,System.Int32)
  parent: TMG.Input.IODDataSource{System.Single[]}
  definition: TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
  name: GetDataFrom(Int32, Int32, Int32)
  nameWithType: IODDataSource<Single[]>.GetDataFrom(Int32, Int32, Int32)
  fullName: TMG.Input.IODDataSource<System.Single[]>.GetDataFrom(System.Int32, System.Int32, System.Int32)
  nameWithType.vb: IODDataSource(Of Single()).GetDataFrom(Int32, Int32, Int32)
  fullName.vb: TMG.Input.IODDataSource(Of System.Single()).GetDataFrom(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
    name: GetDataFrom
    nameWithType: IODDataSource<Single[]>.GetDataFrom
    fullName: TMG.Input.IODDataSource<System.Single[]>.GetDataFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
    name: GetDataFrom
    nameWithType: IODDataSource(Of Single()).GetDataFrom
    fullName: TMG.Input.IODDataSource(Of System.Single()).GetDataFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single[]
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
  commentId: M:TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
  isExternal: true
  name: GetDataFrom(Int32, Int32, Int32)
  nameWithType: IODDataSource<T>.GetDataFrom(Int32, Int32, Int32)
  fullName: TMG.Input.IODDataSource<T>.GetDataFrom(System.Int32, System.Int32, System.Int32)
  nameWithType.vb: IODDataSource(Of T).GetDataFrom(Int32, Int32, Int32)
  fullName.vb: TMG.Input.IODDataSource(Of T).GetDataFrom(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
    name: GetDataFrom
    nameWithType: IODDataSource<T>.GetDataFrom
    fullName: TMG.Input.IODDataSource<T>.GetDataFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.IODDataSource`1.GetDataFrom(System.Int32,System.Int32,System.Int32)
    name: GetDataFrom
    nameWithType: IODDataSource(Of T).GetDataFrom
    fullName: TMG.Input.IODDataSource(Of T).GetDataFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ODSegmentData.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Input.ODSegmentData.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: ODSegmentData.RuntimeValidation
  fullName: TMG.GTAModel.Input.ODSegmentData.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
