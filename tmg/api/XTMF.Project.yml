### YamlMime:ManagedReference
items:
- uid: XTMF.Project
  commentId: T:XTMF.Project
  id: Project
  parent: XTMF
  children:
  - XTMF.Project.#ctor(System.String,XTMF.IConfiguration,System.Boolean)
  - XTMF.Project.AddModelSystem(XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String)
  - XTMF.Project.AddModelSystem(XTMF.ModelSystem,System.String,System.String@)
  - XTMF.Project.CreateModelSystem(System.String@,System.Int32)
  - XTMF.Project.CreateModelSystem(System.String@,XTMF.IConfiguration,System.Int32)
  - XTMF.Project.CreateModelSystem(System.String@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  - XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,System.Int32)
  - XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,System.Int32)
  - XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  - XTMF.Project.CreateModule(XTMF.IConfiguration,XTMF.IModelSystemStructure,XTMF.IModelSystemStructure,System.Collections.Generic.List{System.Int32},XTMF.ErrorWithPath@)
  - XTMF.Project.Description
  - XTMF.Project.ExternallySaved
  - XTMF.Project.GetParameters(System.Type)
  - XTMF.Project.HasChanged
  - XTMF.Project.IndexOf(XTMF.IModelSystemStructure)
  - XTMF.Project.LinkedParameters
  - XTMF.Project.ModelSystemDescriptions
  - XTMF.Project.ModelSystemStructure
  - XTMF.Project.Name
  - XTMF.Project.RegionDisplays
  - XTMF.Project.Reload
  - XTMF.Project.Save(System.String,System.String@)
  - XTMF.Project.Save(System.String@)
  - XTMF.Project.SaveModelSystem(System.Int32,System.String@)
  - XTMF.Project.SetActive
  - XTMF.Project.SetModelSystem(System.Int32,XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},System.String)
  - XTMF.Project.UpdateModelSystemStructure(System.Int32,XTMF.ModelSystemStructure)
  - XTMF.Project.ValidateModelName(System.String)
  - XTMF.Project.ValidateProjectName(System.String)
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: Project
  fullName: XTMF.Project
  type: Class
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Project
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 42
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRepresents a project currently installed in\nthe XTMF installation\n"
  example: []
  syntax:
    content: 'public sealed class Project : IProject'
    content.vb: >-
      Public NotInheritable Class Project
          Implements IProject
  inheritance:
  - System.Object
  implements:
  - XTMF.IProject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: XTMF.Project.Save(System.String,System.String@)
  commentId: M:XTMF.Project.Save(System.String,System.String@)
  id: Save(System.String,System.String@)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: Save(String, ref String)
  nameWithType: Project.Save(String, ref String)
  fullName: XTMF.Project.Save(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project_IO.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/Project_IO.cs
    startLine: 541
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Save(string path, ref string error)
    parameters:
    - id: path
      type: System.String
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Save(path As String, ByRef error As String) As Boolean
  overload: XTMF.Project.Save*
  implements:
  - XTMF.IProject.Save(System.String,System.String@)
  nameWithType.vb: Project.Save(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.Save(System.String, ByRef System.String)
  name.vb: Save(String, ByRef String)
- uid: XTMF.Project.#ctor(System.String,XTMF.IConfiguration,System.Boolean)
  commentId: M:XTMF.Project.#ctor(System.String,XTMF.IConfiguration,System.Boolean)
  id: '#ctor(System.String,XTMF.IConfiguration,System.Boolean)'
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: Project(String, IConfiguration, Boolean)
  nameWithType: Project.Project(String, IConfiguration, Boolean)
  fullName: XTMF.Project.Project(System.String, XTMF.IConfiguration, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 69
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a new project\nFor internal use only\n"
  example: []
  syntax:
    content: public Project(string name, IConfiguration configuration, bool remoteProject = false)
    parameters:
    - id: name
      type: System.String
      description: The name of the project
    - id: configuration
      type: XTMF.IConfiguration
      description: A link to the configuration that XTMF is using
    - id: remoteProject
      type: System.Boolean
      description: Are we a remote project?
    content.vb: Public Sub New(name As String, configuration As IConfiguration, remoteProject As Boolean = False)
  overload: XTMF.Project.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.RegionDisplays
  commentId: P:XTMF.Project.RegionDisplays
  id: RegionDisplays
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: RegionDisplays
  nameWithType: Project.RegionDisplays
  fullName: XTMF.Project.RegionDisplays
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDisplays
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 107
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public IReadOnlyList<List<IRegionDisplay>> RegionDisplays { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}}
    content.vb: Public ReadOnly Property RegionDisplays As IReadOnlyList(Of List(Of IRegionDisplay))
  overload: XTMF.Project.RegionDisplays*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Project.ModelSystemDescriptions
  commentId: P:XTMF.Project.ModelSystemDescriptions
  id: ModelSystemDescriptions
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: ModelSystemDescriptions
  nameWithType: Project.ModelSystemDescriptions
  fullName: XTMF.Project.ModelSystemDescriptions
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemDescriptions
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 119
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public IReadOnlyList<string> ModelSystemDescriptions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Public ReadOnly Property ModelSystemDescriptions As IReadOnlyList(Of String)
  overload: XTMF.Project.ModelSystemDescriptions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Project.IndexOf(XTMF.IModelSystemStructure)
  commentId: M:XTMF.Project.IndexOf(XTMF.IModelSystemStructure)
  id: IndexOf(XTMF.IModelSystemStructure)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: IndexOf(IModelSystemStructure)
  nameWithType: Project.IndexOf(IModelSystemStructure)
  fullName: XTMF.Project.IndexOf(XTMF.IModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IndexOf
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 134
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nFinds the index of the given model system.\nReturns -1 if it is not found.\n"
  example: []
  syntax:
    content: public int IndexOf(IModelSystemStructure realModelSystemStructure)
    parameters:
    - id: realModelSystemStructure
      type: XTMF.IModelSystemStructure
      description: The model system to find.
    return:
      type: System.Int32
      description: The index for this model system, -1 if it is not found.
    content.vb: Public Function IndexOf(realModelSystemStructure As IModelSystemStructure) As Integer
  overload: XTMF.Project.IndexOf*
  implements:
  - XTMF.IProject.IndexOf(XTMF.IModelSystemStructure)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.Description
  commentId: P:XTMF.Project.Description
  id: Description
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Project.Description
  fullName: XTMF.Project.Description
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Description
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 155
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe Project Description\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: XTMF.Project.Description*
  implements:
  - XTMF.IProject.Description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Project.HasChanged
  commentId: P:XTMF.Project.HasChanged
  id: HasChanged
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: HasChanged
  nameWithType: Project.HasChanged
  fullName: XTMF.Project.HasChanged
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HasChanged
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 160
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nDirty flag on whether changes have been made or not\n"
  example: []
  syntax:
    content: public bool HasChanged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasChanged As Boolean
  overload: XTMF.Project.HasChanged*
  implements:
  - XTMF.IProject.HasChanged
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Project.LinkedParameters
  commentId: P:XTMF.Project.LinkedParameters
  id: LinkedParameters
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: LinkedParameters
  nameWithType: Project.LinkedParameters
  fullName: XTMF.Project.LinkedParameters
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkedParameters
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 164
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public IReadOnlyList<List<ILinkedParameter>> LinkedParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{XTMF.ILinkedParameter}}
    content.vb: Public ReadOnly Property LinkedParameters As IReadOnlyList(Of List(Of ILinkedParameter))
  overload: XTMF.Project.LinkedParameters*
  implements:
  - XTMF.IProject.LinkedParameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Project.ModelSystemStructure
  commentId: P:XTMF.Project.ModelSystemStructure
  id: ModelSystemStructure
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: ModelSystemStructure
  nameWithType: Project.ModelSystemStructure
  fullName: XTMF.Project.ModelSystemStructure
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemStructure
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 176
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nModel System Structures associated with this project\n"
  example: []
  syntax:
    content: public IReadOnlyList<IModelSystemStructure> ModelSystemStructure { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{XTMF.IModelSystemStructure}
    content.vb: Public ReadOnly Property ModelSystemStructure As IReadOnlyList(Of IModelSystemStructure)
  overload: XTMF.Project.ModelSystemStructure*
  implements:
  - XTMF.IProject.ModelSystemStructure
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Project.Name
  commentId: P:XTMF.Project.Name
  id: Name
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Project.Name
  fullName: XTMF.Project.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 188
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe name of the Project\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: XTMF.Project.Name*
  implements:
  - XTMF.IProject.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Project.CreateModelSystem(System.String@,System.Int32)
  commentId: M:XTMF.Project.CreateModelSystem(System.String@,System.Int32)
  id: CreateModelSystem(System.String@,System.Int32)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref String, Int32)
  nameWithType: Project.CreateModelSystem(ref String, Int32)
  fullName: XTMF.Project.CreateModelSystem(ref System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 190
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplate CreateModelSystem(ref string error, int modelSystemIndex)
    parameters:
    - id: error
      type: System.String
    - id: modelSystemIndex
      type: System.Int32
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Function CreateModelSystem(ByRef error As String, modelSystemIndex As Integer) As IModelSystemTemplate
  overload: XTMF.Project.CreateModelSystem*
  implements:
  - XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
  nameWithType.vb: Project.CreateModelSystem(ByRef String, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.CreateModelSystem(ByRef System.String, System.Int32)
  name.vb: CreateModelSystem(ByRef String, Int32)
- uid: XTMF.Project.Reload
  commentId: M:XTMF.Project.Reload
  id: Reload
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: Project.Reload()
  fullName: XTMF.Project.Reload()
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Reload
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 206
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nReloads the Project\n"
  example: []
  syntax:
    content: public void Reload()
    content.vb: Public Sub Reload
  overload: XTMF.Project.Reload*
  implements:
  - XTMF.IProject.Reload
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.Save(System.String@)
  commentId: M:XTMF.Project.Save(System.String@)
  id: Save(System.String@)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: Save(ref String)
  nameWithType: Project.Save(ref String)
  fullName: XTMF.Project.Save(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 220
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public bool Save(ref string error)
    parameters:
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Save(ByRef error As String) As Boolean
  overload: XTMF.Project.Save*
  implements:
  - XTMF.IProject.Save(System.String@)
  nameWithType.vb: Project.Save(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.Save(ByRef System.String)
  name.vb: Save(ByRef String)
- uid: XTMF.Project.ValidateModelName(System.String)
  commentId: M:XTMF.Project.ValidateModelName(System.String)
  id: ValidateModelName(System.String)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: ValidateModelName(String)
  nameWithType: Project.ValidateModelName(String)
  fullName: XTMF.Project.ValidateModelName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateModelName
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 254
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nValidates a Model name\n"
  example: []
  syntax:
    content: public bool ValidateModelName(string possibleNewName)
    parameters:
    - id: possibleNewName
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ValidateModelName(possibleNewName As String) As Boolean
  overload: XTMF.Project.ValidateModelName*
  implements:
  - XTMF.IProject.ValidateModelName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.AddModelSystem(XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String)
  commentId: M:XTMF.Project.AddModelSystem(XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String)
  id: AddModelSystem(XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: AddModelSystem(IModelSystemStructure, List<ILinkedParameter>, String)
  nameWithType: Project.AddModelSystem(IModelSystemStructure, List<ILinkedParameter>, String)
  fullName: XTMF.Project.AddModelSystem(XTMF.IModelSystemStructure, System.Collections.Generic.List<XTMF.ILinkedParameter>, System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 284
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nAdds a Model System to this Project\n"
  example: []
  syntax:
    content: public void AddModelSystem(IModelSystemStructure root, List<ILinkedParameter> lps, string description)
    parameters:
    - id: root
      type: XTMF.IModelSystemStructure
      description: ''
    - id: lps
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
      description: ''
    - id: description
      type: System.String
      description: ''
    content.vb: Public Sub AddModelSystem(root As IModelSystemStructure, lps As List(Of ILinkedParameter), description As String)
  overload: XTMF.Project.AddModelSystem*
  nameWithType.vb: Project.AddModelSystem(IModelSystemStructure, List(Of ILinkedParameter), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.AddModelSystem(XTMF.IModelSystemStructure, System.Collections.Generic.List(Of XTMF.ILinkedParameter), System.String)
  name.vb: AddModelSystem(IModelSystemStructure, List(Of ILinkedParameter), String)
- uid: XTMF.Project.AddModelSystem(XTMF.ModelSystem,System.String,System.String@)
  commentId: M:XTMF.Project.AddModelSystem(XTMF.ModelSystem,System.String,System.String@)
  id: AddModelSystem(XTMF.ModelSystem,System.String,System.String@)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: AddModelSystem(ModelSystem, String, ref String)
  nameWithType: Project.AddModelSystem(ModelSystem, String, ref String)
  fullName: XTMF.Project.AddModelSystem(XTMF.ModelSystem, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 301
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public bool AddModelSystem(ModelSystem modelSystem, string newName, ref string error)
    parameters:
    - id: modelSystem
      type: XTMF.ModelSystem
      description: ''
    - id: newName
      type: System.String
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AddModelSystem(modelSystem As ModelSystem, newName As String, ByRef error As String) As Boolean
  overload: XTMF.Project.AddModelSystem*
  nameWithType.vb: Project.AddModelSystem(ModelSystem, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.AddModelSystem(XTMF.ModelSystem, System.String, ByRef System.String)
  name.vb: AddModelSystem(ModelSystem, String, ByRef String)
- uid: XTMF.Project.SetModelSystem(System.Int32,XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},System.String)
  commentId: M:XTMF.Project.SetModelSystem(System.Int32,XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},System.String)
  id: SetModelSystem(System.Int32,XTMF.IModelSystemStructure,System.Collections.Generic.List{XTMF.ILinkedParameter},System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},System.String)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: SetModelSystem(Int32, IModelSystemStructure, List<ILinkedParameter>, List<IRegionDisplay>, String)
  nameWithType: Project.SetModelSystem(Int32, IModelSystemStructure, List<ILinkedParameter>, List<IRegionDisplay>, String)
  fullName: XTMF.Project.SetModelSystem(System.Int32, XTMF.IModelSystemStructure, System.Collections.Generic.List<XTMF.ILinkedParameter>, System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>, System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 483
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public void SetModelSystem(int modelSystemIndex, IModelSystemStructure realModelSystemStructure, List<ILinkedParameter> lps, List<IRegionDisplay> regionDisplays, string description)
    parameters:
    - id: modelSystemIndex
      type: System.Int32
      description: ''
    - id: realModelSystemStructure
      type: XTMF.IModelSystemStructure
      description: ''
    - id: lps
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
      description: ''
    - id: regionDisplays
      type: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
      description: ''
    - id: description
      type: System.String
      description: ''
    content.vb: Public Sub SetModelSystem(modelSystemIndex As Integer, realModelSystemStructure As IModelSystemStructure, lps As List(Of ILinkedParameter), regionDisplays As List(Of IRegionDisplay), description As String)
  overload: XTMF.Project.SetModelSystem*
  nameWithType.vb: Project.SetModelSystem(Int32, IModelSystemStructure, List(Of ILinkedParameter), List(Of IRegionDisplay), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.SetModelSystem(System.Int32, XTMF.IModelSystemStructure, System.Collections.Generic.List(Of XTMF.ILinkedParameter), System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay), System.String)
  name.vb: SetModelSystem(Int32, IModelSystemStructure, List(Of ILinkedParameter), List(Of IRegionDisplay), String)
- uid: XTMF.Project.GetParameters(System.Type)
  commentId: M:XTMF.Project.GetParameters(System.Type)
  id: GetParameters(System.Type)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: GetParameters(Type)
  nameWithType: Project.GetParameters(Type)
  fullName: XTMF.Project.GetParameters(System.Type)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetParameters
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 502
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet all of the default properties from the model\n"
  example: []
  syntax:
    content: public static IModuleParameters GetParameters(Type modelType)
    parameters:
    - id: modelType
      type: System.Type
      description: The model that we want all of the properties from
    return:
      type: XTMF.IModuleParameters
      description: A set of parameters with their default values
    content.vb: Public Shared Function GetParameters(modelType As Type) As IModuleParameters
  overload: XTMF.Project.GetParameters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Project.UpdateModelSystemStructure(System.Int32,XTMF.ModelSystemStructure)
  commentId: M:XTMF.Project.UpdateModelSystemStructure(System.Int32,XTMF.ModelSystemStructure)
  id: UpdateModelSystemStructure(System.Int32,XTMF.ModelSystemStructure)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: UpdateModelSystemStructure(Int32, ModelSystemStructure)
  nameWithType: Project.UpdateModelSystemStructure(Int32, ModelSystemStructure)
  fullName: XTMF.Project.UpdateModelSystemStructure(System.Int32, XTMF.ModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UpdateModelSystemStructure
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 536
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public void UpdateModelSystemStructure(int modelSystemIndex, ModelSystemStructure newMSS)
    parameters:
    - id: modelSystemIndex
      type: System.Int32
      description: ''
    - id: newMSS
      type: XTMF.ModelSystemStructure
      description: ''
    content.vb: Public Sub UpdateModelSystemStructure(modelSystemIndex As Integer, newMSS As ModelSystemStructure)
  overload: XTMF.Project.UpdateModelSystemStructure*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.ValidateProjectName(System.String)
  commentId: M:XTMF.Project.ValidateProjectName(System.String)
  id: ValidateProjectName(System.String)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: ValidateProjectName(String)
  nameWithType: Project.ValidateProjectName(String)
  fullName: XTMF.Project.ValidateProjectName(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateProjectName
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 551
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nProvides a way to check if a project&apos;s name is valid for adding\n"
  example: []
  syntax:
    content: public static bool ValidateProjectName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the project that you want to add
    return:
      type: System.Boolean
      description: If the name is valid, true, or not, false.
    content.vb: Public Shared Function ValidateProjectName(name As String) As Boolean
  overload: XTMF.Project.ValidateProjectName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,System.Int32)
  commentId: M:XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,System.Int32)
  id: CreateModelSystem(XTMF.ErrorWithPath@,System.Int32)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref ErrorWithPath, Int32)
  nameWithType: Project.CreateModelSystem(ref ErrorWithPath, Int32)
  fullName: XTMF.Project.CreateModelSystem(ref XTMF.ErrorWithPath, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 569
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplate CreateModelSystem(ref ErrorWithPath error, int modelSystemIndex)
    parameters:
    - id: error
      type: XTMF.ErrorWithPath
    - id: modelSystemIndex
      type: System.Int32
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Function CreateModelSystem(ByRef error As ErrorWithPath, modelSystemIndex As Integer) As IModelSystemTemplate
  overload: XTMF.Project.CreateModelSystem*
  nameWithType.vb: Project.CreateModelSystem(ByRef ErrorWithPath, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.CreateModelSystem(ByRef XTMF.ErrorWithPath, System.Int32)
  name.vb: CreateModelSystem(ByRef ErrorWithPath, Int32)
- uid: XTMF.Project.CreateModelSystem(System.String@,XTMF.IConfiguration,System.Int32)
  commentId: M:XTMF.Project.CreateModelSystem(System.String@,XTMF.IConfiguration,System.Int32)
  id: CreateModelSystem(System.String@,XTMF.IConfiguration,System.Int32)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref String, IConfiguration, Int32)
  nameWithType: Project.CreateModelSystem(ref String, IConfiguration, Int32)
  fullName: XTMF.Project.CreateModelSystem(ref System.String, XTMF.IConfiguration, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 582
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplate CreateModelSystem(ref string error, IConfiguration configuration, int modelSystemIndex)
    parameters:
    - id: error
      type: System.String
    - id: configuration
      type: XTMF.IConfiguration
    - id: modelSystemIndex
      type: System.Int32
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Function CreateModelSystem(ByRef error As String, configuration As IConfiguration, modelSystemIndex As Integer) As IModelSystemTemplate
  overload: XTMF.Project.CreateModelSystem*
  nameWithType.vb: Project.CreateModelSystem(ByRef String, IConfiguration, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.CreateModelSystem(ByRef System.String, XTMF.IConfiguration, System.Int32)
  name.vb: CreateModelSystem(ByRef String, IConfiguration, Int32)
- uid: XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,System.Int32)
  commentId: M:XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,System.Int32)
  id: CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,System.Int32)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref ErrorWithPath, IConfiguration, Int32)
  nameWithType: Project.CreateModelSystem(ref ErrorWithPath, IConfiguration, Int32)
  fullName: XTMF.Project.CreateModelSystem(ref XTMF.ErrorWithPath, XTMF.IConfiguration, System.Int32)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 596
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplate CreateModelSystem(ref ErrorWithPath error, IConfiguration configuration, int modelSystemIndex)
    parameters:
    - id: error
      type: XTMF.ErrorWithPath
    - id: configuration
      type: XTMF.IConfiguration
    - id: modelSystemIndex
      type: System.Int32
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Function CreateModelSystem(ByRef error As ErrorWithPath, configuration As IConfiguration, modelSystemIndex As Integer) As IModelSystemTemplate
  overload: XTMF.Project.CreateModelSystem*
  nameWithType.vb: Project.CreateModelSystem(ByRef ErrorWithPath, IConfiguration, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.CreateModelSystem(ByRef XTMF.ErrorWithPath, XTMF.IConfiguration, System.Int32)
  name.vb: CreateModelSystem(ByRef ErrorWithPath, IConfiguration, Int32)
- uid: XTMF.Project.CreateModelSystem(System.String@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  commentId: M:XTMF.Project.CreateModelSystem(System.String@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  id: CreateModelSystem(System.String@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref String, IConfiguration, IModelSystemStructure)
  nameWithType: Project.CreateModelSystem(ref String, IConfiguration, IModelSystemStructure)
  fullName: XTMF.Project.CreateModelSystem(ref System.String, XTMF.IConfiguration, XTMF.IModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 610
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplate CreateModelSystem(ref string error, IConfiguration configuration, IModelSystemStructure modelSystemStructure)
    parameters:
    - id: error
      type: System.String
    - id: configuration
      type: XTMF.IConfiguration
    - id: modelSystemStructure
      type: XTMF.IModelSystemStructure
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Function CreateModelSystem(ByRef error As String, configuration As IConfiguration, modelSystemStructure As IModelSystemStructure) As IModelSystemTemplate
  overload: XTMF.Project.CreateModelSystem*
  nameWithType.vb: Project.CreateModelSystem(ByRef String, IConfiguration, IModelSystemStructure)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.CreateModelSystem(ByRef System.String, XTMF.IConfiguration, XTMF.IModelSystemStructure)
  name.vb: CreateModelSystem(ByRef String, IConfiguration, IModelSystemStructure)
- uid: XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  commentId: M:XTMF.Project.CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  id: CreateModelSystem(XTMF.ErrorWithPath@,XTMF.IConfiguration,XTMF.IModelSystemStructure)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModelSystem(ref ErrorWithPath, IConfiguration, IModelSystemStructure)
  nameWithType: Project.CreateModelSystem(ref ErrorWithPath, IConfiguration, IModelSystemStructure)
  fullName: XTMF.Project.CreateModelSystem(ref XTMF.ErrorWithPath, XTMF.IConfiguration, XTMF.IModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 623
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplate CreateModelSystem(ref ErrorWithPath error, IConfiguration configuration, IModelSystemStructure modelSystemStructure)
    parameters:
    - id: error
      type: XTMF.ErrorWithPath
    - id: configuration
      type: XTMF.IConfiguration
    - id: modelSystemStructure
      type: XTMF.IModelSystemStructure
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Function CreateModelSystem(ByRef error As ErrorWithPath, configuration As IConfiguration, modelSystemStructure As IModelSystemStructure) As IModelSystemTemplate
  overload: XTMF.Project.CreateModelSystem*
  nameWithType.vb: Project.CreateModelSystem(ByRef ErrorWithPath, IConfiguration, IModelSystemStructure)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.CreateModelSystem(ByRef XTMF.ErrorWithPath, XTMF.IConfiguration, XTMF.IModelSystemStructure)
  name.vb: CreateModelSystem(ByRef ErrorWithPath, IConfiguration, IModelSystemStructure)
- uid: XTMF.Project.ExternallySaved
  commentId: E:XTMF.Project.ExternallySaved
  id: ExternallySaved
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: ExternallySaved
  nameWithType: Project.ExternallySaved
  fullName: XTMF.Project.ExternallySaved
  type: Event
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExternallySaved
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 644
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis event is invoked when a cloned project gets saved, overwriting this project.\nWhen a running model system saves itself, this will trigger.\n"
  example: []
  syntax:
    content: public event EventHandler<ProjectExternallySavedEventArgs> ExternallySaved
    return:
      type: System.EventHandler{XTMF.Editing.ProjectExternallySavedEventArgs}
    content.vb: Public Event ExternallySaved As EventHandler(Of ProjectExternallySavedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.SaveModelSystem(System.Int32,System.String@)
  commentId: M:XTMF.Project.SaveModelSystem(System.Int32,System.String@)
  id: SaveModelSystem(System.Int32,System.String@)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: SaveModelSystem(Int32, ref String)
  nameWithType: Project.SaveModelSystem(Int32, ref String)
  fullName: XTMF.Project.SaveModelSystem(System.Int32, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveModelSystem
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 646
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SaveModelSystem(int modelSystemIndex, ref string error)
    parameters:
    - id: modelSystemIndex
      type: System.Int32
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SaveModelSystem(modelSystemIndex As Integer, ByRef error As String) As Boolean
  overload: XTMF.Project.SaveModelSystem*
  nameWithType.vb: Project.SaveModelSystem(Int32, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Project.SaveModelSystem(System.Int32, ByRef System.String)
  name.vb: SaveModelSystem(Int32, ByRef String)
- uid: XTMF.Project.SetActive
  commentId: M:XTMF.Project.SetActive
  id: SetActive
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: SetActive()
  nameWithType: Project.SetActive()
  fullName: XTMF.Project.SetActive()
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetActive
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 654
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public void SetActive()
    content.vb: Public Sub SetActive
  overload: XTMF.Project.SetActive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Project.CreateModule(XTMF.IConfiguration,XTMF.IModelSystemStructure,XTMF.IModelSystemStructure,System.Collections.Generic.List{System.Int32},XTMF.ErrorWithPath@)
  commentId: M:XTMF.Project.CreateModule(XTMF.IConfiguration,XTMF.IModelSystemStructure,XTMF.IModelSystemStructure,System.Collections.Generic.List{System.Int32},XTMF.ErrorWithPath@)
  id: CreateModule(XTMF.IConfiguration,XTMF.IModelSystemStructure,XTMF.IModelSystemStructure,System.Collections.Generic.List{System.Int32},XTMF.ErrorWithPath@)
  parent: XTMF.Project
  langs:
  - csharp
  - vb
  name: CreateModule(IConfiguration, IModelSystemStructure, IModelSystemStructure, List<Int32>, ref ErrorWithPath)
  nameWithType: Project.CreateModule(IConfiguration, IModelSystemStructure, IModelSystemStructure, List<Int32>, ref ErrorWithPath)
  fullName: XTMF.Project.CreateModule(XTMF.IConfiguration, XTMF.IModelSystemStructure, XTMF.IModelSystemStructure, System.Collections.Generic.List<System.Int32>, ref XTMF.ErrorWithPath)
  type: Method
  source:
    remote:
      path: Code/XTMF/Project.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateModule
    path: ../../XTMF/Code/XTMF/Project.cs
    startLine: 1064
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n"
  example: []
  syntax:
    content: public static bool CreateModule(IConfiguration config, IModelSystemStructure rootMS, IModelSystemStructure ps, List<int> path, ref ErrorWithPath error)
    parameters:
    - id: config
      type: XTMF.IConfiguration
      description: ''
    - id: rootMS
      type: XTMF.IModelSystemStructure
      description: ''
    - id: ps
      type: XTMF.IModelSystemStructure
      description: ''
    - id: path
      type: System.Collections.Generic.List{System.Int32}
      description: ''
    - id: error
      type: XTMF.ErrorWithPath
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function CreateModule(config As IConfiguration, rootMS As IModelSystemStructure, ps As IModelSystemStructure, path As List(Of Integer), ByRef error As ErrorWithPath) As Boolean
  overload: XTMF.Project.CreateModule*
  nameWithType.vb: Project.CreateModule(IConfiguration, IModelSystemStructure, IModelSystemStructure, List(Of Int32), ByRef ErrorWithPath)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.Project.CreateModule(XTMF.IConfiguration, XTMF.IModelSystemStructure, XTMF.IModelSystemStructure, System.Collections.Generic.List(Of System.Int32), ByRef XTMF.ErrorWithPath)
  name.vb: CreateModule(IConfiguration, IModelSystemStructure, IModelSystemStructure, List(Of Int32), ByRef ErrorWithPath)
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IProject
  commentId: T:XTMF.IProject
  parent: XTMF
  name: IProject
  nameWithType: IProject
  fullName: XTMF.IProject
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.Project.Save*
  commentId: Overload:XTMF.Project.Save
  name: Save
  nameWithType: Project.Save
  fullName: XTMF.Project.Save
- uid: XTMF.IProject.Save(System.String,System.String@)
  commentId: M:XTMF.IProject.Save(System.String,System.String@)
  parent: XTMF.IProject
  isExternal: true
  name: Save(String, String)
  nameWithType: IProject.Save(String, String)
  fullName: XTMF.IProject.Save(System.String, System.String)
  spec.csharp:
  - uid: XTMF.IProject.Save(System.String,System.String@)
    name: Save
    nameWithType: IProject.Save
    fullName: XTMF.IProject.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProject.Save(System.String,System.String@)
    name: Save
    nameWithType: IProject.Save
    fullName: XTMF.IProject.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Project.#ctor*
  commentId: Overload:XTMF.Project.#ctor
  name: Project
  nameWithType: Project.Project
  fullName: XTMF.Project.Project
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: XTMF.Project.RegionDisplays*
  commentId: Overload:XTMF.Project.RegionDisplays
  name: RegionDisplays
  nameWithType: Project.RegionDisplays
  fullName: XTMF.Project.RegionDisplays
- uid: System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<List<IRegionDisplay>>
  nameWithType: IReadOnlyList<List<IRegionDisplay>>
  fullName: System.Collections.Generic.IReadOnlyList<System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>>
  nameWithType.vb: IReadOnlyList(Of List(Of IRegionDisplay))
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay))
  name.vb: IReadOnlyList(Of List(Of IRegionDisplay))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.Project.ModelSystemDescriptions*
  commentId: Overload:XTMF.Project.ModelSystemDescriptions
  name: ModelSystemDescriptions
  nameWithType: Project.ModelSystemDescriptions
  fullName: XTMF.Project.ModelSystemDescriptions
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.IndexOf*
  commentId: Overload:XTMF.Project.IndexOf
  name: IndexOf
  nameWithType: Project.IndexOf
  fullName: XTMF.Project.IndexOf
- uid: XTMF.IProject.IndexOf(XTMF.IModelSystemStructure)
  commentId: M:XTMF.IProject.IndexOf(XTMF.IModelSystemStructure)
  parent: XTMF.IProject
  name: IndexOf(IModelSystemStructure)
  nameWithType: IProject.IndexOf(IModelSystemStructure)
  fullName: XTMF.IProject.IndexOf(XTMF.IModelSystemStructure)
  spec.csharp:
  - uid: XTMF.IProject.IndexOf(XTMF.IModelSystemStructure)
    name: IndexOf
    nameWithType: IProject.IndexOf
    fullName: XTMF.IProject.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProject.IndexOf(XTMF.IModelSystemStructure)
    name: IndexOf
    nameWithType: IProject.IndexOf
    fullName: XTMF.IProject.IndexOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.Project.Description*
  commentId: Overload:XTMF.Project.Description
  name: Description
  nameWithType: Project.Description
  fullName: XTMF.Project.Description
- uid: XTMF.IProject.Description
  commentId: P:XTMF.IProject.Description
  parent: XTMF.IProject
  name: Description
  nameWithType: IProject.Description
  fullName: XTMF.IProject.Description
- uid: XTMF.Project.HasChanged*
  commentId: Overload:XTMF.Project.HasChanged
  name: HasChanged
  nameWithType: Project.HasChanged
  fullName: XTMF.Project.HasChanged
- uid: XTMF.IProject.HasChanged
  commentId: P:XTMF.IProject.HasChanged
  parent: XTMF.IProject
  name: HasChanged
  nameWithType: IProject.HasChanged
  fullName: XTMF.IProject.HasChanged
- uid: XTMF.Project.LinkedParameters*
  commentId: Overload:XTMF.Project.LinkedParameters
  name: LinkedParameters
  nameWithType: Project.LinkedParameters
  fullName: XTMF.Project.LinkedParameters
- uid: XTMF.IProject.LinkedParameters
  commentId: P:XTMF.IProject.LinkedParameters
  parent: XTMF.IProject
  name: LinkedParameters
  nameWithType: IProject.LinkedParameters
  fullName: XTMF.IProject.LinkedParameters
- uid: System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{XTMF.ILinkedParameter}}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Collections.Generic.List{XTMF.ILinkedParameter}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<List<ILinkedParameter>>
  nameWithType: IReadOnlyList<List<ILinkedParameter>>
  fullName: System.Collections.Generic.IReadOnlyList<System.Collections.Generic.List<XTMF.ILinkedParameter>>
  nameWithType.vb: IReadOnlyList(Of List(Of ILinkedParameter))
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Collections.Generic.List(Of XTMF.ILinkedParameter))
  name.vb: IReadOnlyList(Of List(Of ILinkedParameter))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.ModelSystemStructure*
  commentId: Overload:XTMF.Project.ModelSystemStructure
  name: ModelSystemStructure
  nameWithType: Project.ModelSystemStructure
  fullName: XTMF.Project.ModelSystemStructure
- uid: XTMF.IProject.ModelSystemStructure
  commentId: P:XTMF.IProject.ModelSystemStructure
  parent: XTMF.IProject
  name: ModelSystemStructure
  nameWithType: IProject.ModelSystemStructure
  fullName: XTMF.IProject.ModelSystemStructure
- uid: System.Collections.Generic.IReadOnlyList{XTMF.IModelSystemStructure}
  commentId: T:System.Collections.Generic.IReadOnlyList{XTMF.IModelSystemStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IModelSystemStructure>
  nameWithType: IReadOnlyList<IModelSystemStructure>
  fullName: System.Collections.Generic.IReadOnlyList<XTMF.IModelSystemStructure>
  nameWithType.vb: IReadOnlyList(Of IModelSystemStructure)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of XTMF.IModelSystemStructure)
  name.vb: IReadOnlyList(Of IModelSystemStructure)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.Name*
  commentId: Overload:XTMF.Project.Name
  name: Name
  nameWithType: Project.Name
  fullName: XTMF.Project.Name
- uid: XTMF.IProject.Name
  commentId: P:XTMF.IProject.Name
  parent: XTMF.IProject
  name: Name
  nameWithType: IProject.Name
  fullName: XTMF.IProject.Name
- uid: XTMF.Project.CreateModelSystem*
  commentId: Overload:XTMF.Project.CreateModelSystem
  name: CreateModelSystem
  nameWithType: Project.CreateModelSystem
  fullName: XTMF.Project.CreateModelSystem
- uid: XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
  commentId: M:XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
  parent: XTMF.IProject
  isExternal: true
  name: CreateModelSystem(String, Int32)
  nameWithType: IProject.CreateModelSystem(String, Int32)
  fullName: XTMF.IProject.CreateModelSystem(System.String, System.Int32)
  spec.csharp:
  - uid: XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
    name: CreateModelSystem
    nameWithType: IProject.CreateModelSystem
    fullName: XTMF.IProject.CreateModelSystem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProject.CreateModelSystem(System.String@,System.Int32)
    name: CreateModelSystem
    nameWithType: IProject.CreateModelSystem
    fullName: XTMF.IProject.CreateModelSystem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.Project.Reload*
  commentId: Overload:XTMF.Project.Reload
  name: Reload
  nameWithType: Project.Reload
  fullName: XTMF.Project.Reload
- uid: XTMF.IProject.Reload
  commentId: M:XTMF.IProject.Reload
  parent: XTMF.IProject
  name: Reload()
  nameWithType: IProject.Reload()
  fullName: XTMF.IProject.Reload()
  spec.csharp:
  - uid: XTMF.IProject.Reload
    name: Reload
    nameWithType: IProject.Reload
    fullName: XTMF.IProject.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProject.Reload
    name: Reload
    nameWithType: IProject.Reload
    fullName: XTMF.IProject.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IProject.Save(System.String@)
  commentId: M:XTMF.IProject.Save(System.String@)
  parent: XTMF.IProject
  isExternal: true
  name: Save(String)
  nameWithType: IProject.Save(String)
  fullName: XTMF.IProject.Save(System.String)
  spec.csharp:
  - uid: XTMF.IProject.Save(System.String@)
    name: Save
    nameWithType: IProject.Save
    fullName: XTMF.IProject.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProject.Save(System.String@)
    name: Save
    nameWithType: IProject.Save
    fullName: XTMF.IProject.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.ValidateModelName*
  commentId: Overload:XTMF.Project.ValidateModelName
  name: ValidateModelName
  nameWithType: Project.ValidateModelName
  fullName: XTMF.Project.ValidateModelName
- uid: XTMF.IProject.ValidateModelName(System.String)
  commentId: M:XTMF.IProject.ValidateModelName(System.String)
  parent: XTMF.IProject
  isExternal: true
  name: ValidateModelName(String)
  nameWithType: IProject.ValidateModelName(String)
  fullName: XTMF.IProject.ValidateModelName(System.String)
  spec.csharp:
  - uid: XTMF.IProject.ValidateModelName(System.String)
    name: ValidateModelName
    nameWithType: IProject.ValidateModelName
    fullName: XTMF.IProject.ValidateModelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IProject.ValidateModelName(System.String)
    name: ValidateModelName
    nameWithType: IProject.ValidateModelName
    fullName: XTMF.IProject.ValidateModelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.AddModelSystem*
  commentId: Overload:XTMF.Project.AddModelSystem
  name: AddModelSystem
  nameWithType: Project.AddModelSystem
  fullName: XTMF.Project.AddModelSystem
- uid: System.Collections.Generic.List{XTMF.ILinkedParameter}
  commentId: T:System.Collections.Generic.List{XTMF.ILinkedParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ILinkedParameter>
  nameWithType: List<ILinkedParameter>
  fullName: System.Collections.Generic.List<XTMF.ILinkedParameter>
  nameWithType.vb: List(Of ILinkedParameter)
  fullName.vb: System.Collections.Generic.List(Of XTMF.ILinkedParameter)
  name.vb: List(Of ILinkedParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystem
  commentId: T:XTMF.ModelSystem
  parent: XTMF
  name: ModelSystem
  nameWithType: ModelSystem
  fullName: XTMF.ModelSystem
- uid: XTMF.Project.SetModelSystem*
  commentId: Overload:XTMF.Project.SetModelSystem
  name: SetModelSystem
  nameWithType: Project.SetModelSystem
  fullName: XTMF.Project.SetModelSystem
- uid: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  commentId: T:System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRegionDisplay>
  nameWithType: List<IRegionDisplay>
  fullName: System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>
  nameWithType.vb: List(Of IRegionDisplay)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay)
  name.vb: List(Of IRegionDisplay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.GetParameters*
  commentId: Overload:XTMF.Project.GetParameters
  name: GetParameters
  nameWithType: Project.GetParameters
  fullName: XTMF.Project.GetParameters
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: XTMF.IModuleParameters
  commentId: T:XTMF.IModuleParameters
  parent: XTMF
  name: IModuleParameters
  nameWithType: IModuleParameters
  fullName: XTMF.IModuleParameters
- uid: XTMF.Project.UpdateModelSystemStructure*
  commentId: Overload:XTMF.Project.UpdateModelSystemStructure
  name: UpdateModelSystemStructure
  nameWithType: Project.UpdateModelSystemStructure
  fullName: XTMF.Project.UpdateModelSystemStructure
- uid: XTMF.ModelSystemStructure
  commentId: T:XTMF.ModelSystemStructure
  parent: XTMF
  name: ModelSystemStructure
  nameWithType: ModelSystemStructure
  fullName: XTMF.ModelSystemStructure
- uid: XTMF.Project.ValidateProjectName*
  commentId: Overload:XTMF.Project.ValidateProjectName
  name: ValidateProjectName
  nameWithType: Project.ValidateProjectName
  fullName: XTMF.Project.ValidateProjectName
- uid: XTMF.ErrorWithPath
  commentId: T:XTMF.ErrorWithPath
  parent: XTMF
  name: ErrorWithPath
  nameWithType: ErrorWithPath
  fullName: XTMF.ErrorWithPath
- uid: System.EventHandler{XTMF.Editing.ProjectExternallySavedEventArgs}
  commentId: T:System.EventHandler{XTMF.Editing.ProjectExternallySavedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProjectExternallySavedEventArgs>
  nameWithType: EventHandler<ProjectExternallySavedEventArgs>
  fullName: System.EventHandler<XTMF.Editing.ProjectExternallySavedEventArgs>
  nameWithType.vb: EventHandler(Of ProjectExternallySavedEventArgs)
  fullName.vb: System.EventHandler(Of XTMF.Editing.ProjectExternallySavedEventArgs)
  name.vb: EventHandler(Of ProjectExternallySavedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Editing.ProjectExternallySavedEventArgs
    name: ProjectExternallySavedEventArgs
    nameWithType: ProjectExternallySavedEventArgs
    fullName: XTMF.Editing.ProjectExternallySavedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Editing.ProjectExternallySavedEventArgs
    name: ProjectExternallySavedEventArgs
    nameWithType: ProjectExternallySavedEventArgs
    fullName: XTMF.Editing.ProjectExternallySavedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Project.SaveModelSystem*
  commentId: Overload:XTMF.Project.SaveModelSystem
  name: SaveModelSystem
  nameWithType: Project.SaveModelSystem
  fullName: XTMF.Project.SaveModelSystem
- uid: XTMF.Project.SetActive*
  commentId: Overload:XTMF.Project.SetActive
  name: SetActive
  nameWithType: Project.SetActive
  fullName: XTMF.Project.SetActive
- uid: XTMF.Project.CreateModule*
  commentId: Overload:XTMF.Project.CreateModule
  name: CreateModule
  nameWithType: Project.CreateModule
  fullName: XTMF.Project.CreateModule
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
