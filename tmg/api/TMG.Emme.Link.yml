### YamlMime:ManagedReference
items:
- uid: TMG.Emme.Link
  commentId: T:TMG.Emme.Link
  id: Link
  parent: TMG.Emme
  children:
  - TMG.Emme.Link.#ctor(System.Int32,System.Int32)
  - TMG.Emme.Link.Capacity
  - TMG.Emme.Link.Equals(System.Object)
  - TMG.Emme.Link.GetHashCode
  - TMG.Emme.Link.I
  - TMG.Emme.Link.J
  - TMG.Emme.Link.Lanes
  - TMG.Emme.Link.Length
  - TMG.Emme.Link.LinkType
  - TMG.Emme.Link.Modes
  - TMG.Emme.Link.Modified
  - TMG.Emme.Link.op_Equality(TMG.Emme.Link,TMG.Emme.Link)
  - TMG.Emme.Link.op_Inequality(TMG.Emme.Link,TMG.Emme.Link)
  - TMG.Emme.Link.Speed
  - TMG.Emme.Link.Vdf
  langs:
  - csharp
  - vb
  name: Link
  nameWithType: Link
  fullName: TMG.Emme.Link
  type: Struct
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Link
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 22
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public struct Link
    content.vb: Public Structure Link
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: TMG.Emme.Link.Capacity
  commentId: F:TMG.Emme.Link.Capacity
  id: Capacity
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Capacity
  nameWithType: Link.Capacity
  fullName: TMG.Emme.Link.Capacity
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Capacity
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 24
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float Capacity
    return:
      type: System.Single
    content.vb: Public Capacity As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.I
  commentId: F:TMG.Emme.Link.I
  id: I
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: I
  nameWithType: Link.I
  fullName: TMG.Emme.Link.I
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: I
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 25
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public readonly int I
    return:
      type: System.Int32
    content.vb: Public ReadOnly I As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.Link.J
  commentId: F:TMG.Emme.Link.J
  id: J
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: J
  nameWithType: Link.J
  fullName: TMG.Emme.Link.J
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: J
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 26
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public readonly int J
    return:
      type: System.Int32
    content.vb: Public ReadOnly J As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Emme.Link.Lanes
  commentId: F:TMG.Emme.Link.Lanes
  id: Lanes
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Lanes
  nameWithType: Link.Lanes
  fullName: TMG.Emme.Link.Lanes
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Lanes
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 27
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float Lanes
    return:
      type: System.Single
    content.vb: Public Lanes As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.Length
  commentId: F:TMG.Emme.Link.Length
  id: Length
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Link.Length
  fullName: TMG.Emme.Link.Length
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Length
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 28
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float Length
    return:
      type: System.Single
    content.vb: Public Length As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.LinkType
  commentId: F:TMG.Emme.Link.LinkType
  id: LinkType
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: LinkType
  nameWithType: Link.LinkType
  fullName: TMG.Emme.Link.LinkType
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkType
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 29
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public int LinkType
    return:
      type: System.Int32
    content.vb: Public LinkType As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.Modes
  commentId: F:TMG.Emme.Link.Modes
  id: Modes
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Modes
  nameWithType: Link.Modes
  fullName: TMG.Emme.Link.Modes
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Modes
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 30
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public char[] Modes
    return:
      type: System.Char[]
    content.vb: Public Modes As Char()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.Modified
  commentId: F:TMG.Emme.Link.Modified
  id: Modified
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Modified
  nameWithType: Link.Modified
  fullName: TMG.Emme.Link.Modified
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Modified
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 31
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public bool Modified
    return:
      type: System.Boolean
    content.vb: Public Modified As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.Speed
  commentId: F:TMG.Emme.Link.Speed
  id: Speed
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: Link.Speed
  fullName: TMG.Emme.Link.Speed
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Speed
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 32
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float Speed
    return:
      type: System.Single
    content.vb: Public Speed As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.Vdf
  commentId: F:TMG.Emme.Link.Vdf
  id: Vdf
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Vdf
  nameWithType: Link.Vdf
  fullName: TMG.Emme.Link.Vdf
  type: Field
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Vdf
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 33
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public float Vdf
    return:
      type: System.Single
    content.vb: Public Vdf As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.#ctor(System.Int32,System.Int32)
  commentId: M:TMG.Emme.Link.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Link(Int32, Int32)
  nameWithType: Link.Link(Int32, Int32)
  fullName: TMG.Emme.Link.Link(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 35
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public Link(int i, int j)
    parameters:
    - id: i
      type: System.Int32
    - id: j
      type: System.Int32
    content.vb: Public Sub New(i As Integer, j As Integer)
  overload: TMG.Emme.Link.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Emme.Link.Equals(System.Object)
  commentId: M:TMG.Emme.Link.Equals(System.Object)
  id: Equals(System.Object)
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Link.Equals(Object)
  fullName: TMG.Emme.Link.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Equals
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 41
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: TMG.Emme.Link.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TMG.Emme.Link.op_Equality(TMG.Emme.Link,TMG.Emme.Link)
  commentId: M:TMG.Emme.Link.op_Equality(TMG.Emme.Link,TMG.Emme.Link)
  id: op_Equality(TMG.Emme.Link,TMG.Emme.Link)
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Equality(Link, Link)
  nameWithType: Link.Equality(Link, Link)
  fullName: TMG.Emme.Link.Equality(TMG.Emme.Link, TMG.Emme.Link)
  type: Operator
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Equality
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 50
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public static bool operator ==(Link first, Link o)
    parameters:
    - id: first
      type: TMG.Emme.Link
    - id: o
      type: TMG.Emme.Link
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(first As Link, o As Link) As Boolean
  overload: TMG.Emme.Link.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TMG.Emme.Link.op_Inequality(TMG.Emme.Link,TMG.Emme.Link)
  commentId: M:TMG.Emme.Link.op_Inequality(TMG.Emme.Link,TMG.Emme.Link)
  id: op_Inequality(TMG.Emme.Link,TMG.Emme.Link)
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: Inequality(Link, Link)
  nameWithType: Link.Inequality(Link, Link)
  fullName: TMG.Emme.Link.Inequality(TMG.Emme.Link, TMG.Emme.Link)
  type: Operator
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: op_Inequality
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 72
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public static bool operator !=(Link first, Link o)
    parameters:
    - id: first
      type: TMG.Emme.Link
    - id: o
      type: TMG.Emme.Link
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(first As Link, o As Link) As Boolean
  overload: TMG.Emme.Link.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TMG.Emme.Link.GetHashCode
  commentId: M:TMG.Emme.Link.GetHashCode
  id: GetHashCode
  parent: TMG.Emme.Link
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Link.GetHashCode()
  fullName: TMG.Emme.Link.GetHashCode()
  type: Method
  source:
    remote:
      path: Code/TMG.Emme/Link.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetHashCode
    path: ../../XTMF/Code/TMG.Emme/Link.cs
    startLine: 77
  assemblies:
  - TMG.Emme
  namespace: TMG.Emme
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: TMG.Emme.Link.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TMG.Emme
  commentId: N:TMG.Emme
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Emme.Link.#ctor*
  commentId: Overload:TMG.Emme.Link.#ctor
  name: Link
  nameWithType: Link.Link
  fullName: TMG.Emme.Link.Link
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Link.Equals*
  commentId: Overload:TMG.Emme.Link.Equals
  name: Equals
  nameWithType: Link.Equals
  fullName: TMG.Emme.Link.Equals
- uid: TMG.Emme.Link.op_Equality*
  commentId: Overload:TMG.Emme.Link.op_Equality
  name: Equality
  nameWithType: Link.Equality
  fullName: TMG.Emme.Link.Equality
- uid: TMG.Emme.Link
  commentId: T:TMG.Emme.Link
  parent: TMG.Emme
  name: Link
  nameWithType: Link
  fullName: TMG.Emme.Link
- uid: TMG.Emme.Link.op_Inequality*
  commentId: Overload:TMG.Emme.Link.op_Inequality
  name: Inequality
  nameWithType: Link.Inequality
  fullName: TMG.Emme.Link.Inequality
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Link.GetHashCode*
  commentId: Overload:TMG.Emme.Link.GetHashCode
  name: GetHashCode
  nameWithType: Link.GetHashCode
  fullName: TMG.Emme.Link.GetHashCode
