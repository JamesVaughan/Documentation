### YamlMime:ManagedReference
items:
- uid: TMG.Estimation.GradientAI
  commentId: T:TMG.Estimation.GradientAI
  id: GradientAI
  parent: TMG.Estimation
  children:
  - TMG.Estimation.GradientAI.CreateJobsForIteration
  - TMG.Estimation.GradientAI.ErrorFactor
  - TMG.Estimation.GradientAI.IterationComplete
  - TMG.Estimation.GradientAI.Maximize
  - TMG.Estimation.GradientAI.MomentumFactor
  - TMG.Estimation.GradientAI.Name
  - TMG.Estimation.GradientAI.NumberOfKernels
  - TMG.Estimation.GradientAI.Progress
  - TMG.Estimation.GradientAI.ProgressColour
  - TMG.Estimation.GradientAI.RandomSeed
  - TMG.Estimation.GradientAI.Root
  - TMG.Estimation.GradientAI.RuntimeValidation(System.String@)
  - TMG.Estimation.GradientAI.WhiskerSize
  langs:
  - csharp
  - vb
  name: GradientAI
  nameWithType: GradientAI
  fullName: TMG.Estimation.GradientAI
  type: Class
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GradientAI
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 25
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: 'public class GradientAI : IEstimationAI, IModule'
    content.vb: >-
      Public Class GradientAI
          Implements IEstimationAI, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Estimation.IEstimationAI
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Estimation.GradientAI.Root
  commentId: F:TMG.Estimation.GradientAI.Root
  id: Root
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: GradientAI.Root
  fullName: TMG.Estimation.GradientAI.Root
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 28
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public IEstimationHost Root
    return:
      type: TMG.Estimation.IEstimationHost
    content.vb: Public Root As IEstimationHost
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.NumberOfKernels
  commentId: F:TMG.Estimation.GradientAI.NumberOfKernels
  id: NumberOfKernels
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: NumberOfKernels
  nameWithType: GradientAI.NumberOfKernels
  fullName: TMG.Estimation.GradientAI.NumberOfKernels
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NumberOfKernels
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 32
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Kernels", 1, "How many different points should we explore at the same time per generation. \r\nThe total points explored will be the number of kernels*(#parameters * 2 + 1).")]

      public int NumberOfKernels
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Kernels", 1, "How many different points should we explore at the same time per generation. " & vbCrLf & "The total points explored will be the number of kernels*(#parameters * 2 + 1).")>

      Public NumberOfKernels As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Kernels
    - type: System.Int32
      value: 1
    - type: System.String
      value: "How many different points should we explore at the same time per generation. \r\nThe total points explored will be the number of kernels*(#parameters * 2 + 1)."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.Maximize
  commentId: F:TMG.Estimation.GradientAI.Maximize
  id: Maximize
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: Maximize
  nameWithType: GradientAI.Maximize
  fullName: TMG.Estimation.GradientAI.Maximize
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Maximize
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 35
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Maximize", false, "Should we maximize the result or minimize it?")]

      public bool Maximize
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Maximize", False, "Should we maximize the result or minimize it?")>

      Public Maximize As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Maximize
    - type: System.Boolean
      value: false
    - type: System.String
      value: Should we maximize the result or minimize it?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.ErrorFactor
  commentId: F:TMG.Estimation.GradientAI.ErrorFactor
  id: ErrorFactor
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: ErrorFactor
  nameWithType: GradientAI.ErrorFactor
  fullName: TMG.Estimation.GradientAI.ErrorFactor
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ErrorFactor
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 38
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Error factor", 1F, "The factor to apply to the error when computing the gradients.")]

      public float ErrorFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Error factor", 1F, "The factor to apply to the error when computing the gradients.")>

      Public ErrorFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Error factor
    - type: System.Single
      value: 1
    - type: System.String
      value: The factor to apply to the error when computing the gradients.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.RandomSeed
  commentId: F:TMG.Estimation.GradientAI.RandomSeed
  id: RandomSeed
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: RandomSeed
  nameWithType: GradientAI.RandomSeed
  fullName: TMG.Estimation.GradientAI.RandomSeed
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RandomSeed
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 41
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Random Seed", 12345, "The initial position for the random number generator.")]

      public int RandomSeed
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Random Seed", 12345, "The initial position for the random number generator.")>

      Public RandomSeed As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Random Seed
    - type: System.Int32
      value: 12345
    - type: System.String
      value: The initial position for the random number generator.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.WhiskerSize
  commentId: F:TMG.Estimation.GradientAI.WhiskerSize
  id: WhiskerSize
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: WhiskerSize
  nameWithType: GradientAI.WhiskerSize
  fullName: TMG.Estimation.GradientAI.WhiskerSize
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WhiskerSize
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 44
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Whisker Size", 0.001F, "The difference in relative parameter space between the kernel and the points to test.")]

      public float WhiskerSize
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Whisker Size", 0.001F, "The difference in relative parameter space between the kernel and the points to test.")>

      Public WhiskerSize As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Whisker Size
    - type: System.Single
      value: 0.00100000005
    - type: System.String
      value: The difference in relative parameter space between the kernel and the points to test.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.MomentumFactor
  commentId: F:TMG.Estimation.GradientAI.MomentumFactor
  id: MomentumFactor
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: MomentumFactor
  nameWithType: GradientAI.MomentumFactor
  fullName: TMG.Estimation.GradientAI.MomentumFactor
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MomentumFactor
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 47
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Momentum Factor", 0.1F, "The factor applied to the continuation of the previous generations gradient on the current generation.")]

      public float MomentumFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Momentum Factor", 0.1F, "The factor applied to the continuation of the previous generations gradient on the current generation.")>

      Public MomentumFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Momentum Factor
    - type: System.Single
      value: 0.100000001
    - type: System.String
      value: The factor applied to the continuation of the previous generations gradient on the current generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.CreateJobsForIteration
  commentId: M:TMG.Estimation.GradientAI.CreateJobsForIteration
  id: CreateJobsForIteration
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: CreateJobsForIteration()
  nameWithType: GradientAI.CreateJobsForIteration()
  fullName: TMG.Estimation.GradientAI.CreateJobsForIteration()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateJobsForIteration
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 54
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public List<Job> CreateJobsForIteration()
    return:
      type: System.Collections.Generic.List{TMG.Estimation.Job}
    content.vb: Public Function CreateJobsForIteration As List(Of Job)
  overload: TMG.Estimation.GradientAI.CreateJobsForIteration*
  implements:
  - TMG.Estimation.IEstimationAI.CreateJobsForIteration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.IterationComplete
  commentId: M:TMG.Estimation.GradientAI.IterationComplete
  id: IterationComplete
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: IterationComplete()
  nameWithType: GradientAI.IterationComplete()
  fullName: TMG.Estimation.GradientAI.IterationComplete()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationComplete
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 219
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public void IterationComplete()
    content.vb: Public Sub IterationComplete
  overload: TMG.Estimation.GradientAI.IterationComplete*
  implements:
  - TMG.Estimation.IEstimationAI.IterationComplete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.Name
  commentId: P:TMG.Estimation.GradientAI.Name
  id: Name
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GradientAI.Name
  fullName: TMG.Estimation.GradientAI.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 224
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Estimation.GradientAI.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GradientAI.Progress
  commentId: P:TMG.Estimation.GradientAI.Progress
  id: Progress
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: GradientAI.Progress
  fullName: TMG.Estimation.GradientAI.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 226
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.Estimation.GradientAI.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.GradientAI.ProgressColour
  commentId: P:TMG.Estimation.GradientAI.ProgressColour
  id: ProgressColour
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: GradientAI.ProgressColour
  fullName: TMG.Estimation.GradientAI.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 231
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Estimation.GradientAI.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.GradientAI.RuntimeValidation(System.String@)
  commentId: M:TMG.Estimation.GradientAI.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Estimation.GradientAI
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: GradientAI.RuntimeValidation(ref String)
  fullName: TMG.Estimation.GradientAI.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GradientAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/TMG.Estimation/AI/GradientAI.cs
    startLine: 236
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Estimation.GradientAI.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: GradientAI.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Estimation.GradientAI.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Estimation
  commentId: N:TMG.Estimation
  name: TMG.Estimation
  nameWithType: TMG.Estimation
  fullName: TMG.Estimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Estimation.IEstimationAI
  commentId: T:TMG.Estimation.IEstimationAI
  parent: TMG.Estimation
  name: IEstimationAI
  nameWithType: IEstimationAI
  fullName: TMG.Estimation.IEstimationAI
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Estimation.IEstimationHost
  commentId: T:TMG.Estimation.IEstimationHost
  parent: TMG.Estimation
  name: IEstimationHost
  nameWithType: IEstimationHost
  fullName: TMG.Estimation.IEstimationHost
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Estimation.GradientAI.CreateJobsForIteration*
  commentId: Overload:TMG.Estimation.GradientAI.CreateJobsForIteration
  name: CreateJobsForIteration
  nameWithType: GradientAI.CreateJobsForIteration
  fullName: TMG.Estimation.GradientAI.CreateJobsForIteration
- uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  commentId: M:TMG.Estimation.IEstimationAI.CreateJobsForIteration
  parent: TMG.Estimation.IEstimationAI
  name: CreateJobsForIteration()
  nameWithType: IEstimationAI.CreateJobsForIteration()
  fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration()
  spec.csharp:
  - uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
    name: CreateJobsForIteration
    nameWithType: IEstimationAI.CreateJobsForIteration
    fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
    name: CreateJobsForIteration
    nameWithType: IEstimationAI.CreateJobsForIteration
    fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{TMG.Estimation.Job}
  commentId: T:System.Collections.Generic.List{TMG.Estimation.Job}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Job>
  nameWithType: List<Job>
  fullName: System.Collections.Generic.List<TMG.Estimation.Job>
  nameWithType.vb: List(Of Job)
  fullName.vb: System.Collections.Generic.List(Of TMG.Estimation.Job)
  name.vb: List(Of Job)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.Estimation.GradientAI.IterationComplete*
  commentId: Overload:TMG.Estimation.GradientAI.IterationComplete
  name: IterationComplete
  nameWithType: GradientAI.IterationComplete
  fullName: TMG.Estimation.GradientAI.IterationComplete
- uid: TMG.Estimation.IEstimationAI.IterationComplete
  commentId: M:TMG.Estimation.IEstimationAI.IterationComplete
  parent: TMG.Estimation.IEstimationAI
  name: IterationComplete()
  nameWithType: IEstimationAI.IterationComplete()
  fullName: TMG.Estimation.IEstimationAI.IterationComplete()
  spec.csharp:
  - uid: TMG.Estimation.IEstimationAI.IterationComplete
    name: IterationComplete
    nameWithType: IEstimationAI.IterationComplete
    fullName: TMG.Estimation.IEstimationAI.IterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.IEstimationAI.IterationComplete
    name: IterationComplete
    nameWithType: IEstimationAI.IterationComplete
    fullName: TMG.Estimation.IEstimationAI.IterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.GradientAI.Name*
  commentId: Overload:TMG.Estimation.GradientAI.Name
  name: Name
  nameWithType: GradientAI.Name
  fullName: TMG.Estimation.GradientAI.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Estimation.GradientAI.Progress*
  commentId: Overload:TMG.Estimation.GradientAI.Progress
  name: Progress
  nameWithType: GradientAI.Progress
  fullName: TMG.Estimation.GradientAI.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.Estimation.GradientAI.ProgressColour*
  commentId: Overload:TMG.Estimation.GradientAI.ProgressColour
  name: ProgressColour
  nameWithType: GradientAI.ProgressColour
  fullName: TMG.Estimation.GradientAI.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.GradientAI.RuntimeValidation*
  commentId: Overload:TMG.Estimation.GradientAI.RuntimeValidation
  name: RuntimeValidation
  nameWithType: GradientAI.RuntimeValidation
  fullName: TMG.Estimation.GradientAI.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
