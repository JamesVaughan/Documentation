### YamlMime:ManagedReference
items:
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  id: INetworkData
  parent: TMG
  children:
  - TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  - TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  - TMG.INetworkData.NetworkType
  - TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  - TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  - TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  - TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  langs:
  - csharp
  - vb
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
  type: Interface
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: INetworkData
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 22
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: 'public interface INetworkData : IDataSource<INetworkData>, IDataSource, IModule'
    content.vb: >-
      Public Interface INetworkData
          Inherits IDataSource(Of INetworkData)
  inheritedMembers:
  - XTMF.IDataSource{TMG.INetworkData}.GiveData
  - XTMF.IDataSource.Loaded
  - XTMF.IDataSource.LoadData
  - XTMF.IDataSource.UnloadData
  - XTMF.IModule.Name
  - XTMF.IModule.Progress
  - XTMF.IModule.ProgressColour
  - XTMF.IModule.RuntimeValidation(System.String@)
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TMG.INetworkData.NetworkType
  commentId: P:TMG.INetworkData.NetworkType
  id: NetworkType
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: INetworkData.NetworkType
  fullName: TMG.INetworkData.NetworkType
  type: Property
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkType
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 24
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: string NetworkType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property NetworkType As String
  overload: TMG.INetworkData.NetworkType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelCost(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: TravelCost(IZone, IZone, Time)
  nameWithType: INetworkData.TravelCost(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelCost(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelCost
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 26
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: float TravelCost(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Function TravelCost(start As IZone, end As IZone, time As Time) As Single
  overload: TMG.INetworkData.TravelCost*
- uid: TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelCost(System.Int32,System.Int32,XTMF.Time)
  id: TravelCost(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: TravelCost(Int32, Int32, Time)
  nameWithType: INetworkData.TravelCost(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelCost(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelCost
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 28
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: float TravelCost(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Function TravelCost(flatOrigin As Integer, flatDestination As Integer, time As Time) As Single
  overload: TMG.INetworkData.TravelCost*
- uid: TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  id: TravelTime(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: TravelTime(IZone, IZone, Time)
  nameWithType: INetworkData.TravelTime(IZone, IZone, Time)
  fullName: TMG.INetworkData.TravelTime(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 30
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time TravelTime(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function TravelTime(start As IZone, end As IZone, time As Time) As Time
  overload: TMG.INetworkData.TravelTime*
- uid: TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.TravelTime(System.Int32,System.Int32,XTMF.Time)
  id: TravelTime(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: TravelTime(Int32, Int32, Time)
  nameWithType: INetworkData.TravelTime(Int32, Int32, Time)
  fullName: TMG.INetworkData.TravelTime(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TravelTime
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 32
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: Time TravelTime(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: XTMF.Time
    content.vb: Function TravelTime(flatOrigin As Integer, flatDestination As Integer, time As Time) As Time
  overload: TMG.INetworkData.TravelTime*
- uid: TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  id: GetAllData(TMG.IZone,TMG.IZone,XTMF.Time,XTMF.Time@,System.Single@)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: GetAllData(IZone, IZone, Time, out Time, out Single)
  nameWithType: INetworkData.GetAllData(IZone, IZone, Time, out Time, out Single)
  fullName: TMG.INetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, out XTMF.Time, out System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 34
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool GetAllData(IZone start, IZone end, Time time, out Time ivtt, out float cost)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: XTMF.Time
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Function GetAllData(start As IZone, end As IZone, time As Time, ByRef ivtt As Time, ByRef cost As Single) As Boolean
  overload: TMG.INetworkData.GetAllData*
  nameWithType.vb: INetworkData.GetAllData(IZone, IZone, Time, ByRef Time, ByRef Single)
  fullName.vb: TMG.INetworkData.GetAllData(TMG.IZone, TMG.IZone, XTMF.Time, ByRef XTMF.Time, ByRef System.Single)
  name.vb: GetAllData(IZone, IZone, Time, ByRef Time, ByRef Single)
- uid: TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  commentId: M:TMG.INetworkData.GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  id: GetAllData(System.Int32,System.Int32,XTMF.Time,System.Single@,System.Single@)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: GetAllData(Int32, Int32, Time, out Single, out Single)
  nameWithType: INetworkData.GetAllData(Int32, Int32, Time, out Single, out Single)
  fullName: TMG.INetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAllData
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 36
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool GetAllData(int start, int end, Time time, out float ivtt, out float cost)
    parameters:
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
    - id: time
      type: XTMF.Time
    - id: ivtt
      type: System.Single
    - id: cost
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Function GetAllData(start As Integer, end As Integer, time As Time, ByRef ivtt As Single, ByRef cost As Single) As Boolean
  overload: TMG.INetworkData.GetAllData*
  nameWithType.vb: INetworkData.GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single)
  fullName.vb: TMG.INetworkData.GetAllData(System.Int32, System.Int32, XTMF.Time, ByRef System.Single, ByRef System.Single)
  name.vb: GetAllData(Int32, Int32, Time, ByRef Single, ByRef Single)
- uid: TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  id: ValidOd(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: ValidOd(IZone, IZone, Time)
  nameWithType: INetworkData.ValidOd(IZone, IZone, Time)
  fullName: TMG.INetworkData.ValidOd(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidOd
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 38
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool ValidOd(IZone start, IZone end, Time time)
    parameters:
    - id: start
      type: TMG.IZone
    - id: end
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Function ValidOd(start As IZone, end As IZone, time As Time) As Boolean
  overload: TMG.INetworkData.ValidOd*
- uid: TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  commentId: M:TMG.INetworkData.ValidOd(System.Int32,System.Int32,XTMF.Time)
  id: ValidOd(System.Int32,System.Int32,XTMF.Time)
  parent: TMG.INetworkData
  langs:
  - csharp
  - vb
  name: ValidOd(Int32, Int32, Time)
  nameWithType: INetworkData.ValidOd(Int32, Int32, Time)
  fullName: TMG.INetworkData.ValidOd(System.Int32, System.Int32, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/TMGInterfaces/INetworkData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidOd
    path: ../../XTMF/Code/TMGInterfaces/INetworkData.cs
    startLine: 40
  assemblies:
  - TMGInterfaces
  namespace: TMG
  syntax:
    content: bool ValidOd(int flatOrigin, int flatDestination, Time time)
    parameters:
    - id: flatOrigin
      type: System.Int32
    - id: flatDestination
      type: System.Int32
    - id: time
      type: XTMF.Time
    return:
      type: System.Boolean
    content.vb: Function ValidOd(flatOrigin As Integer, flatDestination As Integer, time As Time) As Boolean
  overload: TMG.INetworkData.ValidOd*
references:
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF.IDataSource{TMG.INetworkData}.GiveData
  commentId: M:XTMF.IDataSource{TMG.INetworkData}.GiveData
  parent: XTMF.IDataSource{TMG.INetworkData}
  definition: XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<INetworkData>.GiveData()
  fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData()
  nameWithType.vb: IDataSource(Of INetworkData).GiveData()
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<INetworkData>.GiveData
    fullName: XTMF.IDataSource<TMG.INetworkData>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of INetworkData).GiveData
    fullName: XTMF.IDataSource(Of TMG.INetworkData).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1.GiveData
  commentId: M:XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<T>.GiveData()
  fullName: XTMF.IDataSource<T>.GiveData()
  nameWithType.vb: IDataSource(Of T).GiveData()
  fullName.vb: XTMF.IDataSource(Of T).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<T>.GiveData
    fullName: XTMF.IDataSource<T>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of T).GiveData
    fullName: XTMF.IDataSource(Of T).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource{TMG.INetworkData}
  commentId: T:XTMF.IDataSource{TMG.INetworkData}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<INetworkData>
  nameWithType: IDataSource<INetworkData>
  fullName: XTMF.IDataSource<TMG.INetworkData>
  nameWithType.vb: IDataSource(Of INetworkData)
  fullName.vb: XTMF.IDataSource(Of TMG.INetworkData)
  name.vb: IDataSource(Of INetworkData)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.INetworkData.NetworkType*
  commentId: Overload:TMG.INetworkData.NetworkType
  name: NetworkType
  nameWithType: INetworkData.NetworkType
  fullName: TMG.INetworkData.NetworkType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.INetworkData.TravelCost*
  commentId: Overload:TMG.INetworkData.TravelCost
  name: TravelCost
  nameWithType: INetworkData.TravelCost
  fullName: TMG.INetworkData.TravelCost
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.INetworkData.TravelTime*
  commentId: Overload:TMG.INetworkData.TravelTime
  name: TravelTime
  nameWithType: INetworkData.TravelTime
  fullName: TMG.INetworkData.TravelTime
- uid: TMG.INetworkData.GetAllData*
  commentId: Overload:TMG.INetworkData.GetAllData
  name: GetAllData
  nameWithType: INetworkData.GetAllData
  fullName: TMG.INetworkData.GetAllData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.INetworkData.ValidOd*
  commentId: Overload:TMG.INetworkData.ValidOd
  name: ValidOd
  nameWithType: INetworkData.ValidOd
  fullName: TMG.INetworkData.ValidOd
