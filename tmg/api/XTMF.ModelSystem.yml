### YamlMime:ManagedReference
items:
- uid: XTMF.ModelSystem
  commentId: T:XTMF.ModelSystem
  id: ModelSystem
  parent: XTMF
  children:
  - XTMF.ModelSystem.#ctor(XTMF.IConfiguration,System.String)
  - XTMF.ModelSystem._ModelSystemStructure
  - XTMF.ModelSystem.Clone
  - XTMF.ModelSystem.Description
  - XTMF.ModelSystem.LinkedParameters
  - XTMF.ModelSystem.LoadDetachedModelSystem(System.IO.Stream,XTMF.IConfiguration,System.String@)
  - XTMF.ModelSystem.ModelSystemStructure
  - XTMF.ModelSystem.Name
  - XTMF.ModelSystem.RegionDisplays
  - XTMF.ModelSystem.Save(System.IO.Stream,System.String@)
  - XTMF.ModelSystem.Save(System.IO.Stream,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  - XTMF.ModelSystem.Save(System.String,System.String@)
  - XTMF.ModelSystem.Save(System.String,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  - XTMF.ModelSystem.Save(System.String@)
  - XTMF.ModelSystem.SetIsLoaded(System.Boolean)
  - XTMF.ModelSystem.ToString
  - XTMF.ModelSystem.Validate(System.String@)
  langs:
  - csharp
  - vb
  name: ModelSystem
  nameWithType: ModelSystem
  fullName: XTMF.ModelSystem
  type: Class
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystem
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 35
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe XTMF version of the IModelSystem interface.\nAll instances of IModelSystem created by XTMF will\nactually be of this type, however you should not\nassume this, nor any member&apos;s existence not defined\nby IModelSystem as this is subject to change\n"
  example: []
  syntax:
    content: 'public class ModelSystem : IModelSystem'
    content.vb: >-
      Public Class ModelSystem
          Implements IModelSystem
  inheritance:
  - System.Object
  implements:
  - XTMF.IModelSystem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ModelSystem._ModelSystemStructure
  commentId: F:XTMF.ModelSystem._ModelSystemStructure
  id: _ModelSystemStructure
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: _ModelSystemStructure
  nameWithType: ModelSystem._ModelSystemStructure
  fullName: XTMF.ModelSystem._ModelSystemStructure
  type: Field
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: _ModelSystemStructure
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 37
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: protected IModelSystemStructure _ModelSystemStructure
    return:
      type: XTMF.IModelSystemStructure
    content.vb: Protected _ModelSystemStructure As IModelSystemStructure
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: XTMF.ModelSystem.SetIsLoaded(System.Boolean)
  commentId: M:XTMF.ModelSystem.SetIsLoaded(System.Boolean)
  id: SetIsLoaded(System.Boolean)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: SetIsLoaded(Boolean)
  nameWithType: ModelSystem.SetIsLoaded(Boolean)
  fullName: XTMF.ModelSystem.SetIsLoaded(System.Boolean)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetIsLoaded
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 41
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: protected void SetIsLoaded(bool value)
    parameters:
    - id: value
      type: System.Boolean
    content.vb: Protected Sub SetIsLoaded(value As Boolean)
  overload: XTMF.ModelSystem.SetIsLoaded*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: XTMF.ModelSystem.#ctor(XTMF.IConfiguration,System.String)
  commentId: M:XTMF.ModelSystem.#ctor(XTMF.IConfiguration,System.String)
  id: '#ctor(XTMF.IConfiguration,System.String)'
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: ModelSystem(IConfiguration, String)
  nameWithType: ModelSystem.ModelSystem(IConfiguration, String)
  fullName: XTMF.ModelSystem.ModelSystem(XTMF.IConfiguration, System.String)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 53
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a new instance of a model system\n"
  example: []
  syntax:
    content: public ModelSystem(IConfiguration config, string name = null)
    parameters:
    - id: config
      type: XTMF.IConfiguration
      description: The configuration of the XTMFRuntime
    - id: name
      type: System.String
      description: The name of the model system
    content.vb: Public Sub New(config As IConfiguration, name As String = Nothing)
  overload: XTMF.ModelSystem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystem.Clone
  commentId: M:XTMF.ModelSystem.Clone
  id: Clone
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ModelSystem.Clone()
  fullName: XTMF.ModelSystem.Clone()
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Clone
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 86
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a clone of the model system\n"
  example: []
  syntax:
    content: public ModelSystem Clone()
    return:
      type: XTMF.ModelSystem
      description: ''
    content.vb: Public Function Clone As ModelSystem
  overload: XTMF.ModelSystem.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystem.Description
  commentId: P:XTMF.ModelSystem.Description
  id: Description
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ModelSystem.Description
  fullName: XTMF.ModelSystem.Description
  type: Property
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Description
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 101
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: XTMF.ModelSystem.Description*
  implements:
  - XTMF.IModelSystem.Description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystem.ModelSystemStructure
  commentId: P:XTMF.ModelSystem.ModelSystemStructure
  id: ModelSystemStructure
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: ModelSystemStructure
  nameWithType: ModelSystem.ModelSystemStructure
  fullName: XTMF.ModelSystem.ModelSystemStructure
  type: Property
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemStructure
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 106
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe structure that defines this model system\n"
  example: []
  syntax:
    content: public IModelSystemStructure ModelSystemStructure { get; set; }
    parameters: []
    return:
      type: XTMF.IModelSystemStructure
    content.vb: Public Property ModelSystemStructure As IModelSystemStructure
  overload: XTMF.ModelSystem.ModelSystemStructure*
  implements:
  - XTMF.IModelSystem.ModelSystemStructure
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystem.LinkedParameters
  commentId: P:XTMF.ModelSystem.LinkedParameters
  id: LinkedParameters
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: LinkedParameters
  nameWithType: ModelSystem.LinkedParameters
  fullName: XTMF.ModelSystem.LinkedParameters
  type: Property
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkedParameters
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 134
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public List<ILinkedParameter> LinkedParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
    content.vb: Public ReadOnly Property LinkedParameters As List(Of ILinkedParameter)
  overload: XTMF.ModelSystem.LinkedParameters*
  implements:
  - XTMF.IModelSystem.LinkedParameters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystem.Name
  commentId: P:XTMF.ModelSystem.Name
  id: Name
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModelSystem.Name
  fullName: XTMF.ModelSystem.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 158
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe name of the model system\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: XTMF.ModelSystem.Name*
  implements:
  - XTMF.IModelSystem.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystem.RegionDisplays
  commentId: P:XTMF.ModelSystem.RegionDisplays
  id: RegionDisplays
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: RegionDisplays
  nameWithType: ModelSystem.RegionDisplays
  fullName: XTMF.ModelSystem.RegionDisplays
  type: Property
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDisplays
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 162
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<IRegionDisplay> RegionDisplays { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
    content.vb: Public ReadOnly Property RegionDisplays As List(Of IRegionDisplay)
  overload: XTMF.ModelSystem.RegionDisplays*
  implements:
  - XTMF.IModelSystem.RegionDisplays
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystem.Save(System.IO.Stream,System.String@)
  commentId: M:XTMF.ModelSystem.Save(System.IO.Stream,System.String@)
  id: Save(System.IO.Stream,System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Save(Stream, ref String)
  nameWithType: ModelSystem.Save(Stream, ref String)
  fullName: XTMF.ModelSystem.Save(System.IO.Stream, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 184
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool Save(Stream stream, ref string error)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Save(stream As Stream, ByRef error As String) As Boolean
  overload: XTMF.ModelSystem.Save*
  nameWithType.vb: ModelSystem.Save(Stream, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystem.Save(System.IO.Stream, ByRef System.String)
  name.vb: Save(Stream, ByRef String)
- uid: XTMF.ModelSystem.Save(System.String,System.String@)
  commentId: M:XTMF.ModelSystem.Save(System.String,System.String@)
  id: Save(System.String,System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Save(String, ref String)
  nameWithType: ModelSystem.Save(String, ref String)
  fullName: XTMF.ModelSystem.Save(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 189
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool Save(string fileName, ref string error)
    parameters:
    - id: fileName
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Save(fileName As String, ByRef error As String) As Boolean
  overload: XTMF.ModelSystem.Save*
  implements:
  - XTMF.IModelSystem.Save(System.String,System.String@)
  nameWithType.vb: ModelSystem.Save(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystem.Save(System.String, ByRef System.String)
  name.vb: Save(String, ByRef String)
- uid: XTMF.ModelSystem.Save(System.String,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  commentId: M:XTMF.ModelSystem.Save(System.String,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  id: Save(System.String,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Save(String, IModelSystemStructure, String, List<ILinkedParameter>, ref String)
  nameWithType: ModelSystem.Save(String, IModelSystemStructure, String, List<ILinkedParameter>, ref String)
  fullName: XTMF.ModelSystem.Save(System.String, XTMF.IModelSystemStructure, System.String, System.Collections.Generic.List<XTMF.ILinkedParameter>, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 203
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nSave a model system to file\n"
  example: []
  syntax:
    content: public static bool Save(string fileName, IModelSystemStructure root, string description, List<ILinkedParameter> linkedParameters, ref string error)
    parameters:
    - id: fileName
      type: System.String
      description: ''
    - id: root
      type: XTMF.IModelSystemStructure
      description: ''
    - id: description
      type: System.String
      description: ''
    - id: linkedParameters
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function Save(fileName As String, root As IModelSystemStructure, description As String, linkedParameters As List(Of ILinkedParameter), ByRef error As String) As Boolean
  overload: XTMF.ModelSystem.Save*
  nameWithType.vb: ModelSystem.Save(String, IModelSystemStructure, String, List(Of ILinkedParameter), ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.ModelSystem.Save(System.String, XTMF.IModelSystemStructure, System.String, System.Collections.Generic.List(Of XTMF.ILinkedParameter), ByRef System.String)
  name.vb: Save(String, IModelSystemStructure, String, List(Of ILinkedParameter), ByRef String)
- uid: XTMF.ModelSystem.Save(System.IO.Stream,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  commentId: M:XTMF.ModelSystem.Save(System.IO.Stream,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  id: Save(System.IO.Stream,XTMF.IModelSystemStructure,System.String,System.Collections.Generic.List{XTMF.ILinkedParameter},System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Save(Stream, IModelSystemStructure, String, List<ILinkedParameter>, ref String)
  nameWithType: ModelSystem.Save(Stream, IModelSystemStructure, String, List<ILinkedParameter>, ref String)
  fullName: XTMF.ModelSystem.Save(System.IO.Stream, XTMF.IModelSystemStructure, System.String, System.Collections.Generic.List<XTMF.ILinkedParameter>, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 224
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public static bool Save(Stream stream, IModelSystemStructure root, string description, List<ILinkedParameter> linkedParameters, ref string error)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: root
      type: XTMF.IModelSystemStructure
    - id: description
      type: System.String
    - id: linkedParameters
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function Save(stream As Stream, root As IModelSystemStructure, description As String, linkedParameters As List(Of ILinkedParameter), ByRef error As String) As Boolean
  overload: XTMF.ModelSystem.Save*
  nameWithType.vb: ModelSystem.Save(Stream, IModelSystemStructure, String, List(Of ILinkedParameter), ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.ModelSystem.Save(System.IO.Stream, XTMF.IModelSystemStructure, System.String, System.Collections.Generic.List(Of XTMF.ILinkedParameter), ByRef System.String)
  name.vb: Save(Stream, IModelSystemStructure, String, List(Of ILinkedParameter), ByRef String)
- uid: XTMF.ModelSystem.Save(System.String@)
  commentId: M:XTMF.ModelSystem.Save(System.String@)
  id: Save(System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Save(ref String)
  nameWithType: ModelSystem.Save(ref String)
  fullName: XTMF.ModelSystem.Save(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 273
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool Save(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Save(ByRef error As String) As Boolean
  overload: XTMF.ModelSystem.Save*
  implements:
  - XTMF.IModelSystem.Save(System.String@)
  nameWithType.vb: ModelSystem.Save(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystem.Save(ByRef System.String)
  name.vb: Save(ByRef String)
- uid: XTMF.ModelSystem.ToString
  commentId: M:XTMF.ModelSystem.ToString
  id: ToString
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModelSystem.ToString()
  fullName: XTMF.ModelSystem.ToString()
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ToString
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 279
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: XTMF.ModelSystem.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: XTMF.ModelSystem.Validate(System.String@)
  commentId: M:XTMF.ModelSystem.Validate(System.String@)
  id: Validate(System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: Validate(ref String)
  nameWithType: ModelSystem.Validate(ref String)
  fullName: XTMF.ModelSystem.Validate(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Validate
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 286
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nValidate the correctness of this Model System\n"
  example: []
  syntax:
    content: public bool Validate(ref string error)
    parameters:
    - id: error
      type: System.String
      description: A description of the error, if one is found
    return:
      type: System.Boolean
      description: If an error was found
    content.vb: Public Function Validate(ByRef error As String) As Boolean
  overload: XTMF.ModelSystem.Validate*
  implements:
  - XTMF.IModelSystem.Validate(System.String@)
  nameWithType.vb: ModelSystem.Validate(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystem.Validate(ByRef System.String)
  name.vb: Validate(ByRef String)
- uid: XTMF.ModelSystem.LoadDetachedModelSystem(System.IO.Stream,XTMF.IConfiguration,System.String@)
  commentId: M:XTMF.ModelSystem.LoadDetachedModelSystem(System.IO.Stream,XTMF.IConfiguration,System.String@)
  id: LoadDetachedModelSystem(System.IO.Stream,XTMF.IConfiguration,System.String@)
  parent: XTMF.ModelSystem
  langs:
  - csharp
  - vb
  name: LoadDetachedModelSystem(Stream, IConfiguration, ref String)
  nameWithType: ModelSystem.LoadDetachedModelSystem(Stream, IConfiguration, ref String)
  fullName: XTMF.ModelSystem.LoadDetachedModelSystem(System.IO.Stream, XTMF.IConfiguration, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadDetachedModelSystem
    path: ../../XTMF/Code/XTMF/ModelSystem.cs
    startLine: 376
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nLoad a model system into memory with no\nreferences to the model system repository.\n"
  example: []
  syntax:
    content: public static ModelSystem LoadDetachedModelSystem(Stream stream, IConfiguration config, ref string error)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to read from
    - id: config
      type: XTMF.IConfiguration
      description: The XTMF configuration to use
    - id: error
      type: System.String
      description: A description of the error if there is one.
    return:
      type: XTMF.ModelSystem
      description: The loaded model system, null if there was an error loading the model system.
    content.vb: Public Shared Function LoadDetachedModelSystem(stream As Stream, config As IConfiguration, ByRef error As String) As ModelSystem
  overload: XTMF.ModelSystem.LoadDetachedModelSystem*
  nameWithType.vb: ModelSystem.LoadDetachedModelSystem(Stream, IConfiguration, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.ModelSystem.LoadDetachedModelSystem(System.IO.Stream, XTMF.IConfiguration, ByRef System.String)
  name.vb: LoadDetachedModelSystem(Stream, IConfiguration, ByRef String)
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModelSystem
  commentId: T:XTMF.IModelSystem
  parent: XTMF
  name: IModelSystem
  nameWithType: IModelSystem
  fullName: XTMF.IModelSystem
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: XTMF.ModelSystem.SetIsLoaded*
  commentId: Overload:XTMF.ModelSystem.SetIsLoaded
  name: SetIsLoaded
  nameWithType: ModelSystem.SetIsLoaded
  fullName: XTMF.ModelSystem.SetIsLoaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ModelSystem.#ctor*
  commentId: Overload:XTMF.ModelSystem.#ctor
  name: ModelSystem
  nameWithType: ModelSystem.ModelSystem
  fullName: XTMF.ModelSystem.ModelSystem
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ModelSystem.Clone*
  commentId: Overload:XTMF.ModelSystem.Clone
  name: Clone
  nameWithType: ModelSystem.Clone
  fullName: XTMF.ModelSystem.Clone
- uid: XTMF.ModelSystem
  commentId: T:XTMF.ModelSystem
  parent: XTMF
  name: ModelSystem
  nameWithType: ModelSystem
  fullName: XTMF.ModelSystem
- uid: XTMF.ModelSystem.Description*
  commentId: Overload:XTMF.ModelSystem.Description
  name: Description
  nameWithType: ModelSystem.Description
  fullName: XTMF.ModelSystem.Description
- uid: XTMF.IModelSystem.Description
  commentId: P:XTMF.IModelSystem.Description
  parent: XTMF.IModelSystem
  name: Description
  nameWithType: IModelSystem.Description
  fullName: XTMF.IModelSystem.Description
- uid: XTMF.ModelSystem.ModelSystemStructure*
  commentId: Overload:XTMF.ModelSystem.ModelSystemStructure
  name: ModelSystemStructure
  nameWithType: ModelSystem.ModelSystemStructure
  fullName: XTMF.ModelSystem.ModelSystemStructure
- uid: XTMF.IModelSystem.ModelSystemStructure
  commentId: P:XTMF.IModelSystem.ModelSystemStructure
  parent: XTMF.IModelSystem
  name: ModelSystemStructure
  nameWithType: IModelSystem.ModelSystemStructure
  fullName: XTMF.IModelSystem.ModelSystemStructure
- uid: XTMF.ModelSystem.LinkedParameters*
  commentId: Overload:XTMF.ModelSystem.LinkedParameters
  name: LinkedParameters
  nameWithType: ModelSystem.LinkedParameters
  fullName: XTMF.ModelSystem.LinkedParameters
- uid: XTMF.IModelSystem.LinkedParameters
  commentId: P:XTMF.IModelSystem.LinkedParameters
  parent: XTMF.IModelSystem
  name: LinkedParameters
  nameWithType: IModelSystem.LinkedParameters
  fullName: XTMF.IModelSystem.LinkedParameters
- uid: System.Collections.Generic.List{XTMF.ILinkedParameter}
  commentId: T:System.Collections.Generic.List{XTMF.ILinkedParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ILinkedParameter>
  nameWithType: List<ILinkedParameter>
  fullName: System.Collections.Generic.List<XTMF.ILinkedParameter>
  nameWithType.vb: List(Of ILinkedParameter)
  fullName.vb: System.Collections.Generic.List(Of XTMF.ILinkedParameter)
  name.vb: List(Of ILinkedParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.ModelSystem.Name*
  commentId: Overload:XTMF.ModelSystem.Name
  name: Name
  nameWithType: ModelSystem.Name
  fullName: XTMF.ModelSystem.Name
- uid: XTMF.IModelSystem.Name
  commentId: P:XTMF.IModelSystem.Name
  parent: XTMF.IModelSystem
  name: Name
  nameWithType: IModelSystem.Name
  fullName: XTMF.IModelSystem.Name
- uid: XTMF.ModelSystem.RegionDisplays*
  commentId: Overload:XTMF.ModelSystem.RegionDisplays
  name: RegionDisplays
  nameWithType: ModelSystem.RegionDisplays
  fullName: XTMF.ModelSystem.RegionDisplays
- uid: XTMF.IModelSystem.RegionDisplays
  commentId: P:XTMF.IModelSystem.RegionDisplays
  parent: XTMF.IModelSystem
  name: RegionDisplays
  nameWithType: IModelSystem.RegionDisplays
  fullName: XTMF.IModelSystem.RegionDisplays
- uid: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  commentId: T:System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRegionDisplay>
  nameWithType: List<IRegionDisplay>
  fullName: System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>
  nameWithType.vb: List(Of IRegionDisplay)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay)
  name.vb: List(Of IRegionDisplay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystem.Save*
  commentId: Overload:XTMF.ModelSystem.Save
  name: Save
  nameWithType: ModelSystem.Save
  fullName: XTMF.ModelSystem.Save
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: XTMF.IModelSystem.Save(System.String,System.String@)
  commentId: M:XTMF.IModelSystem.Save(System.String,System.String@)
  parent: XTMF.IModelSystem
  isExternal: true
  name: Save(String, String)
  nameWithType: IModelSystem.Save(String, String)
  fullName: XTMF.IModelSystem.Save(System.String, System.String)
  spec.csharp:
  - uid: XTMF.IModelSystem.Save(System.String,System.String@)
    name: Save
    nameWithType: IModelSystem.Save
    fullName: XTMF.IModelSystem.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystem.Save(System.String,System.String@)
    name: Save
    nameWithType: IModelSystem.Save
    fullName: XTMF.IModelSystem.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModelSystem.Save(System.String@)
  commentId: M:XTMF.IModelSystem.Save(System.String@)
  parent: XTMF.IModelSystem
  isExternal: true
  name: Save(String)
  nameWithType: IModelSystem.Save(String)
  fullName: XTMF.IModelSystem.Save(System.String)
  spec.csharp:
  - uid: XTMF.IModelSystem.Save(System.String@)
    name: Save
    nameWithType: IModelSystem.Save
    fullName: XTMF.IModelSystem.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystem.Save(System.String@)
    name: Save
    nameWithType: IModelSystem.Save
    fullName: XTMF.IModelSystem.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystem.ToString*
  commentId: Overload:XTMF.ModelSystem.ToString
  name: ToString
  nameWithType: ModelSystem.ToString
  fullName: XTMF.ModelSystem.ToString
- uid: XTMF.ModelSystem.Validate*
  commentId: Overload:XTMF.ModelSystem.Validate
  name: Validate
  nameWithType: ModelSystem.Validate
  fullName: XTMF.ModelSystem.Validate
- uid: XTMF.IModelSystem.Validate(System.String@)
  commentId: M:XTMF.IModelSystem.Validate(System.String@)
  parent: XTMF.IModelSystem
  isExternal: true
  name: Validate(String)
  nameWithType: IModelSystem.Validate(String)
  fullName: XTMF.IModelSystem.Validate(System.String)
  spec.csharp:
  - uid: XTMF.IModelSystem.Validate(System.String@)
    name: Validate
    nameWithType: IModelSystem.Validate
    fullName: XTMF.IModelSystem.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystem.Validate(System.String@)
    name: Validate
    nameWithType: IModelSystem.Validate
    fullName: XTMF.IModelSystem.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystem.LoadDetachedModelSystem*
  commentId: Overload:XTMF.ModelSystem.LoadDetachedModelSystem
  name: LoadDetachedModelSystem
  nameWithType: ModelSystem.LoadDetachedModelSystem
  fullName: XTMF.ModelSystem.LoadDetachedModelSystem
