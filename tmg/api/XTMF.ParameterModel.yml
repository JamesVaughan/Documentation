### YamlMime:ManagedReference
items:
- uid: XTMF.ParameterModel
  commentId: T:XTMF.ParameterModel
  id: ParameterModel
  parent: XTMF
  children:
  - XTMF.ParameterModel.#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession)
  - XTMF.ParameterModel.#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession,XTMF.ModelSystemStructureModel)
  - XTMF.ParameterModel.BelongsTo
  - XTMF.ParameterModel.BelongsToModel
  - XTMF.ParameterModel.Description
  - XTMF.ParameterModel.GetLinkedParameter
  - XTMF.ParameterModel.Index
  - XTMF.ParameterModel.IsDirty
  - XTMF.ParameterModel.IsDisabled
  - XTMF.ParameterModel.IsHidden
  - XTMF.ParameterModel.IsLinked
  - XTMF.ParameterModel.IsSystemParameter
  - XTMF.ParameterModel.Name
  - XTMF.ParameterModel.ParamterType
  - XTMF.ParameterModel.PropertyChanged
  - XTMF.ParameterModel.QuickParameter
  - XTMF.ParameterModel.RevertNameToDefault(System.String@)
  - XTMF.ParameterModel.SetHidden(System.Boolean,System.String@)
  - XTMF.ParameterModel.SetName(System.String,System.String@)
  - XTMF.ParameterModel.SetToDefault(System.String@)
  - XTMF.ParameterModel.SetValue(System.String,System.String@)
  - XTMF.ParameterModel.Type
  - XTMF.ParameterModel.Value
  langs:
  - csharp
  - vb
  name: ParameterModel
  nameWithType: ParameterModel
  fullName: XTMF.ParameterModel
  type: Class
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParameterModel
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 27
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: 'public class ParameterModel : INotifyPropertyChanged'
    content.vb: >-
      Public Class ParameterModel
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ParameterModel.ParamterType
  commentId: P:XTMF.ParameterModel.ParamterType
  id: ParamterType
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: ParamterType
  nameWithType: ParameterModel.ParamterType
  fullName: XTMF.ParameterModel.ParamterType
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParamterType
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 32
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Type ParamterType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ParamterType As Type
  overload: XTMF.ParameterModel.ParamterType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.IsDisabled
  commentId: P:XTMF.ParameterModel.IsDisabled
  id: IsDisabled
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: IsDisabled
  nameWithType: ParameterModel.IsDisabled
  fullName: XTMF.ParameterModel.IsDisabled
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsDisabled
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 41
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsDisabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisabled As Boolean
  overload: XTMF.ParameterModel.IsDisabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.BelongsToModel
  commentId: P:XTMF.ParameterModel.BelongsToModel
  id: BelongsToModel
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: BelongsToModel
  nameWithType: ParameterModel.BelongsToModel
  fullName: XTMF.ParameterModel.BelongsToModel
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BelongsToModel
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 49
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ModelSystemStructureModel BelongsToModel { get; }
    parameters: []
    return:
      type: XTMF.ModelSystemStructureModel
    content.vb: Public ReadOnly Property BelongsToModel As ModelSystemStructureModel
  overload: XTMF.ParameterModel.BelongsToModel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession)
  commentId: M:XTMF.ParameterModel.#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession)
  id: '#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession)'
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: ParameterModel(ModuleParameter, ModelSystemEditingSession)
  nameWithType: ParameterModel.ParameterModel(ModuleParameter, ModelSystemEditingSession)
  fullName: XTMF.ParameterModel.ParameterModel(XTMF.ModuleParameter, XTMF.ModelSystemEditingSession)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 58
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ParameterModel(ModuleParameter realParameter, ModelSystemEditingSession session)
    parameters:
    - id: realParameter
      type: XTMF.ModuleParameter
    - id: session
      type: XTMF.ModelSystemEditingSession
    content.vb: Public Sub New(realParameter As ModuleParameter, session As ModelSystemEditingSession)
  overload: XTMF.ParameterModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ParameterModel.#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession,XTMF.ModelSystemStructureModel)
  commentId: M:XTMF.ParameterModel.#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession,XTMF.ModelSystemStructureModel)
  id: '#ctor(XTMF.ModuleParameter,XTMF.ModelSystemEditingSession,XTMF.ModelSystemStructureModel)'
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: ParameterModel(ModuleParameter, ModelSystemEditingSession, ModelSystemStructureModel)
  nameWithType: ParameterModel.ParameterModel(ModuleParameter, ModelSystemEditingSession, ModelSystemStructureModel)
  fullName: XTMF.ParameterModel.ParameterModel(XTMF.ModuleParameter, XTMF.ModelSystemEditingSession, XTMF.ModelSystemStructureModel)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 66
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ParameterModel(ModuleParameter realParameter, ModelSystemEditingSession session, ModelSystemStructureModel belongsTo)
    parameters:
    - id: realParameter
      type: XTMF.ModuleParameter
    - id: session
      type: XTMF.ModelSystemEditingSession
    - id: belongsTo
      type: XTMF.ModelSystemStructureModel
    content.vb: Public Sub New(realParameter As ModuleParameter, session As ModelSystemEditingSession, belongsTo As ModelSystemStructureModel)
  overload: XTMF.ParameterModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ParameterModel.PropertyChanged
  commentId: E:XTMF.ParameterModel.PropertyChanged
  id: PropertyChanged
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ParameterModel.PropertyChanged
  fullName: XTMF.ParameterModel.PropertyChanged
  type: Event
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PropertyChanged
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 78
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ParameterModel.IsDirty
  commentId: P:XTMF.ParameterModel.IsDirty
  id: IsDirty
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ParameterModel.IsDirty
  fullName: XTMF.ParameterModel.IsDirty
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsDirty
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 80
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDirty As Boolean
  overload: XTMF.ParameterModel.IsDirty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.Name
  commentId: P:XTMF.ParameterModel.Name
  id: Name
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ParameterModel.Name
  fullName: XTMF.ParameterModel.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 82
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: XTMF.ParameterModel.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.Value
  commentId: P:XTMF.ParameterModel.Value
  id: Value
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ParameterModel.Value
  fullName: XTMF.ParameterModel.Value
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Value
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 86
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: XTMF.ParameterModel.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.Description
  commentId: P:XTMF.ParameterModel.Description
  id: Description
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ParameterModel.Description
  fullName: XTMF.ParameterModel.Description
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Description
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 105
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: XTMF.ParameterModel.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.IsSystemParameter
  commentId: P:XTMF.ParameterModel.IsSystemParameter
  id: IsSystemParameter
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: IsSystemParameter
  nameWithType: ParameterModel.IsSystemParameter
  fullName: XTMF.ParameterModel.IsSystemParameter
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsSystemParameter
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 107
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsSystemParameter { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSystemParameter As Boolean
  overload: XTMF.ParameterModel.IsSystemParameter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.IsLinked
  commentId: P:XTMF.ParameterModel.IsLinked
  id: IsLinked
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: IsLinked
  nameWithType: ParameterModel.IsLinked
  fullName: XTMF.ParameterModel.IsLinked
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsLinked
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 109
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsLinked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLinked As Boolean
  overload: XTMF.ParameterModel.IsLinked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.IsHidden
  commentId: P:XTMF.ParameterModel.IsHidden
  id: IsHidden
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: IsHidden
  nameWithType: ParameterModel.IsHidden
  fullName: XTMF.ParameterModel.IsHidden
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsHidden
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 111
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsHidden { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHidden As Boolean
  overload: XTMF.ParameterModel.IsHidden*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.QuickParameter
  commentId: P:XTMF.ParameterModel.QuickParameter
  id: QuickParameter
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: QuickParameter
  nameWithType: ParameterModel.QuickParameter
  fullName: XTMF.ParameterModel.QuickParameter
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: QuickParameter
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 113
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool QuickParameter { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property QuickParameter As Boolean
  overload: XTMF.ParameterModel.QuickParameter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.ParameterModel.SetHidden(System.Boolean,System.String@)
  commentId: M:XTMF.ParameterModel.SetHidden(System.Boolean,System.String@)
  id: SetHidden(System.Boolean,System.String@)
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: SetHidden(Boolean, ref String)
  nameWithType: ParameterModel.SetHidden(Boolean, ref String)
  fullName: XTMF.ParameterModel.SetHidden(System.Boolean, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetHidden
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 150
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public bool SetHidden(bool hide, ref string error)
    parameters:
    - id: hide
      type: System.Boolean
      description: ''
    - id: error
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function SetHidden(hide As Boolean, ByRef error As String) As Boolean
  overload: XTMF.ParameterModel.SetHidden*
  nameWithType.vb: ParameterModel.SetHidden(Boolean, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ParameterModel.SetHidden(System.Boolean, ByRef System.String)
  name.vb: SetHidden(Boolean, ByRef String)
- uid: XTMF.ParameterModel.BelongsTo
  commentId: P:XTMF.ParameterModel.BelongsTo
  id: BelongsTo
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: BelongsTo
  nameWithType: ParameterModel.BelongsTo
  fullName: XTMF.ParameterModel.BelongsTo
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BelongsTo
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 172
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemStructure BelongsTo { get; }
    parameters: []
    return:
      type: XTMF.IModelSystemStructure
    content.vb: Public ReadOnly Property BelongsTo As IModelSystemStructure
  overload: XTMF.ParameterModel.BelongsTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.Type
  commentId: P:XTMF.ParameterModel.Type
  id: Type
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ParameterModel.Type
  fullName: XTMF.ParameterModel.Type
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Type
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 177
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet the type of the parameter\n"
  example: []
  syntax:
    content: public Type Type { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property Type As Type
  overload: XTMF.ParameterModel.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.Index
  commentId: P:XTMF.ParameterModel.Index
  id: Index
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ParameterModel.Index
  fullName: XTMF.ParameterModel.Index
  type: Property
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Index
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 179
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Index As Integer
  overload: XTMF.ParameterModel.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ParameterModel.SetValue(System.String,System.String@)
  commentId: M:XTMF.ParameterModel.SetValue(System.String,System.String@)
  id: SetValue(System.String,System.String@)
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: SetValue(String, ref String)
  nameWithType: ParameterModel.SetValue(String, ref String)
  fullName: XTMF.ParameterModel.SetValue(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetValue
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 207
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nAttempts to set the value of the parameter to the new given value\n"
  example: []
  syntax:
    content: public bool SetValue(string newValue, ref string error)
    parameters:
    - id: newValue
      type: System.String
      description: The value to change the parameter to
    - id: error
      type: System.String
      description: If the value is invalid this will contain a message as to why.
    return:
      type: System.Boolean
      description: True if the parameter was set to the new value, false otherwise with an error message in error.
    content.vb: Public Function SetValue(newValue As String, ByRef error As String) As Boolean
  overload: XTMF.ParameterModel.SetValue*
  nameWithType.vb: ParameterModel.SetValue(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ParameterModel.SetValue(System.String, ByRef System.String)
  name.vb: SetValue(String, ByRef String)
- uid: XTMF.ParameterModel.GetLinkedParameter
  commentId: M:XTMF.ParameterModel.GetLinkedParameter
  id: GetLinkedParameter
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: GetLinkedParameter()
  nameWithType: ParameterModel.GetLinkedParameter()
  fullName: XTMF.ParameterModel.GetLinkedParameter()
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetLinkedParameter
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 268
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet the linked parameter model that contains this parameter.\n"
  example: []
  syntax:
    content: public LinkedParameterModel GetLinkedParameter()
    return:
      type: XTMF.LinkedParameterModel
      description: The linked parameter model, null if this parameter is not contained.
    content.vb: Public Function GetLinkedParameter As LinkedParameterModel
  overload: XTMF.ParameterModel.GetLinkedParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ParameterModel.SetToDefault(System.String@)
  commentId: M:XTMF.ParameterModel.SetToDefault(System.String@)
  id: SetToDefault(System.String@)
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: SetToDefault(ref String)
  nameWithType: ParameterModel.SetToDefault(ref String)
  fullName: XTMF.ParameterModel.SetToDefault(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetToDefault
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 278
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nSet the parameter to the default value\n"
  example: []
  syntax:
    content: public bool SetToDefault(ref string error)
    parameters:
    - id: error
      type: System.String
      description: If there is an error this will contain a message
    return:
      type: System.Boolean
      description: If the parameter was set to it&apos;s default
    content.vb: Public Function SetToDefault(ByRef error As String) As Boolean
  overload: XTMF.ParameterModel.SetToDefault*
  nameWithType.vb: ParameterModel.SetToDefault(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ParameterModel.SetToDefault(ByRef System.String)
  name.vb: SetToDefault(ByRef String)
- uid: XTMF.ParameterModel.SetName(System.String,System.String@)
  commentId: M:XTMF.ParameterModel.SetName(System.String,System.String@)
  id: SetName(System.String,System.String@)
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: SetName(String, ref String)
  nameWithType: ParameterModel.SetName(String, ref String)
  fullName: XTMF.ParameterModel.SetName(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetName
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 300
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGive a parameter a friendly name\n"
  example: []
  syntax:
    content: public bool SetName(string newName, ref string error)
    parameters:
    - id: newName
      type: System.String
      description: The name to assign to the parameter
    - id: error
      type: System.String
      description: In case of an error, a message of why it occurred
    return:
      type: System.Boolean
      description: True if the operation succeeds, false with an error message otherwise.
    content.vb: Public Function SetName(newName As String, ByRef error As String) As Boolean
  overload: XTMF.ParameterModel.SetName*
  nameWithType.vb: ParameterModel.SetName(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ParameterModel.SetName(System.String, ByRef System.String)
  name.vb: SetName(String, ByRef String)
- uid: XTMF.ParameterModel.RevertNameToDefault(System.String@)
  commentId: M:XTMF.ParameterModel.RevertNameToDefault(System.String@)
  id: RevertNameToDefault(System.String@)
  parent: XTMF.ParameterModel
  langs:
  - csharp
  - vb
  name: RevertNameToDefault(ref String)
  nameWithType: ParameterModel.RevertNameToDefault(ref String)
  fullName: XTMF.ParameterModel.RevertNameToDefault(ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Editing/ParameterModel.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RevertNameToDefault
    path: ../../XTMF/Code/XTMF/Editing/ParameterModel.cs
    startLine: 329
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRevert the name of the parameter back to the default name\n"
  example: []
  syntax:
    content: public bool RevertNameToDefault(ref string error)
    parameters:
    - id: error
      type: System.String
      description: In case of an error, a message of why it occurred
    return:
      type: System.Boolean
      description: True if the operation succeeds, false with an error message otherwise.
    content.vb: Public Function RevertNameToDefault(ByRef error As String) As Boolean
  overload: XTMF.ParameterModel.RevertNameToDefault*
  nameWithType.vb: ParameterModel.RevertNameToDefault(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ParameterModel.RevertNameToDefault(ByRef System.String)
  name.vb: RevertNameToDefault(ByRef String)
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: XTMF.ParameterModel.ParamterType*
  commentId: Overload:XTMF.ParameterModel.ParamterType
  name: ParamterType
  nameWithType: ParameterModel.ParamterType
  fullName: XTMF.ParameterModel.ParamterType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: XTMF.ParameterModel.IsDisabled*
  commentId: Overload:XTMF.ParameterModel.IsDisabled
  name: IsDisabled
  nameWithType: ParameterModel.IsDisabled
  fullName: XTMF.ParameterModel.IsDisabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ParameterModel.BelongsToModel*
  commentId: Overload:XTMF.ParameterModel.BelongsToModel
  name: BelongsToModel
  nameWithType: ParameterModel.BelongsToModel
  fullName: XTMF.ParameterModel.BelongsToModel
- uid: XTMF.ModelSystemStructureModel
  commentId: T:XTMF.ModelSystemStructureModel
  parent: XTMF
  name: ModelSystemStructureModel
  nameWithType: ModelSystemStructureModel
  fullName: XTMF.ModelSystemStructureModel
- uid: XTMF.ParameterModel.#ctor*
  commentId: Overload:XTMF.ParameterModel.#ctor
  name: ParameterModel
  nameWithType: ParameterModel.ParameterModel
  fullName: XTMF.ParameterModel.ParameterModel
- uid: XTMF.ModuleParameter
  commentId: T:XTMF.ModuleParameter
  parent: XTMF
  name: ModuleParameter
  nameWithType: ModuleParameter
  fullName: XTMF.ModuleParameter
- uid: XTMF.ModelSystemEditingSession
  commentId: T:XTMF.ModelSystemEditingSession
  parent: XTMF
  name: ModelSystemEditingSession
  nameWithType: ModelSystemEditingSession
  fullName: XTMF.ModelSystemEditingSession
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: XTMF.ParameterModel.IsDirty*
  commentId: Overload:XTMF.ParameterModel.IsDirty
  name: IsDirty
  nameWithType: ParameterModel.IsDirty
  fullName: XTMF.ParameterModel.IsDirty
- uid: XTMF.ParameterModel.Name*
  commentId: Overload:XTMF.ParameterModel.Name
  name: Name
  nameWithType: ParameterModel.Name
  fullName: XTMF.ParameterModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ParameterModel.Value*
  commentId: Overload:XTMF.ParameterModel.Value
  name: Value
  nameWithType: ParameterModel.Value
  fullName: XTMF.ParameterModel.Value
- uid: XTMF.ParameterModel.Description*
  commentId: Overload:XTMF.ParameterModel.Description
  name: Description
  nameWithType: ParameterModel.Description
  fullName: XTMF.ParameterModel.Description
- uid: XTMF.ParameterModel.IsSystemParameter*
  commentId: Overload:XTMF.ParameterModel.IsSystemParameter
  name: IsSystemParameter
  nameWithType: ParameterModel.IsSystemParameter
  fullName: XTMF.ParameterModel.IsSystemParameter
- uid: XTMF.ParameterModel.IsLinked*
  commentId: Overload:XTMF.ParameterModel.IsLinked
  name: IsLinked
  nameWithType: ParameterModel.IsLinked
  fullName: XTMF.ParameterModel.IsLinked
- uid: XTMF.ParameterModel.IsHidden*
  commentId: Overload:XTMF.ParameterModel.IsHidden
  name: IsHidden
  nameWithType: ParameterModel.IsHidden
  fullName: XTMF.ParameterModel.IsHidden
- uid: XTMF.ParameterModel.QuickParameter*
  commentId: Overload:XTMF.ParameterModel.QuickParameter
  name: QuickParameter
  nameWithType: ParameterModel.QuickParameter
  fullName: XTMF.ParameterModel.QuickParameter
- uid: XTMF.ParameterModel.SetHidden*
  commentId: Overload:XTMF.ParameterModel.SetHidden
  name: SetHidden
  nameWithType: ParameterModel.SetHidden
  fullName: XTMF.ParameterModel.SetHidden
- uid: XTMF.ParameterModel.BelongsTo*
  commentId: Overload:XTMF.ParameterModel.BelongsTo
  name: BelongsTo
  nameWithType: ParameterModel.BelongsTo
  fullName: XTMF.ParameterModel.BelongsTo
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: XTMF.ParameterModel.Type*
  commentId: Overload:XTMF.ParameterModel.Type
  name: Type
  nameWithType: ParameterModel.Type
  fullName: XTMF.ParameterModel.Type
- uid: XTMF.ParameterModel.Index*
  commentId: Overload:XTMF.ParameterModel.Index
  name: Index
  nameWithType: ParameterModel.Index
  fullName: XTMF.ParameterModel.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.ParameterModel.SetValue*
  commentId: Overload:XTMF.ParameterModel.SetValue
  name: SetValue
  nameWithType: ParameterModel.SetValue
  fullName: XTMF.ParameterModel.SetValue
- uid: XTMF.ParameterModel.GetLinkedParameter*
  commentId: Overload:XTMF.ParameterModel.GetLinkedParameter
  name: GetLinkedParameter
  nameWithType: ParameterModel.GetLinkedParameter
  fullName: XTMF.ParameterModel.GetLinkedParameter
- uid: XTMF.LinkedParameterModel
  commentId: T:XTMF.LinkedParameterModel
  parent: XTMF
  name: LinkedParameterModel
  nameWithType: LinkedParameterModel
  fullName: XTMF.LinkedParameterModel
- uid: XTMF.ParameterModel.SetToDefault*
  commentId: Overload:XTMF.ParameterModel.SetToDefault
  name: SetToDefault
  nameWithType: ParameterModel.SetToDefault
  fullName: XTMF.ParameterModel.SetToDefault
- uid: XTMF.ParameterModel.SetName*
  commentId: Overload:XTMF.ParameterModel.SetName
  name: SetName
  nameWithType: ParameterModel.SetName
  fullName: XTMF.ParameterModel.SetName
- uid: XTMF.ParameterModel.RevertNameToDefault*
  commentId: Overload:XTMF.ParameterModel.RevertNameToDefault
  name: RevertNameToDefault
  nameWithType: ParameterModel.RevertNameToDefault
  fullName: XTMF.ParameterModel.RevertNameToDefault
