### YamlMime:ManagedReference
items:
- uid: XTMF.UnifiedFieldType
  commentId: T:XTMF.UnifiedFieldType
  id: UnifiedFieldType
  parent: XTMF
  children:
  - XTMF.UnifiedFieldType.GetAttributes
  - XTMF.UnifiedFieldType.GetMembers(System.Type)
  - XTMF.UnifiedFieldType.IsPublic
  - XTMF.UnifiedFieldType.Name
  langs:
  - csharp
  - vb
  name: UnifiedFieldType
  nameWithType: UnifiedFieldType
  fullName: XTMF.UnifiedFieldType
  type: Class
  source:
    remote:
      path: Code/XTMF/ReflectionHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnifiedFieldType
    path: ../../XTMF/Code/XTMF/ReflectionHelper.cs
    startLine: 31
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis class provides the ability to work jointly with fields and properties disregarding\ntheir differences.\n"
  example: []
  syntax:
    content: public abstract class UnifiedFieldType
    content.vb: Public MustInherit Class UnifiedFieldType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: XTMF.UnifiedFieldType.Name
  commentId: P:XTMF.UnifiedFieldType.Name
  id: Name
  parent: XTMF.UnifiedFieldType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UnifiedFieldType.Name
  fullName: XTMF.UnifiedFieldType.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/ReflectionHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/ReflectionHelper.cs
    startLine: 33
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: XTMF.UnifiedFieldType.Name*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: XTMF.UnifiedFieldType.GetAttributes
  commentId: M:XTMF.UnifiedFieldType.GetAttributes
  id: GetAttributes
  parent: XTMF.UnifiedFieldType
  langs:
  - csharp
  - vb
  name: GetAttributes()
  nameWithType: UnifiedFieldType.GetAttributes()
  fullName: XTMF.UnifiedFieldType.GetAttributes()
  type: Method
  source:
    remote:
      path: Code/XTMF/ReflectionHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetAttributes
    path: ../../XTMF/Code/XTMF/ReflectionHelper.cs
    startLine: 35
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public abstract object[] GetAttributes()
    return:
      type: System.Object[]
    content.vb: Public MustOverride Function GetAttributes As Object()
  overload: XTMF.UnifiedFieldType.GetAttributes*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: XTMF.UnifiedFieldType.IsPublic
  commentId: P:XTMF.UnifiedFieldType.IsPublic
  id: IsPublic
  parent: XTMF.UnifiedFieldType
  langs:
  - csharp
  - vb
  name: IsPublic
  nameWithType: UnifiedFieldType.IsPublic
  fullName: XTMF.UnifiedFieldType.IsPublic
  type: Property
  source:
    remote:
      path: Code/XTMF/ReflectionHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsPublic
    path: ../../XTMF/Code/XTMF/ReflectionHelper.cs
    startLine: 37
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public abstract bool IsPublic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsPublic As Boolean
  overload: XTMF.UnifiedFieldType.IsPublic*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: XTMF.UnifiedFieldType.GetMembers(System.Type)
  commentId: M:XTMF.UnifiedFieldType.GetMembers(System.Type)
  id: GetMembers(System.Type)
  parent: XTMF.UnifiedFieldType
  langs:
  - csharp
  - vb
  name: GetMembers(Type)
  nameWithType: UnifiedFieldType.GetMembers(Type)
  fullName: XTMF.UnifiedFieldType.GetMembers(System.Type)
  type: Method
  source:
    remote:
      path: Code/XTMF/ReflectionHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetMembers
    path: ../../XTMF/Code/XTMF/ReflectionHelper.cs
    startLine: 39
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public static IEnumerable<UnifiedFieldType> GetMembers(Type t)
    parameters:
    - id: t
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{XTMF.UnifiedFieldType}
    content.vb: Public Shared Function GetMembers(t As Type) As IEnumerable(Of UnifiedFieldType)
  overload: XTMF.UnifiedFieldType.GetMembers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.UnifiedFieldType.Name*
  commentId: Overload:XTMF.UnifiedFieldType.Name
  name: Name
  nameWithType: UnifiedFieldType.Name
  fullName: XTMF.UnifiedFieldType.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.UnifiedFieldType.GetAttributes*
  commentId: Overload:XTMF.UnifiedFieldType.GetAttributes
  name: GetAttributes
  nameWithType: UnifiedFieldType.GetAttributes
  fullName: XTMF.UnifiedFieldType.GetAttributes
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: XTMF.UnifiedFieldType.IsPublic*
  commentId: Overload:XTMF.UnifiedFieldType.IsPublic
  name: IsPublic
  nameWithType: UnifiedFieldType.IsPublic
  fullName: XTMF.UnifiedFieldType.IsPublic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.UnifiedFieldType.GetMembers*
  commentId: Overload:XTMF.UnifiedFieldType.GetMembers
  name: GetMembers
  nameWithType: UnifiedFieldType.GetMembers
  fullName: XTMF.UnifiedFieldType.GetMembers
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{XTMF.UnifiedFieldType}
  commentId: T:System.Collections.Generic.IEnumerable{XTMF.UnifiedFieldType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UnifiedFieldType>
  nameWithType: IEnumerable<UnifiedFieldType>
  fullName: System.Collections.Generic.IEnumerable<XTMF.UnifiedFieldType>
  nameWithType.vb: IEnumerable(Of UnifiedFieldType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.UnifiedFieldType)
  name.vb: IEnumerable(Of UnifiedFieldType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.UnifiedFieldType
    name: UnifiedFieldType
    nameWithType: UnifiedFieldType
    fullName: XTMF.UnifiedFieldType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.UnifiedFieldType
    name: UnifiedFieldType
    nameWithType: UnifiedFieldType
    fullName: XTMF.UnifiedFieldType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
