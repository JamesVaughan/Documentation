### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  commentId: T:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  id: ReadCommentedTriIndexFloatData
  parent: TMG.GTAModel.Input
  children:
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Data
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataColumnToSparseSpace
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataStartIndex
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FileName
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FirstDimensionColumn
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Root
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation(System.String@)
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.SecondDimensionColumn
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single})
  - TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData
  langs:
  - csharp
  - vb
  name: ReadCommentedTriIndexFloatData
  nameWithType: ReadCommentedTriIndexFloatData
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  type: Class
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReadCommentedTriIndexFloatData
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: 'public class ReadCommentedTriIndexFloatData : IDataSource<SparseTriIndex<float>>, IDataSource, IModule'
    content.vb: >-
      Public Class ReadCommentedTriIndexFloatData
          Implements IDataSource(Of SparseTriIndex(Of Single)), IDataSource, IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
  - XTMF.IDataSource
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataColumnToSparseSpace
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataColumnToSparseSpace
  id: DataColumnToSparseSpace
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: DataColumnToSparseSpace
  nameWithType: ReadCommentedTriIndexFloatData.DataColumnToSparseSpace
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataColumnToSparseSpace
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DataColumnToSparseSpace
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Data-Column Sparse Space", "1,2,3,4", typeof(NumberList), "The data column's sparse space indexes. (1,2,3,4)")]

      public NumberList DataColumnToSparseSpace
    return:
      type: TMG.GTAModel.DataUtility.NumberList
    content.vb: >-
      <RunParameter("Data-Column Sparse Space", "1,2,3,4", GetType(NumberList), "The data column's sparse space indexes. (1,2,3,4)")>

      Public DataColumnToSparseSpace As NumberList
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Data-Column Sparse Space
    - type: System.String
      value: 1,2,3,4
    - type: System.Type
      value: TMG.GTAModel.DataUtility.NumberList
    - type: System.String
      value: The data column's sparse space indexes. (1,2,3,4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataStartIndex
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataStartIndex
  id: DataStartIndex
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: DataStartIndex
  nameWithType: ReadCommentedTriIndexFloatData.DataStartIndex
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.DataStartIndex
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DataStartIndex
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("First Data Column", 2, "The first column containing data (0 indexed).")]

      public int DataStartIndex
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("First Data Column", 2, "The first column containing data (0 indexed).")>

      Public DataStartIndex As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: First Data Column
    - type: System.Int32
      value: 2
    - type: System.String
      value: The first column containing data (0 indexed).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FileName
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FileName
  id: FileName
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: ReadCommentedTriIndexFloatData.FileName
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FileName
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FileName
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("File Name", "Data.txt", "The file that we will be loading in as a Tri-Indexed data source.")]

      public string FileName
    return:
      type: System.String
    content.vb: >-
      <RunParameter("File Name", "Data.txt", "The file that we will be loading in as a Tri-Indexed data source.")>

      Public FileName As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: File Name
    - type: System.String
      value: Data.txt
    - type: System.String
      value: The file that we will be loading in as a Tri-Indexed data source.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FirstDimensionColumn
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FirstDimensionColumn
  id: FirstDimensionColumn
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: FirstDimensionColumn
  nameWithType: ReadCommentedTriIndexFloatData.FirstDimensionColumn
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.FirstDimensionColumn
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FirstDimensionColumn
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("First Dimension Column", 0, "The column number containing the first dimension (0 indexed).")]

      public int FirstDimensionColumn
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("First Dimension Column", 0, "The column number containing the first dimension (0 indexed).")>

      Public FirstDimensionColumn As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: First Dimension Column
    - type: System.Int32
      value: 0
    - type: System.String
      value: The column number containing the first dimension (0 indexed).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Root
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Root
  id: Root
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ReadCommentedTriIndexFloatData.Root
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public IModelSystemTemplate Root
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Root As IModelSystemTemplate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.SecondDimensionColumn
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.SecondDimensionColumn
  id: SecondDimensionColumn
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: SecondDimensionColumn
  nameWithType: ReadCommentedTriIndexFloatData.SecondDimensionColumn
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.SecondDimensionColumn
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SecondDimensionColumn
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: >-
      [RunParameter("Second Dimension Column", 1, "The column number containing the second dimension (0 indexed).")]

      public int SecondDimensionColumn
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Second Dimension Column", 1, "The column number containing the second dimension (0 indexed).")>

      Public SecondDimensionColumn As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Second Dimension Column
    - type: System.Int32
      value: 1
    - type: System.String
      value: The column number containing the second dimension (0 indexed).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Data
  commentId: F:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Data
  id: Data
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ReadCommentedTriIndexFloatData.Data
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Data
  type: Field
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Data
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 49
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: protected SparseTriIndex<float> Data
    return:
      type: Datastructure.SparseTriIndex{System.Single}
    content.vb: Protected Data As SparseTriIndex(Of Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name
  commentId: P:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name
  id: Name
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ReadCommentedTriIndexFloatData.Name
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 51
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress
  commentId: P:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress
  id: Progress
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ReadCommentedTriIndexFloatData.Progress
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 57
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour
  commentId: P:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ReadCommentedTriIndexFloatData.ProgressColour
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 63
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData
  commentId: M:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData
  id: GiveData
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: GiveData()
  nameWithType: ReadCommentedTriIndexFloatData.GiveData()
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GiveData
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 68
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public SparseTriIndex<float> GiveData()
    return:
      type: Datastructure.SparseTriIndex{System.Single}
    content.vb: Public Function GiveData As SparseTriIndex(Of Single)
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData*
  implements:
  - XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}.GiveData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded
  commentId: P:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded
  id: Loaded
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: ReadCommentedTriIndexFloatData.Loaded
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded
  type: Property
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Loaded
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 73
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool Loaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Loaded As Boolean
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded*
  implements:
  - XTMF.IDataSource.Loaded
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData
  commentId: M:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData
  id: LoadData
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: LoadData()
  nameWithType: ReadCommentedTriIndexFloatData.LoadData()
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadData
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 78
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public void LoadData()
    content.vb: Public Sub LoadData
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData*
  implements:
  - XTMF.IDataSource.LoadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ReadCommentedTriIndexFloatData.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 86
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ReadCommentedTriIndexFloatData.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData
  commentId: M:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData
  id: UnloadData
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: UnloadData()
  nameWithType: ReadCommentedTriIndexFloatData.UnloadData()
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnloadData
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 96
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  syntax:
    content: public void UnloadData()
    content.vb: Public Sub UnloadData
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData*
  implements:
  - XTMF.IDataSource.UnloadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single})
  commentId: M:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single})
  id: StoreData(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single})
  parent: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData
  langs:
  - csharp
  - vb
  name: StoreData(List<Int32>, List<Int32>, List<Int32>, List<Single>)
  nameWithType: ReadCommentedTriIndexFloatData.StoreData(List<Int32>, List<Int32>, List<Int32>, List<Single>)
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData(System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<System.Single>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StoreData
    path: ../../XTMF/Code/GTAModel/Input/ReadCommentedTriIndexFloatData.cs
    startLine: 108
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Input
  summary: "\nOverride this method in order to provide the ability to load different formats\n"
  example: []
  syntax:
    content: protected virtual void StoreData(List<int> first, List<int> second, List<int> third, List<float> data)
    parameters:
    - id: first
      type: System.Collections.Generic.List{System.Int32}
      description: The first dimension sparse address
    - id: second
      type: System.Collections.Generic.List{System.Int32}
      description: The second dimension sparse address
    - id: third
      type: System.Collections.Generic.List{System.Int32}
      description: The third dimension sparse address
    - id: data
      type: System.Collections.Generic.List{System.Single}
      description: The data to be stored at the address
    content.vb: Protected Overridable Sub StoreData(first As List(Of Integer), second As List(Of Integer), third As List(Of Integer), data As List(Of Single))
  overload: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData*
  nameWithType.vb: ReadCommentedTriIndexFloatData.StoreData(List(Of Int32), List(Of Int32), List(Of Int32), List(Of Single))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData(System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.List(Of System.Single))
  name.vb: StoreData(List(Of Int32), List(Of Int32), List(Of Int32), List(Of Single))
references:
- uid: TMG.GTAModel.Input
  commentId: N:TMG.GTAModel.Input
  name: TMG.GTAModel.Input
  nameWithType: TMG.GTAModel.Input
  fullName: TMG.GTAModel.Input
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
  commentId: T:XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<SparseTriIndex<Single>>
  nameWithType: IDataSource<SparseTriIndex<Single>>
  fullName: XTMF.IDataSource<Datastructure.SparseTriIndex<System.Single>>
  nameWithType.vb: IDataSource(Of SparseTriIndex(Of Single))
  fullName.vb: XTMF.IDataSource(Of Datastructure.SparseTriIndex(Of System.Single))
  name.vb: IDataSource(Of SparseTriIndex(Of Single))
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.GTAModel.DataUtility.NumberList
  commentId: T:TMG.GTAModel.DataUtility.NumberList
  parent: TMG.GTAModel.DataUtility
  name: NumberList
  nameWithType: NumberList
  fullName: TMG.GTAModel.DataUtility.NumberList
- uid: TMG.GTAModel.DataUtility
  commentId: N:TMG.GTAModel.DataUtility
  name: TMG.GTAModel.DataUtility
  nameWithType: TMG.GTAModel.DataUtility
  fullName: TMG.GTAModel.DataUtility
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: Datastructure.SparseTriIndex{System.Single}
  commentId: T:Datastructure.SparseTriIndex{System.Single}
  parent: Datastructure
  definition: Datastructure.SparseTriIndex`1
  name: SparseTriIndex<Single>
  nameWithType: SparseTriIndex<Single>
  fullName: Datastructure.SparseTriIndex<System.Single>
  nameWithType.vb: SparseTriIndex(Of Single)
  fullName.vb: Datastructure.SparseTriIndex(Of System.Single)
  name.vb: SparseTriIndex(Of Single)
  spec.csharp:
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTriIndex`1
  commentId: T:Datastructure.SparseTriIndex`1
  name: SparseTriIndex<T>
  nameWithType: SparseTriIndex<T>
  fullName: Datastructure.SparseTriIndex<T>
  nameWithType.vb: SparseTriIndex(Of T)
  fullName.vb: Datastructure.SparseTriIndex(Of T)
  name.vb: SparseTriIndex(Of T)
  spec.csharp:
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTriIndex`1
    name: SparseTriIndex
    nameWithType: SparseTriIndex
    fullName: Datastructure.SparseTriIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name
  name: Name
  nameWithType: ReadCommentedTriIndexFloatData.Name
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress
  name: Progress
  nameWithType: ReadCommentedTriIndexFloatData.Progress
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour
  name: ProgressColour
  nameWithType: ReadCommentedTriIndexFloatData.ProgressColour
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData
  name: GiveData
  nameWithType: ReadCommentedTriIndexFloatData.GiveData
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.GiveData
- uid: XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}.GiveData
  commentId: M:XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}.GiveData
  parent: XTMF.IDataSource{Datastructure.SparseTriIndex{System.Single}}
  definition: XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<SparseTriIndex<Single>>.GiveData()
  fullName: XTMF.IDataSource<Datastructure.SparseTriIndex<System.Single>>.GiveData()
  nameWithType.vb: IDataSource(Of SparseTriIndex(Of Single)).GiveData()
  fullName.vb: XTMF.IDataSource(Of Datastructure.SparseTriIndex(Of System.Single)).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<SparseTriIndex<Single>>.GiveData
    fullName: XTMF.IDataSource<Datastructure.SparseTriIndex<System.Single>>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of SparseTriIndex(Of Single)).GiveData
    fullName: XTMF.IDataSource(Of Datastructure.SparseTriIndex(Of System.Single)).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1.GiveData
  commentId: M:XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<T>.GiveData()
  fullName: XTMF.IDataSource<T>.GiveData()
  nameWithType.vb: IDataSource(Of T).GiveData()
  fullName.vb: XTMF.IDataSource(Of T).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<T>.GiveData
    fullName: XTMF.IDataSource<T>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of T).GiveData
    fullName: XTMF.IDataSource(Of T).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded
  name: Loaded
  nameWithType: ReadCommentedTriIndexFloatData.Loaded
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.Loaded
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData
  name: LoadData
  nameWithType: ReadCommentedTriIndexFloatData.LoadData
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.LoadData
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ReadCommentedTriIndexFloatData.RuntimeValidation
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData
  name: UnloadData
  nameWithType: ReadCommentedTriIndexFloatData.UnloadData
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.UnloadData
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData*
  commentId: Overload:TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData
  name: StoreData
  nameWithType: ReadCommentedTriIndexFloatData.StoreData
  fullName: TMG.GTAModel.Input.ReadCommentedTriIndexFloatData.StoreData
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Single>
  nameWithType: List<Single>
  fullName: System.Collections.Generic.List<System.Single>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of System.Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
