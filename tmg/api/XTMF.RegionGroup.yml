### YamlMime:ManagedReference
items:
- uid: XTMF.RegionGroup
  commentId: T:XTMF.RegionGroup
  id: RegionGroup
  parent: XTMF
  children:
  - XTMF.RegionGroup.#ctor
  - XTMF.RegionGroup.#ctor(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure)
  - XTMF.RegionGroup.Modules
  - XTMF.RegionGroup.ModulesUpdated
  - XTMF.RegionGroup.Name
  - XTMF.RegionGroup.UpdateModules(XTMF.Interfaces.IRegionGroup)
  langs:
  - csharp
  - vb
  name: RegionGroup
  nameWithType: RegionGroup
  fullName: XTMF.RegionGroup
  type: Class
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionGroup
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 12
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class RegionGroup : IRegionGroup'
    content.vb: >-
      Public Class RegionGroup
          Implements IRegionGroup
  inheritance:
  - System.Object
  implements:
  - XTMF.Interfaces.IRegionGroup
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.RegionGroup.ModulesUpdated
  commentId: E:XTMF.RegionGroup.ModulesUpdated
  id: ModulesUpdated
  parent: XTMF.RegionGroup
  langs:
  - csharp
  - vb
  name: ModulesUpdated
  nameWithType: RegionGroup.ModulesUpdated
  fullName: XTMF.RegionGroup.ModulesUpdated
  type: Event
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModulesUpdated
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 18
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event EventHandler ModulesUpdated
    return:
      type: System.EventHandler
    content.vb: Public Event ModulesUpdated As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.RegionGroup.Name
  commentId: P:XTMF.RegionGroup.Name
  id: Name
  parent: XTMF.RegionGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RegionGroup.Name
  fullName: XTMF.RegionGroup.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 20
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: XTMF.RegionGroup.Name*
  implements:
  - XTMF.Interfaces.IRegionGroup.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.RegionGroup.Modules
  commentId: P:XTMF.RegionGroup.Modules
  id: Modules
  parent: XTMF.RegionGroup
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: RegionGroup.Modules
  fullName: XTMF.RegionGroup.Modules
  type: Property
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Modules
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 31
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<IModelSystemStructure> Modules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.IModelSystemStructure}
    content.vb: Public Property Modules As List(Of IModelSystemStructure)
  overload: XTMF.RegionGroup.Modules*
  implements:
  - XTMF.Interfaces.IRegionGroup.Modules
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.RegionGroup.UpdateModules(XTMF.Interfaces.IRegionGroup)
  commentId: M:XTMF.RegionGroup.UpdateModules(XTMF.Interfaces.IRegionGroup)
  id: UpdateModules(XTMF.Interfaces.IRegionGroup)
  parent: XTMF.RegionGroup
  langs:
  - csharp
  - vb
  name: UpdateModules(IRegionGroup)
  nameWithType: RegionGroup.UpdateModules(IRegionGroup)
  fullName: XTMF.RegionGroup.UpdateModules(XTMF.Interfaces.IRegionGroup)
  type: Method
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UpdateModules
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 47
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public void UpdateModules(IRegionGroup group)
    parameters:
    - id: group
      type: XTMF.Interfaces.IRegionGroup
      description: ''
    content.vb: Public Sub UpdateModules(group As IRegionGroup)
  overload: XTMF.RegionGroup.UpdateModules*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.RegionGroup.#ctor
  commentId: M:XTMF.RegionGroup.#ctor
  id: '#ctor'
  parent: XTMF.RegionGroup
  langs:
  - csharp
  - vb
  name: RegionGroup()
  nameWithType: RegionGroup.RegionGroup()
  fullName: XTMF.RegionGroup.RegionGroup()
  type: Constructor
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 55
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public RegionGroup()
    content.vb: Public Sub New
  overload: XTMF.RegionGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.RegionGroup.#ctor(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure)
  commentId: M:XTMF.RegionGroup.#ctor(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure)
  id: '#ctor(XTMF.Interfaces.IRegionGroup,XTMF.IModelSystemStructure)'
  parent: XTMF.RegionGroup
  langs:
  - csharp
  - vb
  name: RegionGroup(IRegionGroup, IModelSystemStructure)
  nameWithType: RegionGroup.RegionGroup(IRegionGroup, IModelSystemStructure)
  fullName: XTMF.RegionGroup.RegionGroup(XTMF.Interfaces.IRegionGroup, XTMF.IModelSystemStructure)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/RegionGroup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/RegionGroup.cs
    startLine: 64
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public RegionGroup(IRegionGroup clone, IModelSystemStructure cloneStructure)
    parameters:
    - id: clone
      type: XTMF.Interfaces.IRegionGroup
      description: ''
    - id: cloneStructure
      type: XTMF.IModelSystemStructure
    content.vb: Public Sub New(clone As IRegionGroup, cloneStructure As IModelSystemStructure)
  overload: XTMF.RegionGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.Interfaces.IRegionGroup
  commentId: T:XTMF.Interfaces.IRegionGroup
  parent: XTMF.Interfaces
  name: IRegionGroup
  nameWithType: IRegionGroup
  fullName: XTMF.Interfaces.IRegionGroup
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.Interfaces
  commentId: N:XTMF.Interfaces
  name: XTMF.Interfaces
  nameWithType: XTMF.Interfaces
  fullName: XTMF.Interfaces
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: XTMF.RegionGroup.Name*
  commentId: Overload:XTMF.RegionGroup.Name
  name: Name
  nameWithType: RegionGroup.Name
  fullName: XTMF.RegionGroup.Name
- uid: XTMF.Interfaces.IRegionGroup.Name
  commentId: P:XTMF.Interfaces.IRegionGroup.Name
  parent: XTMF.Interfaces.IRegionGroup
  name: Name
  nameWithType: IRegionGroup.Name
  fullName: XTMF.Interfaces.IRegionGroup.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.RegionGroup.Modules*
  commentId: Overload:XTMF.RegionGroup.Modules
  name: Modules
  nameWithType: RegionGroup.Modules
  fullName: XTMF.RegionGroup.Modules
- uid: XTMF.Interfaces.IRegionGroup.Modules
  commentId: P:XTMF.Interfaces.IRegionGroup.Modules
  parent: XTMF.Interfaces.IRegionGroup
  name: Modules
  nameWithType: IRegionGroup.Modules
  fullName: XTMF.Interfaces.IRegionGroup.Modules
- uid: System.Collections.Generic.List{XTMF.IModelSystemStructure}
  commentId: T:System.Collections.Generic.List{XTMF.IModelSystemStructure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IModelSystemStructure>
  nameWithType: List<IModelSystemStructure>
  fullName: System.Collections.Generic.List<XTMF.IModelSystemStructure>
  nameWithType.vb: List(Of IModelSystemStructure)
  fullName.vb: System.Collections.Generic.List(Of XTMF.IModelSystemStructure)
  name.vb: List(Of IModelSystemStructure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystemStructure
    name: IModelSystemStructure
    nameWithType: IModelSystemStructure
    fullName: XTMF.IModelSystemStructure
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.RegionGroup.UpdateModules*
  commentId: Overload:XTMF.RegionGroup.UpdateModules
  name: UpdateModules
  nameWithType: RegionGroup.UpdateModules
  fullName: XTMF.RegionGroup.UpdateModules
- uid: XTMF.RegionGroup.#ctor*
  commentId: Overload:XTMF.RegionGroup.#ctor
  name: RegionGroup
  nameWithType: RegionGroup.RegionGroup
  fullName: XTMF.RegionGroup.RegionGroup
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
