### YamlMime:ManagedReference
items:
- uid: XTMF.ModelSystemRepository
  commentId: T:XTMF.ModelSystemRepository
  id: ModelSystemRepository
  parent: XTMF
  children:
  - XTMF.ModelSystemRepository.#ctor(XTMF.IConfiguration)
  - XTMF.ModelSystemRepository.Add(XTMF.IModelSystem)
  - XTMF.ModelSystemRepository.CloneModelSystem(XTMF.ModelSystem,System.String,System.String@)
  - XTMF.ModelSystemRepository.GetEnumerator
  - XTMF.ModelSystemRepository.ModelSystemAdded
  - XTMF.ModelSystemRepository.ModelSystemRemoved
  - XTMF.ModelSystemRepository.ModelSystems
  - XTMF.ModelSystemRepository.Remove(XTMF.IModelSystem)
  - XTMF.ModelSystemRepository.Rename(XTMF.ModelSystem,System.String,System.String@)
  - XTMF.ModelSystemRepository.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ModelSystemRepository
  nameWithType: ModelSystemRepository
  fullName: XTMF.ModelSystemRepository
  type: Class
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemRepository
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 30
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe XTMF implementation of the IModelSystemRepository\n"
  example: []
  syntax:
    content: 'public sealed class ModelSystemRepository : IModelSystemRepository, IEnumerable<IModelSystem>, IEnumerable'
    content.vb: >-
      Public NotInheritable Class ModelSystemRepository
          Implements IModelSystemRepository, IEnumerable(Of IModelSystem), IEnumerable
  inheritance:
  - System.Object
  implements:
  - XTMF.IModelSystemRepository
  - System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: XTMF.ModelSystemRepository.#ctor(XTMF.IConfiguration)
  commentId: M:XTMF.ModelSystemRepository.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: ModelSystemRepository(IConfiguration)
  nameWithType: ModelSystemRepository.ModelSystemRepository(IConfiguration)
  fullName: XTMF.ModelSystemRepository.ModelSystemRepository(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 41
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCreate a new model system repository for the given configuration\n"
  example: []
  syntax:
    content: public ModelSystemRepository(IConfiguration config)
    parameters:
    - id: config
      type: XTMF.IConfiguration
      description: The configuration in which this model system repository is built
    content.vb: Public Sub New(config As IConfiguration)
  overload: XTMF.ModelSystemRepository.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemRepository.ModelSystemAdded
  commentId: E:XTMF.ModelSystemRepository.ModelSystemAdded
  id: ModelSystemAdded
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: ModelSystemAdded
  nameWithType: ModelSystemRepository.ModelSystemAdded
  fullName: XTMF.ModelSystemRepository.ModelSystemAdded
  type: Event
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemAdded
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 51
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis event will fire when a model system is added\n"
  example: []
  syntax:
    content: public event Action<IModelSystem> ModelSystemAdded
    return:
      type: System.Action{XTMF.IModelSystem}
    content.vb: Public Event ModelSystemAdded As Action(Of IModelSystem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemRepository.ModelSystemRemoved
  commentId: E:XTMF.ModelSystemRepository.ModelSystemRemoved
  id: ModelSystemRemoved
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: ModelSystemRemoved
  nameWithType: ModelSystemRepository.ModelSystemRemoved
  fullName: XTMF.ModelSystemRepository.ModelSystemRemoved
  type: Event
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemRemoved
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 57
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThis event will fire when a model system has been removed\n"
  example: []
  syntax:
    content: public event Action<IModelSystem, int> ModelSystemRemoved
    return:
      type: System.Action{XTMF.IModelSystem,System.Int32}
    content.vb: Public Event ModelSystemRemoved As Action(Of IModelSystem, Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemRepository.ModelSystems
  commentId: P:XTMF.ModelSystemRepository.ModelSystems
  id: ModelSystems
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: ModelSystems
  nameWithType: ModelSystemRepository.ModelSystems
  fullName: XTMF.ModelSystemRepository.ModelSystems
  type: Property
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystems
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 62
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nThe model systems included in this repository\n"
  example: []
  syntax:
    content: public IList<IModelSystem> ModelSystems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{XTMF.IModelSystem}
    content.vb: Public ReadOnly Property ModelSystems As IList(Of IModelSystem)
  overload: XTMF.ModelSystemRepository.ModelSystems*
  implements:
  - XTMF.IModelSystemRepository.ModelSystems
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ModelSystemRepository.Add(XTMF.IModelSystem)
  commentId: M:XTMF.ModelSystemRepository.Add(XTMF.IModelSystem)
  id: Add(XTMF.IModelSystem)
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: Add(IModelSystem)
  nameWithType: ModelSystemRepository.Add(IModelSystem)
  fullName: XTMF.ModelSystemRepository.Add(XTMF.IModelSystem)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 69
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nAdd a new model system to the repository\n"
  example: []
  syntax:
    content: public void Add(IModelSystem modelSystem)
    parameters:
    - id: modelSystem
      type: XTMF.IModelSystem
      description: ''
    content.vb: Public Sub Add(modelSystem As IModelSystem)
  overload: XTMF.ModelSystemRepository.Add*
  implements:
  - XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemRepository.GetEnumerator
  commentId: M:XTMF.ModelSystemRepository.GetEnumerator
  id: GetEnumerator
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ModelSystemRepository.GetEnumerator()
  fullName: XTMF.ModelSystemRepository.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetEnumerator
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 89
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nAn enumeration of all of the contained model systems\n"
  example: []
  syntax:
    content: public IEnumerator<IModelSystem> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{XTMF.IModelSystem}
      description: ''
    content.vb: Public Function GetEnumerator As IEnumerator(Of IModelSystem)
  overload: XTMF.ModelSystemRepository.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{XTMF.IModelSystem}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemRepository.Rename(XTMF.ModelSystem,System.String,System.String@)
  commentId: M:XTMF.ModelSystemRepository.Rename(XTMF.ModelSystem,System.String,System.String@)
  id: Rename(XTMF.ModelSystem,System.String,System.String@)
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: Rename(ModelSystem, String, ref String)
  nameWithType: ModelSystemRepository.Rename(ModelSystem, String, ref String)
  fullName: XTMF.ModelSystemRepository.Rename(XTMF.ModelSystem, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Rename
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 98
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nRenames the model system if possible\n"
  example: []
  syntax:
    content: public bool Rename(ModelSystem modelSystem, string newName, ref string error)
    parameters:
    - id: modelSystem
      type: XTMF.ModelSystem
      description: The model system to rename
    - id: newName
      type: System.String
      description: The name to save it as
    - id: error
      type: System.String
      description: An error message if the operation fails
    return:
      type: System.Boolean
      description: True if the operation succeeds, false otherwise with a message.
    content.vb: Public Function Rename(modelSystem As ModelSystem, newName As String, ByRef error As String) As Boolean
  overload: XTMF.ModelSystemRepository.Rename*
  nameWithType.vb: ModelSystemRepository.Rename(ModelSystem, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemRepository.Rename(XTMF.ModelSystem, System.String, ByRef System.String)
  name.vb: Rename(ModelSystem, String, ByRef String)
- uid: XTMF.ModelSystemRepository.CloneModelSystem(XTMF.ModelSystem,System.String,System.String@)
  commentId: M:XTMF.ModelSystemRepository.CloneModelSystem(XTMF.ModelSystem,System.String,System.String@)
  id: CloneModelSystem(XTMF.ModelSystem,System.String,System.String@)
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: CloneModelSystem(ModelSystem, String, ref String)
  nameWithType: ModelSystemRepository.CloneModelSystem(ModelSystem, String, ref String)
  fullName: XTMF.ModelSystemRepository.CloneModelSystem(XTMF.ModelSystem, System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CloneModelSystem
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 131
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nMakes a copy of the model system with the given new name\n"
  example: []
  syntax:
    content: public bool CloneModelSystem(ModelSystem modelSystem, string newName, ref string error)
    parameters:
    - id: modelSystem
      type: XTMF.ModelSystem
      description: The model system to create a clone of
    - id: newName
      type: System.String
      description: The name to give the model system
    - id: error
      type: System.String
      description: An error message if the operation fails
    return:
      type: System.Boolean
      description: True if successful, false otherwise with an error message.
    content.vb: Public Function CloneModelSystem(modelSystem As ModelSystem, newName As String, ByRef error As String) As Boolean
  overload: XTMF.ModelSystemRepository.CloneModelSystem*
  nameWithType.vb: ModelSystemRepository.CloneModelSystem(ModelSystem, String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.ModelSystemRepository.CloneModelSystem(XTMF.ModelSystem, System.String, ByRef System.String)
  name.vb: CloneModelSystem(ModelSystem, String, ByRef String)
- uid: XTMF.ModelSystemRepository.Remove(XTMF.IModelSystem)
  commentId: M:XTMF.ModelSystemRepository.Remove(XTMF.IModelSystem)
  id: Remove(XTMF.IModelSystem)
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: Remove(IModelSystem)
  nameWithType: ModelSystemRepository.Remove(IModelSystem)
  fullName: XTMF.ModelSystemRepository.Remove(XTMF.IModelSystem)
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Remove
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 158
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nProvides removal for a model system\n"
  example: []
  syntax:
    content: public bool Remove(IModelSystem modelSystem)
    parameters:
    - id: modelSystem
      type: XTMF.IModelSystem
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Remove(modelSystem As IModelSystem) As Boolean
  overload: XTMF.ModelSystemRepository.Remove*
  implements:
  - XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.ModelSystemRepository.System#Collections#IEnumerable#GetEnumerator
  commentId: M:XTMF.ModelSystemRepository.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: XTMF.ModelSystemRepository
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ModelSystemRepository.IEnumerable.GetEnumerator()
  fullName: XTMF.ModelSystemRepository.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Code/XTMF/ModelSystemRepository.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../XTMF/Code/XTMF/ModelSystemRepository.cs
    startLine: 191
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nAn enumeration of all of the contained model systems\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: ''
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: XTMF.ModelSystemRepository.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModelSystemRepository.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModelSystemRepository
  commentId: T:XTMF.IModelSystemRepository
  parent: XTMF
  name: IModelSystemRepository
  nameWithType: IModelSystemRepository
  fullName: XTMF.IModelSystemRepository
- uid: System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  commentId: T:System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IModelSystem>
  nameWithType: IEnumerable<IModelSystem>
  fullName: System.Collections.Generic.IEnumerable<XTMF.IModelSystem>
  nameWithType.vb: IEnumerable(Of IModelSystem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IModelSystem)
  name.vb: IEnumerable(Of IModelSystem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: XTMF.ModelSystemRepository.#ctor*
  commentId: Overload:XTMF.ModelSystemRepository.#ctor
  name: ModelSystemRepository
  nameWithType: ModelSystemRepository.ModelSystemRepository
  fullName: XTMF.ModelSystemRepository.ModelSystemRepository
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: System.Action{XTMF.IModelSystem}
  commentId: T:System.Action{XTMF.IModelSystem}
  parent: System
  definition: System.Action`1
  name: Action<IModelSystem>
  nameWithType: Action<IModelSystem>
  fullName: System.Action<XTMF.IModelSystem>
  nameWithType.vb: Action(Of IModelSystem)
  fullName.vb: System.Action(Of XTMF.IModelSystem)
  name.vb: Action(Of IModelSystem)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{XTMF.IModelSystem,System.Int32}
  commentId: T:System.Action{XTMF.IModelSystem,System.Int32}
  parent: System
  definition: System.Action`2
  name: Action<IModelSystem, Int32>
  nameWithType: Action<IModelSystem, Int32>
  fullName: System.Action<XTMF.IModelSystem, System.Int32>
  nameWithType.vb: Action(Of IModelSystem, Int32)
  fullName.vb: System.Action(Of XTMF.IModelSystem, System.Int32)
  name.vb: Action(Of IModelSystem, Int32)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemRepository.ModelSystems*
  commentId: Overload:XTMF.ModelSystemRepository.ModelSystems
  name: ModelSystems
  nameWithType: ModelSystemRepository.ModelSystems
  fullName: XTMF.ModelSystemRepository.ModelSystems
- uid: XTMF.IModelSystemRepository.ModelSystems
  commentId: P:XTMF.IModelSystemRepository.ModelSystems
  parent: XTMF.IModelSystemRepository
  name: ModelSystems
  nameWithType: IModelSystemRepository.ModelSystems
  fullName: XTMF.IModelSystemRepository.ModelSystems
- uid: System.Collections.Generic.IList{XTMF.IModelSystem}
  commentId: T:System.Collections.Generic.IList{XTMF.IModelSystem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IModelSystem>
  nameWithType: IList<IModelSystem>
  fullName: System.Collections.Generic.IList<XTMF.IModelSystem>
  nameWithType.vb: IList(Of IModelSystem)
  fullName.vb: System.Collections.Generic.IList(Of XTMF.IModelSystem)
  name.vb: IList(Of IModelSystem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemRepository.Add*
  commentId: Overload:XTMF.ModelSystemRepository.Add
  name: Add
  nameWithType: ModelSystemRepository.Add
  fullName: XTMF.ModelSystemRepository.Add
- uid: XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  commentId: M:XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  parent: XTMF.IModelSystemRepository
  name: Add(IModelSystem)
  nameWithType: IModelSystemRepository.Add(IModelSystem)
  fullName: XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
  spec.csharp:
  - uid: XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
    name: Add
    nameWithType: IModelSystemRepository.Add
    fullName: XTMF.IModelSystemRepository.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemRepository.Add(XTMF.IModelSystem)
    name: Add
    nameWithType: IModelSystemRepository.Add
    fullName: XTMF.IModelSystemRepository.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModelSystem
  commentId: T:XTMF.IModelSystem
  parent: XTMF
  name: IModelSystem
  nameWithType: IModelSystem
  fullName: XTMF.IModelSystem
- uid: XTMF.ModelSystemRepository.GetEnumerator*
  commentId: Overload:XTMF.ModelSystemRepository.GetEnumerator
  name: GetEnumerator
  nameWithType: ModelSystemRepository.GetEnumerator
  fullName: XTMF.ModelSystemRepository.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{XTMF.IModelSystem}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{XTMF.IModelSystem}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{XTMF.IModelSystem}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IModelSystem>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<XTMF.IModelSystem>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IModelSystem).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of XTMF.IModelSystem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IModelSystem>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<XTMF.IModelSystem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IModelSystem).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of XTMF.IModelSystem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{XTMF.IModelSystem}
  commentId: T:System.Collections.Generic.IEnumerator{XTMF.IModelSystem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<IModelSystem>
  nameWithType: IEnumerator<IModelSystem>
  fullName: System.Collections.Generic.IEnumerator<XTMF.IModelSystem>
  nameWithType.vb: IEnumerator(Of IModelSystem)
  fullName.vb: System.Collections.Generic.IEnumerator(Of XTMF.IModelSystem)
  name.vb: IEnumerator(Of IModelSystem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemRepository.Rename*
  commentId: Overload:XTMF.ModelSystemRepository.Rename
  name: Rename
  nameWithType: ModelSystemRepository.Rename
  fullName: XTMF.ModelSystemRepository.Rename
- uid: XTMF.ModelSystem
  commentId: T:XTMF.ModelSystem
  parent: XTMF
  name: ModelSystem
  nameWithType: ModelSystem
  fullName: XTMF.ModelSystem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.ModelSystemRepository.CloneModelSystem*
  commentId: Overload:XTMF.ModelSystemRepository.CloneModelSystem
  name: CloneModelSystem
  nameWithType: ModelSystemRepository.CloneModelSystem
  fullName: XTMF.ModelSystemRepository.CloneModelSystem
- uid: XTMF.ModelSystemRepository.Remove*
  commentId: Overload:XTMF.ModelSystemRepository.Remove
  name: Remove
  nameWithType: ModelSystemRepository.Remove
  fullName: XTMF.ModelSystemRepository.Remove
- uid: XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  commentId: M:XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  parent: XTMF.IModelSystemRepository
  name: Remove(IModelSystem)
  nameWithType: IModelSystemRepository.Remove(IModelSystem)
  fullName: XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
  spec.csharp:
  - uid: XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
    name: Remove
    nameWithType: IModelSystemRepository.Remove
    fullName: XTMF.IModelSystemRepository.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemRepository.Remove(XTMF.IModelSystem)
    name: Remove
    nameWithType: IModelSystemRepository.Remove
    fullName: XTMF.IModelSystemRepository.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModelSystem
    name: IModelSystem
    nameWithType: IModelSystem
    fullName: XTMF.IModelSystem
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ModelSystemRepository.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:XTMF.ModelSystemRepository.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ModelSystemRepository.IEnumerable.GetEnumerator
  fullName: XTMF.ModelSystemRepository.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ModelSystemRepository.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
