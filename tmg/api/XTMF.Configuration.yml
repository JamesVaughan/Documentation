### YamlMime:ManagedReference
items:
- uid: XTMF.Configuration
  commentId: T:XTMF.Configuration
  id: Configuration
  parent: XTMF
  children:
  - XTMF.Configuration.#ctor(System.Reflection.Assembly)
  - XTMF.Configuration.#ctor(System.String,System.Reflection.Assembly,System.Boolean)
  - XTMF.Configuration.AccentColour
  - XTMF.Configuration.AddingNewProgressReport
  - XTMF.Configuration.AdditionalSettings
  - XTMF.Configuration.AddRecentProject(System.String)
  - XTMF.Configuration.AutoSave
  - XTMF.Configuration.BaseAssembly
  - XTMF.Configuration.BuildDate
  - XTMF.Configuration.CheckProjectExists(System.String)
  - XTMF.Configuration.ConfigurationDirectory
  - XTMF.Configuration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  - XTMF.Configuration.DeleteAllProgressReport
  - XTMF.Configuration.DeleteConfiguration
  - XTMF.Configuration.DeletedProgressReports
  - XTMF.Configuration.DeleteProgressReport(System.String)
  - XTMF.Configuration.Dispose
  - XTMF.Configuration.DivertSaveRequests
  - XTMF.Configuration.GetActiveHost
  - XTMF.Configuration.GetValidGenericVariableTypes(System.Type[])
  - XTMF.Configuration.HasFolderWritePermission(System.String)
  - XTMF.Configuration.HostPort
  - XTMF.Configuration.InstallModule(System.String)
  - XTMF.Configuration.IsDarkTheme
  - XTMF.Configuration.IsDisableTransitionAnimations
  - XTMF.Configuration.IsLocalConfiguration
  - XTMF.Configuration.LoadError
  - XTMF.Configuration.LoadErrorTerminal
  - XTMF.Configuration.LoadModules(System.Action)
  - XTMF.Configuration.ModelRepository
  - XTMF.Configuration.ModelSystemDirectory
  - XTMF.Configuration.ModelSystemExited
  - XTMF.Configuration.ModelSystemRepository
  - XTMF.Configuration.ModelSystemTemplateRepository
  - XTMF.Configuration.OnModelSystemExit
  - XTMF.Configuration.PrimaryColour
  - XTMF.Configuration.ProgressReports
  - XTMF.Configuration.ProjectDirectory
  - XTMF.Configuration.ProjectRepository
  - XTMF.Configuration.PropertyChanged
  - XTMF.Configuration.RecentProjects
  - XTMF.Configuration.ReloadModelSystems
  - XTMF.Configuration.ReloadProjects
  - XTMF.Configuration.RemoteHost
  - XTMF.Configuration.RemoveRecentProject(System.String)
  - XTMF.Configuration.RenameRecentProject(System.String,System.String)
  - XTMF.Configuration.RetriveCurrentNetworkingClient
  - XTMF.Configuration.RunInSeperateProcess
  - XTMF.Configuration.Save
  - XTMF.Configuration.Save(System.String,System.Boolean)
  - XTMF.Configuration.SetModelSystemDirectory(System.String,System.String@)
  - XTMF.Configuration.SetProjectDirectory(System.String,System.String@)
  - XTMF.Configuration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  - XTMF.Configuration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  - XTMF.Configuration.Theme
  - XTMF.Configuration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  - XTMF.Configuration.ValidateProjectDirectory(System.String,System.String@)
  - XTMF.Configuration.XTMFVersion
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: Configuration
  fullName: XTMF.Configuration
  type: Class
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Configuration
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 36
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: 'public sealed class Configuration : IConfiguration, IDisposable, INotifyPropertyChanged'
    content.vb: >-
      Public NotInheritable Class Configuration
          Implements IConfiguration, IDisposable, INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - XTMF.IConfiguration
  - System.IDisposable
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: XTMF.Configuration.AdditionalSettings
  commentId: F:XTMF.Configuration.AdditionalSettings
  id: AdditionalSettings
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: AdditionalSettings
  nameWithType: Configuration.AdditionalSettings
  fullName: XTMF.Configuration.AdditionalSettings
  type: Field
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AdditionalSettings
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 38
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Dictionary<string, string> AdditionalSettings
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public AdditionalSettings As Dictionary(Of String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.XTMFVersion
  commentId: P:XTMF.Configuration.XTMFVersion
  id: XTMFVersion
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: XTMFVersion
  nameWithType: Configuration.XTMFVersion
  fullName: XTMF.Configuration.XTMFVersion
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: XTMFVersion
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 45
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Version XTMFVersion { get; }
    parameters: []
    return:
      type: System.Version
    content.vb: Public ReadOnly Property XTMFVersion As Version
  overload: XTMF.Configuration.XTMFVersion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.BuildDate
  commentId: P:XTMF.Configuration.BuildDate
  id: BuildDate
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: BuildDate
  nameWithType: Configuration.BuildDate
  fullName: XTMF.Configuration.BuildDate
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BuildDate
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 46
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string BuildDate { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property BuildDate As String
  overload: XTMF.Configuration.BuildDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.#ctor(System.Reflection.Assembly)
  commentId: M:XTMF.Configuration.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: Configuration(Assembly)
  nameWithType: Configuration.Configuration(Assembly)
  fullName: XTMF.Configuration.Configuration(System.Reflection.Assembly)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 47
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Configuration(Assembly baseAssembly = null)
    parameters:
    - id: baseAssembly
      type: System.Reflection.Assembly
    content.vb: Public Sub New(baseAssembly As Assembly = Nothing)
  overload: XTMF.Configuration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.Theme
  commentId: P:XTMF.Configuration.Theme
  id: Theme
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: Theme
  nameWithType: Configuration.Theme
  fullName: XTMF.Configuration.Theme
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Theme
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 63
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Theme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Theme As String
  overload: XTMF.Configuration.Theme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.PrimaryColour
  commentId: P:XTMF.Configuration.PrimaryColour
  id: PrimaryColour
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: PrimaryColour
  nameWithType: Configuration.PrimaryColour
  fullName: XTMF.Configuration.PrimaryColour
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PrimaryColour
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 65
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string PrimaryColour { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrimaryColour As String
  overload: XTMF.Configuration.PrimaryColour*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.AccentColour
  commentId: P:XTMF.Configuration.AccentColour
  id: AccentColour
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: AccentColour
  nameWithType: Configuration.AccentColour
  fullName: XTMF.Configuration.AccentColour
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AccentColour
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 67
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string AccentColour { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccentColour As String
  overload: XTMF.Configuration.AccentColour*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.IsDarkTheme
  commentId: P:XTMF.Configuration.IsDarkTheme
  id: IsDarkTheme
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: IsDarkTheme
  nameWithType: Configuration.IsDarkTheme
  fullName: XTMF.Configuration.IsDarkTheme
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsDarkTheme
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 69
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsDarkTheme { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDarkTheme As Boolean
  overload: XTMF.Configuration.IsDarkTheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.IsDisableTransitionAnimations
  commentId: P:XTMF.Configuration.IsDisableTransitionAnimations
  id: IsDisableTransitionAnimations
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: IsDisableTransitionAnimations
  nameWithType: Configuration.IsDisableTransitionAnimations
  fullName: XTMF.Configuration.IsDisableTransitionAnimations
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsDisableTransitionAnimations
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 71
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsDisableTransitionAnimations { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDisableTransitionAnimations As Boolean
  overload: XTMF.Configuration.IsDisableTransitionAnimations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.#ctor(System.String,System.Reflection.Assembly,System.Boolean)
  commentId: M:XTMF.Configuration.#ctor(System.String,System.Reflection.Assembly,System.Boolean)
  id: '#ctor(System.String,System.Reflection.Assembly,System.Boolean)'
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: Configuration(String, Assembly, Boolean)
  nameWithType: Configuration.Configuration(String, Assembly, Boolean)
  fullName: XTMF.Configuration.Configuration(System.String, System.Reflection.Assembly, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 73
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Configuration(string configurationFileName, Assembly baseAssembly = null, bool loadModules = true)
    parameters:
    - id: configurationFileName
      type: System.String
    - id: baseAssembly
      type: System.Reflection.Assembly
    - id: loadModules
      type: System.Boolean
    content.vb: Public Sub New(configurationFileName As String, baseAssembly As Assembly = Nothing, loadModules As Boolean = True)
  overload: XTMF.Configuration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.OnModelSystemExit
  commentId: E:XTMF.Configuration.OnModelSystemExit
  id: OnModelSystemExit
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: OnModelSystemExit
  nameWithType: Configuration.OnModelSystemExit
  fullName: XTMF.Configuration.OnModelSystemExit
  type: Event
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OnModelSystemExit
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 145
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event Action OnModelSystemExit
    return:
      type: System.Action
    content.vb: Public Event OnModelSystemExit As Action
  implements:
  - XTMF.IConfiguration.OnModelSystemExit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.PropertyChanged
  commentId: E:XTMF.Configuration.PropertyChanged
  id: PropertyChanged
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: Configuration.PropertyChanged
  fullName: XTMF.Configuration.PropertyChanged
  type: Event
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PropertyChanged
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 147
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.AutoSave
  commentId: P:XTMF.Configuration.AutoSave
  id: AutoSave
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: AutoSave
  nameWithType: Configuration.AutoSave
  fullName: XTMF.Configuration.AutoSave
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoSave
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 149
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool AutoSave { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoSave As Boolean
  overload: XTMF.Configuration.AutoSave*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.BaseAssembly
  commentId: P:XTMF.Configuration.BaseAssembly
  id: BaseAssembly
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: BaseAssembly
  nameWithType: Configuration.BaseAssembly
  fullName: XTMF.Configuration.BaseAssembly
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BaseAssembly
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 151
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public Assembly BaseAssembly { get; set; }
    parameters: []
    return:
      type: System.Reflection.Assembly
    content.vb: Public Property BaseAssembly As Assembly
  overload: XTMF.Configuration.BaseAssembly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.ConfigurationDirectory
  commentId: P:XTMF.Configuration.ConfigurationDirectory
  id: ConfigurationDirectory
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ConfigurationDirectory
  nameWithType: Configuration.ConfigurationDirectory
  fullName: XTMF.Configuration.ConfigurationDirectory
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ConfigurationDirectory
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 153
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string ConfigurationDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConfigurationDirectory As String
  overload: XTMF.Configuration.ConfigurationDirectory*
  implements:
  - XTMF.IConfiguration.ConfigurationDirectory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.ModelRepository
  commentId: P:XTMF.Configuration.ModelRepository
  id: ModelRepository
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ModelRepository
  nameWithType: Configuration.ModelRepository
  fullName: XTMF.Configuration.ModelRepository
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelRepository
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 155
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModuleRepository ModelRepository { get; }
    parameters: []
    return:
      type: XTMF.IModuleRepository
    content.vb: Public ReadOnly Property ModelRepository As IModuleRepository
  overload: XTMF.Configuration.ModelRepository*
  implements:
  - XTMF.IConfiguration.ModelRepository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.ModelSystemDirectory
  commentId: P:XTMF.Configuration.ModelSystemDirectory
  id: ModelSystemDirectory
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ModelSystemDirectory
  nameWithType: Configuration.ModelSystemDirectory
  fullName: XTMF.Configuration.ModelSystemDirectory
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemDirectory
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 158
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string ModelSystemDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModelSystemDirectory As String
  overload: XTMF.Configuration.ModelSystemDirectory*
  implements:
  - XTMF.IConfiguration.ModelSystemDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.ModelSystemRepository
  commentId: P:XTMF.Configuration.ModelSystemRepository
  id: ModelSystemRepository
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ModelSystemRepository
  nameWithType: Configuration.ModelSystemRepository
  fullName: XTMF.Configuration.ModelSystemRepository
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemRepository
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 171
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemRepository ModelSystemRepository { get; }
    parameters: []
    return:
      type: XTMF.IModelSystemRepository
    content.vb: Public ReadOnly Property ModelSystemRepository As IModelSystemRepository
  overload: XTMF.Configuration.ModelSystemRepository*
  implements:
  - XTMF.IConfiguration.ModelSystemRepository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.ModelSystemTemplateRepository
  commentId: P:XTMF.Configuration.ModelSystemTemplateRepository
  id: ModelSystemTemplateRepository
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ModelSystemTemplateRepository
  nameWithType: Configuration.ModelSystemTemplateRepository
  fullName: XTMF.Configuration.ModelSystemTemplateRepository
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemTemplateRepository
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 173
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemTemplateRepository ModelSystemTemplateRepository { get; }
    parameters: []
    return:
      type: XTMF.IModelSystemTemplateRepository
    content.vb: Public ReadOnly Property ModelSystemTemplateRepository As IModelSystemTemplateRepository
  overload: XTMF.Configuration.ModelSystemTemplateRepository*
  implements:
  - XTMF.IConfiguration.ModelSystemTemplateRepository
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.ProgressReports
  commentId: P:XTMF.Configuration.ProgressReports
  id: ProgressReports
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ProgressReports
  nameWithType: Configuration.ProgressReports
  fullName: XTMF.Configuration.ProgressReports
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressReports
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 175
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public BindingListWithRemoving<IProgressReport> ProgressReports { get; }
    parameters: []
    return:
      type: XTMF.BindingListWithRemoving{XTMF.IProgressReport}
    content.vb: Public ReadOnly Property ProgressReports As BindingListWithRemoving(Of IProgressReport)
  overload: XTMF.Configuration.ProgressReports*
  implements:
  - XTMF.IConfiguration.ProgressReports
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.RecentProjects
  commentId: P:XTMF.Configuration.RecentProjects
  id: RecentProjects
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: RecentProjects
  nameWithType: Configuration.RecentProjects
  fullName: XTMF.Configuration.RecentProjects
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RecentProjects
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 177
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<string> RecentProjects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property RecentProjects As List(Of String)
  overload: XTMF.Configuration.RecentProjects*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.ProjectDirectory
  commentId: P:XTMF.Configuration.ProjectDirectory
  id: ProjectDirectory
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ProjectDirectory
  nameWithType: Configuration.ProjectDirectory
  fullName: XTMF.Configuration.ProjectDirectory
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectDirectory
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 180
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string ProjectDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProjectDirectory As String
  overload: XTMF.Configuration.ProjectDirectory*
  implements:
  - XTMF.IConfiguration.ProjectDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.ProjectRepository
  commentId: P:XTMF.Configuration.ProjectRepository
  id: ProjectRepository
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ProjectRepository
  nameWithType: Configuration.ProjectRepository
  fullName: XTMF.Configuration.ProjectRepository
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectRepository
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 196
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IProjectRepository ProjectRepository { get; set; }
    parameters: []
    return:
      type: XTMF.IProjectRepository
    content.vb: Public Property ProjectRepository As IProjectRepository
  overload: XTMF.Configuration.ProjectRepository*
  implements:
  - XTMF.IConfiguration.ProjectRepository
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.HostPort
  commentId: P:XTMF.Configuration.HostPort
  id: HostPort
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: HostPort
  nameWithType: Configuration.HostPort
  fullName: XTMF.Configuration.HostPort
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HostPort
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 203
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public int HostPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property HostPort As Integer
  overload: XTMF.Configuration.HostPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.RemoteHost
  commentId: P:XTMF.Configuration.RemoteHost
  id: RemoteHost
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: RemoteHost
  nameWithType: Configuration.RemoteHost
  fullName: XTMF.Configuration.RemoteHost
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RemoteHost
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 219
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool RemoteHost { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RemoteHost As Boolean
  overload: XTMF.Configuration.RemoteHost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.RunInSeperateProcess
  commentId: P:XTMF.Configuration.RunInSeperateProcess
  id: RunInSeperateProcess
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: RunInSeperateProcess
  nameWithType: Configuration.RunInSeperateProcess
  fullName: XTMF.Configuration.RunInSeperateProcess
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RunInSeperateProcess
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 221
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool RunInSeperateProcess { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RunInSeperateProcess As Boolean
  overload: XTMF.Configuration.RunInSeperateProcess*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.DivertSaveRequests
  commentId: P:XTMF.Configuration.DivertSaveRequests
  id: DivertSaveRequests
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: DivertSaveRequests
  nameWithType: Configuration.DivertSaveRequests
  fullName: XTMF.Configuration.DivertSaveRequests
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DivertSaveRequests
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 223
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool DivertSaveRequests { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DivertSaveRequests As Boolean
  overload: XTMF.Configuration.DivertSaveRequests*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.IsLocalConfiguration
  commentId: P:XTMF.Configuration.IsLocalConfiguration
  id: IsLocalConfiguration
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: IsLocalConfiguration
  nameWithType: Configuration.IsLocalConfiguration
  fullName: XTMF.Configuration.IsLocalConfiguration
  type: Property
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IsLocalConfiguration
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 224
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool IsLocalConfiguration { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocalConfiguration As Boolean
  overload: XTMF.Configuration.IsLocalConfiguration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.Configuration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  commentId: M:XTMF.Configuration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  id: CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: CreateProgressReport(String, Func<Single>, Tuple<Byte, Byte, Byte>)
  nameWithType: Configuration.CreateProgressReport(String, Func<Single>, Tuple<Byte, Byte, Byte>)
  fullName: XTMF.Configuration.CreateProgressReport(System.String, System.Func<System.Single>, System.Tuple<System.Byte, System.Byte, System.Byte>)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateProgressReport
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 226
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void CreateProgressReport(string name, Func<float> ReportProgress, Tuple<byte, byte, byte> c = null)
    parameters:
    - id: name
      type: System.String
    - id: ReportProgress
      type: System.Func{System.Single}
    - id: c
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public Sub CreateProgressReport(name As String, ReportProgress As Func(Of Single), c As Tuple(Of Byte, Byte, Byte) = Nothing)
  overload: XTMF.Configuration.CreateProgressReport*
  implements:
  - XTMF.IConfiguration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  nameWithType.vb: Configuration.CreateProgressReport(String, Func(Of Single), Tuple(Of Byte, Byte, Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.CreateProgressReport(System.String, System.Func(Of System.Single), System.Tuple(Of System.Byte, System.Byte, System.Byte))
  name.vb: CreateProgressReport(String, Func(Of Single), Tuple(Of Byte, Byte, Byte))
- uid: XTMF.Configuration.AddingNewProgressReport
  commentId: E:XTMF.Configuration.AddingNewProgressReport
  id: AddingNewProgressReport
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: AddingNewProgressReport
  nameWithType: Configuration.AddingNewProgressReport
  fullName: XTMF.Configuration.AddingNewProgressReport
  type: Event
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddingNewProgressReport
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 243
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event Action<IProgressReport> AddingNewProgressReport
    return:
      type: System.Action{XTMF.IProgressReport}
    content.vb: Public Event AddingNewProgressReport As Action(Of IProgressReport)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.DeletedProgressReports
  commentId: E:XTMF.Configuration.DeletedProgressReports
  id: DeletedProgressReports
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: DeletedProgressReports
  nameWithType: Configuration.DeletedProgressReports
  fullName: XTMF.Configuration.DeletedProgressReports
  type: Event
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DeletedProgressReports
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 244
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public event Action DeletedProgressReports
    return:
      type: System.Action
    content.vb: Public Event DeletedProgressReports As Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.DeleteAllProgressReport
  commentId: M:XTMF.Configuration.DeleteAllProgressReport
  id: DeleteAllProgressReport
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: DeleteAllProgressReport()
  nameWithType: Configuration.DeleteAllProgressReport()
  fullName: XTMF.Configuration.DeleteAllProgressReport()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DeleteAllProgressReport
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 246
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void DeleteAllProgressReport()
    content.vb: Public Sub DeleteAllProgressReport
  overload: XTMF.Configuration.DeleteAllProgressReport*
  implements:
  - XTMF.IConfiguration.DeleteAllProgressReport
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.DeleteProgressReport(System.String)
  commentId: M:XTMF.Configuration.DeleteProgressReport(System.String)
  id: DeleteProgressReport(System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: DeleteProgressReport(String)
  nameWithType: Configuration.DeleteProgressReport(String)
  fullName: XTMF.Configuration.DeleteProgressReport(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DeleteProgressReport
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 255
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void DeleteProgressReport(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub DeleteProgressReport(name As String)
  overload: XTMF.Configuration.DeleteProgressReport*
  implements:
  - XTMF.IConfiguration.DeleteProgressReport(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.GetActiveHost
  commentId: M:XTMF.Configuration.GetActiveHost
  id: GetActiveHost
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: GetActiveHost()
  nameWithType: Configuration.GetActiveHost()
  fullName: XTMF.Configuration.GetActiveHost()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetActiveHost
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 270
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IHost GetActiveHost()
    return:
      type: XTMF.Networking.IHost
    content.vb: Public Function GetActiveHost As IHost
  overload: XTMF.Configuration.GetActiveHost*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.InstallModule(System.String)
  commentId: M:XTMF.Configuration.InstallModule(System.String)
  id: InstallModule(System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: InstallModule(String)
  nameWithType: Configuration.InstallModule(String)
  fullName: XTMF.Configuration.InstallModule(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InstallModule
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 279
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool InstallModule(string moduleFileName)
    parameters:
    - id: moduleFileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function InstallModule(moduleFileName As String) As Boolean
  overload: XTMF.Configuration.InstallModule*
  implements:
  - XTMF.IConfiguration.InstallModule(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.ReloadProjects
  commentId: M:XTMF.Configuration.ReloadProjects
  id: ReloadProjects
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ReloadProjects()
  nameWithType: Configuration.ReloadProjects()
  fullName: XTMF.Configuration.ReloadProjects()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReloadProjects
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 302
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void ReloadProjects()
    content.vb: Public Sub ReloadProjects
  overload: XTMF.Configuration.ReloadProjects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.ReloadModelSystems
  commentId: M:XTMF.Configuration.ReloadModelSystems
  id: ReloadModelSystems
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ReloadModelSystems()
  nameWithType: Configuration.ReloadModelSystems()
  fullName: XTMF.Configuration.ReloadModelSystems()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReloadModelSystems
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 307
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void ReloadModelSystems()
    content.vb: Public Sub ReloadModelSystems
  overload: XTMF.Configuration.ReloadModelSystems*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.DeleteConfiguration
  commentId: M:XTMF.Configuration.DeleteConfiguration
  id: DeleteConfiguration
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: DeleteConfiguration()
  nameWithType: Configuration.DeleteConfiguration()
  fullName: XTMF.Configuration.DeleteConfiguration()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DeleteConfiguration
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 312
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void DeleteConfiguration()
    content.vb: Public Sub DeleteConfiguration
  overload: XTMF.Configuration.DeleteConfiguration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.ModelSystemExited
  commentId: M:XTMF.Configuration.ModelSystemExited
  id: ModelSystemExited
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ModelSystemExited()
  nameWithType: Configuration.ModelSystemExited()
  fullName: XTMF.Configuration.ModelSystemExited()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ModelSystemExited
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 328
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void ModelSystemExited()
    content.vb: Public Sub ModelSystemExited
  overload: XTMF.Configuration.ModelSystemExited*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.RetriveCurrentNetworkingClient
  commentId: M:XTMF.Configuration.RetriveCurrentNetworkingClient
  id: RetriveCurrentNetworkingClient
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: RetriveCurrentNetworkingClient()
  nameWithType: Configuration.RetriveCurrentNetworkingClient()
  fullName: XTMF.Configuration.RetriveCurrentNetworkingClient()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RetriveCurrentNetworkingClient
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 348
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IClient RetriveCurrentNetworkingClient()
    return:
      type: XTMF.Networking.IClient
    content.vb: Public Function RetriveCurrentNetworkingClient As IClient
  overload: XTMF.Configuration.RetriveCurrentNetworkingClient*
  implements:
  - XTMF.IConfiguration.RetriveCurrentNetworkingClient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.Save
  commentId: M:XTMF.Configuration.Save
  id: Save
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: Configuration.Save()
  fullName: XTMF.Configuration.Save()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 353
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: XTMF.Configuration.Save*
  implements:
  - XTMF.IConfiguration.Save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.CheckProjectExists(System.String)
  commentId: M:XTMF.Configuration.CheckProjectExists(System.String)
  id: CheckProjectExists(System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: CheckProjectExists(String)
  nameWithType: Configuration.CheckProjectExists(String)
  fullName: XTMF.Configuration.CheckProjectExists(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CheckProjectExists
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 358
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool CheckProjectExists(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckProjectExists(name As String) As Boolean
  overload: XTMF.Configuration.CheckProjectExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.SetProjectDirectory(System.String,System.String@)
  commentId: M:XTMF.Configuration.SetProjectDirectory(System.String,System.String@)
  id: SetProjectDirectory(System.String,System.String@)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: SetProjectDirectory(String, ref String)
  nameWithType: Configuration.SetProjectDirectory(String, ref String)
  fullName: XTMF.Configuration.SetProjectDirectory(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetProjectDirectory
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 364
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SetProjectDirectory(string dir, ref string error)
    parameters:
    - id: dir
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SetProjectDirectory(dir As String, ByRef error As String) As Boolean
  overload: XTMF.Configuration.SetProjectDirectory*
  nameWithType.vb: Configuration.SetProjectDirectory(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.SetProjectDirectory(System.String, ByRef System.String)
  name.vb: SetProjectDirectory(String, ByRef String)
- uid: XTMF.Configuration.HasFolderWritePermission(System.String)
  commentId: M:XTMF.Configuration.HasFolderWritePermission(System.String)
  id: HasFolderWritePermission(System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: HasFolderWritePermission(String)
  nameWithType: Configuration.HasFolderWritePermission(String)
  fullName: XTMF.Configuration.HasFolderWritePermission(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HasFolderWritePermission
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 406
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nCheck to see if the user has access to write to the directory.\n"
  example: []
  syntax:
    content: public static bool HasFolderWritePermission(string destDir)
    parameters:
    - id: destDir
      type: System.String
      description: The directory to write to.
    return:
      type: System.Boolean
      description: True if the user has write access
    content.vb: Public Shared Function HasFolderWritePermission(destDir As String) As Boolean
  overload: XTMF.Configuration.HasFolderWritePermission*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: XTMF.Configuration.SetModelSystemDirectory(System.String,System.String@)
  commentId: M:XTMF.Configuration.SetModelSystemDirectory(System.String,System.String@)
  id: SetModelSystemDirectory(System.String,System.String@)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: SetModelSystemDirectory(String, ref String)
  nameWithType: Configuration.SetModelSystemDirectory(String, ref String)
  fullName: XTMF.Configuration.SetModelSystemDirectory(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SetModelSystemDirectory
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 458
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool SetModelSystemDirectory(string dir, ref string error)
    parameters:
    - id: dir
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function SetModelSystemDirectory(dir As String, ByRef error As String) As Boolean
  overload: XTMF.Configuration.SetModelSystemDirectory*
  nameWithType.vb: Configuration.SetModelSystemDirectory(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.SetModelSystemDirectory(System.String, ByRef System.String)
  name.vb: SetModelSystemDirectory(String, ByRef String)
- uid: XTMF.Configuration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  commentId: M:XTMF.Configuration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  id: StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: StartupNetworkingClient(out IClient, ref String)
  nameWithType: Configuration.StartupNetworkingClient(out IClient, ref String)
  fullName: XTMF.Configuration.StartupNetworkingClient(out XTMF.Networking.IClient, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartupNetworkingClient
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 493
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool StartupNetworkingClient(out IClient networkingClient, ref string error)
    parameters:
    - id: networkingClient
      type: XTMF.Networking.IClient
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function StartupNetworkingClient(ByRef networkingClient As IClient, ByRef error As String) As Boolean
  overload: XTMF.Configuration.StartupNetworkingClient*
  implements:
  - XTMF.IConfiguration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  nameWithType.vb: Configuration.StartupNetworkingClient(ByRef IClient, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.StartupNetworkingClient(ByRef XTMF.Networking.IClient, ByRef System.String)
  name.vb: StartupNetworkingClient(ByRef IClient, ByRef String)
- uid: XTMF.Configuration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  commentId: M:XTMF.Configuration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  id: StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: StartupNetworkingHost(out IHost, ref String)
  nameWithType: Configuration.StartupNetworkingHost(out IHost, ref String)
  fullName: XTMF.Configuration.StartupNetworkingHost(out XTMF.Networking.IHost, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartupNetworkingHost
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 521
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool StartupNetworkingHost(out IHost networkingHost, ref string error)
    parameters:
    - id: networkingHost
      type: XTMF.Networking.IHost
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function StartupNetworkingHost(ByRef networkingHost As IHost, ByRef error As String) As Boolean
  overload: XTMF.Configuration.StartupNetworkingHost*
  implements:
  - XTMF.IConfiguration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  nameWithType.vb: Configuration.StartupNetworkingHost(ByRef IHost, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.StartupNetworkingHost(ByRef XTMF.Networking.IHost, ByRef System.String)
  name.vb: StartupNetworkingHost(ByRef IHost, ByRef String)
- uid: XTMF.Configuration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  commentId: M:XTMF.Configuration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  id: UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: UpdateProgressReportColour(String, Tuple<Byte, Byte, Byte>)
  nameWithType: Configuration.UpdateProgressReportColour(String, Tuple<Byte, Byte, Byte>)
  fullName: XTMF.Configuration.UpdateProgressReportColour(System.String, System.Tuple<System.Byte, System.Byte, System.Byte>)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UpdateProgressReportColour
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 548
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void UpdateProgressReportColour(string name, Tuple<byte, byte, byte> c)
    parameters:
    - id: name
      type: System.String
    - id: c
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public Sub UpdateProgressReportColour(name As String, c As Tuple(Of Byte, Byte, Byte))
  overload: XTMF.Configuration.UpdateProgressReportColour*
  implements:
  - XTMF.IConfiguration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  nameWithType.vb: Configuration.UpdateProgressReportColour(String, Tuple(Of Byte, Byte, Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.UpdateProgressReportColour(System.String, System.Tuple(Of System.Byte, System.Byte, System.Byte))
  name.vb: UpdateProgressReportColour(String, Tuple(Of Byte, Byte, Byte))
- uid: XTMF.Configuration.ValidateProjectDirectory(System.String,System.String@)
  commentId: M:XTMF.Configuration.ValidateProjectDirectory(System.String,System.String@)
  id: ValidateProjectDirectory(System.String,System.String@)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: ValidateProjectDirectory(String, ref String)
  nameWithType: Configuration.ValidateProjectDirectory(String, ref String)
  fullName: XTMF.Configuration.ValidateProjectDirectory(System.String, ref System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateProjectDirectory
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 563
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool ValidateProjectDirectory(string dir, ref string error)
    parameters:
    - id: dir
      type: System.String
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ValidateProjectDirectory(dir As String, ByRef error As String) As Boolean
  overload: XTMF.Configuration.ValidateProjectDirectory*
  nameWithType.vb: Configuration.ValidateProjectDirectory(String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.ValidateProjectDirectory(System.String, ByRef System.String)
  name.vb: ValidateProjectDirectory(String, ByRef String)
- uid: XTMF.Configuration.LoadError
  commentId: F:XTMF.Configuration.LoadError
  id: LoadError
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: LoadError
  nameWithType: Configuration.LoadError
  fullName: XTMF.Configuration.LoadError
  type: Field
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadError
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 595
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string LoadError
    return:
      type: System.String
    content.vb: Public LoadError As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.LoadErrorTerminal
  commentId: F:XTMF.Configuration.LoadErrorTerminal
  id: LoadErrorTerminal
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: LoadErrorTerminal
  nameWithType: Configuration.LoadErrorTerminal
  fullName: XTMF.Configuration.LoadErrorTerminal
  type: Field
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadErrorTerminal
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 596
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public bool LoadErrorTerminal
    return:
      type: System.Boolean
    content.vb: Public LoadErrorTerminal As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.RenameRecentProject(System.String,System.String)
  commentId: M:XTMF.Configuration.RenameRecentProject(System.String,System.String)
  id: RenameRecentProject(System.String,System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: RenameRecentProject(String, String)
  nameWithType: Configuration.RenameRecentProject(String, String)
  fullName: XTMF.Configuration.RenameRecentProject(System.String, System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RenameRecentProject
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 729
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void RenameRecentProject(string oldProjectName, string newProjectName)
    parameters:
    - id: oldProjectName
      type: System.String
    - id: newProjectName
      type: System.String
    content.vb: Public Sub RenameRecentProject(oldProjectName As String, newProjectName As String)
  overload: XTMF.Configuration.RenameRecentProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.RemoveRecentProject(System.String)
  commentId: M:XTMF.Configuration.RemoveRecentProject(System.String)
  id: RemoveRecentProject(System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: RemoveRecentProject(String)
  nameWithType: Configuration.RemoveRecentProject(String)
  fullName: XTMF.Configuration.RemoveRecentProject(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RemoveRecentProject
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 735
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void RemoveRecentProject(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub RemoveRecentProject(name As String)
  overload: XTMF.Configuration.RemoveRecentProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.AddRecentProject(System.String)
  commentId: M:XTMF.Configuration.AddRecentProject(System.String)
  id: AddRecentProject(System.String)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: AddRecentProject(String)
  nameWithType: Configuration.AddRecentProject(String)
  fullName: XTMF.Configuration.AddRecentProject(System.String)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddRecentProject
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 739
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void AddRecentProject(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub AddRecentProject(name As String)
  overload: XTMF.Configuration.AddRecentProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.GetValidGenericVariableTypes(System.Type[])
  commentId: M:XTMF.Configuration.GetValidGenericVariableTypes(System.Type[])
  id: GetValidGenericVariableTypes(System.Type[])
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: GetValidGenericVariableTypes(Type[])
  nameWithType: Configuration.GetValidGenericVariableTypes(Type[])
  fullName: XTMF.Configuration.GetValidGenericVariableTypes(System.Type[])
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetValidGenericVariableTypes
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 920
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\nGet all of the types that satisfy the conditions that are presented.\n"
  example: []
  syntax:
    content: public ICollection<Type> GetValidGenericVariableTypes(Type[] conditions)
    parameters:
    - id: conditions
      type: System.Type[]
      description: The conditions required for a type to be acceptable.
    return:
      type: System.Collections.Generic.ICollection{System.Type}
      description: A collection of the types that are possible.
    content.vb: Public Function GetValidGenericVariableTypes(conditions As Type()) As ICollection(Of Type)
  overload: XTMF.Configuration.GetValidGenericVariableTypes*
  nameWithType.vb: Configuration.GetValidGenericVariableTypes(Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: XTMF.Configuration.GetValidGenericVariableTypes(System.Type())
  name.vb: GetValidGenericVariableTypes(Type())
- uid: XTMF.Configuration.LoadModules(System.Action)
  commentId: M:XTMF.Configuration.LoadModules(System.Action)
  id: LoadModules(System.Action)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: LoadModules(Action)
  nameWithType: Configuration.LoadModules(Action)
  fullName: XTMF.Configuration.LoadModules(System.Action)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadModules
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 944
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void LoadModules(Action loadModulesCompleteAction)
    parameters:
    - id: loadModulesCompleteAction
      type: System.Action
    content.vb: Public Sub LoadModules(loadModulesCompleteAction As Action)
  overload: XTMF.Configuration.LoadModules*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.Save(System.String,System.Boolean)
  commentId: M:XTMF.Configuration.Save(System.String,System.Boolean)
  id: Save(System.String,System.Boolean)
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: Save(String, Boolean)
  nameWithType: Configuration.Save(String, Boolean)
  fullName: XTMF.Configuration.Save(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Save
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 1026
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Save(string configFileName, bool setAsConfigDirectory = false)
    parameters:
    - id: configFileName
      type: System.String
    - id: setAsConfigDirectory
      type: System.Boolean
    content.vb: Public Sub Save(configFileName As String, setAsConfigDirectory As Boolean = False)
  overload: XTMF.Configuration.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Configuration.Dispose
  commentId: M:XTMF.Configuration.Dispose
  id: Dispose
  parent: XTMF.Configuration
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Configuration.Dispose()
  fullName: XTMF.Configuration.Dispose()
  type: Method
  source:
    remote:
      path: Code/XTMF/Configuration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Dispose
    path: ../../XTMF/Code/XTMF/Configuration.cs
    startLine: 1116
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: XTMF.Configuration.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.Configuration.XTMFVersion*
  commentId: Overload:XTMF.Configuration.XTMFVersion
  name: XTMFVersion
  nameWithType: Configuration.XTMFVersion
  fullName: XTMF.Configuration.XTMFVersion
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: XTMF.Configuration.BuildDate*
  commentId: Overload:XTMF.Configuration.BuildDate
  name: BuildDate
  nameWithType: Configuration.BuildDate
  fullName: XTMF.Configuration.BuildDate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.Configuration.#ctor*
  commentId: Overload:XTMF.Configuration.#ctor
  name: Configuration
  nameWithType: Configuration.Configuration
  fullName: XTMF.Configuration.Configuration
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: XTMF.Configuration.Theme*
  commentId: Overload:XTMF.Configuration.Theme
  name: Theme
  nameWithType: Configuration.Theme
  fullName: XTMF.Configuration.Theme
- uid: XTMF.Configuration.PrimaryColour*
  commentId: Overload:XTMF.Configuration.PrimaryColour
  name: PrimaryColour
  nameWithType: Configuration.PrimaryColour
  fullName: XTMF.Configuration.PrimaryColour
- uid: XTMF.Configuration.AccentColour*
  commentId: Overload:XTMF.Configuration.AccentColour
  name: AccentColour
  nameWithType: Configuration.AccentColour
  fullName: XTMF.Configuration.AccentColour
- uid: XTMF.Configuration.IsDarkTheme*
  commentId: Overload:XTMF.Configuration.IsDarkTheme
  name: IsDarkTheme
  nameWithType: Configuration.IsDarkTheme
  fullName: XTMF.Configuration.IsDarkTheme
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.Configuration.IsDisableTransitionAnimations*
  commentId: Overload:XTMF.Configuration.IsDisableTransitionAnimations
  name: IsDisableTransitionAnimations
  nameWithType: Configuration.IsDisableTransitionAnimations
  fullName: XTMF.Configuration.IsDisableTransitionAnimations
- uid: XTMF.IConfiguration.OnModelSystemExit
  commentId: E:XTMF.IConfiguration.OnModelSystemExit
  parent: XTMF.IConfiguration
  name: OnModelSystemExit
  nameWithType: IConfiguration.OnModelSystemExit
  fullName: XTMF.IConfiguration.OnModelSystemExit
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: XTMF.Configuration.AutoSave*
  commentId: Overload:XTMF.Configuration.AutoSave
  name: AutoSave
  nameWithType: Configuration.AutoSave
  fullName: XTMF.Configuration.AutoSave
- uid: XTMF.Configuration.BaseAssembly*
  commentId: Overload:XTMF.Configuration.BaseAssembly
  name: BaseAssembly
  nameWithType: Configuration.BaseAssembly
  fullName: XTMF.Configuration.BaseAssembly
- uid: XTMF.Configuration.ConfigurationDirectory*
  commentId: Overload:XTMF.Configuration.ConfigurationDirectory
  name: ConfigurationDirectory
  nameWithType: Configuration.ConfigurationDirectory
  fullName: XTMF.Configuration.ConfigurationDirectory
- uid: XTMF.IConfiguration.ConfigurationDirectory
  commentId: P:XTMF.IConfiguration.ConfigurationDirectory
  parent: XTMF.IConfiguration
  name: ConfigurationDirectory
  nameWithType: IConfiguration.ConfigurationDirectory
  fullName: XTMF.IConfiguration.ConfigurationDirectory
- uid: XTMF.Configuration.ModelRepository*
  commentId: Overload:XTMF.Configuration.ModelRepository
  name: ModelRepository
  nameWithType: Configuration.ModelRepository
  fullName: XTMF.Configuration.ModelRepository
- uid: XTMF.IConfiguration.ModelRepository
  commentId: P:XTMF.IConfiguration.ModelRepository
  parent: XTMF.IConfiguration
  name: ModelRepository
  nameWithType: IConfiguration.ModelRepository
  fullName: XTMF.IConfiguration.ModelRepository
- uid: XTMF.IModuleRepository
  commentId: T:XTMF.IModuleRepository
  parent: XTMF
  name: IModuleRepository
  nameWithType: IModuleRepository
  fullName: XTMF.IModuleRepository
- uid: XTMF.Configuration.ModelSystemDirectory*
  commentId: Overload:XTMF.Configuration.ModelSystemDirectory
  name: ModelSystemDirectory
  nameWithType: Configuration.ModelSystemDirectory
  fullName: XTMF.Configuration.ModelSystemDirectory
- uid: XTMF.IConfiguration.ModelSystemDirectory
  commentId: P:XTMF.IConfiguration.ModelSystemDirectory
  parent: XTMF.IConfiguration
  name: ModelSystemDirectory
  nameWithType: IConfiguration.ModelSystemDirectory
  fullName: XTMF.IConfiguration.ModelSystemDirectory
- uid: XTMF.Configuration.ModelSystemRepository*
  commentId: Overload:XTMF.Configuration.ModelSystemRepository
  name: ModelSystemRepository
  nameWithType: Configuration.ModelSystemRepository
  fullName: XTMF.Configuration.ModelSystemRepository
- uid: XTMF.IConfiguration.ModelSystemRepository
  commentId: P:XTMF.IConfiguration.ModelSystemRepository
  parent: XTMF.IConfiguration
  name: ModelSystemRepository
  nameWithType: IConfiguration.ModelSystemRepository
  fullName: XTMF.IConfiguration.ModelSystemRepository
- uid: XTMF.IModelSystemRepository
  commentId: T:XTMF.IModelSystemRepository
  parent: XTMF
  name: IModelSystemRepository
  nameWithType: IModelSystemRepository
  fullName: XTMF.IModelSystemRepository
- uid: XTMF.Configuration.ModelSystemTemplateRepository*
  commentId: Overload:XTMF.Configuration.ModelSystemTemplateRepository
  name: ModelSystemTemplateRepository
  nameWithType: Configuration.ModelSystemTemplateRepository
  fullName: XTMF.Configuration.ModelSystemTemplateRepository
- uid: XTMF.IConfiguration.ModelSystemTemplateRepository
  commentId: P:XTMF.IConfiguration.ModelSystemTemplateRepository
  parent: XTMF.IConfiguration
  name: ModelSystemTemplateRepository
  nameWithType: IConfiguration.ModelSystemTemplateRepository
  fullName: XTMF.IConfiguration.ModelSystemTemplateRepository
- uid: XTMF.IModelSystemTemplateRepository
  commentId: T:XTMF.IModelSystemTemplateRepository
  parent: XTMF
  name: IModelSystemTemplateRepository
  nameWithType: IModelSystemTemplateRepository
  fullName: XTMF.IModelSystemTemplateRepository
- uid: XTMF.Configuration.ProgressReports*
  commentId: Overload:XTMF.Configuration.ProgressReports
  name: ProgressReports
  nameWithType: Configuration.ProgressReports
  fullName: XTMF.Configuration.ProgressReports
- uid: XTMF.IConfiguration.ProgressReports
  commentId: P:XTMF.IConfiguration.ProgressReports
  parent: XTMF.IConfiguration
  name: ProgressReports
  nameWithType: IConfiguration.ProgressReports
  fullName: XTMF.IConfiguration.ProgressReports
- uid: XTMF.BindingListWithRemoving{XTMF.IProgressReport}
  commentId: T:XTMF.BindingListWithRemoving{XTMF.IProgressReport}
  parent: XTMF
  definition: XTMF.BindingListWithRemoving`1
  name: BindingListWithRemoving<IProgressReport>
  nameWithType: BindingListWithRemoving<IProgressReport>
  fullName: XTMF.BindingListWithRemoving<XTMF.IProgressReport>
  nameWithType.vb: BindingListWithRemoving(Of IProgressReport)
  fullName.vb: XTMF.BindingListWithRemoving(Of XTMF.IProgressReport)
  name.vb: BindingListWithRemoving(Of IProgressReport)
  spec.csharp:
  - uid: XTMF.BindingListWithRemoving`1
    name: BindingListWithRemoving
    nameWithType: BindingListWithRemoving
    fullName: XTMF.BindingListWithRemoving
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProgressReport
    name: IProgressReport
    nameWithType: IProgressReport
    fullName: XTMF.IProgressReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.BindingListWithRemoving`1
    name: BindingListWithRemoving
    nameWithType: BindingListWithRemoving
    fullName: XTMF.BindingListWithRemoving
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProgressReport
    name: IProgressReport
    nameWithType: IProgressReport
    fullName: XTMF.IProgressReport
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.BindingListWithRemoving`1
  commentId: T:XTMF.BindingListWithRemoving`1
  name: BindingListWithRemoving<T>
  nameWithType: BindingListWithRemoving<T>
  fullName: XTMF.BindingListWithRemoving<T>
  nameWithType.vb: BindingListWithRemoving(Of T)
  fullName.vb: XTMF.BindingListWithRemoving(Of T)
  name.vb: BindingListWithRemoving(Of T)
  spec.csharp:
  - uid: XTMF.BindingListWithRemoving`1
    name: BindingListWithRemoving
    nameWithType: BindingListWithRemoving
    fullName: XTMF.BindingListWithRemoving
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.BindingListWithRemoving`1
    name: BindingListWithRemoving
    nameWithType: BindingListWithRemoving
    fullName: XTMF.BindingListWithRemoving
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.RecentProjects*
  commentId: Overload:XTMF.Configuration.RecentProjects
  name: RecentProjects
  nameWithType: Configuration.RecentProjects
  fullName: XTMF.Configuration.RecentProjects
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.ProjectDirectory*
  commentId: Overload:XTMF.Configuration.ProjectDirectory
  name: ProjectDirectory
  nameWithType: Configuration.ProjectDirectory
  fullName: XTMF.Configuration.ProjectDirectory
- uid: XTMF.IConfiguration.ProjectDirectory
  commentId: P:XTMF.IConfiguration.ProjectDirectory
  parent: XTMF.IConfiguration
  name: ProjectDirectory
  nameWithType: IConfiguration.ProjectDirectory
  fullName: XTMF.IConfiguration.ProjectDirectory
- uid: XTMF.Configuration.ProjectRepository*
  commentId: Overload:XTMF.Configuration.ProjectRepository
  name: ProjectRepository
  nameWithType: Configuration.ProjectRepository
  fullName: XTMF.Configuration.ProjectRepository
- uid: XTMF.IConfiguration.ProjectRepository
  commentId: P:XTMF.IConfiguration.ProjectRepository
  parent: XTMF.IConfiguration
  name: ProjectRepository
  nameWithType: IConfiguration.ProjectRepository
  fullName: XTMF.IConfiguration.ProjectRepository
- uid: XTMF.IProjectRepository
  commentId: T:XTMF.IProjectRepository
  parent: XTMF
  name: IProjectRepository
  nameWithType: IProjectRepository
  fullName: XTMF.IProjectRepository
- uid: XTMF.Configuration.HostPort*
  commentId: Overload:XTMF.Configuration.HostPort
  name: HostPort
  nameWithType: Configuration.HostPort
  fullName: XTMF.Configuration.HostPort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: XTMF.Configuration.RemoteHost*
  commentId: Overload:XTMF.Configuration.RemoteHost
  name: RemoteHost
  nameWithType: Configuration.RemoteHost
  fullName: XTMF.Configuration.RemoteHost
- uid: XTMF.Configuration.RunInSeperateProcess*
  commentId: Overload:XTMF.Configuration.RunInSeperateProcess
  name: RunInSeperateProcess
  nameWithType: Configuration.RunInSeperateProcess
  fullName: XTMF.Configuration.RunInSeperateProcess
- uid: XTMF.Configuration.DivertSaveRequests*
  commentId: Overload:XTMF.Configuration.DivertSaveRequests
  name: DivertSaveRequests
  nameWithType: Configuration.DivertSaveRequests
  fullName: XTMF.Configuration.DivertSaveRequests
- uid: XTMF.Configuration.IsLocalConfiguration*
  commentId: Overload:XTMF.Configuration.IsLocalConfiguration
  name: IsLocalConfiguration
  nameWithType: Configuration.IsLocalConfiguration
  fullName: XTMF.Configuration.IsLocalConfiguration
- uid: XTMF.Configuration.CreateProgressReport*
  commentId: Overload:XTMF.Configuration.CreateProgressReport
  name: CreateProgressReport
  nameWithType: Configuration.CreateProgressReport
  fullName: XTMF.Configuration.CreateProgressReport
- uid: XTMF.IConfiguration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  commentId: M:XTMF.IConfiguration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
  parent: XTMF.IConfiguration
  isExternal: true
  name: CreateProgressReport(String, Func<Single>, Tuple<Byte, Byte, Byte>)
  nameWithType: IConfiguration.CreateProgressReport(String, Func<Single>, Tuple<Byte, Byte, Byte>)
  fullName: XTMF.IConfiguration.CreateProgressReport(System.String, System.Func<System.Single>, System.Tuple<System.Byte, System.Byte, System.Byte>)
  nameWithType.vb: IConfiguration.CreateProgressReport(String, Func(Of Single), Tuple(Of Byte, Byte, Byte))
  fullName.vb: XTMF.IConfiguration.CreateProgressReport(System.String, System.Func(Of System.Single), System.Tuple(Of System.Byte, System.Byte, System.Byte))
  name.vb: CreateProgressReport(String, Func(Of Single), Tuple(Of Byte, Byte, Byte))
  spec.csharp:
  - uid: XTMF.IConfiguration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
    name: CreateProgressReport
    nameWithType: IConfiguration.CreateProgressReport
    fullName: XTMF.IConfiguration.CreateProgressReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.CreateProgressReport(System.String,System.Func{System.Single},System.Tuple{System.Byte,System.Byte,System.Byte})
    name: CreateProgressReport
    nameWithType: IConfiguration.CreateProgressReport
    fullName: XTMF.IConfiguration.CreateProgressReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Single}
  commentId: T:System.Func{System.Single}
  parent: System
  definition: System.Func`1
  name: Func<Single>
  nameWithType: Func<Single>
  fullName: System.Func<System.Single>
  nameWithType.vb: Func(Of Single)
  fullName.vb: System.Func(Of System.Single)
  name.vb: Func(Of Single)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{XTMF.IProgressReport}
  commentId: T:System.Action{XTMF.IProgressReport}
  parent: System
  definition: System.Action`1
  name: Action<IProgressReport>
  nameWithType: Action<IProgressReport>
  fullName: System.Action<XTMF.IProgressReport>
  nameWithType.vb: Action(Of IProgressReport)
  fullName.vb: System.Action(Of XTMF.IProgressReport)
  name.vb: Action(Of IProgressReport)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.IProgressReport
    name: IProgressReport
    nameWithType: IProgressReport
    fullName: XTMF.IProgressReport
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.IProgressReport
    name: IProgressReport
    nameWithType: IProgressReport
    fullName: XTMF.IProgressReport
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.DeleteAllProgressReport*
  commentId: Overload:XTMF.Configuration.DeleteAllProgressReport
  name: DeleteAllProgressReport
  nameWithType: Configuration.DeleteAllProgressReport
  fullName: XTMF.Configuration.DeleteAllProgressReport
- uid: XTMF.IConfiguration.DeleteAllProgressReport
  commentId: M:XTMF.IConfiguration.DeleteAllProgressReport
  parent: XTMF.IConfiguration
  name: DeleteAllProgressReport()
  nameWithType: IConfiguration.DeleteAllProgressReport()
  fullName: XTMF.IConfiguration.DeleteAllProgressReport()
  spec.csharp:
  - uid: XTMF.IConfiguration.DeleteAllProgressReport
    name: DeleteAllProgressReport
    nameWithType: IConfiguration.DeleteAllProgressReport
    fullName: XTMF.IConfiguration.DeleteAllProgressReport
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.DeleteAllProgressReport
    name: DeleteAllProgressReport
    nameWithType: IConfiguration.DeleteAllProgressReport
    fullName: XTMF.IConfiguration.DeleteAllProgressReport
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.DeleteProgressReport*
  commentId: Overload:XTMF.Configuration.DeleteProgressReport
  name: DeleteProgressReport
  nameWithType: Configuration.DeleteProgressReport
  fullName: XTMF.Configuration.DeleteProgressReport
- uid: XTMF.IConfiguration.DeleteProgressReport(System.String)
  commentId: M:XTMF.IConfiguration.DeleteProgressReport(System.String)
  parent: XTMF.IConfiguration
  isExternal: true
  name: DeleteProgressReport(String)
  nameWithType: IConfiguration.DeleteProgressReport(String)
  fullName: XTMF.IConfiguration.DeleteProgressReport(System.String)
  spec.csharp:
  - uid: XTMF.IConfiguration.DeleteProgressReport(System.String)
    name: DeleteProgressReport
    nameWithType: IConfiguration.DeleteProgressReport
    fullName: XTMF.IConfiguration.DeleteProgressReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.DeleteProgressReport(System.String)
    name: DeleteProgressReport
    nameWithType: IConfiguration.DeleteProgressReport
    fullName: XTMF.IConfiguration.DeleteProgressReport
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.GetActiveHost*
  commentId: Overload:XTMF.Configuration.GetActiveHost
  name: GetActiveHost
  nameWithType: Configuration.GetActiveHost
  fullName: XTMF.Configuration.GetActiveHost
- uid: XTMF.Networking.IHost
  commentId: T:XTMF.Networking.IHost
  parent: XTMF.Networking
  name: IHost
  nameWithType: IHost
  fullName: XTMF.Networking.IHost
- uid: XTMF.Networking
  commentId: N:XTMF.Networking
  name: XTMF.Networking
  nameWithType: XTMF.Networking
  fullName: XTMF.Networking
- uid: XTMF.Configuration.InstallModule*
  commentId: Overload:XTMF.Configuration.InstallModule
  name: InstallModule
  nameWithType: Configuration.InstallModule
  fullName: XTMF.Configuration.InstallModule
- uid: XTMF.IConfiguration.InstallModule(System.String)
  commentId: M:XTMF.IConfiguration.InstallModule(System.String)
  parent: XTMF.IConfiguration
  isExternal: true
  name: InstallModule(String)
  nameWithType: IConfiguration.InstallModule(String)
  fullName: XTMF.IConfiguration.InstallModule(System.String)
  spec.csharp:
  - uid: XTMF.IConfiguration.InstallModule(System.String)
    name: InstallModule
    nameWithType: IConfiguration.InstallModule
    fullName: XTMF.IConfiguration.InstallModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.InstallModule(System.String)
    name: InstallModule
    nameWithType: IConfiguration.InstallModule
    fullName: XTMF.IConfiguration.InstallModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.ReloadProjects*
  commentId: Overload:XTMF.Configuration.ReloadProjects
  name: ReloadProjects
  nameWithType: Configuration.ReloadProjects
  fullName: XTMF.Configuration.ReloadProjects
- uid: XTMF.Configuration.ReloadModelSystems*
  commentId: Overload:XTMF.Configuration.ReloadModelSystems
  name: ReloadModelSystems
  nameWithType: Configuration.ReloadModelSystems
  fullName: XTMF.Configuration.ReloadModelSystems
- uid: XTMF.Configuration.DeleteConfiguration*
  commentId: Overload:XTMF.Configuration.DeleteConfiguration
  name: DeleteConfiguration
  nameWithType: Configuration.DeleteConfiguration
  fullName: XTMF.Configuration.DeleteConfiguration
- uid: XTMF.Configuration.ModelSystemExited*
  commentId: Overload:XTMF.Configuration.ModelSystemExited
  name: ModelSystemExited
  nameWithType: Configuration.ModelSystemExited
  fullName: XTMF.Configuration.ModelSystemExited
- uid: XTMF.Configuration.RetriveCurrentNetworkingClient*
  commentId: Overload:XTMF.Configuration.RetriveCurrentNetworkingClient
  name: RetriveCurrentNetworkingClient
  nameWithType: Configuration.RetriveCurrentNetworkingClient
  fullName: XTMF.Configuration.RetriveCurrentNetworkingClient
- uid: XTMF.IConfiguration.RetriveCurrentNetworkingClient
  commentId: M:XTMF.IConfiguration.RetriveCurrentNetworkingClient
  parent: XTMF.IConfiguration
  name: RetriveCurrentNetworkingClient()
  nameWithType: IConfiguration.RetriveCurrentNetworkingClient()
  fullName: XTMF.IConfiguration.RetriveCurrentNetworkingClient()
  spec.csharp:
  - uid: XTMF.IConfiguration.RetriveCurrentNetworkingClient
    name: RetriveCurrentNetworkingClient
    nameWithType: IConfiguration.RetriveCurrentNetworkingClient
    fullName: XTMF.IConfiguration.RetriveCurrentNetworkingClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.RetriveCurrentNetworkingClient
    name: RetriveCurrentNetworkingClient
    nameWithType: IConfiguration.RetriveCurrentNetworkingClient
    fullName: XTMF.IConfiguration.RetriveCurrentNetworkingClient
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Networking.IClient
  commentId: T:XTMF.Networking.IClient
  parent: XTMF.Networking
  name: IClient
  nameWithType: IClient
  fullName: XTMF.Networking.IClient
- uid: XTMF.Configuration.Save*
  commentId: Overload:XTMF.Configuration.Save
  name: Save
  nameWithType: Configuration.Save
  fullName: XTMF.Configuration.Save
- uid: XTMF.IConfiguration.Save
  commentId: M:XTMF.IConfiguration.Save
  parent: XTMF.IConfiguration
  name: Save()
  nameWithType: IConfiguration.Save()
  fullName: XTMF.IConfiguration.Save()
  spec.csharp:
  - uid: XTMF.IConfiguration.Save
    name: Save
    nameWithType: IConfiguration.Save
    fullName: XTMF.IConfiguration.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.Save
    name: Save
    nameWithType: IConfiguration.Save
    fullName: XTMF.IConfiguration.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.CheckProjectExists*
  commentId: Overload:XTMF.Configuration.CheckProjectExists
  name: CheckProjectExists
  nameWithType: Configuration.CheckProjectExists
  fullName: XTMF.Configuration.CheckProjectExists
- uid: XTMF.Configuration.SetProjectDirectory*
  commentId: Overload:XTMF.Configuration.SetProjectDirectory
  name: SetProjectDirectory
  nameWithType: Configuration.SetProjectDirectory
  fullName: XTMF.Configuration.SetProjectDirectory
- uid: XTMF.Configuration.HasFolderWritePermission*
  commentId: Overload:XTMF.Configuration.HasFolderWritePermission
  name: HasFolderWritePermission
  nameWithType: Configuration.HasFolderWritePermission
  fullName: XTMF.Configuration.HasFolderWritePermission
- uid: XTMF.Configuration.SetModelSystemDirectory*
  commentId: Overload:XTMF.Configuration.SetModelSystemDirectory
  name: SetModelSystemDirectory
  nameWithType: Configuration.SetModelSystemDirectory
  fullName: XTMF.Configuration.SetModelSystemDirectory
- uid: XTMF.Configuration.StartupNetworkingClient*
  commentId: Overload:XTMF.Configuration.StartupNetworkingClient
  name: StartupNetworkingClient
  nameWithType: Configuration.StartupNetworkingClient
  fullName: XTMF.Configuration.StartupNetworkingClient
- uid: XTMF.IConfiguration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  commentId: M:XTMF.IConfiguration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
  parent: XTMF.IConfiguration
  isExternal: true
  name: StartupNetworkingClient(IClient, String)
  nameWithType: IConfiguration.StartupNetworkingClient(IClient, String)
  fullName: XTMF.IConfiguration.StartupNetworkingClient(XTMF.Networking.IClient, System.String)
  spec.csharp:
  - uid: XTMF.IConfiguration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
    name: StartupNetworkingClient
    nameWithType: IConfiguration.StartupNetworkingClient
    fullName: XTMF.IConfiguration.StartupNetworkingClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.Networking.IClient
    name: IClient
    nameWithType: IClient
    fullName: XTMF.Networking.IClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.StartupNetworkingClient(XTMF.Networking.IClient@,System.String@)
    name: StartupNetworkingClient
    nameWithType: IConfiguration.StartupNetworkingClient
    fullName: XTMF.IConfiguration.StartupNetworkingClient
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.Networking.IClient
    name: IClient
    nameWithType: IClient
    fullName: XTMF.Networking.IClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.StartupNetworkingHost*
  commentId: Overload:XTMF.Configuration.StartupNetworkingHost
  name: StartupNetworkingHost
  nameWithType: Configuration.StartupNetworkingHost
  fullName: XTMF.Configuration.StartupNetworkingHost
- uid: XTMF.IConfiguration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  commentId: M:XTMF.IConfiguration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
  parent: XTMF.IConfiguration
  isExternal: true
  name: StartupNetworkingHost(IHost, String)
  nameWithType: IConfiguration.StartupNetworkingHost(IHost, String)
  fullName: XTMF.IConfiguration.StartupNetworkingHost(XTMF.Networking.IHost, System.String)
  spec.csharp:
  - uid: XTMF.IConfiguration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
    name: StartupNetworkingHost
    nameWithType: IConfiguration.StartupNetworkingHost
    fullName: XTMF.IConfiguration.StartupNetworkingHost
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.Networking.IHost
    name: IHost
    nameWithType: IHost
    fullName: XTMF.Networking.IHost
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.StartupNetworkingHost(XTMF.Networking.IHost@,System.String@)
    name: StartupNetworkingHost
    nameWithType: IConfiguration.StartupNetworkingHost
    fullName: XTMF.IConfiguration.StartupNetworkingHost
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.Networking.IHost
    name: IHost
    nameWithType: IHost
    fullName: XTMF.Networking.IHost
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.UpdateProgressReportColour*
  commentId: Overload:XTMF.Configuration.UpdateProgressReportColour
  name: UpdateProgressReportColour
  nameWithType: Configuration.UpdateProgressReportColour
  fullName: XTMF.Configuration.UpdateProgressReportColour
- uid: XTMF.IConfiguration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  commentId: M:XTMF.IConfiguration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
  parent: XTMF.IConfiguration
  isExternal: true
  name: UpdateProgressReportColour(String, Tuple<Byte, Byte, Byte>)
  nameWithType: IConfiguration.UpdateProgressReportColour(String, Tuple<Byte, Byte, Byte>)
  fullName: XTMF.IConfiguration.UpdateProgressReportColour(System.String, System.Tuple<System.Byte, System.Byte, System.Byte>)
  nameWithType.vb: IConfiguration.UpdateProgressReportColour(String, Tuple(Of Byte, Byte, Byte))
  fullName.vb: XTMF.IConfiguration.UpdateProgressReportColour(System.String, System.Tuple(Of System.Byte, System.Byte, System.Byte))
  name.vb: UpdateProgressReportColour(String, Tuple(Of Byte, Byte, Byte))
  spec.csharp:
  - uid: XTMF.IConfiguration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
    name: UpdateProgressReportColour
    nameWithType: IConfiguration.UpdateProgressReportColour
    fullName: XTMF.IConfiguration.UpdateProgressReportColour
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IConfiguration.UpdateProgressReportColour(System.String,System.Tuple{System.Byte,System.Byte,System.Byte})
    name: UpdateProgressReportColour
    nameWithType: IConfiguration.UpdateProgressReportColour
    fullName: XTMF.IConfiguration.UpdateProgressReportColour
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.ValidateProjectDirectory*
  commentId: Overload:XTMF.Configuration.ValidateProjectDirectory
  name: ValidateProjectDirectory
  nameWithType: Configuration.ValidateProjectDirectory
  fullName: XTMF.Configuration.ValidateProjectDirectory
- uid: XTMF.Configuration.RenameRecentProject*
  commentId: Overload:XTMF.Configuration.RenameRecentProject
  name: RenameRecentProject
  nameWithType: Configuration.RenameRecentProject
  fullName: XTMF.Configuration.RenameRecentProject
- uid: XTMF.Configuration.RemoveRecentProject*
  commentId: Overload:XTMF.Configuration.RemoveRecentProject
  name: RemoveRecentProject
  nameWithType: Configuration.RemoveRecentProject
  fullName: XTMF.Configuration.RemoveRecentProject
- uid: XTMF.Configuration.AddRecentProject*
  commentId: Overload:XTMF.Configuration.AddRecentProject
  name: AddRecentProject
  nameWithType: Configuration.AddRecentProject
  fullName: XTMF.Configuration.AddRecentProject
- uid: XTMF.Configuration.GetValidGenericVariableTypes*
  commentId: Overload:XTMF.Configuration.GetValidGenericVariableTypes
  name: GetValidGenericVariableTypes
  nameWithType: Configuration.GetValidGenericVariableTypes
  fullName: XTMF.Configuration.GetValidGenericVariableTypes
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection{System.Type}
  commentId: T:System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  nameWithType.vb: ICollection(Of Type)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Type)
  name.vb: ICollection(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.Configuration.LoadModules*
  commentId: Overload:XTMF.Configuration.LoadModules
  name: LoadModules
  nameWithType: Configuration.LoadModules
  fullName: XTMF.Configuration.LoadModules
- uid: XTMF.Configuration.Dispose*
  commentId: Overload:XTMF.Configuration.Dispose
  name: Dispose
  nameWithType: Configuration.Dispose
  fullName: XTMF.Configuration.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
