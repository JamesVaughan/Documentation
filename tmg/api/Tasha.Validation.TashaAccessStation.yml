### YamlMime:ManagedReference
items:
- uid: Tasha.Validation.TashaAccessStation
  commentId: T:Tasha.Validation.TashaAccessStation
  id: TashaAccessStation
  parent: Tasha.Validation
  children:
  - Tasha.Validation.TashaAccessStation.Auto
  - Tasha.Validation.TashaAccessStation.AutoData
  - Tasha.Validation.TashaAccessStation.BoardingTime
  - Tasha.Validation.TashaAccessStation.CostFactor
  - Tasha.Validation.TashaAccessStation.Execute(System.Int32,System.Int32)
  - Tasha.Validation.TashaAccessStation.InVehicleTravelTime
  - Tasha.Validation.TashaAccessStation.Load(System.Int32)
  - Tasha.Validation.TashaAccessStation.Name
  - Tasha.Validation.TashaAccessStation.Progress
  - Tasha.Validation.TashaAccessStation.ProgressColour
  - Tasha.Validation.TashaAccessStation.Root
  - Tasha.Validation.TashaAccessStation.RuntimeValidation(System.String@)
  - Tasha.Validation.TashaAccessStation.StationInformationReader
  - Tasha.Validation.TashaAccessStation.Transit
  - Tasha.Validation.TashaAccessStation.TransitData
  - Tasha.Validation.TashaAccessStation.WaitTime
  - Tasha.Validation.TashaAccessStation.WalkTime
  langs:
  - csharp
  - vb
  name: TashaAccessStation
  nameWithType: TashaAccessStation
  fullName: Tasha.Validation.TashaAccessStation
  type: Class
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TashaAccessStation
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 31
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: 'public class TashaAccessStation : IPreIteration, IModule'
    content.vb: >-
      Public Class TashaAccessStation
          Implements IPreIteration, IModule
  inheritance:
  - System.Object
  implements:
  - Tasha.Common.IPreIteration
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tasha.Validation.TashaAccessStation.Auto
  commentId: F:Tasha.Validation.TashaAccessStation.Auto
  id: Auto
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Auto
  nameWithType: TashaAccessStation.Auto
  fullName: Tasha.Validation.TashaAccessStation.Auto
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Auto
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 34
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("Auto Network Name", "Auto", "The name of the Auto Network.")]

      public string Auto
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Auto Network Name", "Auto", "The name of the Auto Network.")>

      Public Auto As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the Auto Network.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.AutoData
  commentId: F:Tasha.Validation.TashaAccessStation.AutoData
  id: AutoData
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: AutoData
  nameWithType: TashaAccessStation.AutoData
  fullName: Tasha.Validation.TashaAccessStation.AutoData
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoData
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 37
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public INetworkData AutoData
    return:
      type: TMG.INetworkData
    content.vb: Public AutoData As INetworkData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.BoardingTime
  commentId: F:Tasha.Validation.TashaAccessStation.BoardingTime
  id: BoardingTime
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: BoardingTime
  nameWithType: TashaAccessStation.BoardingTime
  fullName: Tasha.Validation.TashaAccessStation.BoardingTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BoardingTime
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 40
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("Bording Time", 0F, "The factor applied to the boarding time.")]

      public float BoardingTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Bording Time", 0F, "The factor applied to the boarding time.")>

      Public BoardingTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Bording Time
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor applied to the boarding time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.CostFactor
  commentId: F:Tasha.Validation.TashaAccessStation.CostFactor
  id: CostFactor
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: CostFactor
  nameWithType: TashaAccessStation.CostFactor
  fullName: Tasha.Validation.TashaAccessStation.CostFactor
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CostFactor
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 43
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("Cost", 0F, "The factor applied to the cost after access.")]

      public float CostFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Cost", 0F, "The factor applied to the cost after access.")>

      Public CostFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Cost
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor applied to the cost after access.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.InVehicleTravelTime
  commentId: F:Tasha.Validation.TashaAccessStation.InVehicleTravelTime
  id: InVehicleTravelTime
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: InVehicleTravelTime
  nameWithType: TashaAccessStation.InVehicleTravelTime
  fullName: Tasha.Validation.TashaAccessStation.InVehicleTravelTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InVehicleTravelTime
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 46
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("IVTT", 0F, "The factor to apply to the general time of travel.")]

      public float InVehicleTravelTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("IVTT", 0F, "The factor to apply to the general time of travel.")>

      Public InVehicleTravelTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: IVTT
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the general time of travel.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.Root
  commentId: F:Tasha.Validation.TashaAccessStation.Root
  id: Root
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: TashaAccessStation.Root
  fullName: Tasha.Validation.TashaAccessStation.Root
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 49
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public ITashaRuntime Root
    return:
      type: Tasha.Common.ITashaRuntime
    content.vb: Public Root As ITashaRuntime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.StationInformationReader
  commentId: F:Tasha.Validation.TashaAccessStation.StationInformationReader
  id: StationInformationReader
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: StationInformationReader
  nameWithType: TashaAccessStation.StationInformationReader
  fullName: Tasha.Validation.TashaAccessStation.StationInformationReader
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationInformationReader
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 52
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [SubModelInformation(Description = "(Origin = Station Number, Destination = Parking Spots, Data = Number Of Trains)", Required = true)]

      public IReadODData<float> StationInformationReader
    return:
      type: TMG.Input.IReadODData{System.Single}
    content.vb: >-
      <SubModelInformation(Description:="(Origin = Station Number, Destination = Parking Spots, Data = Number Of Trains)", Required:=True)>

      Public StationInformationReader As IReadODData(Of Single)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: (Origin = Station Number, Destination = Parking Spots, Data = Number Of Trains)
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.Transit
  commentId: F:Tasha.Validation.TashaAccessStation.Transit
  id: Transit
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Transit
  nameWithType: TashaAccessStation.Transit
  fullName: Tasha.Validation.TashaAccessStation.Transit
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Transit
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 55
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("Transit Network Name", "Transit", "The name of the Transit Network")]

      public string Transit
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Transit Network Name", "Transit", "The name of the Transit Network")>

      Public Transit As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transit Network Name
    - type: System.String
      value: Transit
    - type: System.String
      value: The name of the Transit Network
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.TransitData
  commentId: F:Tasha.Validation.TashaAccessStation.TransitData
  id: TransitData
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: TransitData
  nameWithType: TashaAccessStation.TransitData
  fullName: Tasha.Validation.TashaAccessStation.TransitData
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TransitData
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 58
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public ITripComponentData TransitData
    return:
      type: TMG.ITripComponentData
    content.vb: Public TransitData As ITripComponentData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.WaitTime
  commentId: F:Tasha.Validation.TashaAccessStation.WaitTime
  id: WaitTime
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: WaitTime
  nameWithType: TashaAccessStation.WaitTime
  fullName: Tasha.Validation.TashaAccessStation.WaitTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitTime
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 61
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("Wait Time", 0F, "The factor to apply to the wait time.")]

      public float WaitTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Wait Time", 0F, "The factor to apply to the wait time.")>

      Public WaitTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Wait Time
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the wait time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.WalkTime
  commentId: F:Tasha.Validation.TashaAccessStation.WalkTime
  id: WalkTime
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: WalkTime
  nameWithType: TashaAccessStation.WalkTime
  fullName: Tasha.Validation.TashaAccessStation.WalkTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkTime
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 64
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: >-
      [RunParameter("Walk Time", 0F, "The factor to apply to the general time of travel.")]

      public float WalkTime
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Walk Time", 0F, "The factor to apply to the general time of travel.")>

      Public WalkTime As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Walk Time
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the general time of travel.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.Name
  commentId: P:Tasha.Validation.TashaAccessStation.Name
  id: Name
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TashaAccessStation.Name
  fullName: Tasha.Validation.TashaAccessStation.Name
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 70
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Tasha.Validation.TashaAccessStation.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.Progress
  commentId: P:Tasha.Validation.TashaAccessStation.Progress
  id: Progress
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: TashaAccessStation.Progress
  fullName: Tasha.Validation.TashaAccessStation.Progress
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 76
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: Tasha.Validation.TashaAccessStation.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.ProgressColour
  commentId: P:Tasha.Validation.TashaAccessStation.ProgressColour
  id: ProgressColour
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: TashaAccessStation.ProgressColour
  fullName: Tasha.Validation.TashaAccessStation.ProgressColour
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 82
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; set; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: Tasha.Validation.TashaAccessStation.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.Execute(System.Int32,System.Int32)
  commentId: M:Tasha.Validation.TashaAccessStation.Execute(System.Int32,System.Int32)
  id: Execute(System.Int32,System.Int32)
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Execute(Int32, Int32)
  nameWithType: TashaAccessStation.Execute(Int32, Int32)
  fullName: Tasha.Validation.TashaAccessStation.Execute(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 88
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public void Execute(int iterationNumber, int totalIterations)
    parameters:
    - id: iterationNumber
      type: System.Int32
    - id: totalIterations
      type: System.Int32
    content.vb: Public Sub Execute(iterationNumber As Integer, totalIterations As Integer)
  overload: Tasha.Validation.TashaAccessStation.Execute*
  implements:
  - Tasha.Common.IPreIteration.Execute(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.Load(System.Int32)
  commentId: M:Tasha.Validation.TashaAccessStation.Load(System.Int32)
  id: Load(System.Int32)
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: Load(Int32)
  nameWithType: TashaAccessStation.Load(Int32)
  fullName: Tasha.Validation.TashaAccessStation.Load(System.Int32)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Load
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 107
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public void Load(int totalIterations)
    parameters:
    - id: totalIterations
      type: System.Int32
    content.vb: Public Sub Load(totalIterations As Integer)
  overload: Tasha.Validation.TashaAccessStation.Load*
  implements:
  - Tasha.Common.IPreIteration.Load(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.TashaAccessStation.RuntimeValidation(System.String@)
  commentId: M:Tasha.Validation.TashaAccessStation.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: Tasha.Validation.TashaAccessStation
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: TashaAccessStation.RuntimeValidation(ref String)
  fullName: Tasha.Validation.TashaAccessStation.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/TashaAccessStation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/Tasha.Validation/TashaAccessStation.cs
    startLine: 111
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: Tasha.Validation.TashaAccessStation.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: TashaAccessStation.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Validation.TashaAccessStation.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: Tasha.Validation
  commentId: N:Tasha.Validation
  name: Tasha.Validation
  nameWithType: Tasha.Validation
  fullName: Tasha.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Tasha.Common.IPreIteration
  commentId: T:Tasha.Common.IPreIteration
  parent: Tasha.Common
  name: IPreIteration
  nameWithType: IPreIteration
  fullName: Tasha.Common.IPreIteration
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tasha.Common
  commentId: N:Tasha.Common
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.INetworkData
  commentId: T:TMG.INetworkData
  parent: TMG
  name: INetworkData
  nameWithType: INetworkData
  fullName: TMG.INetworkData
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Tasha.Common.ITashaRuntime
  commentId: T:Tasha.Common.ITashaRuntime
  parent: Tasha.Common
  name: ITashaRuntime
  nameWithType: ITashaRuntime
  fullName: Tasha.Common.ITashaRuntime
- uid: TMG.Input.IReadODData{System.Single}
  commentId: T:TMG.Input.IReadODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.IReadODData`1
  name: IReadODData<Single>
  nameWithType: IReadODData<Single>
  fullName: TMG.Input.IReadODData<System.Single>
  nameWithType.vb: IReadODData(Of Single)
  fullName.vb: TMG.Input.IReadODData(Of System.Single)
  name.vb: IReadODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IReadODData`1
  commentId: T:TMG.Input.IReadODData`1
  name: IReadODData<T>
  nameWithType: IReadODData<T>
  fullName: TMG.Input.IReadODData<T>
  nameWithType.vb: IReadODData(Of T)
  fullName.vb: TMG.Input.IReadODData(Of T)
  name.vb: IReadODData(Of T)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.ITripComponentData
  commentId: T:TMG.ITripComponentData
  parent: TMG
  name: ITripComponentData
  nameWithType: ITripComponentData
  fullName: TMG.ITripComponentData
- uid: Tasha.Validation.TashaAccessStation.Name*
  commentId: Overload:Tasha.Validation.TashaAccessStation.Name
  name: Name
  nameWithType: TashaAccessStation.Name
  fullName: Tasha.Validation.TashaAccessStation.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: Tasha.Validation.TashaAccessStation.Progress*
  commentId: Overload:Tasha.Validation.TashaAccessStation.Progress
  name: Progress
  nameWithType: TashaAccessStation.Progress
  fullName: Tasha.Validation.TashaAccessStation.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: Tasha.Validation.TashaAccessStation.ProgressColour*
  commentId: Overload:Tasha.Validation.TashaAccessStation.ProgressColour
  name: ProgressColour
  nameWithType: TashaAccessStation.ProgressColour
  fullName: Tasha.Validation.TashaAccessStation.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.TashaAccessStation.Execute*
  commentId: Overload:Tasha.Validation.TashaAccessStation.Execute
  name: Execute
  nameWithType: TashaAccessStation.Execute
  fullName: Tasha.Validation.TashaAccessStation.Execute
- uid: Tasha.Common.IPreIteration.Execute(System.Int32,System.Int32)
  commentId: M:Tasha.Common.IPreIteration.Execute(System.Int32,System.Int32)
  parent: Tasha.Common.IPreIteration
  isExternal: true
  name: Execute(Int32, Int32)
  nameWithType: IPreIteration.Execute(Int32, Int32)
  fullName: Tasha.Common.IPreIteration.Execute(System.Int32, System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPreIteration.Execute(System.Int32,System.Int32)
    name: Execute
    nameWithType: IPreIteration.Execute
    fullName: Tasha.Common.IPreIteration.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPreIteration.Execute(System.Int32,System.Int32)
    name: Execute
    nameWithType: IPreIteration.Execute
    fullName: Tasha.Common.IPreIteration.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Tasha.Validation.TashaAccessStation.Load*
  commentId: Overload:Tasha.Validation.TashaAccessStation.Load
  name: Load
  nameWithType: TashaAccessStation.Load
  fullName: Tasha.Validation.TashaAccessStation.Load
- uid: Tasha.Common.IPreIteration.Load(System.Int32)
  commentId: M:Tasha.Common.IPreIteration.Load(System.Int32)
  parent: Tasha.Common.IPreIteration
  isExternal: true
  name: Load(Int32)
  nameWithType: IPreIteration.Load(Int32)
  fullName: Tasha.Common.IPreIteration.Load(System.Int32)
  spec.csharp:
  - uid: Tasha.Common.IPreIteration.Load(System.Int32)
    name: Load
    nameWithType: IPreIteration.Load
    fullName: Tasha.Common.IPreIteration.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tasha.Common.IPreIteration.Load(System.Int32)
    name: Load
    nameWithType: IPreIteration.Load
    fullName: Tasha.Common.IPreIteration.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.TashaAccessStation.RuntimeValidation*
  commentId: Overload:Tasha.Validation.TashaAccessStation.RuntimeValidation
  name: RuntimeValidation
  nameWithType: TashaAccessStation.RuntimeValidation
  fullName: Tasha.Validation.TashaAccessStation.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
