### YamlMime:ManagedReference
items:
- uid: XTMF.RegionDisplay
  commentId: T:XTMF.RegionDisplay
  id: RegionDisplay
  parent: XTMF
  children:
  - XTMF.RegionDisplay.#ctor
  - XTMF.RegionDisplay.MapRegionDisplays(System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.IModelSystemStructure)
  - XTMF.RegionDisplay.Name
  - XTMF.RegionDisplay.RegionGroups
  langs:
  - csharp
  - vb
  name: RegionDisplay
  nameWithType: RegionDisplay
  fullName: XTMF.RegionDisplay
  type: Class
  source:
    remote:
      path: Code/XTMF/RegionDisplay.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDisplay
    path: ../../XTMF/Code/XTMF/RegionDisplay.cs
    startLine: 13
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: 'public class RegionDisplay : IRegionDisplay'
    content.vb: >-
      Public Class RegionDisplay
          Implements IRegionDisplay
  inheritance:
  - System.Object
  implements:
  - XTMF.Interfaces.IRegionDisplay
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.RegionDisplay.Name
  commentId: P:XTMF.RegionDisplay.Name
  id: Name
  parent: XTMF.RegionDisplay
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RegionDisplay.Name
  fullName: XTMF.RegionDisplay.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/RegionDisplay.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/RegionDisplay.cs
    startLine: 15
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: XTMF.RegionDisplay.Name*
  implements:
  - XTMF.Interfaces.IRegionDisplay.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.RegionDisplay.RegionGroups
  commentId: P:XTMF.RegionDisplay.RegionGroups
  id: RegionGroups
  parent: XTMF.RegionDisplay
  langs:
  - csharp
  - vb
  name: RegionGroups
  nameWithType: RegionDisplay.RegionGroups
  fullName: XTMF.RegionDisplay.RegionGroups
  type: Property
  source:
    remote:
      path: Code/XTMF/RegionDisplay.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionGroups
    path: ../../XTMF/Code/XTMF/RegionDisplay.cs
    startLine: 29
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ObservableCollection<IRegionGroup> RegionGroups { get; set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{XTMF.Interfaces.IRegionGroup}
    content.vb: Public Property RegionGroups As ObservableCollection(Of IRegionGroup)
  overload: XTMF.RegionDisplay.RegionGroups*
  implements:
  - XTMF.Interfaces.IRegionDisplay.RegionGroups
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: XTMF.RegionDisplay.#ctor
  commentId: M:XTMF.RegionDisplay.#ctor
  id: '#ctor'
  parent: XTMF.RegionDisplay
  langs:
  - csharp
  - vb
  name: RegionDisplay()
  nameWithType: RegionDisplay.RegionDisplay()
  fullName: XTMF.RegionDisplay.RegionDisplay()
  type: Constructor
  source:
    remote:
      path: Code/XTMF/RegionDisplay.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/RegionDisplay.cs
    startLine: 44
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public RegionDisplay()
    content.vb: Public Sub New
  overload: XTMF.RegionDisplay.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.RegionDisplay.MapRegionDisplays(System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.IModelSystemStructure)
  commentId: M:XTMF.RegionDisplay.MapRegionDisplays(System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.IModelSystemStructure)
  id: MapRegionDisplays(System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay},XTMF.IModelSystemStructure)
  parent: XTMF.RegionDisplay
  langs:
  - csharp
  - vb
  name: MapRegionDisplays(List<IRegionDisplay>, IModelSystemStructure)
  nameWithType: RegionDisplay.MapRegionDisplays(List<IRegionDisplay>, IModelSystemStructure)
  fullName: XTMF.RegionDisplay.MapRegionDisplays(System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>, XTMF.IModelSystemStructure)
  type: Method
  source:
    remote:
      path: Code/XTMF/RegionDisplay.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MapRegionDisplays
    path: ../../XTMF/Code/XTMF/RegionDisplay.cs
    startLine: 55
  assemblies:
  - XTMF
  namespace: XTMF
  summary: "\n\n"
  example: []
  syntax:
    content: public static List<IRegionDisplay> MapRegionDisplays(List<IRegionDisplay> displays, IModelSystemStructure clone)
    parameters:
    - id: displays
      type: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
      description: ''
    - id: clone
      type: XTMF.IModelSystemStructure
      description: ''
    return:
      type: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
      description: ''
    content.vb: Public Shared Function MapRegionDisplays(displays As List(Of IRegionDisplay), clone As IModelSystemStructure) As List(Of IRegionDisplay)
  overload: XTMF.RegionDisplay.MapRegionDisplays*
  nameWithType.vb: RegionDisplay.MapRegionDisplays(List(Of IRegionDisplay), IModelSystemStructure)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: XTMF.RegionDisplay.MapRegionDisplays(System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay), XTMF.IModelSystemStructure)
  name.vb: MapRegionDisplays(List(Of IRegionDisplay), IModelSystemStructure)
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.Interfaces.IRegionDisplay
  commentId: T:XTMF.Interfaces.IRegionDisplay
  parent: XTMF.Interfaces
  name: IRegionDisplay
  nameWithType: IRegionDisplay
  fullName: XTMF.Interfaces.IRegionDisplay
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.Interfaces
  commentId: N:XTMF.Interfaces
  name: XTMF.Interfaces
  nameWithType: XTMF.Interfaces
  fullName: XTMF.Interfaces
- uid: XTMF.RegionDisplay.Name*
  commentId: Overload:XTMF.RegionDisplay.Name
  name: Name
  nameWithType: RegionDisplay.Name
  fullName: XTMF.RegionDisplay.Name
- uid: XTMF.Interfaces.IRegionDisplay.Name
  commentId: P:XTMF.Interfaces.IRegionDisplay.Name
  parent: XTMF.Interfaces.IRegionDisplay
  name: Name
  nameWithType: IRegionDisplay.Name
  fullName: XTMF.Interfaces.IRegionDisplay.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.RegionDisplay.RegionGroups*
  commentId: Overload:XTMF.RegionDisplay.RegionGroups
  name: RegionGroups
  nameWithType: RegionDisplay.RegionGroups
  fullName: XTMF.RegionDisplay.RegionGroups
- uid: XTMF.Interfaces.IRegionDisplay.RegionGroups
  commentId: P:XTMF.Interfaces.IRegionDisplay.RegionGroups
  parent: XTMF.Interfaces.IRegionDisplay
  name: RegionGroups
  nameWithType: IRegionDisplay.RegionGroups
  fullName: XTMF.Interfaces.IRegionDisplay.RegionGroups
- uid: System.Collections.ObjectModel.ObservableCollection{XTMF.Interfaces.IRegionGroup}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{XTMF.Interfaces.IRegionGroup}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<IRegionGroup>
  nameWithType: ObservableCollection<IRegionGroup>
  fullName: System.Collections.ObjectModel.ObservableCollection<XTMF.Interfaces.IRegionGroup>
  nameWithType.vb: ObservableCollection(Of IRegionGroup)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of XTMF.Interfaces.IRegionGroup)
  name.vb: ObservableCollection(Of IRegionGroup)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionGroup
    name: IRegionGroup
    nameWithType: IRegionGroup
    fullName: XTMF.Interfaces.IRegionGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionGroup
    name: IRegionGroup
    nameWithType: IRegionGroup
    fullName: XTMF.Interfaces.IRegionGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: XTMF.RegionDisplay.#ctor*
  commentId: Overload:XTMF.RegionDisplay.#ctor
  name: RegionDisplay
  nameWithType: RegionDisplay.RegionDisplay
  fullName: XTMF.RegionDisplay.RegionDisplay
- uid: XTMF.RegionDisplay.MapRegionDisplays*
  commentId: Overload:XTMF.RegionDisplay.MapRegionDisplays
  name: MapRegionDisplays
  nameWithType: RegionDisplay.MapRegionDisplays
  fullName: XTMF.RegionDisplay.MapRegionDisplays
- uid: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  commentId: T:System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRegionDisplay>
  nameWithType: List<IRegionDisplay>
  fullName: System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>
  nameWithType.vb: List(Of IRegionDisplay)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay)
  name.vb: List(Of IRegionDisplay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
