### YamlMime:ManagedReference
items:
- uid: TMG.Estimation.GeneticAI
  commentId: T:TMG.Estimation.GeneticAI
  id: GeneticAI
  parent: TMG.Estimation
  children:
  - TMG.Estimation.GeneticAI.CreateJobsForIteration
  - TMG.Estimation.GeneticAI.CrossExponent
  - TMG.Estimation.GeneticAI.Distance
  - TMG.Estimation.GeneticAI.Host
  - TMG.Estimation.GeneticAI.IterationComplete
  - TMG.Estimation.GeneticAI.Maximize
  - TMG.Estimation.GeneticAI.MaxMutationPercent
  - TMG.Estimation.GeneticAI.MutationExponent
  - TMG.Estimation.GeneticAI.MutationProbability
  - TMG.Estimation.GeneticAI.Name
  - TMG.Estimation.GeneticAI.NicheCapacity
  - TMG.Estimation.GeneticAI.PercentDistance
  - TMG.Estimation.GeneticAI.PopulationSize
  - TMG.Estimation.GeneticAI.Progress
  - TMG.Estimation.GeneticAI.ProgressColour
  - TMG.Estimation.GeneticAI.RandomSeed
  - TMG.Estimation.GeneticAI.ReseedSize
  - TMG.Estimation.GeneticAI.RuntimeValidation(System.String@)
  langs:
  - csharp
  - vb
  name: GeneticAI
  nameWithType: GeneticAI
  fullName: TMG.Estimation.GeneticAI
  type: Class
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GeneticAI
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 26
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: 'public class GeneticAI : IEstimationAI, IModule'
    content.vb: >-
      Public Class GeneticAI
          Implements IEstimationAI, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Estimation.IEstimationAI
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.Estimation.GeneticAI.PopulationSize
  commentId: F:TMG.Estimation.GeneticAI.PopulationSize
  id: PopulationSize
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: PopulationSize
  nameWithType: GeneticAI.PopulationSize
  fullName: TMG.Estimation.GeneticAI.PopulationSize
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PopulationSize
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 29
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Population Size", 1000, "The number of different runs to do per generation.")]

      public int PopulationSize
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Population Size", 1000, "The number of different runs to do per generation.")>

      Public PopulationSize As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Population Size
    - type: System.Int32
      value: 1000
    - type: System.String
      value: The number of different runs to do per generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.ReseedSize
  commentId: F:TMG.Estimation.GeneticAI.ReseedSize
  id: ReseedSize
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: ReseedSize
  nameWithType: GeneticAI.ReseedSize
  fullName: TMG.Estimation.GeneticAI.ReseedSize
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReseedSize
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 32
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Reseed Size", 10, "The number of parameters to generate randomly per generation.")]

      public int ReseedSize
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Reseed Size", 10, "The number of parameters to generate randomly per generation.")>

      Public ReseedSize As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Reseed Size
    - type: System.Int32
      value: 10
    - type: System.String
      value: The number of parameters to generate randomly per generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.CrossExponent
  commentId: F:TMG.Estimation.GeneticAI.CrossExponent
  id: CrossExponent
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: CrossExponent
  nameWithType: GeneticAI.CrossExponent
  fullName: TMG.Estimation.GeneticAI.CrossExponent
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CrossExponent
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 35
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Cross Exponent", 2.2F, "The exponent used for selecting the parameters to breed.")]

      public float CrossExponent
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Cross Exponent", 2.2F, "The exponent used for selecting the parameters to breed.")>

      Public CrossExponent As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Cross Exponent
    - type: System.Single
      value: 2.20000005
    - type: System.String
      value: The exponent used for selecting the parameters to breed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.MaxMutationPercent
  commentId: F:TMG.Estimation.GeneticAI.MaxMutationPercent
  id: MaxMutationPercent
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: MaxMutationPercent
  nameWithType: GeneticAI.MaxMutationPercent
  fullName: TMG.Estimation.GeneticAI.MaxMutationPercent
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaxMutationPercent
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 38
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Max Mutation", 0.4F, "The maximum amount (in 0 to 1) that a parameter can be mutated")]

      public float MaxMutationPercent
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Max Mutation", 0.4F, "The maximum amount (in 0 to 1) that a parameter can be mutated")>

      Public MaxMutationPercent As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Mutation
    - type: System.Single
      value: 0.400000006
    - type: System.String
      value: The maximum amount (in 0 to 1) that a parameter can be mutated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.MutationExponent
  commentId: F:TMG.Estimation.GeneticAI.MutationExponent
  id: MutationExponent
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: MutationExponent
  nameWithType: GeneticAI.MutationExponent
  fullName: TMG.Estimation.GeneticAI.MutationExponent
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MutationExponent
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 41
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Mutation Exponent", 2F, "The exponent used for mutation")]

      public float MutationExponent
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Mutation Exponent", 2F, "The exponent used for mutation")>

      Public MutationExponent As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Mutation Exponent
    - type: System.Single
      value: 2
    - type: System.String
      value: The exponent used for mutation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.MutationProbability
  commentId: F:TMG.Estimation.GeneticAI.MutationProbability
  id: MutationProbability
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: MutationProbability
  nameWithType: GeneticAI.MutationProbability
  fullName: TMG.Estimation.GeneticAI.MutationProbability
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MutationProbability
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 44
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Mutation Probability", 3.1F, "The number of mutations per gene. The remainder will be applied with a probability.")]

      public float MutationProbability
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Mutation Probability", 3.1F, "The number of mutations per gene. The remainder will be applied with a probability.")>

      Public MutationProbability As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Mutation Probability
    - type: System.Single
      value: 3.0999999
    - type: System.String
      value: The number of mutations per gene. The remainder will be applied with a probability.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.Distance
  commentId: F:TMG.Estimation.GeneticAI.Distance
  id: Distance
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: GeneticAI.Distance
  fullName: TMG.Estimation.GeneticAI.Distance
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Distance
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 47
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Distance", 2F, "The distance between parameters to consider a niche")]

      public float Distance
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Distance", 2F, "The distance between parameters to consider a niche")>

      Public Distance As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Distance
    - type: System.Single
      value: 2
    - type: System.String
      value: The distance between parameters to consider a niche
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.NicheCapacity
  commentId: F:TMG.Estimation.GeneticAI.NicheCapacity
  id: NicheCapacity
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: NicheCapacity
  nameWithType: GeneticAI.NicheCapacity
  fullName: TMG.Estimation.GeneticAI.NicheCapacity
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NicheCapacity
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 50
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Niche Capacity", 10, "The max number of population continuing in a niche")]

      public int NicheCapacity
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Niche Capacity", 10, "The max number of population continuing in a niche")>

      Public NicheCapacity As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Niche Capacity
    - type: System.Int32
      value: 10
    - type: System.String
      value: The max number of population continuing in a niche
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.PercentDistance
  commentId: F:TMG.Estimation.GeneticAI.PercentDistance
  id: PercentDistance
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: PercentDistance
  nameWithType: GeneticAI.PercentDistance
  fullName: TMG.Estimation.GeneticAI.PercentDistance
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PercentDistance
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 53
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Percent Distance", false, "Use the percent of difference between parameters instead of raw values.")]

      public bool PercentDistance
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Percent Distance", False, "Use the percent of difference between parameters instead of raw values.")>

      Public PercentDistance As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Percent Distance
    - type: System.Boolean
      value: false
    - type: System.String
      value: Use the percent of difference between parameters instead of raw values.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.RandomSeed
  commentId: F:TMG.Estimation.GeneticAI.RandomSeed
  id: RandomSeed
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: RandomSeed
  nameWithType: GeneticAI.RandomSeed
  fullName: TMG.Estimation.GeneticAI.RandomSeed
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RandomSeed
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 56
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Random Seed", 12345, "The random seed to use for this AI..")]

      public int RandomSeed
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Random Seed", 12345, "The random seed to use for this AI..")>

      Public RandomSeed As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Random Seed
    - type: System.Int32
      value: 12345
    - type: System.String
      value: The random seed to use for this AI..
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.Host
  commentId: F:TMG.Estimation.GeneticAI.Host
  id: Host
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: GeneticAI.Host
  fullName: TMG.Estimation.GeneticAI.Host
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Host
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 59
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public IEstimationHost Host
    return:
      type: TMG.Estimation.IEstimationHost
    content.vb: Public Host As IEstimationHost
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.Maximize
  commentId: F:TMG.Estimation.GeneticAI.Maximize
  id: Maximize
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: Maximize
  nameWithType: GeneticAI.Maximize
  fullName: TMG.Estimation.GeneticAI.Maximize
  type: Field
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Maximize
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 64
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: >-
      [RunParameter("Maximize", true, "Should this AI try to maximize or minimize the values?")]

      public bool Maximize
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Maximize", True, "Should this AI try to maximize or minimize the values?")>

      Public Maximize As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Maximize
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should this AI try to maximize or minimize the values?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.CreateJobsForIteration
  commentId: M:TMG.Estimation.GeneticAI.CreateJobsForIteration
  id: CreateJobsForIteration
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: CreateJobsForIteration()
  nameWithType: GeneticAI.CreateJobsForIteration()
  fullName: TMG.Estimation.GeneticAI.CreateJobsForIteration()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CreateJobsForIteration
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 67
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public List<Job> CreateJobsForIteration()
    return:
      type: System.Collections.Generic.List{TMG.Estimation.Job}
    content.vb: Public Function CreateJobsForIteration As List(Of Job)
  overload: TMG.Estimation.GeneticAI.CreateJobsForIteration*
  implements:
  - TMG.Estimation.IEstimationAI.CreateJobsForIteration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.IterationComplete
  commentId: M:TMG.Estimation.GeneticAI.IterationComplete
  id: IterationComplete
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: IterationComplete()
  nameWithType: GeneticAI.IterationComplete()
  fullName: TMG.Estimation.GeneticAI.IterationComplete()
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IterationComplete
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 290
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public void IterationComplete()
    content.vb: Public Sub IterationComplete
  overload: TMG.Estimation.GeneticAI.IterationComplete*
  implements:
  - TMG.Estimation.IEstimationAI.IterationComplete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.Name
  commentId: P:TMG.Estimation.GeneticAI.Name
  id: Name
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GeneticAI.Name
  fullName: TMG.Estimation.GeneticAI.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 295
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.Estimation.GeneticAI.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.Estimation.GeneticAI.Progress
  commentId: P:TMG.Estimation.GeneticAI.Progress
  id: Progress
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: GeneticAI.Progress
  fullName: TMG.Estimation.GeneticAI.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 297
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.Estimation.GeneticAI.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.GeneticAI.ProgressColour
  commentId: P:TMG.Estimation.GeneticAI.ProgressColour
  id: ProgressColour
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: GeneticAI.ProgressColour
  fullName: TMG.Estimation.GeneticAI.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 302
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.Estimation.GeneticAI.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.Estimation.GeneticAI.RuntimeValidation(System.String@)
  commentId: M:TMG.Estimation.GeneticAI.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.Estimation.GeneticAI
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: GeneticAI.RuntimeValidation(ref String)
  fullName: TMG.Estimation.GeneticAI.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Estimation/AI/GeneticAI.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/TMG.Estimation/AI/GeneticAI.cs
    startLine: 307
  assemblies:
  - TMG.Estimation
  namespace: TMG.Estimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.Estimation.GeneticAI.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: GeneticAI.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.Estimation.GeneticAI.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.Estimation
  commentId: N:TMG.Estimation
  name: TMG.Estimation
  nameWithType: TMG.Estimation
  fullName: TMG.Estimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Estimation.IEstimationAI
  commentId: T:TMG.Estimation.IEstimationAI
  parent: TMG.Estimation
  name: IEstimationAI
  nameWithType: IEstimationAI
  fullName: TMG.Estimation.IEstimationAI
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Estimation.IEstimationHost
  commentId: T:TMG.Estimation.IEstimationHost
  parent: TMG.Estimation
  name: IEstimationHost
  nameWithType: IEstimationHost
  fullName: TMG.Estimation.IEstimationHost
- uid: TMG.Estimation.GeneticAI.CreateJobsForIteration*
  commentId: Overload:TMG.Estimation.GeneticAI.CreateJobsForIteration
  name: CreateJobsForIteration
  nameWithType: GeneticAI.CreateJobsForIteration
  fullName: TMG.Estimation.GeneticAI.CreateJobsForIteration
- uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  commentId: M:TMG.Estimation.IEstimationAI.CreateJobsForIteration
  parent: TMG.Estimation.IEstimationAI
  name: CreateJobsForIteration()
  nameWithType: IEstimationAI.CreateJobsForIteration()
  fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration()
  spec.csharp:
  - uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
    name: CreateJobsForIteration
    nameWithType: IEstimationAI.CreateJobsForIteration
    fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.IEstimationAI.CreateJobsForIteration
    name: CreateJobsForIteration
    nameWithType: IEstimationAI.CreateJobsForIteration
    fullName: TMG.Estimation.IEstimationAI.CreateJobsForIteration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{TMG.Estimation.Job}
  commentId: T:System.Collections.Generic.List{TMG.Estimation.Job}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Job>
  nameWithType: List<Job>
  fullName: System.Collections.Generic.List<TMG.Estimation.Job>
  nameWithType.vb: List(Of Job)
  fullName.vb: System.Collections.Generic.List(Of TMG.Estimation.Job)
  name.vb: List(Of Job)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.Estimation.Job
    name: Job
    nameWithType: Job
    fullName: TMG.Estimation.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.Estimation.GeneticAI.IterationComplete*
  commentId: Overload:TMG.Estimation.GeneticAI.IterationComplete
  name: IterationComplete
  nameWithType: GeneticAI.IterationComplete
  fullName: TMG.Estimation.GeneticAI.IterationComplete
- uid: TMG.Estimation.IEstimationAI.IterationComplete
  commentId: M:TMG.Estimation.IEstimationAI.IterationComplete
  parent: TMG.Estimation.IEstimationAI
  name: IterationComplete()
  nameWithType: IEstimationAI.IterationComplete()
  fullName: TMG.Estimation.IEstimationAI.IterationComplete()
  spec.csharp:
  - uid: TMG.Estimation.IEstimationAI.IterationComplete
    name: IterationComplete
    nameWithType: IEstimationAI.IterationComplete
    fullName: TMG.Estimation.IEstimationAI.IterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Estimation.IEstimationAI.IterationComplete
    name: IterationComplete
    nameWithType: IEstimationAI.IterationComplete
    fullName: TMG.Estimation.IEstimationAI.IterationComplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.GeneticAI.Name*
  commentId: Overload:TMG.Estimation.GeneticAI.Name
  name: Name
  nameWithType: GeneticAI.Name
  fullName: TMG.Estimation.GeneticAI.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Estimation.GeneticAI.Progress*
  commentId: Overload:TMG.Estimation.GeneticAI.Progress
  name: Progress
  nameWithType: GeneticAI.Progress
  fullName: TMG.Estimation.GeneticAI.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.Estimation.GeneticAI.ProgressColour*
  commentId: Overload:TMG.Estimation.GeneticAI.ProgressColour
  name: ProgressColour
  nameWithType: GeneticAI.ProgressColour
  fullName: TMG.Estimation.GeneticAI.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Estimation.GeneticAI.RuntimeValidation*
  commentId: Overload:TMG.Estimation.GeneticAI.RuntimeValidation
  name: RuntimeValidation
  nameWithType: GeneticAI.RuntimeValidation
  fullName: TMG.Estimation.GeneticAI.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
