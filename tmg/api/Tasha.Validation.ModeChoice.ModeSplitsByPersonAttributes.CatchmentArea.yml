### YamlMime:ManagedReference
items:
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  commentId: T:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  id: ModeSplitsByPersonAttributes.CatchmentArea
  parent: Tasha.Validation.ModeChoice
  children:
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ContainedZones
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.EndTime
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete(Tasha.Common.ITashaHousehold)
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart(Tasha.Common.ITashaHousehold)
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Root
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(System.String@)
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.SaveTo
  - Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.StartTime
  langs:
  - csharp
  - vb
  name: ModeSplitsByPersonAttributes.CatchmentArea
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  type: Class
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CatchmentArea
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 58
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: 'public sealed class CatchmentArea : IModule'
    content.vb: >-
      Public NotInheritable Class CatchmentArea
          Implements IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ContainedZones
  commentId: F:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ContainedZones
  id: ContainedZones
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: ContainedZones
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.ContainedZones
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ContainedZones
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ContainedZones
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 64
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  summary: "\nThe catchment area for this analysis.\n"
  example: []
  syntax:
    content: >-
      [RunParameter("ContainedZones", "0-9999", typeof(RangeSet), "The zones within the catchment area.")]

      public RangeSet ContainedZones
    return:
      type: Datastructure.RangeSet
    content.vb: >-
      <RunParameter("ContainedZones", "0-9999", GetType(RangeSet), "The zones within the catchment area.")>

      Public ContainedZones As RangeSet
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: ContainedZones
    - type: System.String
      value: 0-9999
    - type: System.Type
      value: Datastructure.RangeSet
    - type: System.String
      value: The zones within the catchment area.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.StartTime
  commentId: F:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.StartTime
  id: StartTime
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.StartTime
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.StartTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartTime
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 67
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("Start Time", "0:00", typeof(Time), "The minimum start time for a trip's start time in order to be recorded.")]

      public Time StartTime
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("Start Time", "0:00", GetType(Time), "The minimum start time for a trip's start time in order to be recorded.")>

      Public StartTime As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Start Time
    - type: System.String
      value: 0:00
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: The minimum start time for a trip's start time in order to be recorded.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.EndTime
  commentId: F:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.EndTime
  id: EndTime
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.EndTime
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.EndTime
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EndTime
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 70
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [RunParameter("End Time", "30:00", typeof(Time), "The maximum start time for a trip's start time in order to be recorded.")]

      public Time EndTime
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("End Time", "30:00", GetType(Time), "The maximum start time for a trip's start time in order to be recorded.")>

      Public EndTime As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: End Time
    - type: System.String
      value: 30:00
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: The maximum start time for a trip's start time in order to be recorded.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Root
  commentId: F:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Root
  id: Root
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.Root
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Root
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 73
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public ModeSplitsByPersonAttributes Root
    return:
      type: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes
    content.vb: Public Root As ModeSplitsByPersonAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.SaveTo
  commentId: F:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.SaveTo
  id: SaveTo
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: SaveTo
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.SaveTo
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.SaveTo
  type: Field
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveTo
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 76
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The location to save the data to in csv format.")]

      public FileLocation SaveTo
    return:
      type: TMG.Input.FileLocation
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The location to save the data to in csv format.")>

      Public SaveTo As FileLocation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The location to save the data to in csv format.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name
  commentId: P:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name
  id: Name
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.Name
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 83
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress
  commentId: P:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress
  id: Progress
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.Progress
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 85
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public float Progress { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Progress As Single
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  commentId: P:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  id: ProgressColour
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  type: Property
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 87
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(System.String@)
  commentId: M:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(ref String)
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 89
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  commentId: M:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  id: HouseholdComplete(Tasha.Common.ITashaHousehold,System.Boolean)
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: HouseholdComplete(ITashaHousehold, Boolean)
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete(ITashaHousehold, Boolean)
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete(Tasha.Common.ITashaHousehold, System.Boolean)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdComplete
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 99
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdComplete(ITashaHousehold household, bool success)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    - id: success
      type: System.Boolean
    content.vb: Public Sub HouseholdComplete(household As ITashaHousehold, success As Boolean)
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart(Tasha.Common.ITashaHousehold)
  commentId: M:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart(Tasha.Common.ITashaHousehold)
  id: HouseholdStart(Tasha.Common.ITashaHousehold)
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: HouseholdStart(ITashaHousehold)
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart(ITashaHousehold)
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart(Tasha.Common.ITashaHousehold)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdStart
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 154
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdStart(ITashaHousehold household)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    content.vb: Public Sub HouseholdStart(household As ITashaHousehold)
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete(Tasha.Common.ITashaHousehold)
  commentId: M:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete(Tasha.Common.ITashaHousehold)
  id: HouseholdIterationComplete(Tasha.Common.ITashaHousehold)
  parent: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea
  langs:
  - csharp
  - vb
  name: HouseholdIterationComplete(ITashaHousehold)
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete(ITashaHousehold)
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete(Tasha.Common.ITashaHousehold)
  type: Method
  source:
    remote:
      path: Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: HouseholdIterationComplete
    path: ../../XTMF/Code/Tasha.Validation/ModeChoice/ModeSplitsByPersonAttributes.cs
    startLine: 170
  assemblies:
  - Tasha.Validation
  namespace: Tasha.Validation.ModeChoice
  syntax:
    content: public void HouseholdIterationComplete(ITashaHousehold household)
    parameters:
    - id: household
      type: Tasha.Common.ITashaHousehold
    content.vb: Public Sub HouseholdIterationComplete(household As ITashaHousehold)
  overload: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Tasha.Validation.ModeChoice
  commentId: N:Tasha.Validation.ModeChoice
  name: Tasha.Validation.ModeChoice
  nameWithType: Tasha.Validation.ModeChoice
  fullName: Tasha.Validation.ModeChoice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: Datastructure.RangeSet
  commentId: T:Datastructure.RangeSet
  parent: Datastructure
  name: RangeSet
  nameWithType: RangeSet
  fullName: Datastructure.RangeSet
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes
  commentId: T:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes
  parent: Tasha.Validation.ModeChoice
  name: ModeSplitsByPersonAttributes
  nameWithType: ModeSplitsByPersonAttributes
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes
- uid: TMG.Input.FileLocation
  commentId: T:TMG.Input.FileLocation
  parent: TMG.Input
  name: FileLocation
  nameWithType: FileLocation
  fullName: TMG.Input.FileLocation
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name
  name: Name
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.Name
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress
  name: Progress
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.Progress
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  name: ProgressColour
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete
  name: HouseholdComplete
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdComplete
- uid: Tasha.Common.ITashaHousehold
  commentId: T:Tasha.Common.ITashaHousehold
  parent: Tasha.Common
  name: ITashaHousehold
  nameWithType: ITashaHousehold
  fullName: Tasha.Common.ITashaHousehold
- uid: Tasha.Common
  commentId: N:Tasha.Common
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart
  name: HouseholdStart
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdStart
- uid: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete*
  commentId: Overload:Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete
  name: HouseholdIterationComplete
  nameWithType: ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete
  fullName: Tasha.Validation.ModeChoice.ModeSplitsByPersonAttributes.CatchmentArea.HouseholdIterationComplete
