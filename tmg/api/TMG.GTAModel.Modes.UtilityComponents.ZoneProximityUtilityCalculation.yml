### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  commentId: T:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  id: ZoneProximityUtilityCalculation
  parent: TMG.GTAModel.Modes.UtilityComponents
  children:
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Constant
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.MaxDistance
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Origin
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Root
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation(System.String@)
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.TargetedZones
  - TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName
  langs:
  - csharp
  - vb
  name: ZoneProximityUtilityCalculation
  nameWithType: ZoneProximityUtilityCalculation
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  type: Class
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ZoneProximityUtilityCalculation
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 28
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: 'public class ZoneProximityUtilityCalculation : IUtilityComponent, IModule'
    content.vb: >-
      Public Class ZoneProximityUtilityCalculation
          Implements IUtilityComponent, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Modes.IUtilityComponent
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Constant
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Constant
  id: Constant
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: ZoneProximityUtilityCalculation.Constant
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Constant
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Constant
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Constant", 0F, "The value to add when close enough to a given zone?")]

      public float Constant
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Constant", 0F, "The value to add when close enough to a given zone?")>

      Public Constant As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Constant
    - type: System.Single
      value: 0
    - type: System.String
      value: The value to add when close enough to a given zone?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.MaxDistance
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.MaxDistance
  id: MaxDistance
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: MaxDistance
  nameWithType: ZoneProximityUtilityCalculation.MaxDistance
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.MaxDistance
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaxDistance
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Max Distance", 1000F, "The maximum distance to be to add the constant, in metres.")]

      public float MaxDistance
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Max Distance", 1000F, "The maximum distance to be to add the constant, in metres.")>

      Public MaxDistance As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Max Distance
    - type: System.Single
      value: 1000
    - type: System.String
      value: The maximum distance to be to add the constant, in metres.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Origin
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Origin
  id: Origin
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: ZoneProximityUtilityCalculation.Origin
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Origin
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Origin
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Origin Based", true, "Should we test against the origin zone.  If false the destination will be used.")]

      public bool Origin
    return:
      type: System.Boolean
    content.vb: >-
      <RunParameter("Origin Based", True, "Should we test against the origin zone.  If false the destination will be used.")>

      Public Origin As Boolean
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Origin Based
    - type: System.Boolean
      value: true
    - type: System.String
      value: Should we test against the origin zone.  If false the destination will be used.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Root
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Root
  id: Root
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ZoneProximityUtilityCalculation.Root
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public ITravelDemandModel Root
    return:
      type: TMG.ITravelDemandModel
    content.vb: Public Root As ITravelDemandModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.TargetedZones
  commentId: F:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.TargetedZones
  id: TargetedZones
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: TargetedZones
  nameWithType: ZoneProximityUtilityCalculation.TargetedZones
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.TargetedZones
  type: Field
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TargetedZones
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Zone Numbers", "6000-6999", typeof(RangeSet), "The zone numbers that represent the locations we will test against.")]

      public RangeSet TargetedZones
    return:
      type: Datastructure.RangeSet
    content.vb: >-
      <RunParameter("Zone Numbers", "6000-6999", GetType(RangeSet), "The zone numbers that represent the locations we will test against.")>

      Public TargetedZones As RangeSet
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Zone Numbers
    - type: System.String
      value: 6000-6999
    - type: System.Type
      value: Datastructure.RangeSet
    - type: System.String
      value: The zone numbers that represent the locations we will test against.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name
  id: Name
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ZoneProximityUtilityCalculation.Name
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 48
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress
  id: Progress
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ZoneProximityUtilityCalculation.Progress
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ZoneProximityUtilityCalculation.ProgressColour
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 55
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName
  commentId: P:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName
  id: UtilityComponentName
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: UtilityComponentName
  nameWithType: ZoneProximityUtilityCalculation.UtilityComponentName
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName
  type: Property
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UtilityComponentName
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 60
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: >-
      [RunParameter("Component Name", "", "The name of this Utility Component.  This name should be unique for each mode.")]

      public string UtilityComponentName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Component Name", "", "The name of this Utility Component.  This name should be unique for each mode.")>

      Public Property UtilityComponentName As String
  overload: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName*
  implements:
  - TMG.Modes.IUtilityComponent.UtilityComponentName
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Component Name
    - type: System.String
      value: ''
    - type: System.String
      value: The name of this Utility Component.  This name should be unique for each mode.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  id: CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: CalculateV(IZone, IZone, Time)
  nameWithType: ZoneProximityUtilityCalculation.CalculateV(IZone, IZone, Time)
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CalculateV
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 63
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public float CalculateV(IZone origin, IZone destination, Time time)
    parameters:
    - id: origin
      type: TMG.IZone
    - id: destination
      type: TMG.IZone
    - id: time
      type: XTMF.Time
    return:
      type: System.Single
    content.vb: Public Function CalculateV(origin As IZone, destination As IZone, time As Time) As Single
  overload: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV*
  implements:
  - TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ZoneProximityUtilityCalculation.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/Modes/UtilityComponents/ZoneProximityUtilityCalculation.cs
    startLine: 80
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Modes.UtilityComponents
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ZoneProximityUtilityCalculation.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.Modes.UtilityComponents
  commentId: N:TMG.GTAModel.Modes.UtilityComponents
  name: TMG.GTAModel.Modes.UtilityComponents
  nameWithType: TMG.GTAModel.Modes.UtilityComponents
  fullName: TMG.GTAModel.Modes.UtilityComponents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Modes.IUtilityComponent
  commentId: T:TMG.Modes.IUtilityComponent
  parent: TMG.Modes
  name: IUtilityComponent
  nameWithType: IUtilityComponent
  fullName: TMG.Modes.IUtilityComponent
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Modes
  commentId: N:TMG.Modes
  name: TMG.Modes
  nameWithType: TMG.Modes
  fullName: TMG.Modes
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: Datastructure.RangeSet
  commentId: T:Datastructure.RangeSet
  parent: Datastructure
  name: RangeSet
  nameWithType: RangeSet
  fullName: Datastructure.RangeSet
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name
  name: Name
  nameWithType: ZoneProximityUtilityCalculation.Name
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress
  name: Progress
  nameWithType: ZoneProximityUtilityCalculation.Progress
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour
  name: ProgressColour
  nameWithType: ZoneProximityUtilityCalculation.ProgressColour
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName
  name: UtilityComponentName
  nameWithType: ZoneProximityUtilityCalculation.UtilityComponentName
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.UtilityComponentName
- uid: TMG.Modes.IUtilityComponent.UtilityComponentName
  commentId: P:TMG.Modes.IUtilityComponent.UtilityComponentName
  parent: TMG.Modes.IUtilityComponent
  name: UtilityComponentName
  nameWithType: IUtilityComponent.UtilityComponentName
  fullName: TMG.Modes.IUtilityComponent.UtilityComponentName
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV
  name: CalculateV
  nameWithType: ZoneProximityUtilityCalculation.CalculateV
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.CalculateV
- uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  commentId: M:TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
  parent: TMG.Modes.IUtilityComponent
  name: CalculateV(IZone, IZone, Time)
  nameWithType: IUtilityComponent.CalculateV(IZone, IZone, Time)
  fullName: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone, TMG.IZone, XTMF.Time)
  spec.csharp:
  - uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IUtilityComponent.CalculateV
    fullName: TMG.Modes.IUtilityComponent.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Modes.IUtilityComponent.CalculateV(TMG.IZone,TMG.IZone,XTMF.Time)
    name: CalculateV
    nameWithType: IUtilityComponent.CalculateV
    fullName: TMG.Modes.IUtilityComponent.CalculateV
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.Time
    name: Time
    nameWithType: Time
    fullName: XTMF.Time
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.IZone
  commentId: T:TMG.IZone
  parent: TMG
  name: IZone
  nameWithType: IZone
  fullName: TMG.IZone
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ZoneProximityUtilityCalculation.RuntimeValidation
  fullName: TMG.GTAModel.Modes.UtilityComponents.ZoneProximityUtilityCalculation.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
