### YamlMime:ManagedReference
items:
- uid: Tasha.Common.ForwardLookup
  commentId: T:Tasha.Common.ForwardLookup
  id: ForwardLookup
  parent: Tasha.Common
  children:
  - Tasha.Common.ForwardLookup.#ctor(XTMF.IConfiguration)
  - Tasha.Common.ForwardLookup.AcquireResource``1
  - Tasha.Common.ForwardLookup.CheckResourceType(System.Type)
  - Tasha.Common.ForwardLookup.CheckResourceType``1
  - Tasha.Common.ForwardLookup.GetDataSource
  - Tasha.Common.ForwardLookup.GetResourceType
  - Tasha.Common.ForwardLookup.Name
  - Tasha.Common.ForwardLookup.Progress
  - Tasha.Common.ForwardLookup.ProgressColour
  - Tasha.Common.ForwardLookup.ReleaseResource
  - Tasha.Common.ForwardLookup.ResourceName
  - Tasha.Common.ForwardLookup.ResourcePath
  - Tasha.Common.ForwardLookup.Root
  - Tasha.Common.ForwardLookup.RuntimeValidation(System.String@)
  langs:
  - csharp
  - vb
  name: ForwardLookup
  nameWithType: ForwardLookup
  fullName: Tasha.Common.ForwardLookup
  type: Class
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ForwardLookup
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 24
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: 'public class ForwardLookup : IResource, IModule'
    content.vb: >-
      Public Class ForwardLookup
          Implements IResource, IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IResource
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tasha.Common.ForwardLookup.Root
  commentId: F:Tasha.Common.ForwardLookup.Root
  id: Root
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ForwardLookup.Root
  fullName: Tasha.Common.ForwardLookup.Root
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 29
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public IResourceSource Root
    return:
      type: TMG.IResourceSource
    content.vb: Public Root As IResourceSource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.#ctor(XTMF.IConfiguration)
  commentId: M:Tasha.Common.ForwardLookup.#ctor(XTMF.IConfiguration)
  id: '#ctor(XTMF.IConfiguration)'
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: ForwardLookup(IConfiguration)
  nameWithType: ForwardLookup.ForwardLookup(IConfiguration)
  fullName: Tasha.Common.ForwardLookup.ForwardLookup(XTMF.IConfiguration)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 33
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public ForwardLookup(IConfiguration config)
    parameters:
    - id: config
      type: XTMF.IConfiguration
    content.vb: Public Sub New(config As IConfiguration)
  overload: Tasha.Common.ForwardLookup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.Name
  commentId: P:Tasha.Common.ForwardLookup.Name
  id: Name
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ForwardLookup.Name
  fullName: Tasha.Common.ForwardLookup.Name
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 40
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Tasha.Common.ForwardLookup.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.Progress
  commentId: P:Tasha.Common.ForwardLookup.Progress
  id: Progress
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ForwardLookup.Progress
  fullName: Tasha.Common.ForwardLookup.Progress
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 46
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: Tasha.Common.ForwardLookup.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Common.ForwardLookup.ProgressColour
  commentId: P:Tasha.Common.ForwardLookup.ProgressColour
  id: ProgressColour
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ForwardLookup.ProgressColour
  fullName: Tasha.Common.ForwardLookup.ProgressColour
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 51
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: Tasha.Common.ForwardLookup.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Tasha.Common.ForwardLookup.ResourcePath
  commentId: P:Tasha.Common.ForwardLookup.ResourcePath
  id: ResourcePath
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: ResourcePath
  nameWithType: ForwardLookup.ResourcePath
  fullName: Tasha.Common.ForwardLookup.ResourcePath
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ResourcePath
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 56
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: >-
      [RunParameter("Resource Path", "", "The . separated path to the resource to reference.")]

      public string ResourcePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Resource Path", "", "The . separated path to the resource to reference.")>

      Public Property ResourcePath As String
  overload: Tasha.Common.ForwardLookup.ResourcePath*
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Resource Path
    - type: System.String
      value: ''
    - type: System.String
      value: The . separated path to the resource to reference.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.ResourceName
  commentId: P:Tasha.Common.ForwardLookup.ResourceName
  id: ResourceName
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: ResourceName
  nameWithType: ForwardLookup.ResourceName
  fullName: Tasha.Common.ForwardLookup.ResourceName
  type: Property
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ResourceName
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 63
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: >-
      [RunParameter("Resource Name", "UniqueName", "The name of this resource.")]

      public string ResourceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Resource Name", "UniqueName", "The name of this resource.")>

      Public Property ResourceName As String
  overload: Tasha.Common.ForwardLookup.ResourceName*
  implements:
  - XTMF.IResource.ResourceName
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Resource Name
    - type: System.String
      value: UniqueName
    - type: System.String
      value: The name of this resource.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.AcquireResource``1
  commentId: M:Tasha.Common.ForwardLookup.AcquireResource``1
  id: AcquireResource``1
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: AcquireResource<T>()
  nameWithType: ForwardLookup.AcquireResource<T>()
  fullName: Tasha.Common.ForwardLookup.AcquireResource<T>()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AcquireResource
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 66
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public T AcquireResource<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function AcquireResource(Of T) As T
  overload: Tasha.Common.ForwardLookup.AcquireResource*
  implements:
  - XTMF.IResource.AcquireResource``1
  nameWithType.vb: ForwardLookup.AcquireResource(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Common.ForwardLookup.AcquireResource(Of T)()
  name.vb: AcquireResource(Of T)()
- uid: Tasha.Common.ForwardLookup.CheckResourceType(System.Type)
  commentId: M:Tasha.Common.ForwardLookup.CheckResourceType(System.Type)
  id: CheckResourceType(System.Type)
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: CheckResourceType(Type)
  nameWithType: ForwardLookup.CheckResourceType(Type)
  fullName: Tasha.Common.ForwardLookup.CheckResourceType(System.Type)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CheckResourceType
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 71
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public bool CheckResourceType(Type dataType)
    parameters:
    - id: dataType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function CheckResourceType(dataType As Type) As Boolean
  overload: Tasha.Common.ForwardLookup.CheckResourceType*
  implements:
  - XTMF.IResource.CheckResourceType(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.CheckResourceType``1
  commentId: M:Tasha.Common.ForwardLookup.CheckResourceType``1
  id: CheckResourceType``1
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: CheckResourceType<T>()
  nameWithType: ForwardLookup.CheckResourceType<T>()
  fullName: Tasha.Common.ForwardLookup.CheckResourceType<T>()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CheckResourceType
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 77
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public bool CheckResourceType<T>()
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function CheckResourceType(Of T) As Boolean
  overload: Tasha.Common.ForwardLookup.CheckResourceType*
  implements:
  - XTMF.IResource.CheckResourceType``1
  nameWithType.vb: ForwardLookup.CheckResourceType(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Common.ForwardLookup.CheckResourceType(Of T)()
  name.vb: CheckResourceType(Of T)()
- uid: Tasha.Common.ForwardLookup.GetResourceType
  commentId: M:Tasha.Common.ForwardLookup.GetResourceType
  id: GetResourceType
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: GetResourceType()
  nameWithType: ForwardLookup.GetResourceType()
  fullName: Tasha.Common.ForwardLookup.GetResourceType()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetResourceType
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 83
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public Type GetResourceType()
    return:
      type: System.Type
    content.vb: Public Function GetResourceType As Type
  overload: Tasha.Common.ForwardLookup.GetResourceType*
  implements:
  - XTMF.IResource.GetResourceType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.ReleaseResource
  commentId: M:Tasha.Common.ForwardLookup.ReleaseResource
  id: ReleaseResource
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: ReleaseResource()
  nameWithType: ForwardLookup.ReleaseResource()
  fullName: Tasha.Common.ForwardLookup.ReleaseResource()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReleaseResource
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 103
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public void ReleaseResource()
    content.vb: Public Sub ReleaseResource
  overload: Tasha.Common.ForwardLookup.ReleaseResource*
  implements:
  - XTMF.IResource.ReleaseResource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tasha.Common.ForwardLookup.RuntimeValidation(System.String@)
  commentId: M:Tasha.Common.ForwardLookup.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ForwardLookup.RuntimeValidation(ref String)
  fullName: Tasha.Common.ForwardLookup.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 108
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: Tasha.Common.ForwardLookup.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ForwardLookup.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Tasha.Common.ForwardLookup.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: Tasha.Common.ForwardLookup.GetDataSource
  commentId: M:Tasha.Common.ForwardLookup.GetDataSource
  id: GetDataSource
  parent: Tasha.Common.ForwardLookup
  langs:
  - csharp
  - vb
  name: GetDataSource()
  nameWithType: ForwardLookup.GetDataSource()
  fullName: Tasha.Common.ForwardLookup.GetDataSource()
  type: Method
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GetDataSource
    path: ../../XTMF/Code/TMG.Frameworks/Data/Resources/ForwardLookup.cs
    startLine: 132
  assemblies:
  - TMG.Frameworks
  namespace: Tasha.Common
  syntax:
    content: public IDataSource GetDataSource()
    return:
      type: XTMF.IDataSource
    content.vb: Public Function GetDataSource As IDataSource
  overload: Tasha.Common.ForwardLookup.GetDataSource*
  implements:
  - XTMF.IResource.GetDataSource
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Tasha.Common
  commentId: N:Tasha.Common
  name: Tasha.Common
  nameWithType: Tasha.Common
  fullName: Tasha.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IResource
  commentId: T:XTMF.IResource
  parent: XTMF
  name: IResource
  nameWithType: IResource
  fullName: XTMF.IResource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.IResourceSource
  commentId: T:TMG.IResourceSource
  parent: TMG
  name: IResourceSource
  nameWithType: IResourceSource
  fullName: TMG.IResourceSource
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: Tasha.Common.ForwardLookup.#ctor*
  commentId: Overload:Tasha.Common.ForwardLookup.#ctor
  name: ForwardLookup
  nameWithType: ForwardLookup.ForwardLookup
  fullName: Tasha.Common.ForwardLookup.ForwardLookup
- uid: XTMF.IConfiguration
  commentId: T:XTMF.IConfiguration
  parent: XTMF
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: XTMF.IConfiguration
- uid: Tasha.Common.ForwardLookup.Name*
  commentId: Overload:Tasha.Common.ForwardLookup.Name
  name: Name
  nameWithType: ForwardLookup.Name
  fullName: Tasha.Common.ForwardLookup.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Tasha.Common.ForwardLookup.Progress*
  commentId: Overload:Tasha.Common.ForwardLookup.Progress
  name: Progress
  nameWithType: ForwardLookup.Progress
  fullName: Tasha.Common.ForwardLookup.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Tasha.Common.ForwardLookup.ProgressColour*
  commentId: Overload:Tasha.Common.ForwardLookup.ProgressColour
  name: ProgressColour
  nameWithType: ForwardLookup.ProgressColour
  fullName: Tasha.Common.ForwardLookup.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ForwardLookup.ResourcePath*
  commentId: Overload:Tasha.Common.ForwardLookup.ResourcePath
  name: ResourcePath
  nameWithType: ForwardLookup.ResourcePath
  fullName: Tasha.Common.ForwardLookup.ResourcePath
- uid: Tasha.Common.ForwardLookup.ResourceName*
  commentId: Overload:Tasha.Common.ForwardLookup.ResourceName
  name: ResourceName
  nameWithType: ForwardLookup.ResourceName
  fullName: Tasha.Common.ForwardLookup.ResourceName
- uid: XTMF.IResource.ResourceName
  commentId: P:XTMF.IResource.ResourceName
  parent: XTMF.IResource
  name: ResourceName
  nameWithType: IResource.ResourceName
  fullName: XTMF.IResource.ResourceName
- uid: Tasha.Common.ForwardLookup.AcquireResource*
  commentId: Overload:Tasha.Common.ForwardLookup.AcquireResource
  name: AcquireResource
  nameWithType: ForwardLookup.AcquireResource
  fullName: Tasha.Common.ForwardLookup.AcquireResource
- uid: XTMF.IResource.AcquireResource``1
  commentId: M:XTMF.IResource.AcquireResource``1
  parent: XTMF.IResource
  name: AcquireResource<T>()
  nameWithType: IResource.AcquireResource<T>()
  fullName: XTMF.IResource.AcquireResource<T>()
  nameWithType.vb: IResource.AcquireResource(Of T)()
  fullName.vb: XTMF.IResource.AcquireResource(Of T)()
  name.vb: AcquireResource(Of T)()
  spec.csharp:
  - uid: XTMF.IResource.AcquireResource``1
    name: AcquireResource<T>
    nameWithType: IResource.AcquireResource<T>
    fullName: XTMF.IResource.AcquireResource<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IResource.AcquireResource``1
    name: AcquireResource(Of T)
    nameWithType: IResource.AcquireResource(Of T)
    fullName: XTMF.IResource.AcquireResource(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Tasha.Common.ForwardLookup.CheckResourceType*
  commentId: Overload:Tasha.Common.ForwardLookup.CheckResourceType
  name: CheckResourceType
  nameWithType: ForwardLookup.CheckResourceType
  fullName: Tasha.Common.ForwardLookup.CheckResourceType
- uid: XTMF.IResource.CheckResourceType(System.Type)
  commentId: M:XTMF.IResource.CheckResourceType(System.Type)
  parent: XTMF.IResource
  isExternal: true
  name: CheckResourceType(Type)
  nameWithType: IResource.CheckResourceType(Type)
  fullName: XTMF.IResource.CheckResourceType(System.Type)
  spec.csharp:
  - uid: XTMF.IResource.CheckResourceType(System.Type)
    name: CheckResourceType
    nameWithType: IResource.CheckResourceType
    fullName: XTMF.IResource.CheckResourceType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IResource.CheckResourceType(System.Type)
    name: CheckResourceType
    nameWithType: IResource.CheckResourceType
    fullName: XTMF.IResource.CheckResourceType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: XTMF.IResource.CheckResourceType``1
  commentId: M:XTMF.IResource.CheckResourceType``1
  parent: XTMF.IResource
  name: CheckResourceType<T>()
  nameWithType: IResource.CheckResourceType<T>()
  fullName: XTMF.IResource.CheckResourceType<T>()
  nameWithType.vb: IResource.CheckResourceType(Of T)()
  fullName.vb: XTMF.IResource.CheckResourceType(Of T)()
  name.vb: CheckResourceType(Of T)()
  spec.csharp:
  - uid: XTMF.IResource.CheckResourceType``1
    name: CheckResourceType<T>
    nameWithType: IResource.CheckResourceType<T>
    fullName: XTMF.IResource.CheckResourceType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IResource.CheckResourceType``1
    name: CheckResourceType(Of T)
    nameWithType: IResource.CheckResourceType(Of T)
    fullName: XTMF.IResource.CheckResourceType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ForwardLookup.GetResourceType*
  commentId: Overload:Tasha.Common.ForwardLookup.GetResourceType
  name: GetResourceType
  nameWithType: ForwardLookup.GetResourceType
  fullName: Tasha.Common.ForwardLookup.GetResourceType
- uid: XTMF.IResource.GetResourceType
  commentId: M:XTMF.IResource.GetResourceType
  parent: XTMF.IResource
  name: GetResourceType()
  nameWithType: IResource.GetResourceType()
  fullName: XTMF.IResource.GetResourceType()
  spec.csharp:
  - uid: XTMF.IResource.GetResourceType
    name: GetResourceType
    nameWithType: IResource.GetResourceType
    fullName: XTMF.IResource.GetResourceType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IResource.GetResourceType
    name: GetResourceType
    nameWithType: IResource.GetResourceType
    fullName: XTMF.IResource.GetResourceType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ForwardLookup.ReleaseResource*
  commentId: Overload:Tasha.Common.ForwardLookup.ReleaseResource
  name: ReleaseResource
  nameWithType: ForwardLookup.ReleaseResource
  fullName: Tasha.Common.ForwardLookup.ReleaseResource
- uid: XTMF.IResource.ReleaseResource
  commentId: M:XTMF.IResource.ReleaseResource
  parent: XTMF.IResource
  name: ReleaseResource()
  nameWithType: IResource.ReleaseResource()
  fullName: XTMF.IResource.ReleaseResource()
  spec.csharp:
  - uid: XTMF.IResource.ReleaseResource
    name: ReleaseResource
    nameWithType: IResource.ReleaseResource
    fullName: XTMF.IResource.ReleaseResource
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IResource.ReleaseResource
    name: ReleaseResource
    nameWithType: IResource.ReleaseResource
    fullName: XTMF.IResource.ReleaseResource
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ForwardLookup.RuntimeValidation*
  commentId: Overload:Tasha.Common.ForwardLookup.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ForwardLookup.RuntimeValidation
  fullName: Tasha.Common.ForwardLookup.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tasha.Common.ForwardLookup.GetDataSource*
  commentId: Overload:Tasha.Common.ForwardLookup.GetDataSource
  name: GetDataSource
  nameWithType: ForwardLookup.GetDataSource
  fullName: Tasha.Common.ForwardLookup.GetDataSource
- uid: XTMF.IResource.GetDataSource
  commentId: M:XTMF.IResource.GetDataSource
  parent: XTMF.IResource
  name: GetDataSource()
  nameWithType: IResource.GetDataSource()
  fullName: XTMF.IResource.GetDataSource()
  spec.csharp:
  - uid: XTMF.IResource.GetDataSource
    name: GetDataSource
    nameWithType: IResource.GetDataSource
    fullName: XTMF.IResource.GetDataSource
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IResource.GetDataSource
    name: GetDataSource
    nameWithType: IResource.GetDataSource
    fullName: XTMF.IResource.GetDataSource
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
