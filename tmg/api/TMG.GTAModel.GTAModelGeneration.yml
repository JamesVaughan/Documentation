### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.GTAModelGeneration
  commentId: T:TMG.GTAModel.GTAModelGeneration
  id: GTAModelGeneration
  parent: TMG.GTAModel
  children:
  - TMG.GTAModel.GTAModelGeneration.ComputeAttraction(System.Single[],TMG.IZone[],System.Int32)
  - TMG.GTAModel.GTAModelGeneration.ComputeProduction(System.Single[],System.Int32)
  - TMG.GTAModel.GTAModelGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  - TMG.GTAModel.GTAModelGeneration.Probability
  langs:
  - csharp
  - vb
  name: GTAModelGeneration
  nameWithType: GTAModelGeneration
  fullName: TMG.GTAModel.GTAModelGeneration
  type: Class
  source:
    remote:
      path: Code/GTAModel/Generation/GTAModelGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GTAModelGeneration
    path: ../../XTMF/Code/GTAModel/Generation/GTAModelGeneration.cs
    startLine: 28
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: 'public sealed class GTAModelGeneration : DemographicCategoryGeneration, IDemographicCategoryGeneration, IGeneration, IDemographicCategory, IModule'
    content.vb: >-
      Public NotInheritable Class GTAModelGeneration
          Inherits DemographicCategoryGeneration
          Implements IDemographicCategoryGeneration, IGeneration, IDemographicCategory, IModule
  inheritance:
  - System.Object
  - TMG.GTAModel.DemographicCategoryGeneration
  implements:
  - TMG.IDemographicCategoryGeneration
  - TMG.IGeneration
  - TMG.IDemographicCategory
  - XTMF.IModule
  inheritedMembers:
  - TMG.GTAModel.DemographicCategoryGeneration.AgeCategoryRange
  - TMG.GTAModel.DemographicCategoryGeneration.DemographicParameterSetIndex
  - TMG.GTAModel.DemographicCategoryGeneration.EmploymentStatusCategory
  - TMG.GTAModel.DemographicCategoryGeneration.ModeChoiceParameterSetIndex
  - TMG.GTAModel.DemographicCategoryGeneration.OccupationCategory
  - TMG.GTAModel.DemographicCategoryGeneration.Root
  - TMG.GTAModel.DemographicCategoryGeneration.Mobility
  - TMG.GTAModel.DemographicCategoryGeneration.Name
  - TMG.GTAModel.DemographicCategoryGeneration.Progress
  - TMG.GTAModel.DemographicCategoryGeneration.ProgressColour
  - TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
  - TMG.GTAModel.DemographicCategoryGeneration.IsContained(TMG.IPerson)
  - TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation(System.String@)
  - TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat(System.Int32,System.Int32@)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TMG.GTAModel.GTAModelGeneration.Probability
  commentId: F:TMG.GTAModel.GTAModelGeneration.Probability
  id: Probability
  parent: TMG.GTAModel.GTAModelGeneration
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: GTAModelGeneration.Probability
  fullName: TMG.GTAModel.GTAModelGeneration.Probability
  type: Field
  source:
    remote:
      path: Code/GTAModel/Generation/GTAModelGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Probability
    path: ../../XTMF/Code/GTAModel/Generation/GTAModelGeneration.cs
    startLine: 31
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Probability", 1F, "The probability for a person to make this trip.")]

      public float Probability
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Probability", 1F, "The probability for a person to make this trip.")>

      Public Probability As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Probability
    - type: System.Single
      value: 1
    - type: System.String
      value: The probability for a person to make this trip.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.GTAModelGeneration.ComputeAttraction(System.Single[],TMG.IZone[],System.Int32)
  commentId: M:TMG.GTAModel.GTAModelGeneration.ComputeAttraction(System.Single[],TMG.IZone[],System.Int32)
  id: ComputeAttraction(System.Single[],TMG.IZone[],System.Int32)
  parent: TMG.GTAModel.GTAModelGeneration
  langs:
  - csharp
  - vb
  name: ComputeAttraction(Single[], IZone[], Int32)
  nameWithType: GTAModelGeneration.ComputeAttraction(Single[], IZone[], Int32)
  fullName: TMG.GTAModel.GTAModelGeneration.ComputeAttraction(System.Single[], TMG.IZone[], System.Int32)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/GTAModelGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ComputeAttraction
    path: ../../XTMF/Code/GTAModel/Generation/GTAModelGeneration.cs
    startLine: 33
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public float ComputeAttraction(float[] flatAttraction, IZone[] zones, int numberOfZones)
    parameters:
    - id: flatAttraction
      type: System.Single[]
    - id: zones
      type: TMG.IZone[]
    - id: numberOfZones
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function ComputeAttraction(flatAttraction As Single(), zones As IZone(), numberOfZones As Integer) As Single
  overload: TMG.GTAModel.GTAModelGeneration.ComputeAttraction*
  nameWithType.vb: GTAModelGeneration.ComputeAttraction(Single(), IZone(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.GTAModelGeneration.ComputeAttraction(System.Single(), TMG.IZone(), System.Int32)
  name.vb: ComputeAttraction(Single(), IZone(), Int32)
- uid: TMG.GTAModel.GTAModelGeneration.ComputeProduction(System.Single[],System.Int32)
  commentId: M:TMG.GTAModel.GTAModelGeneration.ComputeProduction(System.Single[],System.Int32)
  id: ComputeProduction(System.Single[],System.Int32)
  parent: TMG.GTAModel.GTAModelGeneration
  langs:
  - csharp
  - vb
  name: ComputeProduction(Single[], Int32)
  nameWithType: GTAModelGeneration.ComputeProduction(Single[], Int32)
  fullName: TMG.GTAModel.GTAModelGeneration.ComputeProduction(System.Single[], System.Int32)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/GTAModelGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ComputeProduction
    path: ../../XTMF/Code/GTAModel/Generation/GTAModelGeneration.cs
    startLine: 64
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public float ComputeProduction(float[] flatProduction, int numberOfZones)
    parameters:
    - id: flatProduction
      type: System.Single[]
    - id: numberOfZones
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function ComputeProduction(flatProduction As Single(), numberOfZones As Integer) As Single
  overload: TMG.GTAModel.GTAModelGeneration.ComputeProduction*
  nameWithType.vb: GTAModelGeneration.ComputeProduction(Single(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.GTAModelGeneration.ComputeProduction(System.Single(), System.Int32)
  name.vb: ComputeProduction(Single(), Int32)
- uid: TMG.GTAModel.GTAModelGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  commentId: M:TMG.GTAModel.GTAModelGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  id: Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  parent: TMG.GTAModel.GTAModelGeneration
  langs:
  - csharp
  - vb
  name: Generate(SparseArray<Single>, SparseArray<Single>)
  nameWithType: GTAModelGeneration.Generate(SparseArray<Single>, SparseArray<Single>)
  fullName: TMG.GTAModel.GTAModelGeneration.Generate(Datastructure.SparseArray<System.Single>, Datastructure.SparseArray<System.Single>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Generation/GTAModelGeneration.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Generate
    path: ../../XTMF/Code/GTAModel/Generation/GTAModelGeneration.cs
    startLine: 88
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public override void Generate(SparseArray<float> production, SparseArray<float> attractions)
    parameters:
    - id: production
      type: Datastructure.SparseArray{System.Single}
    - id: attractions
      type: Datastructure.SparseArray{System.Single}
    content.vb: Public Overrides Sub Generate(production As SparseArray(Of Single), attractions As SparseArray(Of Single))
  overridden: TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  overload: TMG.GTAModel.GTAModelGeneration.Generate*
  nameWithType.vb: GTAModelGeneration.Generate(SparseArray(Of Single), SparseArray(Of Single))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TMG.GTAModel.GTAModelGeneration.Generate(Datastructure.SparseArray(Of System.Single), Datastructure.SparseArray(Of System.Single))
  name.vb: Generate(SparseArray(Of Single), SparseArray(Of Single))
references:
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.GTAModel.DemographicCategoryGeneration
  commentId: T:TMG.GTAModel.DemographicCategoryGeneration
  parent: TMG.GTAModel
  name: DemographicCategoryGeneration
  nameWithType: DemographicCategoryGeneration
  fullName: TMG.GTAModel.DemographicCategoryGeneration
- uid: TMG.IDemographicCategoryGeneration
  commentId: T:TMG.IDemographicCategoryGeneration
  parent: TMG
  name: IDemographicCategoryGeneration
  nameWithType: IDemographicCategoryGeneration
  fullName: TMG.IDemographicCategoryGeneration
- uid: TMG.IGeneration
  commentId: T:TMG.IGeneration
  parent: TMG
  name: IGeneration
  nameWithType: IGeneration
  fullName: TMG.IGeneration
- uid: TMG.IDemographicCategory
  commentId: T:TMG.IDemographicCategory
  parent: TMG
  name: IDemographicCategory
  nameWithType: IDemographicCategory
  fullName: TMG.IDemographicCategory
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: TMG.GTAModel.DemographicCategoryGeneration.AgeCategoryRange
  commentId: F:TMG.GTAModel.DemographicCategoryGeneration.AgeCategoryRange
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: AgeCategoryRange
  nameWithType: DemographicCategoryGeneration.AgeCategoryRange
  fullName: TMG.GTAModel.DemographicCategoryGeneration.AgeCategoryRange
- uid: TMG.GTAModel.DemographicCategoryGeneration.DemographicParameterSetIndex
  commentId: F:TMG.GTAModel.DemographicCategoryGeneration.DemographicParameterSetIndex
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: DemographicParameterSetIndex
  nameWithType: DemographicCategoryGeneration.DemographicParameterSetIndex
  fullName: TMG.GTAModel.DemographicCategoryGeneration.DemographicParameterSetIndex
- uid: TMG.GTAModel.DemographicCategoryGeneration.EmploymentStatusCategory
  commentId: F:TMG.GTAModel.DemographicCategoryGeneration.EmploymentStatusCategory
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: EmploymentStatusCategory
  nameWithType: DemographicCategoryGeneration.EmploymentStatusCategory
  fullName: TMG.GTAModel.DemographicCategoryGeneration.EmploymentStatusCategory
- uid: TMG.GTAModel.DemographicCategoryGeneration.ModeChoiceParameterSetIndex
  commentId: F:TMG.GTAModel.DemographicCategoryGeneration.ModeChoiceParameterSetIndex
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: ModeChoiceParameterSetIndex
  nameWithType: DemographicCategoryGeneration.ModeChoiceParameterSetIndex
  fullName: TMG.GTAModel.DemographicCategoryGeneration.ModeChoiceParameterSetIndex
- uid: TMG.GTAModel.DemographicCategoryGeneration.OccupationCategory
  commentId: F:TMG.GTAModel.DemographicCategoryGeneration.OccupationCategory
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: OccupationCategory
  nameWithType: DemographicCategoryGeneration.OccupationCategory
  fullName: TMG.GTAModel.DemographicCategoryGeneration.OccupationCategory
- uid: TMG.GTAModel.DemographicCategoryGeneration.Root
  commentId: F:TMG.GTAModel.DemographicCategoryGeneration.Root
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: Root
  nameWithType: DemographicCategoryGeneration.Root
  fullName: TMG.GTAModel.DemographicCategoryGeneration.Root
- uid: TMG.GTAModel.DemographicCategoryGeneration.Mobility
  commentId: P:TMG.GTAModel.DemographicCategoryGeneration.Mobility
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: Mobility
  nameWithType: DemographicCategoryGeneration.Mobility
  fullName: TMG.GTAModel.DemographicCategoryGeneration.Mobility
- uid: TMG.GTAModel.DemographicCategoryGeneration.Name
  commentId: P:TMG.GTAModel.DemographicCategoryGeneration.Name
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: Name
  nameWithType: DemographicCategoryGeneration.Name
  fullName: TMG.GTAModel.DemographicCategoryGeneration.Name
- uid: TMG.GTAModel.DemographicCategoryGeneration.Progress
  commentId: P:TMG.GTAModel.DemographicCategoryGeneration.Progress
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: Progress
  nameWithType: DemographicCategoryGeneration.Progress
  fullName: TMG.GTAModel.DemographicCategoryGeneration.Progress
- uid: TMG.GTAModel.DemographicCategoryGeneration.ProgressColour
  commentId: P:TMG.GTAModel.DemographicCategoryGeneration.ProgressColour
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: ProgressColour
  nameWithType: DemographicCategoryGeneration.ProgressColour
  fullName: TMG.GTAModel.DemographicCategoryGeneration.ProgressColour
- uid: TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
  commentId: M:TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: InitializeDemographicCategory()
  nameWithType: DemographicCategoryGeneration.InitializeDemographicCategory()
  fullName: TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory()
  spec.csharp:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
    name: InitializeDemographicCategory
    nameWithType: DemographicCategoryGeneration.InitializeDemographicCategory
    fullName: TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
    name: InitializeDemographicCategory
    nameWithType: DemographicCategoryGeneration.InitializeDemographicCategory
    fullName: TMG.GTAModel.DemographicCategoryGeneration.InitializeDemographicCategory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DemographicCategoryGeneration.IsContained(TMG.IPerson)
  commentId: M:TMG.GTAModel.DemographicCategoryGeneration.IsContained(TMG.IPerson)
  parent: TMG.GTAModel.DemographicCategoryGeneration
  name: IsContained(IPerson)
  nameWithType: DemographicCategoryGeneration.IsContained(IPerson)
  fullName: TMG.GTAModel.DemographicCategoryGeneration.IsContained(TMG.IPerson)
  spec.csharp:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.IsContained(TMG.IPerson)
    name: IsContained
    nameWithType: DemographicCategoryGeneration.IsContained
    fullName: TMG.GTAModel.DemographicCategoryGeneration.IsContained
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IPerson
    name: IPerson
    nameWithType: IPerson
    fullName: TMG.IPerson
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.IsContained(TMG.IPerson)
    name: IsContained
    nameWithType: DemographicCategoryGeneration.IsContained
    fullName: TMG.GTAModel.DemographicCategoryGeneration.IsContained
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.IPerson
    name: IPerson
    nameWithType: IPerson
    fullName: TMG.IPerson
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation(System.String@)
  parent: TMG.GTAModel.DemographicCategoryGeneration
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: DemographicCategoryGeneration.RuntimeValidation(String)
  fullName: TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation(System.String)
  spec.csharp:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: DemographicCategoryGeneration.RuntimeValidation
    fullName: TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: DemographicCategoryGeneration.RuntimeValidation
    fullName: TMG.GTAModel.DemographicCategoryGeneration.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat(System.Int32,System.Int32@)
  commentId: M:TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat(System.Int32,System.Int32@)
  parent: TMG.GTAModel.DemographicCategoryGeneration
  isExternal: true
  name: TryGetAgeCat(Int32, Int32)
  nameWithType: DemographicCategoryGeneration.TryGetAgeCat(Int32, Int32)
  fullName: TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat(System.Int32, System.Int32)
  spec.csharp:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat(System.Int32,System.Int32@)
    name: TryGetAgeCat
    nameWithType: DemographicCategoryGeneration.TryGetAgeCat
    fullName: TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat(System.Int32,System.Int32@)
    name: TryGetAgeCat
    nameWithType: DemographicCategoryGeneration.TryGetAgeCat
    fullName: TMG.GTAModel.DemographicCategoryGeneration.TryGetAgeCat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.GTAModelGeneration.ComputeAttraction*
  commentId: Overload:TMG.GTAModel.GTAModelGeneration.ComputeAttraction
  name: ComputeAttraction
  nameWithType: GTAModelGeneration.ComputeAttraction
  fullName: TMG.GTAModel.GTAModelGeneration.ComputeAttraction
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.IZone[]
  isExternal: true
  name: IZone[]
  nameWithType: IZone[]
  fullName: TMG.IZone[]
  nameWithType.vb: IZone()
  fullName.vb: TMG.IZone()
  name.vb: IZone()
  spec.csharp:
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.GTAModelGeneration.ComputeProduction*
  commentId: Overload:TMG.GTAModel.GTAModelGeneration.ComputeProduction
  name: ComputeProduction
  nameWithType: GTAModelGeneration.ComputeProduction
  fullName: TMG.GTAModel.GTAModelGeneration.ComputeProduction
- uid: TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  commentId: M:TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
  parent: TMG.GTAModel.DemographicCategoryGeneration
  isExternal: true
  name: Generate(SparseArray<Single>, SparseArray<Single>)
  nameWithType: DemographicCategoryGeneration.Generate(SparseArray<Single>, SparseArray<Single>)
  fullName: TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray<System.Single>, Datastructure.SparseArray<System.Single>)
  nameWithType.vb: DemographicCategoryGeneration.Generate(SparseArray(Of Single), SparseArray(Of Single))
  fullName.vb: TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray(Of System.Single), Datastructure.SparseArray(Of System.Single))
  name.vb: Generate(SparseArray(Of Single), SparseArray(Of Single))
  spec.csharp:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
    name: Generate
    nameWithType: DemographicCategoryGeneration.Generate
    fullName: TMG.GTAModel.DemographicCategoryGeneration.Generate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.GTAModel.DemographicCategoryGeneration.Generate(Datastructure.SparseArray{System.Single},Datastructure.SparseArray{System.Single})
    name: Generate
    nameWithType: DemographicCategoryGeneration.Generate
    fullName: TMG.GTAModel.DemographicCategoryGeneration.Generate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.GTAModelGeneration.Generate*
  commentId: Overload:TMG.GTAModel.GTAModelGeneration.Generate
  name: Generate
  nameWithType: GTAModelGeneration.Generate
  fullName: TMG.GTAModel.GTAModelGeneration.Generate
- uid: Datastructure.SparseArray{System.Single}
  commentId: T:Datastructure.SparseArray{System.Single}
  parent: Datastructure
  definition: Datastructure.SparseArray`1
  name: SparseArray<Single>
  nameWithType: SparseArray<Single>
  fullName: Datastructure.SparseArray<System.Single>
  nameWithType.vb: SparseArray(Of Single)
  fullName.vb: Datastructure.SparseArray(Of System.Single)
  name.vb: SparseArray(Of Single)
  spec.csharp:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseArray`1
  commentId: T:Datastructure.SparseArray`1
  name: SparseArray<T>
  nameWithType: SparseArray<T>
  fullName: Datastructure.SparseArray<T>
  nameWithType.vb: SparseArray(Of T)
  fullName.vb: Datastructure.SparseArray(Of T)
  name.vb: SparseArray(Of T)
  spec.csharp:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseArray`1
    name: SparseArray
    nameWithType: SparseArray
    fullName: Datastructure.SparseArray
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
