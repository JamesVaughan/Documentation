### YamlMime:ManagedReference
items:
- uid: XTMF.ProjectModelSystem
  commentId: T:XTMF.ProjectModelSystem
  id: ProjectModelSystem
  parent: XTMF
  children:
  - XTMF.ProjectModelSystem.#ctor
  - XTMF.ProjectModelSystem.Description
  - XTMF.ProjectModelSystem.GUID
  - XTMF.ProjectModelSystem.LinkedParameters
  - XTMF.ProjectModelSystem.Name
  - XTMF.ProjectModelSystem.RegionDisplays
  - XTMF.ProjectModelSystem.Root
  langs:
  - csharp
  - vb
  name: ProjectModelSystem
  nameWithType: ProjectModelSystem
  fullName: XTMF.ProjectModelSystem
  type: Class
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProjectModelSystem
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 27
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public class ProjectModelSystem
    content.vb: Public Class ProjectModelSystem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.ProjectModelSystem.Name
  commentId: P:XTMF.ProjectModelSystem.Name
  id: Name
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProjectModelSystem.Name
  fullName: XTMF.ProjectModelSystem.Name
  type: Property
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 29
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: XTMF.ProjectModelSystem.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectModelSystem.Root
  commentId: P:XTMF.ProjectModelSystem.Root
  id: Root
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ProjectModelSystem.Root
  fullName: XTMF.ProjectModelSystem.Root
  type: Property
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 30
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public IModelSystemStructure Root { get; }
    parameters: []
    return:
      type: XTMF.IModelSystemStructure
    content.vb: Public ReadOnly Property Root As IModelSystemStructure
  overload: XTMF.ProjectModelSystem.Root*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectModelSystem.LinkedParameters
  commentId: P:XTMF.ProjectModelSystem.LinkedParameters
  id: LinkedParameters
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: LinkedParameters
  nameWithType: ProjectModelSystem.LinkedParameters
  fullName: XTMF.ProjectModelSystem.LinkedParameters
  type: Property
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LinkedParameters
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 31
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<ILinkedParameter> LinkedParameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.ILinkedParameter}
    content.vb: Public ReadOnly Property LinkedParameters As List(Of ILinkedParameter)
  overload: XTMF.ProjectModelSystem.LinkedParameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectModelSystem.RegionDisplays
  commentId: P:XTMF.ProjectModelSystem.RegionDisplays
  id: RegionDisplays
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: RegionDisplays
  nameWithType: ProjectModelSystem.RegionDisplays
  fullName: XTMF.ProjectModelSystem.RegionDisplays
  type: Property
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RegionDisplays
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 32
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public List<IRegionDisplay> RegionDisplays { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
    content.vb: Public ReadOnly Property RegionDisplays As List(Of IRegionDisplay)
  overload: XTMF.ProjectModelSystem.RegionDisplays*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectModelSystem.Description
  commentId: P:XTMF.ProjectModelSystem.Description
  id: Description
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ProjectModelSystem.Description
  fullName: XTMF.ProjectModelSystem.Description
  type: Property
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Description
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 33
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: XTMF.ProjectModelSystem.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectModelSystem.GUID
  commentId: P:XTMF.ProjectModelSystem.GUID
  id: GUID
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: GUID
  nameWithType: ProjectModelSystem.GUID
  fullName: XTMF.ProjectModelSystem.GUID
  type: Property
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GUID
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 34
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public string GUID { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GUID As String
  overload: XTMF.ProjectModelSystem.GUID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: XTMF.ProjectModelSystem.#ctor
  commentId: M:XTMF.ProjectModelSystem.#ctor
  id: '#ctor'
  parent: XTMF.ProjectModelSystem
  langs:
  - csharp
  - vb
  name: ProjectModelSystem()
  nameWithType: ProjectModelSystem.ProjectModelSystem()
  fullName: XTMF.ProjectModelSystem.ProjectModelSystem()
  type: Constructor
  source:
    remote:
      path: Code/XTMF/ProjectModelSystem.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/XTMF/ProjectModelSystem.cs
    startLine: 36
  assemblies:
  - XTMF
  namespace: XTMF
  syntax:
    content: public ProjectModelSystem()
    content.vb: Public Sub New
  overload: XTMF.ProjectModelSystem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.ProjectModelSystem.Name*
  commentId: Overload:XTMF.ProjectModelSystem.Name
  name: Name
  nameWithType: ProjectModelSystem.Name
  fullName: XTMF.ProjectModelSystem.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: XTMF.ProjectModelSystem.Root*
  commentId: Overload:XTMF.ProjectModelSystem.Root
  name: Root
  nameWithType: ProjectModelSystem.Root
  fullName: XTMF.ProjectModelSystem.Root
- uid: XTMF.IModelSystemStructure
  commentId: T:XTMF.IModelSystemStructure
  parent: XTMF
  name: IModelSystemStructure
  nameWithType: IModelSystemStructure
  fullName: XTMF.IModelSystemStructure
- uid: XTMF.ProjectModelSystem.LinkedParameters*
  commentId: Overload:XTMF.ProjectModelSystem.LinkedParameters
  name: LinkedParameters
  nameWithType: ProjectModelSystem.LinkedParameters
  fullName: XTMF.ProjectModelSystem.LinkedParameters
- uid: System.Collections.Generic.List{XTMF.ILinkedParameter}
  commentId: T:System.Collections.Generic.List{XTMF.ILinkedParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ILinkedParameter>
  nameWithType: List<ILinkedParameter>
  fullName: System.Collections.Generic.List<XTMF.ILinkedParameter>
  nameWithType.vb: List(Of ILinkedParameter)
  fullName.vb: System.Collections.Generic.List(Of XTMF.ILinkedParameter)
  name.vb: List(Of ILinkedParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.ILinkedParameter
    name: ILinkedParameter
    nameWithType: ILinkedParameter
    fullName: XTMF.ILinkedParameter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: XTMF.ProjectModelSystem.RegionDisplays*
  commentId: Overload:XTMF.ProjectModelSystem.RegionDisplays
  name: RegionDisplays
  nameWithType: ProjectModelSystem.RegionDisplays
  fullName: XTMF.ProjectModelSystem.RegionDisplays
- uid: System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  commentId: T:System.Collections.Generic.List{XTMF.Interfaces.IRegionDisplay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRegionDisplay>
  nameWithType: List<IRegionDisplay>
  fullName: System.Collections.Generic.List<XTMF.Interfaces.IRegionDisplay>
  nameWithType.vb: List(Of IRegionDisplay)
  fullName.vb: System.Collections.Generic.List(Of XTMF.Interfaces.IRegionDisplay)
  name.vb: List(Of IRegionDisplay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: XTMF.Interfaces.IRegionDisplay
    name: IRegionDisplay
    nameWithType: IRegionDisplay
    fullName: XTMF.Interfaces.IRegionDisplay
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.ProjectModelSystem.Description*
  commentId: Overload:XTMF.ProjectModelSystem.Description
  name: Description
  nameWithType: ProjectModelSystem.Description
  fullName: XTMF.ProjectModelSystem.Description
- uid: XTMF.ProjectModelSystem.GUID*
  commentId: Overload:XTMF.ProjectModelSystem.GUID
  name: GUID
  nameWithType: ProjectModelSystem.GUID
  fullName: XTMF.ProjectModelSystem.GUID
- uid: XTMF.ProjectModelSystem.#ctor*
  commentId: Overload:XTMF.ProjectModelSystem.#ctor
  name: ProjectModelSystem
  nameWithType: ProjectModelSystem.ProjectModelSystem
  fullName: XTMF.ProjectModelSystem.ProjectModelSystem
