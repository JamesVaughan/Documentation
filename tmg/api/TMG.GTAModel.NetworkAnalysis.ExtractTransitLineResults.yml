### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  commentId: T:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  id: ExtractTransitLineResults
  parent: TMG.GTAModel.NetworkAnalysis
  children:
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.AggregationFile
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute(TMG.Emme.Controller)
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.LineFilterExpression
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.OutputFile
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Root
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation(System.String@)
  - TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ScenarioNumber
  langs:
  - csharp
  - vb
  name: ExtractTransitLineResults
  nameWithType: ExtractTransitLineResults
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  type: Class
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExtractTransitLineResults
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 28
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: 'public class ExtractTransitLineResults : IEmmeTool, IModule'
    content.vb: >-
      Public Class ExtractTransitLineResults
          Implements IEmmeTool, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Emme.IEmmeTool
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.AggregationFile
  commentId: F:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.AggregationFile
  id: AggregationFile
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: AggregationFile
  nameWithType: ExtractTransitLineResults.AggregationFile
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.AggregationFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AggregationFile
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 43
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: >-
      [RunParameter("Aggregation file", "", "Optional: A two-column table (.txt or .csv) matching Emme network transit line IDs to that of some external source (e.g., TTS data). The first column is assumed to be Emme transit line IDs. No header.")]

      public FileFromInputDirectory AggregationFile
    return:
      type: TMG.Input.FileFromInputDirectory
    content.vb: >-
      <RunParameter("Aggregation file", "", "Optional: A two-column table (.txt or .csv) matching Emme network transit line IDs to that of some external source (e.g., TTS data). The first column is assumed to be Emme transit line IDs. No header.")>

      Public AggregationFile As FileFromInputDirectory
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Aggregation file
    - type: System.String
      value: ''
    - type: System.String
      value: 'Optional: A two-column table (.txt or .csv) matching Emme network transit line IDs to that of some external source (e.g., TTS data). The first column is assumed to be Emme transit line IDs. No header.'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.LineFilterExpression
  commentId: F:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.LineFilterExpression
  id: LineFilterExpression
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: LineFilterExpression
  nameWithType: ExtractTransitLineResults.LineFilterExpression
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.LineFilterExpression
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LineFilterExpression
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: >-
      [RunParameter("Line filter expression", "all", "Optional: expression for filtering transit lines, in the format of the Emme Network Calculator tool.For example, an expression to export results for streetcar and bus lines would be 'mode=bs'. See Emme help for further details.")]

      public string LineFilterExpression
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Line filter expression", "all", "Optional: expression for filtering transit lines, in the format of the Emme Network Calculator tool.For example, an expression to export results for streetcar and bus lines would be 'mode=bs'. See Emme help for further details.")>

      Public LineFilterExpression As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Line filter expression
    - type: System.String
      value: all
    - type: System.String
      value: "Optional: expression for filtering transit lines, in the format of the Emme Network Calculator tool.For example, an expression to export results for streetcar and bus lines would be 'mode=bs'. See Emme help for further details."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.OutputFile
  commentId: F:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.OutputFile
  id: OutputFile
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: OutputFile
  nameWithType: ExtractTransitLineResults.OutputFile
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.OutputFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutputFile
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: >-
      [RunParameter("Output file", "*.csv", "The name & location of the file to save transit line data to. Output file format is Commented CSV.")]

      public FileFromOutputDirectory OutputFile
    return:
      type: TMG.Input.FileFromOutputDirectory
    content.vb: >-
      <RunParameter("Output file", "*.csv", "The name & location of the file to save transit line data to. Output file format is Commented CSV.")>

      Public OutputFile As FileFromOutputDirectory
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Output file
    - type: System.String
      value: '*.csv'
    - type: System.String
      value: The name & location of the file to save transit line data to. Output file format is Commented CSV.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Root
  commentId: F:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Root
  id: Root
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ExtractTransitLineResults.Root
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: public IModelSystemTemplate Root
    return:
      type: XTMF.IModelSystemTemplate
    content.vb: Public Root As IModelSystemTemplate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ScenarioNumber
  commentId: F:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ScenarioNumber
  id: ScenarioNumber
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: ScenarioNumber
  nameWithType: ExtractTransitLineResults.ScenarioNumber
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ScenarioNumber
  type: Field
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ScenarioNumber
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: >-
      [RunParameter("Scenario", 1, "The number of the Emme scenario with transit assignment results.")]

      public int ScenarioNumber
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Scenario", 1, "The number of the Emme scenario with transit assignment results.")>

      Public ScenarioNumber As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Scenario
    - type: System.Int32
      value: 1
    - type: System.String
      value: The number of the Emme scenario with transit assignment results.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name
  commentId: P:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name
  id: Name
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExtractTransitLineResults.Name
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 62
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress
  commentId: P:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress
  id: Progress
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: ExtractTransitLineResults.Progress
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 68
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour
  commentId: P:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: ExtractTransitLineResults.ProgressColour
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 74
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute(TMG.Emme.Controller)
  commentId: M:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute(TMG.Emme.Controller)
  id: Execute(TMG.Emme.Controller)
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: Execute(Controller)
  nameWithType: ExtractTransitLineResults.Execute(Controller)
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute(TMG.Emme.Controller)
  type: Method
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Execute
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 79
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: public bool Execute(Controller controller)
    parameters:
    - id: controller
      type: TMG.Emme.Controller
    return:
      type: System.Boolean
    content.vb: Public Function Execute(controller As Controller) As Boolean
  overload: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute*
  implements:
  - TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: ExtractTransitLineResults.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/NetworkAnalysis/ExtractTransitLineResults.cs
    startLine: 103
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.NetworkAnalysis
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: ExtractTransitLineResults.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.NetworkAnalysis
  commentId: N:TMG.GTAModel.NetworkAnalysis
  name: TMG.GTAModel.NetworkAnalysis
  nameWithType: TMG.GTAModel.NetworkAnalysis
  fullName: TMG.GTAModel.NetworkAnalysis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Emme.IEmmeTool
  commentId: T:TMG.Emme.IEmmeTool
  parent: TMG.Emme
  name: IEmmeTool
  nameWithType: IEmmeTool
  fullName: TMG.Emme.IEmmeTool
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Emme
  commentId: N:TMG.Emme
  name: TMG.Emme
  nameWithType: TMG.Emme
  fullName: TMG.Emme
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Input.FileFromInputDirectory
  commentId: T:TMG.Input.FileFromInputDirectory
  parent: TMG.Input
  name: FileFromInputDirectory
  nameWithType: FileFromInputDirectory
  fullName: TMG.Input.FileFromInputDirectory
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.Input.FileFromOutputDirectory
  commentId: T:TMG.Input.FileFromOutputDirectory
  parent: TMG.Input
  name: FileFromOutputDirectory
  nameWithType: FileFromOutputDirectory
  fullName: TMG.Input.FileFromOutputDirectory
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name*
  commentId: Overload:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name
  name: Name
  nameWithType: ExtractTransitLineResults.Name
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress*
  commentId: Overload:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress
  name: Progress
  nameWithType: ExtractTransitLineResults.Progress
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour*
  commentId: Overload:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour
  name: ProgressColour
  nameWithType: ExtractTransitLineResults.ProgressColour
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute*
  commentId: Overload:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute
  name: Execute
  nameWithType: ExtractTransitLineResults.Execute
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.Execute
- uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  commentId: M:TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  parent: TMG.Emme.IEmmeTool
  name: Execute(Controller)
  nameWithType: IEmmeTool.Execute(Controller)
  fullName: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
  spec.csharp:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Emme.IEmmeTool.Execute(TMG.Emme.Controller)
    name: Execute
    nameWithType: IEmmeTool.Execute
    fullName: TMG.Emme.IEmmeTool.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.Emme.Controller
    name: Controller
    nameWithType: Controller
    fullName: TMG.Emme.Controller
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Emme.Controller
  commentId: T:TMG.Emme.Controller
  parent: TMG.Emme
  name: Controller
  nameWithType: Controller
  fullName: TMG.Emme.Controller
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation
  name: RuntimeValidation
  nameWithType: ExtractTransitLineResults.RuntimeValidation
  fullName: TMG.GTAModel.NetworkAnalysis.ExtractTransitLineResults.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
