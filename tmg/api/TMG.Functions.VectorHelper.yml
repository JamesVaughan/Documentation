### YamlMime:ManagedReference
items:
- uid: TMG.Functions.VectorHelper
  commentId: T:TMG.Functions.VectorHelper
  id: VectorHelper
  parent: TMG.Functions
  children:
  - TMG.Functions.VectorHelper.Abs(System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.Abs(System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.AbsDiffAverage(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.AbsDiffMax(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Add(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.Add(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.Add(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.Add(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.AddHorizontal(System.Single[][],System.Single[][],System.Single[])
  - TMG.Functions.VectorHelper.AddVertical(System.Single[][],System.Single[][],System.Single[])
  - TMG.Functions.VectorHelper.AnyGreaterThan(System.Single[],System.Int32,System.Single,System.Int32)
  - TMG.Functions.VectorHelper.AreBoundedBy(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  - TMG.Functions.VectorHelper.ArithmeticGeometricMean(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - TMG.Functions.VectorHelper.Average(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Divide(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Divide(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.Divide(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.Exp(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single)
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single)
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  - TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  - TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.Log(System.Numerics.Vector{System.Single})
  - TMG.Functions.VectorHelper.Log(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32)
  - TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Multiply(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Multiply3AndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Negate(System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.Pow(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.Pow(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.Pow(System.Single[],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  - TMG.Functions.VectorHelper.ReplaceIfNaN(System.Single[],System.Single[],System.Single[])
  - TMG.Functions.VectorHelper.ReplaceIfNotFinite(System.Single[],System.Int32,System.Single,System.Int32)
  - TMG.Functions.VectorHelper.SelectIfFinite(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - TMG.Functions.VectorHelper.Set(System.Single[],System.Single)
  - TMG.Functions.VectorHelper.SquareDiff(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Subtract(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  - TMG.Functions.VectorHelper.Subtract(System.Single[],System.Single,System.Single[])
  - TMG.Functions.VectorHelper.Subtract(System.Single[],System.Single[],System.Single)
  - TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single,System.Single[][])
  - TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single[][],System.Single)
  - TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single[][],System.Single[][])
  - TMG.Functions.VectorHelper.Sum(System.Single[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: VectorHelper
  nameWithType: VectorHelper
  fullName: TMG.Functions.VectorHelper
  type: Class
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: VectorHelper
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 25
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nThis class is designed to help facilitate the use of the SIMD instructions available in\nmodern .Net.\n"
  example: []
  syntax:
    content: public static class VectorHelper
    content.vb: Public Module VectorHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TMG.Functions.VectorHelper.Sum(System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Sum(System.Single[],System.Int32,System.Int32)
  id: Sum(System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Sum(Single[], Int32, Int32)
  nameWithType: VectorHelper.Sum(Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Sum(System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Sum
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 61
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSum an array\n"
  example: []
  syntax:
    content: public static float Sum(float[] array, int startIndex, int length)
    parameters:
    - id: array
      type: System.Single[]
      description: The array to Sum
    - id: startIndex
      type: System.Int32
      description: The index to start summing from
    - id: length
      type: System.Int32
      description: The number of elements to add
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Sum(array As Single(), startIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.Sum*
  nameWithType.vb: VectorHelper.Sum(Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Sum(System.Single(), System.Int32, System.Int32)
  name.vb: Sum(Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.AbsDiffAverage(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.AbsDiffAverage(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: AbsDiffAverage(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: AbsDiffAverage(Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.AbsDiffAverage(Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.AbsDiffAverage(System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AbsDiffAverage
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 111
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nTake the average of the absolute values\n"
  example: []
  syntax:
    content: public static float AbsDiffAverage(float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: first
      type: System.Single[]
      description: The first vector
    - id: firstIndex
      type: System.Int32
      description: Where to start in the first vector
    - id: second
      type: System.Single[]
      description: The second vector
    - id: secondIndex
      type: System.Int32
      description: Where to start in the second vector
    - id: length
      type: System.Int32
      description: The number of elements to read
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function AbsDiffAverage(first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.AbsDiffAverage*
  nameWithType.vb: VectorHelper.AbsDiffAverage(Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.AbsDiffAverage(System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: AbsDiffAverage(Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.AbsDiffMax(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.AbsDiffMax(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: AbsDiffMax(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: AbsDiffMax(Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.AbsDiffMax(Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.AbsDiffMax(System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AbsDiffMax
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 171
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nGet the maximum difference from two arrays.\n"
  example: []
  syntax:
    content: public static float AbsDiffMax(float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: first
      type: System.Single[]
      description: The first vector
    - id: firstIndex
      type: System.Int32
      description: Where to start in the first vector
    - id: second
      type: System.Single[]
      description: The second vector
    - id: secondIndex
      type: System.Int32
      description: Where to start in the second vector
    - id: length
      type: System.Int32
      description: The number of elements to read
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function AbsDiffMax(first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.AbsDiffMax*
  nameWithType.vb: VectorHelper.AbsDiffMax(Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.AbsDiffMax(System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: AbsDiffMax(Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.SquareDiff(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.SquareDiff(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: SquareDiff(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: SquareDiff(Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.SquareDiff(Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.SquareDiff(System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SquareDiff
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 229
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSum the square differences of two arrays\n"
  example: []
  syntax:
    content: public static float SquareDiff(float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: first
      type: System.Single[]
      description: The array to Sum
    - id: firstIndex
      type: System.Int32
      description: The index to start summing from
    - id: second
      type: System.Single[]
      description: The array to Sum
    - id: secondIndex
      type: System.Int32
      description: The index to start summing from
    - id: length
      type: System.Int32
      description: The number of elements to add
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function SquareDiff(first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.SquareDiff*
  nameWithType.vb: VectorHelper.SquareDiff(Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.SquareDiff(System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: SquareDiff(Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Set(System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Set(System.Single[],System.Single)
  id: Set(System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Set(Single[], Single)
  nameWithType: VectorHelper.Set(Single[], Single)
  fullName: TMG.Functions.VectorHelper.Set(System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Set
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 290
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nAssign the given value to the whole array\n"
  example: []
  syntax:
    content: public static void Set(float[] dest, float value)
    parameters:
    - id: dest
      type: System.Single[]
      description: The array to set
    - id: value
      type: System.Single
      description: The value to set it to
    content.vb: Public Shared Sub Set(dest As Single(), value As Single)
  overload: TMG.Functions.VectorHelper.Set*
  nameWithType.vb: VectorHelper.Set(Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Set(System.Single(), System.Single)
  name.vb: Set(Single(), Single)
- uid: TMG.Functions.VectorHelper.Abs(System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.Abs(System.Single[],System.Single[])
  id: Abs(System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Abs(Single[], Single[])
  nameWithType: VectorHelper.Abs(Single[], Single[])
  fullName: TMG.Functions.VectorHelper.Abs(System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Abs
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 314
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Abs(float[] dest, float[] source)
    parameters:
    - id: dest
      type: System.Single[]
    - id: source
      type: System.Single[]
    content.vb: Public Shared Sub Abs(dest As Single(), source As Single())
  overload: TMG.Functions.VectorHelper.Abs*
  nameWithType.vb: VectorHelper.Abs(Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Abs(System.Single(), System.Single())
  name.vb: Abs(Single(), Single())
- uid: TMG.Functions.VectorHelper.Abs(System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Abs(System.Single[][],System.Single[][])
  id: Abs(System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Abs(Single[][], Single[][])
  nameWithType: VectorHelper.Abs(Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.Abs(System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Abs
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 340
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Abs(float[][] dest, float[][] source)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: source
      type: System.Single[][]
    content.vb: Public Shared Sub Abs(dest As Single()(), source As Single()())
  overload: TMG.Functions.VectorHelper.Abs*
  nameWithType.vb: VectorHelper.Abs(Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Abs(System.Single()(), System.Single()())
  name.vb: Abs(Single()(), Single()())
- uid: TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: MultiplyAndSum(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.MultiplyAndSum(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MultiplyAndSum
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 359
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nMultiply the two vectors and store the results in the destination.  Return a running sum.\n"
  example: []
  syntax:
    content: public static float MultiplyAndSum(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: Where to save the data
    - id: destIndex
      type: System.Int32
      description: What index to start at
    - id: first
      type: System.Single[]
      description: The first array to multiply
    - id: firstIndex
      type: System.Int32
      description: The index to start at
    - id: second
      type: System.Single[]
      description: The second array to multiply
    - id: secondIndex
      type: System.Int32
      description: The index to start at for the second array
    - id: length
      type: System.Int32
      description: The amount of data to multiply
    return:
      type: System.Single
      description: The sum of all of the multiplies
    content.vb: Public Shared Function MultiplyAndSum(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.MultiplyAndSum*
  nameWithType.vb: VectorHelper.MultiplyAndSum(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.MultiplyAndSum(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: MultiplyAndSum(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: MultiplyAndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: MultiplyAndSum(Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.MultiplyAndSum(Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.MultiplyAndSum(System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MultiplyAndSum
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 425
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nMultiply the two vectors without storing the results but returning the total.\n"
  example: []
  syntax:
    content: public static float MultiplyAndSum(float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: first
      type: System.Single[]
      description: The first array to multiply
    - id: firstIndex
      type: System.Int32
      description: The index to start at
    - id: second
      type: System.Single[]
      description: The second array to multiply
    - id: secondIndex
      type: System.Int32
      description: The index to start at for the second array
    - id: length
      type: System.Int32
      description: The amount of data to multiply
    return:
      type: System.Single
      description: The sum of all of the multiplies
    content.vb: Public Shared Function MultiplyAndSum(first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.MultiplyAndSum*
  nameWithType.vb: VectorHelper.MultiplyAndSum(Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.MultiplyAndSum(System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: MultiplyAndSum(Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Multiply3AndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Multiply3AndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Multiply3AndSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply3AndSum(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Multiply3AndSum(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Multiply3AndSum(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply3AndSum
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 491
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nMultiply the two vectors without storing the results but returning the total.\n"
  example: []
  syntax:
    content: public static float Multiply3AndSum(float[] first, int firstIndex, float[] second, int secondIndex, float[] third, int thirdIndex, int length)
    parameters:
    - id: first
      type: System.Single[]
      description: The first array to multiply
    - id: firstIndex
      type: System.Int32
      description: The index to start at
    - id: second
      type: System.Single[]
      description: The second array to multiply
    - id: secondIndex
      type: System.Int32
      description: The index to start at for the second array
    - id: third
      type: System.Single[]
      description: ''
    - id: thirdIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: The amount of data to multiply
    return:
      type: System.Single
      description: The sum of all of the multiplies
    content.vb: Public Shared Function Multiply3AndSum(first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, third As Single(), thirdIndex As Integer, length As Integer) As Single
  overload: TMG.Functions.VectorHelper.Multiply3AndSum*
  nameWithType.vb: VectorHelper.Multiply3AndSum(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply3AndSum(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Multiply3AndSum(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  id: Multiply2Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply2Scalar1AndColumnSum(Single[], Int32, Single[], Int32, Single[], Int32, Single, Single[], Int32, Int32)
  nameWithType: VectorHelper.Multiply2Scalar1AndColumnSum(Single[], Int32, Single[], Int32, Single[], Int32, Single, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Single, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply2Scalar1AndColumnSum
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 563
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nMultiply the two vectors and store the results in the destination.  Return a running sum.\n"
  example: []
  syntax:
    content: public static void Multiply2Scalar1AndColumnSum(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, float scalar, float[] columnSum, int columnIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: Where to save the data
    - id: destIndex
      type: System.Int32
      description: What index to start at
    - id: first
      type: System.Single[]
      description: The first array to multiply
    - id: firstIndex
      type: System.Int32
      description: The index to start at
    - id: second
      type: System.Single[]
      description: The second array to multiply
    - id: secondIndex
      type: System.Int32
      description: The index to start at for the second array
    - id: scalar
      type: System.Single
      description: ''
    - id: columnSum
      type: System.Single[]
      description: ''
    - id: columnIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: The amount of data to multiply
    content.vb: Public Shared Sub Multiply2Scalar1AndColumnSum(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, scalar As Single, columnSum As Single(), columnIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum*
  nameWithType.vb: VectorHelper.Multiply2Scalar1AndColumnSum(Single(), Int32, Single(), Int32, Single(), Int32, Single, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Single, System.Single(), System.Int32, System.Int32)
  name.vb: Multiply2Scalar1AndColumnSum(Single(), Int32, Single(), Int32, Single(), Int32, Single, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  id: Multiply3Scalar1AndColumnSum(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply3Scalar1AndColumnSum(Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Single, Single[], Int32, Int32)
  nameWithType: VectorHelper.Multiply3Scalar1AndColumnSum(Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Single, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Single, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply3Scalar1AndColumnSum
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 627
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nMultiply the two vectors and store the results in the destination.  Return a running sum.\n"
  example: []
  syntax:
    content: public static void Multiply3Scalar1AndColumnSum(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, float[] third, int thirdIndex, float scalar, float[] columnSum, int columnIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: Where to save the data
    - id: destIndex
      type: System.Int32
      description: What index to start at
    - id: first
      type: System.Single[]
      description: The first array to multiply
    - id: firstIndex
      type: System.Int32
      description: The index to start at
    - id: second
      type: System.Single[]
      description: The second array to multiply
    - id: secondIndex
      type: System.Int32
      description: The index to start at for the second array
    - id: third
      type: System.Single[]
      description: ''
    - id: thirdIndex
      type: System.Int32
      description: ''
    - id: scalar
      type: System.Single
      description: ''
    - id: columnSum
      type: System.Single[]
      description: ''
    - id: columnIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: The amount of data to multiply
    content.vb: Public Shared Sub Multiply3Scalar1AndColumnSum(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, third As Single(), thirdIndex As Integer, scalar As Single, columnSum As Single(), columnIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum*
  nameWithType.vb: VectorHelper.Multiply3Scalar1AndColumnSum(Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Single, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Single, System.Single(), System.Int32, System.Int32)
  name.vb: Multiply3Scalar1AndColumnSum(Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Single, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Single,System.Single[])
  id: FlagIfLessThanOrEqual(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThanOrEqual(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagIfLessThanOrEqual(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 677
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThanOrEqual(float[] dest, float lhs, float[] rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub FlagIfLessThanOrEqual(dest As Single(), lhs As Single, rhs As Single())
  overload: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfLessThanOrEqual(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single(), System.Single, System.Single())
  name.vb: FlagIfLessThanOrEqual(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Single[],System.Single)
  id: FlagIfLessThanOrEqual(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThanOrEqual(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagIfLessThanOrEqual(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 711
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThanOrEqual(float[] dest, float[] lhs, float rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub FlagIfLessThanOrEqual(dest As Single(), lhs As Single(), rhs As Single)
  overload: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfLessThanOrEqual(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single(), System.Single(), System.Single)
  name.vb: FlagIfLessThanOrEqual(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.Average(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Average(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Average(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Average(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Average(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Average(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Average
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 752
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Average(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: ''
    - id: destIndex
      type: System.Int32
      description: ''
    - id: first
      type: System.Single[]
      description: ''
    - id: firstIndex
      type: System.Int32
      description: ''
    - id: second
      type: System.Single[]
      description: ''
    - id: secondIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub Average(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Average*
  nameWithType.vb: VectorHelper.Average(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Average(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Average(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.SelectIfFinite(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:TMG.Functions.VectorHelper.SelectIfFinite(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: SelectIfFinite(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: SelectIfFinite(Vector<Single>, Vector<Single>)
  nameWithType: VectorHelper.SelectIfFinite(Vector<Single>, Vector<Single>)
  fullName: TMG.Functions.VectorHelper.SelectIfFinite(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SelectIfFinite
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 804
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nProduce a new vector selecting the original value if it is finite.  If it is not,\nselect the alternative value.\n"
  example: []
  syntax:
    content: public static Vector<float> SelectIfFinite(Vector<float> baseValues, Vector<float> alternateValues)
    parameters:
    - id: baseValues
      type: System.Numerics.Vector{System.Single}
      description: The values to test for their finite property
    - id: alternateValues
      type: System.Numerics.Vector{System.Single}
      description: The values to replace if the base value is not finite
    return:
      type: System.Numerics.Vector{System.Single}
      description: A new vector containing the proper mix of the base and alternate values
    content.vb: Public Shared Function SelectIfFinite(baseValues As Vector(Of Single), alternateValues As Vector(Of Single)) As Vector(Of Single)
  overload: TMG.Functions.VectorHelper.SelectIfFinite*
  nameWithType.vb: VectorHelper.SelectIfFinite(Vector(Of Single), Vector(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.SelectIfFinite(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: SelectIfFinite(Vector(Of Single), Vector(Of Single))
- uid: TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: SelectIfFiniteAndLessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: SelectIfFiniteAndLessThan(Vector<Single>, Vector<Single>, Vector<Single>)
  nameWithType: VectorHelper.SelectIfFiniteAndLessThan(Vector<Single>, Vector<Single>, Vector<Single>)
  fullName: TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SelectIfFiniteAndLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 822
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nProduce a new vector selecting the original value if it is finite.  If it is not,\nselect the alternative value.\n"
  example: []
  syntax:
    content: public static Vector<float> SelectIfFiniteAndLessThan(Vector<float> baseValues, Vector<float> alternateValues, Vector<float> minimumV)
    parameters:
    - id: baseValues
      type: System.Numerics.Vector{System.Single}
      description: The values to test for their finite property
    - id: alternateValues
      type: System.Numerics.Vector{System.Single}
      description: The values to replace if the base value is not finite
    - id: minimumV
      type: System.Numerics.Vector{System.Single}
      description: ''
    return:
      type: System.Numerics.Vector{System.Single}
      description: A new vector containing the proper mix of the base and alternate values
    content.vb: Public Shared Function SelectIfFiniteAndLessThan(baseValues As Vector(Of Single), alternateValues As Vector(Of Single), minimumV As Vector(Of Single)) As Vector(Of Single)
  overload: TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan*
  nameWithType.vb: VectorHelper.SelectIfFiniteAndLessThan(Vector(Of Single), Vector(Of Single), Vector(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: SelectIfFiniteAndLessThan(Vector(Of Single), Vector(Of Single), Vector(Of Single))
- uid: TMG.Functions.VectorHelper.ReplaceIfNaN(System.Single[],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.ReplaceIfNaN(System.Single[],System.Single[],System.Single[])
  id: ReplaceIfNaN(System.Single[],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: ReplaceIfNaN(Single[], Single[], Single[])
  nameWithType: VectorHelper.ReplaceIfNaN(Single[], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.ReplaceIfNaN(System.Single[], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReplaceIfNaN
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 839
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nAssign to an array replacing values if the base is NaN\n"
  example: []
  syntax:
    content: public static void ReplaceIfNaN(float[] dest, float[] baseValue, float[] replacementValue)
    parameters:
    - id: dest
      type: System.Single[]
      description: The place to store the results
    - id: baseValue
      type: System.Single[]
      description: The original values
    - id: replacementValue
      type: System.Single[]
      description: The values to replace them with if the base is NaN
    content.vb: Public Shared Sub ReplaceIfNaN(dest As Single(), baseValue As Single(), replacementValue As Single())
  overload: TMG.Functions.VectorHelper.ReplaceIfNaN*
  nameWithType.vb: VectorHelper.ReplaceIfNaN(Single(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.ReplaceIfNaN(System.Single(), System.Single(), System.Single())
  name.vb: ReplaceIfNaN(Single(), Single(), Single())
- uid: TMG.Functions.VectorHelper.ReplaceIfNotFinite(System.Single[],System.Int32,System.Single,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.ReplaceIfNotFinite(System.Single[],System.Int32,System.Single,System.Int32)
  id: ReplaceIfNotFinite(System.Single[],System.Int32,System.Single,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: ReplaceIfNotFinite(Single[], Int32, Single, Int32)
  nameWithType: VectorHelper.ReplaceIfNotFinite(Single[], Int32, Single, Int32)
  fullName: TMG.Functions.VectorHelper.ReplaceIfNotFinite(System.Single[], System.Int32, System.Single, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReplaceIfNotFinite
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 860
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\n\n"
  example: []
  syntax:
    content: public static void ReplaceIfNotFinite(float[] destination, int destIndex, float alternateValue, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: ''
    - id: destIndex
      type: System.Int32
      description: ''
    - id: alternateValue
      type: System.Single
      description: ''
    - id: length
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub ReplaceIfNotFinite(destination As Single(), destIndex As Integer, alternateValue As Single, length As Integer)
  overload: TMG.Functions.VectorHelper.ReplaceIfNotFinite*
  nameWithType.vb: VectorHelper.ReplaceIfNotFinite(Single(), Int32, Single, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.ReplaceIfNotFinite(System.Single(), System.Int32, System.Single, System.Int32)
  name.vb: ReplaceIfNotFinite(Single(), Int32, Single, Int32)
- uid: TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  id: ReplaceIfLessThanOrNotFinite(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: ReplaceIfLessThanOrNotFinite(Single[], Int32, Single, Single, Int32)
  nameWithType: VectorHelper.ReplaceIfLessThanOrNotFinite(Single[], Int32, Single, Single, Int32)
  fullName: TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite(System.Single[], System.Int32, System.Single, System.Single, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ReplaceIfLessThanOrNotFinite
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 909
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void ReplaceIfLessThanOrNotFinite(float[] destination, int destIndex, float alternateValue, float minimum, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: alternateValue
      type: System.Single
    - id: minimum
      type: System.Single
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub ReplaceIfLessThanOrNotFinite(destination As Single(), destIndex As Integer, alternateValue As Single, minimum As Single, length As Integer)
  overload: TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite*
  nameWithType.vb: VectorHelper.ReplaceIfLessThanOrNotFinite(Single(), Int32, Single, Single, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite(System.Single(), System.Int32, System.Single, System.Single, System.Int32)
  name.vb: ReplaceIfLessThanOrNotFinite(Single(), Int32, Single, Single, Int32)
- uid: TMG.Functions.VectorHelper.AnyGreaterThan(System.Single[],System.Int32,System.Single,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.AnyGreaterThan(System.Single[],System.Int32,System.Single,System.Int32)
  id: AnyGreaterThan(System.Single[],System.Int32,System.Single,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: AnyGreaterThan(Single[], Int32, Single, Int32)
  nameWithType: VectorHelper.AnyGreaterThan(Single[], Int32, Single, Int32)
  fullName: TMG.Functions.VectorHelper.AnyGreaterThan(System.Single[], System.Int32, System.Single, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AnyGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 958
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static bool AnyGreaterThan(float[] data, int dataIndex, float rhs, int length)
    parameters:
    - id: data
      type: System.Single[]
    - id: dataIndex
      type: System.Int32
    - id: rhs
      type: System.Single
    - id: length
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function AnyGreaterThan(data As Single(), dataIndex As Integer, rhs As Single, length As Integer) As Boolean
  overload: TMG.Functions.VectorHelper.AnyGreaterThan*
  nameWithType.vb: VectorHelper.AnyGreaterThan(Single(), Int32, Single, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.AnyGreaterThan(System.Single(), System.Int32, System.Single, System.Int32)
  name.vb: AnyGreaterThan(Single(), Int32, Single, Int32)
- uid: TMG.Functions.VectorHelper.AreBoundedBy(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.AreBoundedBy(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  id: AreBoundedBy(System.Single[],System.Int32,System.Single,System.Single,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: AreBoundedBy(Single[], Int32, Single, Single, Int32)
  nameWithType: VectorHelper.AreBoundedBy(Single[], Int32, Single, Single, Int32)
  fullName: TMG.Functions.VectorHelper.AreBoundedBy(System.Single[], System.Int32, System.Single, System.Single, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AreBoundedBy
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 1015
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static bool AreBoundedBy(float[] data, int dataIndex, float baseNumber, float maxVarriation, int length)
    parameters:
    - id: data
      type: System.Single[]
    - id: dataIndex
      type: System.Int32
    - id: baseNumber
      type: System.Single
    - id: maxVarriation
      type: System.Single
    - id: length
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreBoundedBy(data As Single(), dataIndex As Integer, baseNumber As Single, maxVarriation As Single, length As Integer) As Boolean
  overload: TMG.Functions.VectorHelper.AreBoundedBy*
  nameWithType.vb: VectorHelper.AreBoundedBy(Single(), Int32, Single, Single, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.AreBoundedBy(System.Single(), System.Int32, System.Single, System.Single, System.Int32)
  name.vb: AreBoundedBy(Single(), Int32, Single, Single, Int32)
- uid: TMG.Functions.VectorHelper.Exp(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Exp(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Exp(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Exp(Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Exp(Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Exp(System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Exp
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 1079
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nApplies exp(x) for each element in the array\n"
  remarks: The series is unrolled 30 times which approximates the .Net implementation from System.Math.Exp
  example: []
  syntax:
    content: public static void Exp(float[] destination, int destIndex, float[] x, int xIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: Where to save the results.
    - id: destIndex
      type: System.Int32
      description: An offset into the array to start saving.
    - id: x
      type: System.Single[]
      description: The vector to use as the exponent.
    - id: xIndex
      type: System.Int32
      description: The offset into the exponent vector to start from.
    - id: length
      type: System.Int32
      description: The number of elements to convert.
    content.vb: Public Shared Sub Exp(destination As Single(), destIndex As Integer, x As Single(), xIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Exp*
  nameWithType.vb: VectorHelper.Exp(Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Exp(System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Exp(Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.ArithmeticGeometricMean(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:TMG.Functions.VectorHelper.ArithmeticGeometricMean(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: ArithmeticGeometricMean(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: ArithmeticGeometricMean(Vector<Single>, Vector<Single>)
  nameWithType: VectorHelper.ArithmeticGeometricMean(Vector<Single>, Vector<Single>)
  fullName: TMG.Functions.VectorHelper.ArithmeticGeometricMean(System.Numerics.Vector<System.Single>, System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ArithmeticGeometricMean
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 1118
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nComputes the Arithmetic Geometric mean for the given values.\n"
  example: []
  syntax:
    content: public static Vector<float> ArithmeticGeometricMean(Vector<float> x, Vector<float> y)
    parameters:
    - id: x
      type: System.Numerics.Vector{System.Single}
      description: The first parameter vector. This parameter must be non negative!
    - id: y
      type: System.Numerics.Vector{System.Single}
      description: The second parameter vector. This parameter must be non negative!
    return:
      type: System.Numerics.Vector{System.Single}
      description: The AGM for each element in the parameters
    content.vb: Public Shared Function ArithmeticGeometricMean(x As Vector(Of Single), y As Vector(Of Single)) As Vector(Of Single)
  overload: TMG.Functions.VectorHelper.ArithmeticGeometricMean*
  nameWithType.vb: VectorHelper.ArithmeticGeometricMean(Vector(Of Single), Vector(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.ArithmeticGeometricMean(System.Numerics.Vector(Of System.Single), System.Numerics.Vector(Of System.Single))
  name.vb: ArithmeticGeometricMean(Vector(Of Single), Vector(Of Single))
- uid: TMG.Functions.VectorHelper.Log(System.Numerics.Vector{System.Single})
  commentId: M:TMG.Functions.VectorHelper.Log(System.Numerics.Vector{System.Single})
  id: Log(System.Numerics.Vector{System.Single})
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Log(Vector<Single>)
  nameWithType: VectorHelper.Log(Vector<Single>)
  fullName: TMG.Functions.VectorHelper.Log(System.Numerics.Vector<System.Single>)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Log
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 1141
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nComputes the natural logarithm for each element in x\n"
  example: []
  syntax:
    content: public static Vector<float> Log(Vector<float> x)
    parameters:
    - id: x
      type: System.Numerics.Vector{System.Single}
      description: The values to compute the logarithms of
    return:
      type: System.Numerics.Vector{System.Single}
      description: The vector of logarithms
    content.vb: Public Shared Function Log(x As Vector(Of Single)) As Vector(Of Single)
  overload: TMG.Functions.VectorHelper.Log*
  nameWithType.vb: VectorHelper.Log(Vector(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Log(System.Numerics.Vector(Of System.Single))
  name.vb: Log(Vector(Of Single))
- uid: TMG.Functions.VectorHelper.Log(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Log(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Log(System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Log(Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Log(Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Log(System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Log
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 1158
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nApplies log(x) for each element in the array and saves it into the destination.\n"
  example: []
  syntax:
    content: public static void Log(float[] destination, int destIndex, float[] x, int xIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: Where to save the results.
    - id: destIndex
      type: System.Int32
      description: An offset into the array to start saving.
    - id: x
      type: System.Single[]
      description: The vector to take the log of.
    - id: xIndex
      type: System.Int32
      description: The offset into the array to start from.
    - id: length
      type: System.Int32
      description: The number of elements to convert.
    content.vb: Public Shared Sub Log(destination As Single(), destIndex As Integer, x As Single(), xIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Log*
  nameWithType.vb: VectorHelper.Log(Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Log(System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Log(Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Negate(System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.Negate(System.Single[],System.Single[])
  id: Negate(System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Negate(Single[], Single[])
  nameWithType: VectorHelper.Negate(Single[], Single[])
  fullName: TMG.Functions.VectorHelper.Negate(System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Negate
    path: ../../XTMF/Code/TMG.Functions/VectorHelper.cs
    startLine: 1166
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Negate(float[] dest, float[] source)
    parameters:
    - id: dest
      type: System.Single[]
    - id: source
      type: System.Single[]
    content.vb: Public Shared Sub Negate(dest As Single(), source As Single())
  overload: TMG.Functions.VectorHelper.Negate*
  nameWithType.vb: VectorHelper.Negate(Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Negate(System.Single(), System.Single())
  name.vb: Negate(Single(), Single())
- uid: TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Single,System.Single[])
  id: FlagAnd(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagAnd(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagAnd(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagAnd(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagAnd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
    startLine: 30
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagAnd(float[] dest, float value, float[] data)
    parameters:
    - id: dest
      type: System.Single[]
    - id: value
      type: System.Single
    - id: data
      type: System.Single[]
    content.vb: Public Shared Sub FlagAnd(dest As Single(), value As Single, data As Single())
  overload: TMG.Functions.VectorHelper.FlagAnd*
  nameWithType.vb: VectorHelper.FlagAnd(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagAnd(System.Single(), System.Single, System.Single())
  name.vb: FlagAnd(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagAnd(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagAnd(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagAnd(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagAnd(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagAnd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
    startLine: 71
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagAnd(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagAnd(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagAnd*
  nameWithType.vb: VectorHelper.FlagAnd(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagAnd(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagAnd(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single[][],System.Single)
  id: FlagAnd(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagAnd(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagAnd(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagAnd(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagAnd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
    startLine: 117
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagAnd(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagAnd(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagAnd*
  nameWithType.vb: VectorHelper.FlagAnd(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagAnd(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagAnd(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagAnd(System.Single[],System.Single[],System.Single)
  id: FlagAnd(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagAnd(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagAnd(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagAnd(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagAnd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
    startLine: 128
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagAnd(float[] dest, float[] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[]
    - id: data
      type: System.Single[]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagAnd(dest As Single(), data As Single(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagAnd*
  nameWithType.vb: VectorHelper.FlagAnd(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagAnd(System.Single(), System.Single(), System.Single)
  name.vb: FlagAnd(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single[][],System.Single[][])
  id: FlagAnd(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagAnd(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagAnd(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagAnd(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagAnd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
    startLine: 136
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagAnd(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagAnd(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagAnd*
  nameWithType.vb: VectorHelper.FlagAnd(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagAnd(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagAnd(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagAnd(System.Single[][],System.Single,System.Single[][])
  id: FlagAnd(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagAnd(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagAnd(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagAnd(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagAnd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagAnd.cs
    startLine: 147
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagAnd(float[][] v1, float literalValue, float[][] v2)
    parameters:
    - id: v1
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: v2
      type: System.Single[][]
    content.vb: Public Shared Sub FlagAnd(v1 As Single()(), literalValue As Single, v2 As Single()())
  overload: TMG.Functions.VectorHelper.FlagAnd*
  nameWithType.vb: VectorHelper.FlagAnd(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagAnd(System.Single()(), System.Single, System.Single()())
  name.vb: FlagAnd(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Single,System.Single[])
  id: FlagIfGreaterThan(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThan(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagIfGreaterThan(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
    startLine: 29
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThan(float[] dest, float value, float[] data)
    parameters:
    - id: dest
      type: System.Single[]
    - id: value
      type: System.Single
    - id: data
      type: System.Single[]
    content.vb: Public Shared Sub FlagIfGreaterThan(dest As Single(), value As Single, data As Single())
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  nameWithType.vb: VectorHelper.FlagIfGreaterThan(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single(), System.Single, System.Single())
  name.vb: FlagIfGreaterThan(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagIfGreaterThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThan(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagIfGreaterThan(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
    startLine: 63
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThan(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagIfGreaterThan(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  nameWithType.vb: VectorHelper.FlagIfGreaterThan(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagIfGreaterThan(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single)
  id: FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThan(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagIfGreaterThan(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
    startLine: 110
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThan(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfGreaterThan(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  nameWithType.vb: VectorHelper.FlagIfGreaterThan(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagIfGreaterThan(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[],System.Single[],System.Single)
  id: FlagIfGreaterThan(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThan(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagIfGreaterThan(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
    startLine: 121
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThan(float[] dest, float[] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[]
    - id: data
      type: System.Single[]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfGreaterThan(dest As Single(), data As Single(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  nameWithType.vb: VectorHelper.FlagIfGreaterThan(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single(), System.Single(), System.Single)
  name.vb: FlagIfGreaterThan(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single[][])
  id: FlagIfGreaterThan(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThan(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagIfGreaterThan(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
    startLine: 129
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThan(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfGreaterThan(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  nameWithType.vb: VectorHelper.FlagIfGreaterThan(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagIfGreaterThan(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][],System.Single,System.Single[][])
  id: FlagIfGreaterThan(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThan(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagIfGreaterThan(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThan.cs
    startLine: 140
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThan(float[][] dest, float literalValue, float[][] data)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: data
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfGreaterThan(dest As Single()(), literalValue As Single, data As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  nameWithType.vb: VectorHelper.FlagIfGreaterThan(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThan(System.Single()(), System.Single, System.Single()())
  name.vb: FlagIfGreaterThan(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Single,System.Single[])
  id: FlagIfGreaterThanOrEqual(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThanOrEqual(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
    startLine: 29
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThanOrEqual(float[] dest, float value, float[] data)
    parameters:
    - id: dest
      type: System.Single[]
    - id: value
      type: System.Single
    - id: data
      type: System.Single[]
    content.vb: Public Shared Sub FlagIfGreaterThanOrEqual(dest As Single(), value As Single, data As Single())
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfGreaterThanOrEqual(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single(), System.Single, System.Single())
  name.vb: FlagIfGreaterThanOrEqual(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagIfGreaterThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThanOrEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
    startLine: 63
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThanOrEqual(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagIfGreaterThanOrEqual(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfGreaterThanOrEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagIfGreaterThanOrEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single)
  id: FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThanOrEqual(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
    startLine: 110
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThanOrEqual(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfGreaterThanOrEqual(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfGreaterThanOrEqual(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagIfGreaterThanOrEqual(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[],System.Single[],System.Single)
  id: FlagIfGreaterThanOrEqual(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThanOrEqual(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
    startLine: 121
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThanOrEqual(float[] dest, float[] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[]
    - id: data
      type: System.Single[]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfGreaterThanOrEqual(dest As Single(), data As Single(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfGreaterThanOrEqual(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single(), System.Single(), System.Single)
  name.vb: FlagIfGreaterThanOrEqual(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  id: FlagIfGreaterThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThanOrEqual(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
    startLine: 129
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThanOrEqual(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfGreaterThanOrEqual(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfGreaterThanOrEqual(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagIfGreaterThanOrEqual(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][],System.Single,System.Single[][])
  id: FlagIfGreaterThanOrEqual(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfGreaterThanOrEqual(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfGreaterThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfGreaterThanOrEqual.cs
    startLine: 140
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfGreaterThanOrEqual(float[][] dest, float literalValue, float[][] data)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: data
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfGreaterThanOrEqual(dest As Single()(), literalValue As Single, data As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfGreaterThanOrEqual(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual(System.Single()(), System.Single, System.Single()())
  name.vb: FlagIfGreaterThanOrEqual(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Add(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Add(System.Single[],System.Single[],System.Single)
  id: Add(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Add(Single[], Single[], Single)
  nameWithType: VectorHelper.Add(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.Add(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 27
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Add(float[] dest, float[] source, float scalar)
    parameters:
    - id: dest
      type: System.Single[]
    - id: source
      type: System.Single[]
    - id: scalar
      type: System.Single
    content.vb: Public Shared Sub Add(dest As Single(), source As Single(), scalar As Single)
  overload: TMG.Functions.VectorHelper.Add*
  nameWithType.vb: VectorHelper.Add(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Add(System.Single(), System.Single(), System.Single)
  name.vb: Add(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Add(Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Add(Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Add(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 55
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Add(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, float[] third, int thirdIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: first
      type: System.Single[]
    - id: firstIndex
      type: System.Int32
    - id: second
      type: System.Single[]
    - id: secondIndex
      type: System.Int32
    - id: third
      type: System.Single[]
    - id: thirdIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub Add(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, third As Single(), thirdIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Add*
  nameWithType.vb: VectorHelper.Add(Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Add(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Add(Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Add(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Add(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Add(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Add(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 109
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Add(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: ''
    - id: destIndex
      type: System.Int32
      description: ''
    - id: first
      type: System.Single[]
      description: ''
    - id: firstIndex
      type: System.Int32
      description: ''
    - id: second
      type: System.Single[]
      description: ''
    - id: secondIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub Add(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Add*
  nameWithType.vb: VectorHelper.Add(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Add(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Add(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Add(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Add(System.Single[][],System.Single,System.Single[][])
  id: Add(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Add(Single[][], Single, Single[][])
  nameWithType: VectorHelper.Add(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.Add(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 151
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Add(float[][] destination, float lhs, float[][] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Add(destination As Single()(), lhs As Single, rhs As Single()())
  overload: TMG.Functions.VectorHelper.Add*
  nameWithType.vb: VectorHelper.Add(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Add(System.Single()(), System.Single, System.Single()())
  name.vb: Add(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Add(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Add(System.Single[][],System.Single[][],System.Single)
  id: Add(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Add(Single[][], Single[][], Single)
  nameWithType: VectorHelper.Add(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.Add(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 187
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Add(float[][] destination, float[][] lhs, float rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Add(destination As Single()(), lhs As Single()(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Add*
  nameWithType.vb: VectorHelper.Add(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Add(System.Single()(), System.Single()(), System.Single)
  name.vb: Add(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.Add(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Add(System.Single[][],System.Single[][],System.Single[][])
  id: Add(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Add(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.Add(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.Add(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Add
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 223
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Add(float[][] destination, float[][] lhs, float[][] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Add(destination As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.Add*
  nameWithType.vb: VectorHelper.Add(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Add(System.Single()(), System.Single()(), System.Single()())
  name.vb: Add(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.AddHorizontal(System.Single[][],System.Single[][],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.AddHorizontal(System.Single[][],System.Single[][],System.Single[])
  id: AddHorizontal(System.Single[][],System.Single[][],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: AddHorizontal(Single[][], Single[][], Single[])
  nameWithType: VectorHelper.AddHorizontal(Single[][], Single[][], Single[])
  fullName: TMG.Functions.VectorHelper.AddHorizontal(System.Single[][], System.Single[][], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddHorizontal
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 260
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void AddHorizontal(float[][] destination, float[][] lhs, float[] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub AddHorizontal(destination As Single()(), lhs As Single()(), rhs As Single())
  overload: TMG.Functions.VectorHelper.AddHorizontal*
  nameWithType.vb: VectorHelper.AddHorizontal(Single()(), Single()(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.AddHorizontal(System.Single()(), System.Single()(), System.Single())
  name.vb: AddHorizontal(Single()(), Single()(), Single())
- uid: TMG.Functions.VectorHelper.AddVertical(System.Single[][],System.Single[][],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.AddVertical(System.Single[][],System.Single[][],System.Single[])
  id: AddVertical(System.Single[][],System.Single[][],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: AddVertical(Single[][], Single[][], Single[])
  nameWithType: VectorHelper.AddVertical(Single[][], Single[][], Single[])
  fullName: TMG.Functions.VectorHelper.AddVertical(System.Single[][], System.Single[][], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Add.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AddVertical
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Add.cs
    startLine: 268
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void AddVertical(float[][] destination, float[][] lhs, float[] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub AddVertical(destination As Single()(), lhs As Single()(), rhs As Single())
  overload: TMG.Functions.VectorHelper.AddVertical*
  nameWithType.vb: VectorHelper.AddVertical(Single()(), Single()(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.AddVertical(System.Single()(), System.Single()(), System.Single())
  name.vb: AddVertical(Single()(), Single()(), Single())
- uid: TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Single,System.Single[])
  id: FlagOr(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagOr(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagOr(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagOr(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagOr
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
    startLine: 30
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagOr(float[] dest, float value, float[] data)
    parameters:
    - id: dest
      type: System.Single[]
    - id: value
      type: System.Single
    - id: data
      type: System.Single[]
    content.vb: Public Shared Sub FlagOr(dest As Single(), value As Single, data As Single())
  overload: TMG.Functions.VectorHelper.FlagOr*
  nameWithType.vb: VectorHelper.FlagOr(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagOr(System.Single(), System.Single, System.Single())
  name.vb: FlagOr(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagOr(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagOr(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagOr(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagOr(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagOr
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
    startLine: 57
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagOr(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagOr(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagOr*
  nameWithType.vb: VectorHelper.FlagOr(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagOr(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagOr(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single[][],System.Single)
  id: FlagOr(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagOr(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagOr(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagOr(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagOr
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
    startLine: 103
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagOr(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagOr(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagOr*
  nameWithType.vb: VectorHelper.FlagOr(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagOr(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagOr(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagOr(System.Single[],System.Single[],System.Single)
  id: FlagOr(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagOr(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagOr(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagOr(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagOr
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
    startLine: 114
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagOr(float[] dest, float[] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[]
    - id: data
      type: System.Single[]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagOr(dest As Single(), data As Single(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagOr*
  nameWithType.vb: VectorHelper.FlagOr(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagOr(System.Single(), System.Single(), System.Single)
  name.vb: FlagOr(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single[][],System.Single[][])
  id: FlagOr(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagOr(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagOr(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagOr(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagOr
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
    startLine: 122
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagOr(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagOr(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagOr*
  nameWithType.vb: VectorHelper.FlagOr(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagOr(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagOr(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagOr(System.Single[][],System.Single,System.Single[][])
  id: FlagOr(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagOr(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagOr(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagOr(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagOr
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagOr.cs
    startLine: 133
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagOr(float[][] v1, float literalValue, float[][] v2)
    parameters:
    - id: v1
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: v2
      type: System.Single[][]
    content.vb: Public Shared Sub FlagOr(v1 As Single()(), literalValue As Single, v2 As Single()())
  overload: TMG.Functions.VectorHelper.FlagOr*
  nameWithType.vb: VectorHelper.FlagOr(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagOr(System.Single()(), System.Single, System.Single()())
  name.vb: FlagOr(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Divide(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Divide(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Divide(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Divide(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Divide(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Divide(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Divide.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Divide
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Divide.cs
    startLine: 27
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Divide(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: first
      type: System.Single[]
    - id: firstIndex
      type: System.Int32
    - id: second
      type: System.Single[]
    - id: secondIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub Divide(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Divide*
  nameWithType.vb: VectorHelper.Divide(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Divide(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Divide(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single,System.Single[][])
  id: Divide(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Divide(Single[][], Single, Single[][])
  nameWithType: VectorHelper.Divide(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.Divide(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Divide.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Divide
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Divide.cs
    startLine: 74
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Divide(float[][] destination, float numerator, float[][] denominator)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: numerator
      type: System.Single
    - id: denominator
      type: System.Single[][]
    content.vb: Public Shared Sub Divide(destination As Single()(), numerator As Single, denominator As Single()())
  overload: TMG.Functions.VectorHelper.Divide*
  nameWithType.vb: VectorHelper.Divide(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Divide(System.Single()(), System.Single, System.Single()())
  name.vb: Divide(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single[][],System.Single)
  id: Divide(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Divide(Single[][], Single[][], Single)
  nameWithType: VectorHelper.Divide(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.Divide(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Divide.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Divide
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Divide.cs
    startLine: 110
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Divide(float[][] destination, float[][] numerator, float denominator)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: numerator
      type: System.Single[][]
    - id: denominator
      type: System.Single
    content.vb: Public Shared Sub Divide(destination As Single()(), numerator As Single()(), denominator As Single)
  overload: TMG.Functions.VectorHelper.Divide*
  nameWithType.vb: VectorHelper.Divide(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Divide(System.Single()(), System.Single()(), System.Single)
  name.vb: Divide(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Divide(System.Single[][],System.Single[][],System.Single[][])
  id: Divide(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Divide(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.Divide(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.Divide(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Divide.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Divide
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Divide.cs
    startLine: 146
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Divide(float[][] destination, float[][] numerator, float[][] denominator)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: numerator
      type: System.Single[][]
    - id: denominator
      type: System.Single[][]
    content.vb: Public Shared Sub Divide(destination As Single()(), numerator As Single()(), denominator As Single()())
  overload: TMG.Functions.VectorHelper.Divide*
  nameWithType.vb: VectorHelper.Divide(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Divide(System.Single()(), System.Single()(), System.Single()())
  name.vb: Divide(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.Divide(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Divide(System.Single[],System.Single[],System.Single)
  id: Divide(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Divide(Single[], Single[], Single)
  nameWithType: VectorHelper.Divide(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.Divide(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Divide.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Divide
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Divide.cs
    startLine: 183
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Divide(float[] dest, float[] lhs, float rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Divide(dest As Single(), lhs As Single(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Divide*
  nameWithType.vb: VectorHelper.Divide(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Divide(System.Single(), System.Single(), System.Single)
  name.vb: Divide(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.Divide(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.Divide(System.Single[],System.Single,System.Single[])
  id: Divide(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Divide(Single[], Single, Single[])
  nameWithType: VectorHelper.Divide(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.Divide(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Divide.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Divide
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Divide.cs
    startLine: 211
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Divide(float[] dest, float lhs, float[] rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub Divide(dest As Single(), lhs As Single, rhs As Single())
  overload: TMG.Functions.VectorHelper.Divide*
  nameWithType.vb: VectorHelper.Divide(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Divide(System.Single(), System.Single, System.Single())
  name.vb: Divide(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Single,System.Single[])
  id: FlagIfEqual(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfEqual(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagIfEqual(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
    startLine: 33
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfEqual(float[] dest, float value, float[] data)
    parameters:
    - id: dest
      type: System.Single[]
      description: ''
    - id: value
      type: System.Single
      description: ''
    - id: data
      type: System.Single[]
      description: ''
    content.vb: Public Shared Sub FlagIfEqual(dest As Single(), value As Single, data As Single())
  overload: TMG.Functions.VectorHelper.FlagIfEqual*
  nameWithType.vb: VectorHelper.FlagIfEqual(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfEqual(System.Single(), System.Single, System.Single())
  name.vb: FlagIfEqual(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagIfEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagIfEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
    startLine: 67
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfEqual(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagIfEqual(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagIfEqual*
  nameWithType.vb: VectorHelper.FlagIfEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfEqual(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagIfEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single[][],System.Single)
  id: FlagIfEqual(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfEqual(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagIfEqual(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
    startLine: 114
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfEqual(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfEqual(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfEqual*
  nameWithType.vb: VectorHelper.FlagIfEqual(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfEqual(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagIfEqual(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfEqual(System.Single[],System.Single[],System.Single)
  id: FlagIfEqual(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfEqual(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagIfEqual(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
    startLine: 125
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfEqual(float[] dest, float[] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[]
    - id: data
      type: System.Single[]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfEqual(dest As Single(), data As Single(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfEqual*
  nameWithType.vb: VectorHelper.FlagIfEqual(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfEqual(System.Single(), System.Single(), System.Single)
  name.vb: FlagIfEqual(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single[][],System.Single[][])
  id: FlagIfEqual(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfEqual(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagIfEqual(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
    startLine: 133
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfEqual(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfEqual(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfEqual*
  nameWithType.vb: VectorHelper.FlagIfEqual(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfEqual(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagIfEqual(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][],System.Single,System.Single[][])
  id: FlagIfEqual(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfEqual(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagIfEqual(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfEqual(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfEqual.cs
    startLine: 144
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfEqual(float[][] dest, float literalValue, float[][] data)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: data
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfEqual(dest As Single()(), literalValue As Single, data As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfEqual*
  nameWithType.vb: VectorHelper.FlagIfEqual(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfEqual(System.Single()(), System.Single, System.Single()())
  name.vb: FlagIfEqual(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Single,System.Single[])
  id: FlagIfLessThan(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThan(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagIfLessThan(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
    startLine: 29
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThan(float[] dest, float lhs, float[] rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub FlagIfLessThan(dest As Single(), lhs As Single, rhs As Single())
  overload: TMG.Functions.VectorHelper.FlagIfLessThan*
  nameWithType.vb: VectorHelper.FlagIfLessThan(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single(), System.Single, System.Single())
  name.vb: FlagIfLessThan(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Single[],System.Single)
  id: FlagIfLessThan(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThan(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagIfLessThan(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
    startLine: 60
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void FlagIfLessThan(float[] dest, float[] lhs, float rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub FlagIfLessThan(dest As Single(), lhs As Single(), rhs As Single)
  overload: TMG.Functions.VectorHelper.FlagIfLessThan*
  nameWithType.vb: VectorHelper.FlagIfLessThan(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single(), System.Single(), System.Single)
  name.vb: FlagIfLessThan(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagIfLessThan(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThan(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagIfLessThan(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
    startLine: 94
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThan(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagIfLessThan(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagIfLessThan*
  nameWithType.vb: VectorHelper.FlagIfLessThan(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagIfLessThan(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single[][],System.Single)
  id: FlagIfLessThan(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThan(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagIfLessThan(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
    startLine: 141
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThan(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfLessThan(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfLessThan*
  nameWithType.vb: VectorHelper.FlagIfLessThan(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagIfLessThan(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single[][],System.Single[][])
  id: FlagIfLessThan(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThan(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagIfLessThan(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
    startLine: 152
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThan(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfLessThan(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfLessThan*
  nameWithType.vb: VectorHelper.FlagIfLessThan(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagIfLessThan(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][],System.Single,System.Single[][])
  id: FlagIfLessThan(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThan(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagIfLessThan(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThan
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThan.cs
    startLine: 163
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThan(float[][] v1, float literalValue, float[][] v2)
    parameters:
    - id: v1
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: v2
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfLessThan(v1 As Single()(), literalValue As Single, v2 As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfLessThan*
  nameWithType.vb: VectorHelper.FlagIfLessThan(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThan(System.Single()(), System.Single, System.Single()())
  name.vb: FlagIfLessThan(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagIfLessThanOrEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThanOrEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagIfLessThanOrEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
    startLine: 29
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThanOrEqual(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagIfLessThanOrEqual(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfLessThanOrEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagIfLessThanOrEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single)
  id: FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThanOrEqual(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagIfLessThanOrEqual(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
    startLine: 76
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThanOrEqual(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfLessThanOrEqual(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfLessThanOrEqual(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagIfLessThanOrEqual(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  id: FlagIfLessThanOrEqual(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThanOrEqual(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagIfLessThanOrEqual(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
    startLine: 87
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThanOrEqual(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfLessThanOrEqual(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfLessThanOrEqual(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagIfLessThanOrEqual(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][],System.Single,System.Single[][])
  id: FlagIfLessThanOrEqual(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfLessThanOrEqual(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagIfLessThanOrEqual(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfLessThanOrEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfLessThanOrEqual.cs
    startLine: 98
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfLessThanOrEqual(float[][] dest, float literalValue, float[][] data)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: data
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfLessThanOrEqual(dest As Single()(), literalValue As Single, data As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  nameWithType.vb: VectorHelper.FlagIfLessThanOrEqual(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual(System.Single()(), System.Single, System.Single()())
  name.vb: FlagIfLessThanOrEqual(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Single,System.Single[])
  id: FlagIfNotEqual(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfNotEqual(Single[], Single, Single[])
  nameWithType: VectorHelper.FlagIfNotEqual(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfNotEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
    startLine: 30
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfNotEqual(float[] dest, float value, float[] data)
    parameters:
    - id: dest
      type: System.Single[]
    - id: value
      type: System.Single
    - id: data
      type: System.Single[]
    content.vb: Public Shared Sub FlagIfNotEqual(dest As Single(), value As Single, data As Single())
  overload: TMG.Functions.VectorHelper.FlagIfNotEqual*
  nameWithType.vb: VectorHelper.FlagIfNotEqual(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single(), System.Single, System.Single())
  name.vb: FlagIfNotEqual(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: FlagIfNotEqual(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfNotEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.FlagIfNotEqual(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfNotEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
    startLine: 64
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfNotEqual(float[] destination, int destIndex, float[] lhs, int lhsIndex, float[] rhs, int rhsIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: lhs
      type: System.Single[]
    - id: lhsIndex
      type: System.Int32
    - id: rhs
      type: System.Single[]
    - id: rhsIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub FlagIfNotEqual(destination As Single(), destIndex As Integer, lhs As Single(), lhsIndex As Integer, rhs As Single(), rhsIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.FlagIfNotEqual*
  nameWithType.vb: VectorHelper.FlagIfNotEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: FlagIfNotEqual(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single[][],System.Single)
  id: FlagIfNotEqual(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfNotEqual(Single[][], Single[][], Single)
  nameWithType: VectorHelper.FlagIfNotEqual(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfNotEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
    startLine: 111
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfNotEqual(float[][] dest, float[][] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: data
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfNotEqual(dest As Single()(), data As Single()(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfNotEqual*
  nameWithType.vb: VectorHelper.FlagIfNotEqual(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single()(), System.Single()(), System.Single)
  name.vb: FlagIfNotEqual(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[],System.Single[],System.Single)
  id: FlagIfNotEqual(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfNotEqual(Single[], Single[], Single)
  nameWithType: VectorHelper.FlagIfNotEqual(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfNotEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
    startLine: 122
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfNotEqual(float[] dest, float[] data, float literalValue)
    parameters:
    - id: dest
      type: System.Single[]
    - id: data
      type: System.Single[]
    - id: literalValue
      type: System.Single
    content.vb: Public Shared Sub FlagIfNotEqual(dest As Single(), data As Single(), literalValue As Single)
  overload: TMG.Functions.VectorHelper.FlagIfNotEqual*
  nameWithType.vb: VectorHelper.FlagIfNotEqual(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single(), System.Single(), System.Single)
  name.vb: FlagIfNotEqual(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single[][],System.Single[][])
  id: FlagIfNotEqual(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfNotEqual(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FlagIfNotEqual(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfNotEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
    startLine: 130
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfNotEqual(float[][] dest, float[][] lhs, float[][] rhs)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfNotEqual(dest As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfNotEqual*
  nameWithType.vb: VectorHelper.FlagIfNotEqual(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single()(), System.Single()(), System.Single()())
  name.vb: FlagIfNotEqual(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][],System.Single,System.Single[][])
  id: FlagIfNotEqual(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FlagIfNotEqual(Single[][], Single, Single[][])
  nameWithType: VectorHelper.FlagIfNotEqual(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FlagIfNotEqual
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Conditions/FlagIfNotEqual.cs
    startLine: 141
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nSet the value to one if the condition is met.\n"
  example: []
  syntax:
    content: public static void FlagIfNotEqual(float[][] dest, float literalValue, float[][] data)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: literalValue
      type: System.Single
    - id: data
      type: System.Single[][]
    content.vb: Public Shared Sub FlagIfNotEqual(dest As Single()(), literalValue As Single, data As Single()())
  overload: TMG.Functions.VectorHelper.FlagIfNotEqual*
  nameWithType.vb: VectorHelper.FlagIfNotEqual(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FlagIfNotEqual(System.Single()(), System.Single, System.Single()())
  name.vb: FlagIfNotEqual(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single)
  id: FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[], Single[], Single[], Single)
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[], Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[], System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 29
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i] = hls[i] * rhs[i] + add\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[] dest, float[] lhs, float[] rhs, float add)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single(), lhs As Single(), rhs As Single(), add As Single)
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single(), Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single(), System.Single(), System.Single(), System.Single)
  name.vb: FusedMultiplyAdd(Single(), Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single)
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single)
  id: FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[], Single[], Single, Single)
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[], Single[], Single, Single)
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[], System.Single[], System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 58
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i] = hls[i] * rhs + add\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[] dest, float[] lhs, float rhs, float add)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    - id: add
      type: System.Single
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single(), lhs As Single(), rhs As Single, add As Single)
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single(), Single(), Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single(), System.Single(), System.Single, System.Single)
  name.vb: FusedMultiplyAdd(Single(), Single(), Single, Single)
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single[])
  id: FusedMultiplyAdd(System.Single[],System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[], Single[], Single, Single[])
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[], Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[], System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 88
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i] = hls[i] * rhs + add[i]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[] dest, float[] lhs, float rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single(), lhs As Single(), rhs As Single, add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single(), Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single(), System.Single(), System.Single, System.Single())
  name.vb: FusedMultiplyAdd(Single(), Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single[])
  id: FusedMultiplyAdd(System.Single[],System.Single[],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[], Single[], Single[], Single[])
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[], Single[], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[], System.Single[], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 117
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i] = hls[i] * rhs[i] + add[i]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[] dest, float[] lhs, float[] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single(), lhs As Single(), rhs As Single(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single(), Single(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single(), System.Single(), System.Single(), System.Single())
  name.vb: FusedMultiplyAdd(Single(), Single(), Single(), Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single)
  id: FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[][], Single[][], Single[][], Single)
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[][], Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][], System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 146
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i][j] + add\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[][] dest, float[][] lhs, float[][] rhs, float add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    - id: add
      type: System.Single
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single()(), lhs As Single()(), rhs As Single()(), add As Single)
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single()(), Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single()(), System.Single()(), System.Single()(), System.Single)
  name.vb: FusedMultiplyAdd(Single()(), Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single)
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single)
  id: FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[][], Single[][], Single, Single)
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[][], Single[][], Single, Single)
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][], System.Single[][], System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 157
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i][j] + add\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[][] dest, float[][] lhs, float rhs, float add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    - id: add
      type: System.Single
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single()(), lhs As Single()(), rhs As Single, add As Single)
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single()(), Single()(), Single, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single()(), System.Single()(), System.Single, System.Single)
  name.vb: FusedMultiplyAdd(Single()(), Single()(), Single, Single)
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single[][])
  id: FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[][], Single[][], Single, Single[][])
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[][], Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][], System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 168
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i][j] + add[i][j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[][] dest, float[][] lhs, float rhs, float[][] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    - id: add
      type: System.Single[][]
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single()(), lhs As Single()(), rhs As Single, add As Single()())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single()(), Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single()(), System.Single()(), System.Single, System.Single()())
  name.vb: FusedMultiplyAdd(Single()(), Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[][])
  id: FusedMultiplyAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAdd(Single[][], Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.FusedMultiplyAdd(Single[][], Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single[][], System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 179
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i][j] + add[i][j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAdd(float[][] dest, float[][] lhs, float[][] rhs, float[][] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    - id: add
      type: System.Single[][]
    content.vb: Public Shared Sub FusedMultiplyAdd(dest As Single()(), lhs As Single()(), rhs As Single()(), add As Single()())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAdd(Single()(), Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAdd(System.Single()(), System.Single()(), System.Single()(), System.Single()())
  name.vb: FusedMultiplyAdd(Single()(), Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  id: FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddVerticalAdd(Single[][], Single[][], Single[][], Single[])
  nameWithType: VectorHelper.FusedMultiplyAddVerticalAdd(Single[][], Single[][], Single[][], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][], System.Single[][], System.Single[][], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddVerticalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 190
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i][j] + add[i]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddVerticalAdd(float[][] dest, float[][] lhs, float[][] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddVerticalAdd(dest As Single()(), lhs As Single()(), rhs As Single()(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddVerticalAdd(Single()(), Single()(), Single()(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single()(), System.Single()(), System.Single()(), System.Single())
  name.vb: FusedMultiplyAddVerticalAdd(Single()(), Single()(), Single()(), Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  id: FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddHorizontalAdd(Single[][], Single[][], Single, Single[])
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalAdd(Single[][], Single[][], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][], System.Single[][], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddHorizontalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 201
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs + add[j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddHorizontalAdd(float[][] dest, float[][] lhs, float rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddHorizontalAdd(dest As Single()(), lhs As Single()(), rhs As Single, add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddHorizontalAdd(Single()(), Single()(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single()(), System.Single()(), System.Single, System.Single())
  name.vb: FusedMultiplyAddHorizontalAdd(Single()(), Single()(), Single, Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  id: FusedMultiplyAddVerticalAdd(System.Single[][],System.Single[][],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddVerticalAdd(Single[][], Single[][], Single, Single[])
  nameWithType: VectorHelper.FusedMultiplyAddVerticalAdd(Single[][], Single[][], Single, Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single[][], System.Single[][], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddVerticalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 212
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs + add[i]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddVerticalAdd(float[][] dest, float[][] lhs, float rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddVerticalAdd(dest As Single()(), lhs As Single()(), rhs As Single, add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddVerticalAdd(Single()(), Single()(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd(System.Single()(), System.Single()(), System.Single, System.Single())
  name.vb: FusedMultiplyAddVerticalAdd(Single()(), Single()(), Single, Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  id: FusedMultiplyAddHorizontalAdd(System.Single[][],System.Single[][],System.Single[][],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddHorizontalAdd(Single[][], Single[][], Single[][], Single[])
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalAdd(Single[][], Single[][], Single[][], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single[][], System.Single[][], System.Single[][], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddHorizontalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 223
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i][j] + add[j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddHorizontalAdd(float[][] dest, float[][] lhs, float[][] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddHorizontalAdd(dest As Single()(), lhs As Single()(), rhs As Single()(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddHorizontalAdd(Single()(), Single()(), Single()(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd(System.Single()(), System.Single()(), System.Single()(), System.Single())
  name.vb: FusedMultiplyAddHorizontalAdd(Single()(), Single()(), Single()(), Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  id: FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddVerticalRhs(Single[][], Single[][], Single[], Single)
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhs(Single[][], Single[][], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][], System.Single[][], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddVerticalRhs
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 234
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i] + add\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddVerticalRhs(float[][] dest, float[][] lhs, float[] rhs, float add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single
    content.vb: Public Shared Sub FusedMultiplyAddVerticalRhs(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single)
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs*
  nameWithType.vb: VectorHelper.FusedMultiplyAddVerticalRhs(Single()(), Single()(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single()(), System.Single()(), System.Single(), System.Single)
  name.vb: FusedMultiplyAddVerticalRhs(Single()(), Single()(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  id: FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddHorizontalRhs(Single[][], Single[][], Single[], Single)
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhs(Single[][], Single[][], Single[], Single)
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][], System.Single[][], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddHorizontalRhs
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 245
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[j] + add\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddHorizontalRhs(float[][] dest, float[][] lhs, float[] rhs, float add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single
    content.vb: Public Shared Sub FusedMultiplyAddHorizontalRhs(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single)
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs*
  nameWithType.vb: VectorHelper.FusedMultiplyAddHorizontalRhs(Single()(), Single()(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single()(), System.Single()(), System.Single(), System.Single)
  name.vb: FusedMultiplyAddHorizontalRhs(Single()(), Single()(), Single(), Single)
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  id: FusedMultiplyAddVerticalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddVerticalRhs(Single[][], Single[][], Single[], Single[][])
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhs(Single[][], Single[][], Single[], Single[][])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single[][], System.Single[][], System.Single[], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddVerticalRhs
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 256
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i] + add[i][j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddVerticalRhs(float[][] dest, float[][] lhs, float[] rhs, float[][] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[][]
    content.vb: Public Shared Sub FusedMultiplyAddVerticalRhs(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single()())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs*
  nameWithType.vb: VectorHelper.FusedMultiplyAddVerticalRhs(Single()(), Single()(), Single(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs(System.Single()(), System.Single()(), System.Single(), System.Single()())
  name.vb: FusedMultiplyAddVerticalRhs(Single()(), Single()(), Single(), Single()())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  id: FusedMultiplyAddHorizontalRhs(System.Single[][],System.Single[][],System.Single[],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddHorizontalRhs(Single[][], Single[][], Single[], Single[][])
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhs(Single[][], Single[][], Single[], Single[][])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single[][], System.Single[][], System.Single[], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddHorizontalRhs
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 267
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[j] + add[i][j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddHorizontalRhs(float[][] dest, float[][] lhs, float[] rhs, float[][] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[][]
    content.vb: Public Shared Sub FusedMultiplyAddHorizontalRhs(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single()())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs*
  nameWithType.vb: VectorHelper.FusedMultiplyAddHorizontalRhs(Single()(), Single()(), Single(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs(System.Single()(), System.Single()(), System.Single(), System.Single()())
  name.vb: FusedMultiplyAddHorizontalRhs(Single()(), Single()(), Single(), Single()())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  id: FusedMultiplyAddVerticalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddVerticalRhsVerticalAdd(Single[][], Single[][], Single[], Single[])
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(Single[][], Single[][], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(System.Single[][], System.Single[][], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddVerticalRhsVerticalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 278
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i] + add[i]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddVerticalRhsVerticalAdd(float[][] dest, float[][] lhs, float[] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddVerticalRhsVerticalAdd(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(Single()(), Single()(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd(System.Single()(), System.Single()(), System.Single(), System.Single())
  name.vb: FusedMultiplyAddVerticalRhsVerticalAdd(Single()(), Single()(), Single(), Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  id: FusedMultiplyAddHorizontalRhsVerticalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddHorizontalRhsVerticalAdd(Single[][], Single[][], Single[], Single[])
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(Single[][], Single[][], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(System.Single[][], System.Single[][], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddHorizontalRhsVerticalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 289
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[j] + add[i]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddHorizontalRhsVerticalAdd(float[][] dest, float[][] lhs, float[] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddHorizontalRhsVerticalAdd(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(Single()(), Single()(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd(System.Single()(), System.Single()(), System.Single(), System.Single())
  name.vb: FusedMultiplyAddHorizontalRhsVerticalAdd(Single()(), Single()(), Single(), Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  id: FusedMultiplyAddVerticalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddVerticalRhsHorizontalAdd(Single[][], Single[][], Single[], Single[])
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(Single[][], Single[][], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(System.Single[][], System.Single[][], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddVerticalRhsHorizontalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 300
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[i] + add[j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddVerticalRhsHorizontalAdd(float[][] dest, float[][] lhs, float[] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddVerticalRhsHorizontalAdd(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(Single()(), Single()(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd(System.Single()(), System.Single()(), System.Single(), System.Single())
  name.vb: FusedMultiplyAddVerticalRhsHorizontalAdd(Single()(), Single()(), Single(), Single())
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  id: FusedMultiplyAddHorizontalRhsHorizontalAdd(System.Single[][],System.Single[][],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: FusedMultiplyAddHorizontalRhsHorizontalAdd(Single[][], Single[][], Single[], Single[])
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(Single[][], Single[][], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(System.Single[][], System.Single[][], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FusedMultiplyAddHorizontalRhsHorizontalAdd
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/FusedMultiplyAdd.cs
    startLine: 311
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nDest[i][j] = hls[i][j] * rhs[j] + add[j]\n"
  example: []
  syntax:
    content: public static void FusedMultiplyAddHorizontalRhsHorizontalAdd(float[][] dest, float[][] lhs, float[] rhs, float[] add)
    parameters:
    - id: dest
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[]
    - id: add
      type: System.Single[]
    content.vb: Public Shared Sub FusedMultiplyAddHorizontalRhsHorizontalAdd(dest As Single()(), lhs As Single()(), rhs As Single(), add As Single())
  overload: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd*
  nameWithType.vb: VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(Single()(), Single()(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd(System.Single()(), System.Single()(), System.Single(), System.Single())
  name.vb: FusedMultiplyAddHorizontalRhsHorizontalAdd(Single()(), Single()(), Single(), Single())
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Multiply(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 27
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Multiply(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
    - id: destIndex
      type: System.Int32
    - id: first
      type: System.Single[]
    - id: firstIndex
      type: System.Int32
    - id: second
      type: System.Single[]
    - id: secondIndex
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Shared Sub Multiply(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Multiply(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[],System.Single[],System.Single)
  id: Multiply(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[], Single[], Single)
  nameWithType: VectorHelper.Multiply(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 74
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Multiply(float[] dest, float[] source, float scalar)
    parameters:
    - id: dest
      type: System.Single[]
    - id: source
      type: System.Single[]
    - id: scalar
      type: System.Single
    content.vb: Public Shared Sub Multiply(dest As Single(), source As Single(), scalar As Single)
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single(), System.Single(), System.Single)
  name.vb: Multiply(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single,System.Single[][])
  id: Multiply(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[][], Single, Single[][])
  nameWithType: VectorHelper.Multiply(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 102
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Multiply(float[][] destination, float lhs, float[][] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Multiply(destination As Single()(), lhs As Single, rhs As Single()())
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single()(), System.Single, System.Single()())
  name.vb: Multiply(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single[][],System.Single)
  id: Multiply(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[][], Single[][], Single)
  nameWithType: VectorHelper.Multiply(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 138
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Multiply(float[][] destination, float[][] lhs, float rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Multiply(destination As Single()(), lhs As Single()(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single()(), System.Single()(), System.Single)
  name.vb: Multiply(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[][],System.Single[][],System.Single[][])
  id: Multiply(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.Multiply(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 174
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Multiply(float[][] destination, float[][] lhs, float[][] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Multiply(destination As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single()(), System.Single()(), System.Single()())
  name.vb: Multiply(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32)
  id: Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[], Int32, Single[], Int32, Single, Int32)
  nameWithType: VectorHelper.Multiply(Single[], Int32, Single[], Int32, Single, Int32)
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[], System.Int32, System.Single[], System.Int32, System.Single, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 220
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\nMultiply an array by a scalar and store it in another array.\n"
  example: []
  syntax:
    content: public static void Multiply(float[] destination, int destIndex, float[] first, int firstIndex, float scalar, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: Where to store the results
    - id: destIndex
      type: System.Int32
      description: The offset to start at
    - id: first
      type: System.Single[]
      description: The array to multiply
    - id: firstIndex
      type: System.Int32
      description: The first index to multiply
    - id: scalar
      type: System.Single
      description: The value to multiply against
    - id: length
      type: System.Int32
      description: The number of elements to multiply
    content.vb: Public Shared Sub Multiply(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, scalar As Single, length As Integer)
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single(), Int32, Single(), Int32, Single, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single(), System.Int32, System.Single(), System.Int32, System.Single, System.Int32)
  name.vb: Multiply(Single(), Int32, Single(), Int32, Single, Int32)
- uid: TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Multiply(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Multiply(Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Multiply(Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Multiply(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Multiply.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Multiply
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Multiply.cs
    startLine: 338
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Multiply(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, float[] third, int thirdIndex, float[] fourth, int fourthIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: ''
    - id: destIndex
      type: System.Int32
      description: ''
    - id: first
      type: System.Single[]
      description: ''
    - id: firstIndex
      type: System.Int32
      description: ''
    - id: second
      type: System.Single[]
      description: ''
    - id: secondIndex
      type: System.Int32
      description: ''
    - id: third
      type: System.Single[]
      description: ''
    - id: thirdIndex
      type: System.Int32
      description: ''
    - id: fourth
      type: System.Single[]
      description: ''
    - id: fourthIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub Multiply(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, third As Single(), thirdIndex As Integer, fourth As Single(), fourthIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Multiply*
  nameWithType.vb: VectorHelper.Multiply(Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Multiply(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Multiply(Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Single(), Int32, Int32)
- uid: TMG.Functions.VectorHelper.Pow(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Pow(System.Single[],System.Single[],System.Single)
  id: Pow(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Pow(Single[], Single[], Single)
  nameWithType: VectorHelper.Pow(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.Pow(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Pow.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Pow
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Pow.cs
    startLine: 25
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Pow(float[] flat, float[] lhs, float rhs)
    parameters:
    - id: flat
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Pow(flat As Single(), lhs As Single(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Pow*
  nameWithType.vb: VectorHelper.Pow(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Pow(System.Single(), System.Single(), System.Single)
  name.vb: Pow(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.Pow(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.Pow(System.Single[],System.Single,System.Single[])
  id: Pow(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Pow(Single[], Single, Single[])
  nameWithType: VectorHelper.Pow(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.Pow(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Pow.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Pow
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Pow.cs
    startLine: 34
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Pow(float[] flat, float lhs, float[] rhs)
    parameters:
    - id: flat
      type: System.Single[]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub Pow(flat As Single(), lhs As Single, rhs As Single())
  overload: TMG.Functions.VectorHelper.Pow*
  nameWithType.vb: VectorHelper.Pow(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Pow(System.Single(), System.Single, System.Single())
  name.vb: Pow(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.Pow(System.Single[],System.Single[],System.Single[])
  commentId: M:TMG.Functions.VectorHelper.Pow(System.Single[],System.Single[],System.Single[])
  id: Pow(System.Single[],System.Single[],System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Pow(Single[], Single[], Single[])
  nameWithType: VectorHelper.Pow(Single[], Single[], Single[])
  fullName: TMG.Functions.VectorHelper.Pow(System.Single[], System.Single[], System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Pow.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Pow
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Pow.cs
    startLine: 43
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Pow(float[] flat, float[] lhs, float[] rhs)
    parameters:
    - id: flat
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub Pow(flat As Single(), lhs As Single(), rhs As Single())
  overload: TMG.Functions.VectorHelper.Pow*
  nameWithType.vb: VectorHelper.Pow(Single(), Single(), Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Pow(System.Single(), System.Single(), System.Single())
  name.vb: Pow(Single(), Single(), Single())
- uid: TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single[][],System.Single[][])
  id: Pow(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Pow(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.Pow(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.Pow(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Pow.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Pow
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Pow.cs
    startLine: 52
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Pow(float[][] flat, float[][] lhs, float[][] rhs)
    parameters:
    - id: flat
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Pow(flat As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.Pow*
  nameWithType.vb: VectorHelper.Pow(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Pow(System.Single()(), System.Single()(), System.Single()())
  name.vb: Pow(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single[][],System.Single)
  id: Pow(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Pow(Single[][], Single[][], Single)
  nameWithType: VectorHelper.Pow(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.Pow(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Pow.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Pow
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Pow.cs
    startLine: 61
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Pow(float[][] flat, float[][] lhs, float rhs)
    parameters:
    - id: flat
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Pow(flat As Single()(), lhs As Single()(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Pow*
  nameWithType.vb: VectorHelper.Pow(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Pow(System.Single()(), System.Single()(), System.Single)
  name.vb: Pow(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Pow(System.Single[][],System.Single,System.Single[][])
  id: Pow(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Pow(Single[][], Single, Single[][])
  nameWithType: VectorHelper.Pow(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.Pow(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Pow.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Pow
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Pow.cs
    startLine: 70
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Pow(float[][] flat, float lhs, float[][] rhs)
    parameters:
    - id: flat
      type: System.Single[][]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Pow(flat As Single()(), lhs As Single, rhs As Single()())
  overload: TMG.Functions.VectorHelper.Pow*
  nameWithType.vb: VectorHelper.Pow(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Pow(System.Single()(), System.Single, System.Single()())
  name.vb: Pow(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Subtract(System.Single[],System.Single[],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Subtract(System.Single[],System.Single[],System.Single)
  id: Subtract(System.Single[],System.Single[],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Subtract(Single[], Single[], Single)
  nameWithType: VectorHelper.Subtract(Single[], Single[], Single)
  fullName: TMG.Functions.VectorHelper.Subtract(System.Single[], System.Single[], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Subtract
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 27
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Subtract(float[] dest, float[] lhs, float rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single[]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Subtract(dest As Single(), lhs As Single(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Subtract*
  nameWithType.vb: VectorHelper.Subtract(Single(), Single(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Subtract(System.Single(), System.Single(), System.Single)
  name.vb: Subtract(Single(), Single(), Single)
- uid: TMG.Functions.VectorHelper.Subtract(System.Single[],System.Single,System.Single[])
  commentId: M:TMG.Functions.VectorHelper.Subtract(System.Single[],System.Single,System.Single[])
  id: Subtract(System.Single[],System.Single,System.Single[])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Subtract(Single[], Single, Single[])
  nameWithType: VectorHelper.Subtract(Single[], Single, Single[])
  fullName: TMG.Functions.VectorHelper.Subtract(System.Single[], System.Single, System.Single[])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Subtract
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 55
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Subtract(float[] dest, float lhs, float[] rhs)
    parameters:
    - id: dest
      type: System.Single[]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[]
    content.vb: Public Shared Sub Subtract(dest As Single(), lhs As Single, rhs As Single())
  overload: TMG.Functions.VectorHelper.Subtract*
  nameWithType.vb: VectorHelper.Subtract(Single(), Single, Single())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Subtract(System.Single(), System.Single, System.Single())
  name.vb: Subtract(Single(), Single, Single())
- uid: TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single,System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single,System.Single[][])
  id: Subtract(System.Single[][],System.Single,System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Subtract(Single[][], Single, Single[][])
  nameWithType: VectorHelper.Subtract(Single[][], Single, Single[][])
  fullName: TMG.Functions.VectorHelper.Subtract(System.Single[][], System.Single, System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Subtract
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 83
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Subtract(float[][] destination, float lhs, float[][] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Subtract(destination As Single()(), lhs As Single, rhs As Single()())
  overload: TMG.Functions.VectorHelper.Subtract*
  nameWithType.vb: VectorHelper.Subtract(Single()(), Single, Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Subtract(System.Single()(), System.Single, System.Single()())
  name.vb: Subtract(Single()(), Single, Single()())
- uid: TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single[][],System.Single)
  commentId: M:TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single[][],System.Single)
  id: Subtract(System.Single[][],System.Single[][],System.Single)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Subtract(Single[][], Single[][], Single)
  nameWithType: VectorHelper.Subtract(Single[][], Single[][], Single)
  fullName: TMG.Functions.VectorHelper.Subtract(System.Single[][], System.Single[][], System.Single)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Subtract
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 119
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Subtract(float[][] destination, float[][] lhs, float rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single
    content.vb: Public Shared Sub Subtract(destination As Single()(), lhs As Single()(), rhs As Single)
  overload: TMG.Functions.VectorHelper.Subtract*
  nameWithType.vb: VectorHelper.Subtract(Single()(), Single()(), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Subtract(System.Single()(), System.Single()(), System.Single)
  name.vb: Subtract(Single()(), Single()(), Single)
- uid: TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single[][],System.Single[][])
  commentId: M:TMG.Functions.VectorHelper.Subtract(System.Single[][],System.Single[][],System.Single[][])
  id: Subtract(System.Single[][],System.Single[][],System.Single[][])
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Subtract(Single[][], Single[][], Single[][])
  nameWithType: VectorHelper.Subtract(Single[][], Single[][], Single[][])
  fullName: TMG.Functions.VectorHelper.Subtract(System.Single[][], System.Single[][], System.Single[][])
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Subtract
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 155
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  syntax:
    content: public static void Subtract(float[][] destination, float[][] lhs, float[][] rhs)
    parameters:
    - id: destination
      type: System.Single[][]
    - id: lhs
      type: System.Single[][]
    - id: rhs
      type: System.Single[][]
    content.vb: Public Shared Sub Subtract(destination As Single()(), lhs As Single()(), rhs As Single()())
  overload: TMG.Functions.VectorHelper.Subtract*
  nameWithType.vb: VectorHelper.Subtract(Single()(), Single()(), Single()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Subtract(System.Single()(), System.Single()(), System.Single()())
  name.vb: Subtract(Single()(), Single()(), Single()())
- uid: TMG.Functions.VectorHelper.Subtract(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  commentId: M:TMG.Functions.VectorHelper.Subtract(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  id: Subtract(System.Single[],System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32)
  parent: TMG.Functions.VectorHelper
  langs:
  - csharp
  - vb
  name: Subtract(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  nameWithType: VectorHelper.Subtract(Single[], Int32, Single[], Int32, Single[], Int32, Int32)
  fullName: TMG.Functions.VectorHelper.Subtract(System.Single[], System.Int32, System.Single[], System.Int32, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Code/TMG.Functions/VectorHelper/Subtract.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Subtract
    path: ../../XTMF/Code/TMG.Functions/VectorHelper/Subtract.cs
    startLine: 202
  assemblies:
  - TMG.Functions
  namespace: TMG.Functions
  summary: "\n\n"
  example: []
  syntax:
    content: public static void Subtract(float[] destination, int destIndex, float[] first, int firstIndex, float[] second, int secondIndex, int length)
    parameters:
    - id: destination
      type: System.Single[]
      description: ''
    - id: destIndex
      type: System.Int32
      description: ''
    - id: first
      type: System.Single[]
      description: ''
    - id: firstIndex
      type: System.Int32
      description: ''
    - id: second
      type: System.Single[]
      description: ''
    - id: secondIndex
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub Subtract(destination As Single(), destIndex As Integer, first As Single(), firstIndex As Integer, second As Single(), secondIndex As Integer, length As Integer)
  overload: TMG.Functions.VectorHelper.Subtract*
  nameWithType.vb: VectorHelper.Subtract(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TMG.Functions.VectorHelper.Subtract(System.Single(), System.Int32, System.Single(), System.Int32, System.Single(), System.Int32, System.Int32)
  name.vb: Subtract(Single(), Int32, Single(), Int32, Single(), Int32, Int32)
references:
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Functions.VectorHelper.Sum*
  commentId: Overload:TMG.Functions.VectorHelper.Sum
  name: Sum
  nameWithType: VectorHelper.Sum
  fullName: TMG.Functions.VectorHelper.Sum
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.Functions.VectorHelper.AbsDiffAverage*
  commentId: Overload:TMG.Functions.VectorHelper.AbsDiffAverage
  name: AbsDiffAverage
  nameWithType: VectorHelper.AbsDiffAverage
  fullName: TMG.Functions.VectorHelper.AbsDiffAverage
- uid: TMG.Functions.VectorHelper.AbsDiffMax*
  commentId: Overload:TMG.Functions.VectorHelper.AbsDiffMax
  name: AbsDiffMax
  nameWithType: VectorHelper.AbsDiffMax
  fullName: TMG.Functions.VectorHelper.AbsDiffMax
- uid: TMG.Functions.VectorHelper.SquareDiff*
  commentId: Overload:TMG.Functions.VectorHelper.SquareDiff
  name: SquareDiff
  nameWithType: VectorHelper.SquareDiff
  fullName: TMG.Functions.VectorHelper.SquareDiff
- uid: TMG.Functions.VectorHelper.Set*
  commentId: Overload:TMG.Functions.VectorHelper.Set
  name: Set
  nameWithType: VectorHelper.Set
  fullName: TMG.Functions.VectorHelper.Set
- uid: TMG.Functions.VectorHelper.Abs*
  commentId: Overload:TMG.Functions.VectorHelper.Abs
  name: Abs
  nameWithType: VectorHelper.Abs
  fullName: TMG.Functions.VectorHelper.Abs
- uid: System.Single[][]
  isExternal: true
  name: Single[][]
  nameWithType: Single[][]
  fullName: System.Single[][]
  nameWithType.vb: Single()()
  fullName.vb: System.Single()()
  name.vb: Single()()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Functions.VectorHelper.MultiplyAndSum*
  commentId: Overload:TMG.Functions.VectorHelper.MultiplyAndSum
  name: MultiplyAndSum
  nameWithType: VectorHelper.MultiplyAndSum
  fullName: TMG.Functions.VectorHelper.MultiplyAndSum
- uid: TMG.Functions.VectorHelper.Multiply3AndSum*
  commentId: Overload:TMG.Functions.VectorHelper.Multiply3AndSum
  name: Multiply3AndSum
  nameWithType: VectorHelper.Multiply3AndSum
  fullName: TMG.Functions.VectorHelper.Multiply3AndSum
- uid: TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum*
  commentId: Overload:TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum
  name: Multiply2Scalar1AndColumnSum
  nameWithType: VectorHelper.Multiply2Scalar1AndColumnSum
  fullName: TMG.Functions.VectorHelper.Multiply2Scalar1AndColumnSum
- uid: TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum*
  commentId: Overload:TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum
  name: Multiply3Scalar1AndColumnSum
  nameWithType: VectorHelper.Multiply3Scalar1AndColumnSum
  fullName: TMG.Functions.VectorHelper.Multiply3Scalar1AndColumnSum
- uid: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual*
  commentId: Overload:TMG.Functions.VectorHelper.FlagIfLessThanOrEqual
  name: FlagIfLessThanOrEqual
  nameWithType: VectorHelper.FlagIfLessThanOrEqual
  fullName: TMG.Functions.VectorHelper.FlagIfLessThanOrEqual
- uid: TMG.Functions.VectorHelper.Average*
  commentId: Overload:TMG.Functions.VectorHelper.Average
  name: Average
  nameWithType: VectorHelper.Average
  fullName: TMG.Functions.VectorHelper.Average
- uid: TMG.Functions.VectorHelper.SelectIfFinite*
  commentId: Overload:TMG.Functions.VectorHelper.SelectIfFinite
  name: SelectIfFinite
  nameWithType: VectorHelper.SelectIfFinite
  fullName: TMG.Functions.VectorHelper.SelectIfFinite
- uid: System.Numerics.Vector{System.Single}
  commentId: T:System.Numerics.Vector{System.Single}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  name: Vector<Single>
  nameWithType: Vector<Single>
  fullName: System.Numerics.Vector<System.Single>
  nameWithType.vb: Vector(Of Single)
  fullName.vb: System.Numerics.Vector(Of System.Single)
  name.vb: Vector(Of Single)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Numerics.Vector`1
  commentId: T:System.Numerics.Vector`1
  isExternal: true
  name: Vector<T>
  nameWithType: Vector<T>
  fullName: System.Numerics.Vector<T>
  nameWithType.vb: Vector(Of T)
  fullName.vb: System.Numerics.Vector(Of T)
  name.vb: Vector(Of T)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan*
  commentId: Overload:TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan
  name: SelectIfFiniteAndLessThan
  nameWithType: VectorHelper.SelectIfFiniteAndLessThan
  fullName: TMG.Functions.VectorHelper.SelectIfFiniteAndLessThan
- uid: TMG.Functions.VectorHelper.ReplaceIfNaN*
  commentId: Overload:TMG.Functions.VectorHelper.ReplaceIfNaN
  name: ReplaceIfNaN
  nameWithType: VectorHelper.ReplaceIfNaN
  fullName: TMG.Functions.VectorHelper.ReplaceIfNaN
- uid: TMG.Functions.VectorHelper.ReplaceIfNotFinite*
  commentId: Overload:TMG.Functions.VectorHelper.ReplaceIfNotFinite
  name: ReplaceIfNotFinite
  nameWithType: VectorHelper.ReplaceIfNotFinite
  fullName: TMG.Functions.VectorHelper.ReplaceIfNotFinite
- uid: TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite*
  commentId: Overload:TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite
  name: ReplaceIfLessThanOrNotFinite
  nameWithType: VectorHelper.ReplaceIfLessThanOrNotFinite
  fullName: TMG.Functions.VectorHelper.ReplaceIfLessThanOrNotFinite
- uid: TMG.Functions.VectorHelper.AnyGreaterThan*
  commentId: Overload:TMG.Functions.VectorHelper.AnyGreaterThan
  name: AnyGreaterThan
  nameWithType: VectorHelper.AnyGreaterThan
  fullName: TMG.Functions.VectorHelper.AnyGreaterThan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.Functions.VectorHelper.AreBoundedBy*
  commentId: Overload:TMG.Functions.VectorHelper.AreBoundedBy
  name: AreBoundedBy
  nameWithType: VectorHelper.AreBoundedBy
  fullName: TMG.Functions.VectorHelper.AreBoundedBy
- uid: TMG.Functions.VectorHelper.Exp*
  commentId: Overload:TMG.Functions.VectorHelper.Exp
  name: Exp
  nameWithType: VectorHelper.Exp
  fullName: TMG.Functions.VectorHelper.Exp
- uid: TMG.Functions.VectorHelper.ArithmeticGeometricMean*
  commentId: Overload:TMG.Functions.VectorHelper.ArithmeticGeometricMean
  name: ArithmeticGeometricMean
  nameWithType: VectorHelper.ArithmeticGeometricMean
  fullName: TMG.Functions.VectorHelper.ArithmeticGeometricMean
- uid: TMG.Functions.VectorHelper.Log*
  commentId: Overload:TMG.Functions.VectorHelper.Log
  name: Log
  nameWithType: VectorHelper.Log
  fullName: TMG.Functions.VectorHelper.Log
- uid: TMG.Functions.VectorHelper.Negate*
  commentId: Overload:TMG.Functions.VectorHelper.Negate
  name: Negate
  nameWithType: VectorHelper.Negate
  fullName: TMG.Functions.VectorHelper.Negate
- uid: TMG.Functions.VectorHelper.FlagAnd*
  commentId: Overload:TMG.Functions.VectorHelper.FlagAnd
  name: FlagAnd
  nameWithType: VectorHelper.FlagAnd
  fullName: TMG.Functions.VectorHelper.FlagAnd
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThan*
  commentId: Overload:TMG.Functions.VectorHelper.FlagIfGreaterThan
  name: FlagIfGreaterThan
  nameWithType: VectorHelper.FlagIfGreaterThan
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThan
- uid: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual*
  commentId: Overload:TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual
  name: FlagIfGreaterThanOrEqual
  nameWithType: VectorHelper.FlagIfGreaterThanOrEqual
  fullName: TMG.Functions.VectorHelper.FlagIfGreaterThanOrEqual
- uid: TMG.Functions.VectorHelper.Add*
  commentId: Overload:TMG.Functions.VectorHelper.Add
  name: Add
  nameWithType: VectorHelper.Add
  fullName: TMG.Functions.VectorHelper.Add
- uid: TMG.Functions.VectorHelper.AddHorizontal*
  commentId: Overload:TMG.Functions.VectorHelper.AddHorizontal
  name: AddHorizontal
  nameWithType: VectorHelper.AddHorizontal
  fullName: TMG.Functions.VectorHelper.AddHorizontal
- uid: TMG.Functions.VectorHelper.AddVertical*
  commentId: Overload:TMG.Functions.VectorHelper.AddVertical
  name: AddVertical
  nameWithType: VectorHelper.AddVertical
  fullName: TMG.Functions.VectorHelper.AddVertical
- uid: TMG.Functions.VectorHelper.FlagOr*
  commentId: Overload:TMG.Functions.VectorHelper.FlagOr
  name: FlagOr
  nameWithType: VectorHelper.FlagOr
  fullName: TMG.Functions.VectorHelper.FlagOr
- uid: TMG.Functions.VectorHelper.Divide*
  commentId: Overload:TMG.Functions.VectorHelper.Divide
  name: Divide
  nameWithType: VectorHelper.Divide
  fullName: TMG.Functions.VectorHelper.Divide
- uid: TMG.Functions.VectorHelper.FlagIfEqual*
  commentId: Overload:TMG.Functions.VectorHelper.FlagIfEqual
  name: FlagIfEqual
  nameWithType: VectorHelper.FlagIfEqual
  fullName: TMG.Functions.VectorHelper.FlagIfEqual
- uid: TMG.Functions.VectorHelper.FlagIfLessThan*
  commentId: Overload:TMG.Functions.VectorHelper.FlagIfLessThan
  name: FlagIfLessThan
  nameWithType: VectorHelper.FlagIfLessThan
  fullName: TMG.Functions.VectorHelper.FlagIfLessThan
- uid: TMG.Functions.VectorHelper.FlagIfNotEqual*
  commentId: Overload:TMG.Functions.VectorHelper.FlagIfNotEqual
  name: FlagIfNotEqual
  nameWithType: VectorHelper.FlagIfNotEqual
  fullName: TMG.Functions.VectorHelper.FlagIfNotEqual
- uid: TMG.Functions.VectorHelper.FusedMultiplyAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAdd
  name: FusedMultiplyAdd
  nameWithType: VectorHelper.FusedMultiplyAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAdd
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd
  name: FusedMultiplyAddVerticalAdd
  nameWithType: VectorHelper.FusedMultiplyAddVerticalAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalAdd
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd
  name: FusedMultiplyAddHorizontalAdd
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalAdd
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs
  name: FusedMultiplyAddVerticalRhs
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhs
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhs
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs
  name: FusedMultiplyAddHorizontalRhs
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhs
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhs
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd
  name: FusedMultiplyAddVerticalRhsVerticalAdd
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsVerticalAdd
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd
  name: FusedMultiplyAddHorizontalRhsVerticalAdd
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsVerticalAdd
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd
  name: FusedMultiplyAddVerticalRhsHorizontalAdd
  nameWithType: VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddVerticalRhsHorizontalAdd
- uid: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd*
  commentId: Overload:TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd
  name: FusedMultiplyAddHorizontalRhsHorizontalAdd
  nameWithType: VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd
  fullName: TMG.Functions.VectorHelper.FusedMultiplyAddHorizontalRhsHorizontalAdd
- uid: TMG.Functions.VectorHelper.Multiply*
  commentId: Overload:TMG.Functions.VectorHelper.Multiply
  name: Multiply
  nameWithType: VectorHelper.Multiply
  fullName: TMG.Functions.VectorHelper.Multiply
- uid: TMG.Functions.VectorHelper.Pow*
  commentId: Overload:TMG.Functions.VectorHelper.Pow
  name: Pow
  nameWithType: VectorHelper.Pow
  fullName: TMG.Functions.VectorHelper.Pow
- uid: TMG.Functions.VectorHelper.Subtract*
  commentId: Overload:TMG.Functions.VectorHelper.Subtract
  name: Subtract
  nameWithType: VectorHelper.Subtract
  fullName: TMG.Functions.VectorHelper.Subtract
