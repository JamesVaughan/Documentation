### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.Output.SaveODSeries
  commentId: T:TMG.GTAModel.Output.SaveODSeries
  id: SaveODSeries
  parent: TMG.GTAModel.Output
  children:
  - TMG.GTAModel.Output.SaveODSeries.InputFileBase
  - TMG.GTAModel.Output.SaveODSeries.Name
  - TMG.GTAModel.Output.SaveODSeries.Progress
  - TMG.GTAModel.Output.SaveODSeries.ProgressColour
  - TMG.GTAModel.Output.SaveODSeries.Reset
  - TMG.GTAModel.Output.SaveODSeries.RuntimeValidation(System.String@)
  - TMG.GTAModel.Output.SaveODSeries.SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  - TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[])
  - TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[][])
  - TMG.GTAModel.Output.SaveODSeries.StartingIndex
  - TMG.GTAModel.Output.SaveODSeries.Writer
  langs:
  - csharp
  - vb
  name: SaveODSeries
  nameWithType: SaveODSeries
  fullName: TMG.GTAModel.Output.SaveODSeries
  type: Class
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveODSeries
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 26
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: 'public class SaveODSeries : ISaveODDataSeries<float>, IModule'
    content.vb: >-
      Public Class SaveODSeries
          Implements ISaveODDataSeries(Of Single), IModule
  inheritance:
  - System.Object
  implements:
  - TMG.Input.ISaveODDataSeries{System.Single}
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.Output.SaveODSeries.InputFileBase
  commentId: F:TMG.GTAModel.Output.SaveODSeries.InputFileBase
  id: InputFileBase
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: InputFileBase
  nameWithType: SaveODSeries.InputFileBase
  fullName: TMG.GTAModel.Output.SaveODSeries.InputFileBase
  type: Field
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InputFileBase
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 29
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: >-
      [RunParameter("Input File Format", "BinaryData%X.bin", "The file series to be read in and sumed.  The %X will be replaced by the index number")]

      public FileFromOutputDirectory InputFileBase
    return:
      type: TMG.Input.FileFromOutputDirectory
    content.vb: >-
      <RunParameter("Input File Format", "BinaryData%X.bin", "The file series to be read in and sumed.  The %X will be replaced by the index number")>

      Public InputFileBase As FileFromOutputDirectory
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Input File Format
    - type: System.String
      value: BinaryData%X.bin
    - type: System.String
      value: The file series to be read in and sumed.  The %X will be replaced by the index number
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveODSeries.StartingIndex
  commentId: F:TMG.GTAModel.Output.SaveODSeries.StartingIndex
  id: StartingIndex
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: StartingIndex
  nameWithType: SaveODSeries.StartingIndex
  fullName: TMG.GTAModel.Output.SaveODSeries.StartingIndex
  type: Field
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StartingIndex
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: >-
      [RunParameter("Starting Index", 0, "The index of the files to start at.")]

      public int StartingIndex
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Starting Index", 0, "The index of the files to start at.")>

      Public StartingIndex As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Starting Index
    - type: System.Int32
      value: 0
    - type: System.String
      value: The index of the files to start at.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveODSeries.Writer
  commentId: F:TMG.GTAModel.Output.SaveODSeries.Writer
  id: Writer
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: SaveODSeries.Writer
  fullName: TMG.GTAModel.Output.SaveODSeries.Writer
  type: Field
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Writer
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 35
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: >-
      [SubModelInformation(Required = true, Description = "The module to write the data.")]

      public ISaveODData<float> Writer
    return:
      type: TMG.Input.ISaveODData{System.Single}
    content.vb: >-
      <SubModelInformation(Required:=True, Description:="The module to write the data.")>

      Public Writer As ISaveODData(Of Single)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Required
      type: System.Boolean
      value: true
    - name: Description
      type: System.String
      value: The module to write the data.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveODSeries.Name
  commentId: P:TMG.GTAModel.Output.SaveODSeries.Name
  id: Name
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SaveODSeries.Name
  fullName: TMG.GTAModel.Output.SaveODSeries.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 39
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.Output.SaveODSeries.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveODSeries.Progress
  commentId: P:TMG.GTAModel.Output.SaveODSeries.Progress
  id: Progress
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: SaveODSeries.Progress
  fullName: TMG.GTAModel.Output.SaveODSeries.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.Output.SaveODSeries.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Output.SaveODSeries.ProgressColour
  commentId: P:TMG.GTAModel.Output.SaveODSeries.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: SaveODSeries.ProgressColour
  fullName: TMG.GTAModel.Output.SaveODSeries.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 46
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.Output.SaveODSeries.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.Output.SaveODSeries.Reset
  commentId: M:TMG.GTAModel.Output.SaveODSeries.Reset
  id: Reset
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SaveODSeries.Reset()
  fullName: TMG.GTAModel.Output.SaveODSeries.Reset()
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Reset
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 51
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: TMG.GTAModel.Output.SaveODSeries.Reset*
  implements:
  - TMG.Input.ISaveODDataSeries{System.Single}.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.Output.SaveODSeries.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.Output.SaveODSeries.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: SaveODSeries.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.Output.SaveODSeries.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.Output.SaveODSeries.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: SaveODSeries.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveODSeries.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  commentId: M:TMG.GTAModel.Output.SaveODSeries.SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  id: SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: SaveMatrix(SparseTwinIndex<Single>)
  nameWithType: SaveODSeries.SaveMatrix(SparseTwinIndex<Single>)
  fullName: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(Datastructure.SparseTwinIndex<System.Single>)
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 61
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void SaveMatrix(SparseTwinIndex<float> matrix)
    parameters:
    - id: matrix
      type: Datastructure.SparseTwinIndex{System.Single}
    content.vb: Public Sub SaveMatrix(matrix As SparseTwinIndex(Of Single))
  overload: TMG.GTAModel.Output.SaveODSeries.SaveMatrix*
  implements:
  - TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  nameWithType.vb: SaveODSeries.SaveMatrix(SparseTwinIndex(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(Datastructure.SparseTwinIndex(Of System.Single))
  name.vb: SaveMatrix(SparseTwinIndex(Of Single))
- uid: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[][])
  commentId: M:TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[][])
  id: SaveMatrix(System.Single[][])
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: SaveMatrix(Single[][])
  nameWithType: SaveODSeries.SaveMatrix(Single[][])
  fullName: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[][])
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 66
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void SaveMatrix(float[][] data)
    parameters:
    - id: data
      type: System.Single[][]
    content.vb: Public Sub SaveMatrix(data As Single()())
  overload: TMG.GTAModel.Output.SaveODSeries.SaveMatrix*
  implements:
  - TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(System.Single[][])
  nameWithType.vb: SaveODSeries.SaveMatrix(Single()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single()())
  name.vb: SaveMatrix(Single()())
- uid: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[])
  commentId: M:TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[])
  id: SaveMatrix(System.Single[])
  parent: TMG.GTAModel.Output.SaveODSeries
  langs:
  - csharp
  - vb
  name: SaveMatrix(Single[])
  nameWithType: SaveODSeries.SaveMatrix(Single[])
  fullName: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single[])
  type: Method
  source:
    remote:
      path: Code/GTAModel/Output/SaveODSeries.cs
      branch: dev-1.5
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SaveMatrix
    path: ../../XTMF/Code/GTAModel/Output/SaveODSeries.cs
    startLine: 71
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.Output
  syntax:
    content: public void SaveMatrix(float[] data)
    parameters:
    - id: data
      type: System.Single[]
    content.vb: Public Sub SaveMatrix(data As Single())
  overload: TMG.GTAModel.Output.SaveODSeries.SaveMatrix*
  implements:
  - TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(System.Single[])
  nameWithType.vb: SaveODSeries.SaveMatrix(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.Output.SaveODSeries.SaveMatrix(System.Single())
  name.vb: SaveMatrix(Single())
references:
- uid: TMG.GTAModel.Output
  commentId: N:TMG.GTAModel.Output
  name: TMG.GTAModel.Output
  nameWithType: TMG.GTAModel.Output
  fullName: TMG.GTAModel.Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Input.ISaveODDataSeries{System.Single}
  commentId: T:TMG.Input.ISaveODDataSeries{System.Single}
  parent: TMG.Input
  definition: TMG.Input.ISaveODDataSeries`1
  name: ISaveODDataSeries<Single>
  nameWithType: ISaveODDataSeries<Single>
  fullName: TMG.Input.ISaveODDataSeries<System.Single>
  nameWithType.vb: ISaveODDataSeries(Of Single)
  fullName.vb: TMG.Input.ISaveODDataSeries(Of System.Single)
  name.vb: ISaveODDataSeries(Of Single)
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1
    name: ISaveODDataSeries
    nameWithType: ISaveODDataSeries
    fullName: TMG.Input.ISaveODDataSeries
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1
    name: ISaveODDataSeries
    nameWithType: ISaveODDataSeries
    fullName: TMG.Input.ISaveODDataSeries
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Input.ISaveODDataSeries`1
  commentId: T:TMG.Input.ISaveODDataSeries`1
  name: ISaveODDataSeries<T>
  nameWithType: ISaveODDataSeries<T>
  fullName: TMG.Input.ISaveODDataSeries<T>
  nameWithType.vb: ISaveODDataSeries(Of T)
  fullName.vb: TMG.Input.ISaveODDataSeries(Of T)
  name.vb: ISaveODDataSeries(Of T)
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1
    name: ISaveODDataSeries
    nameWithType: ISaveODDataSeries
    fullName: TMG.Input.ISaveODDataSeries
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1
    name: ISaveODDataSeries
    nameWithType: ISaveODDataSeries
    fullName: TMG.Input.ISaveODDataSeries
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: XTMF
  commentId: N:XTMF
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.Input.FileFromOutputDirectory
  commentId: T:TMG.Input.FileFromOutputDirectory
  parent: TMG.Input
  name: FileFromOutputDirectory
  nameWithType: FileFromOutputDirectory
  fullName: TMG.Input.FileFromOutputDirectory
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Input.ISaveODData{System.Single}
  commentId: T:TMG.Input.ISaveODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.ISaveODData`1
  name: ISaveODData<Single>
  nameWithType: ISaveODData<Single>
  fullName: TMG.Input.ISaveODData<System.Single>
  nameWithType.vb: ISaveODData(Of Single)
  fullName.vb: TMG.Input.ISaveODData(Of System.Single)
  name.vb: ISaveODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ISaveODData`1
  commentId: T:TMG.Input.ISaveODData`1
  name: ISaveODData<T>
  nameWithType: ISaveODData<T>
  fullName: TMG.Input.ISaveODData<T>
  nameWithType.vb: ISaveODData(Of T)
  fullName.vb: TMG.Input.ISaveODData(Of T)
  name.vb: ISaveODData(Of T)
  spec.csharp:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.ISaveODData`1
    name: ISaveODData
    nameWithType: ISaveODData
    fullName: TMG.Input.ISaveODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Output.SaveODSeries.Name*
  commentId: Overload:TMG.GTAModel.Output.SaveODSeries.Name
  name: Name
  nameWithType: SaveODSeries.Name
  fullName: TMG.GTAModel.Output.SaveODSeries.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.GTAModel.Output.SaveODSeries.Progress*
  commentId: Overload:TMG.GTAModel.Output.SaveODSeries.Progress
  name: Progress
  nameWithType: SaveODSeries.Progress
  fullName: TMG.GTAModel.Output.SaveODSeries.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.Output.SaveODSeries.ProgressColour*
  commentId: Overload:TMG.GTAModel.Output.SaveODSeries.ProgressColour
  name: ProgressColour
  nameWithType: SaveODSeries.ProgressColour
  fullName: TMG.GTAModel.Output.SaveODSeries.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Output.SaveODSeries.Reset*
  commentId: Overload:TMG.GTAModel.Output.SaveODSeries.Reset
  name: Reset
  nameWithType: SaveODSeries.Reset
  fullName: TMG.GTAModel.Output.SaveODSeries.Reset
- uid: TMG.Input.ISaveODDataSeries{System.Single}.Reset
  commentId: M:TMG.Input.ISaveODDataSeries{System.Single}.Reset
  parent: TMG.Input.ISaveODDataSeries{System.Single}
  definition: TMG.Input.ISaveODDataSeries`1.Reset
  name: Reset()
  nameWithType: ISaveODDataSeries<Single>.Reset()
  fullName: TMG.Input.ISaveODDataSeries<System.Single>.Reset()
  nameWithType.vb: ISaveODDataSeries(Of Single).Reset()
  fullName.vb: TMG.Input.ISaveODDataSeries(Of System.Single).Reset()
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.Reset
    name: Reset
    nameWithType: ISaveODDataSeries<Single>.Reset
    fullName: TMG.Input.ISaveODDataSeries<System.Single>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.Reset
    name: Reset
    nameWithType: ISaveODDataSeries(Of Single).Reset
    fullName: TMG.Input.ISaveODDataSeries(Of System.Single).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ISaveODDataSeries`1.Reset
  commentId: M:TMG.Input.ISaveODDataSeries`1.Reset
  name: Reset()
  nameWithType: ISaveODDataSeries<T>.Reset()
  fullName: TMG.Input.ISaveODDataSeries<T>.Reset()
  nameWithType.vb: ISaveODDataSeries(Of T).Reset()
  fullName.vb: TMG.Input.ISaveODDataSeries(Of T).Reset()
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.Reset
    name: Reset
    nameWithType: ISaveODDataSeries<T>.Reset
    fullName: TMG.Input.ISaveODDataSeries<T>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.Reset
    name: Reset
    nameWithType: ISaveODDataSeries(Of T).Reset
    fullName: TMG.Input.ISaveODDataSeries(Of T).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.Output.SaveODSeries.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.Output.SaveODSeries.RuntimeValidation
  name: RuntimeValidation
  nameWithType: SaveODSeries.RuntimeValidation
  fullName: TMG.GTAModel.Output.SaveODSeries.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.Output.SaveODSeries.SaveMatrix*
  commentId: Overload:TMG.GTAModel.Output.SaveODSeries.SaveMatrix
  name: SaveMatrix
  nameWithType: SaveODSeries.SaveMatrix
  fullName: TMG.GTAModel.Output.SaveODSeries.SaveMatrix
- uid: TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  commentId: M:TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(Datastructure.SparseTwinIndex{System.Single})
  parent: TMG.Input.ISaveODDataSeries{System.Single}
  definition: TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
  name: SaveMatrix(SparseTwinIndex<Single>)
  nameWithType: ISaveODDataSeries<Single>.SaveMatrix(SparseTwinIndex<Single>)
  fullName: TMG.Input.ISaveODDataSeries<System.Single>.SaveMatrix(Datastructure.SparseTwinIndex<System.Single>)
  nameWithType.vb: ISaveODDataSeries(Of Single).SaveMatrix(SparseTwinIndex(Of Single))
  fullName.vb: TMG.Input.ISaveODDataSeries(Of System.Single).SaveMatrix(Datastructure.SparseTwinIndex(Of System.Single))
  name.vb: SaveMatrix(SparseTwinIndex(Of Single))
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
    name: SaveMatrix
    nameWithType: ISaveODDataSeries<Single>.SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries<System.Single>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
    name: SaveMatrix
    nameWithType: ISaveODDataSeries(Of Single).SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries(Of System.Single).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTwinIndex{System.Single}
  commentId: T:Datastructure.SparseTwinIndex{System.Single}
  parent: Datastructure
  definition: Datastructure.SparseTwinIndex`1
  name: SparseTwinIndex<Single>
  nameWithType: SparseTwinIndex<Single>
  fullName: Datastructure.SparseTwinIndex<System.Single>
  nameWithType.vb: SparseTwinIndex(Of Single)
  fullName.vb: Datastructure.SparseTwinIndex(Of System.Single)
  name.vb: SparseTwinIndex(Of Single)
  spec.csharp:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
  commentId: M:TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
  name: SaveMatrix(SparseTwinIndex<T>)
  nameWithType: ISaveODDataSeries<T>.SaveMatrix(SparseTwinIndex<T>)
  fullName: TMG.Input.ISaveODDataSeries<T>.SaveMatrix(Datastructure.SparseTwinIndex<T>)
  nameWithType.vb: ISaveODDataSeries(Of T).SaveMatrix(SparseTwinIndex(Of T))
  fullName.vb: TMG.Input.ISaveODDataSeries(Of T).SaveMatrix(Datastructure.SparseTwinIndex(Of T))
  name.vb: SaveMatrix(SparseTwinIndex(Of T))
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
    name: SaveMatrix
    nameWithType: ISaveODDataSeries<T>.SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries<T>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(Datastructure.SparseTwinIndex{`0})
    name: SaveMatrix
    nameWithType: ISaveODDataSeries(Of T).SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries(Of T).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTwinIndex`1
  commentId: T:Datastructure.SparseTwinIndex`1
  name: SparseTwinIndex<T>
  nameWithType: SparseTwinIndex<T>
  fullName: Datastructure.SparseTwinIndex<T>
  nameWithType.vb: SparseTwinIndex(Of T)
  fullName.vb: Datastructure.SparseTwinIndex(Of T)
  name.vb: SparseTwinIndex(Of T)
  spec.csharp:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure
  commentId: N:Datastructure
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(System.Single[][])
  commentId: M:TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(System.Single[][])
  parent: TMG.Input.ISaveODDataSeries{System.Single}
  definition: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
  name: SaveMatrix(Single[][])
  nameWithType: ISaveODDataSeries<Single>.SaveMatrix(Single[][])
  fullName: TMG.Input.ISaveODDataSeries<System.Single>.SaveMatrix(System.Single[][])
  nameWithType.vb: ISaveODDataSeries(Of Single).SaveMatrix(Single()())
  fullName.vb: TMG.Input.ISaveODDataSeries(Of System.Single).SaveMatrix(System.Single()())
  name.vb: SaveMatrix(Single()())
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries<Single>.SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries<System.Single>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries(Of Single).SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries(Of System.Single).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single[][]
  isExternal: true
  name: Single[][]
  nameWithType: Single[][]
  fullName: System.Single[][]
  nameWithType.vb: Single()()
  fullName.vb: System.Single()()
  name.vb: Single()()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
  commentId: M:TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
  name: SaveMatrix(T[][])
  nameWithType: ISaveODDataSeries<T>.SaveMatrix(T[][])
  fullName: TMG.Input.ISaveODDataSeries<T>.SaveMatrix(T[][])
  nameWithType.vb: ISaveODDataSeries(Of T).SaveMatrix(T()())
  fullName.vb: TMG.Input.ISaveODDataSeries(Of T).SaveMatrix(T()())
  name.vb: SaveMatrix(T()())
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries<T>.SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries<T>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[][])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries(Of T).SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries(Of T).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(System.Single[])
  commentId: M:TMG.Input.ISaveODDataSeries{System.Single}.SaveMatrix(System.Single[])
  parent: TMG.Input.ISaveODDataSeries{System.Single}
  definition: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
  name: SaveMatrix(Single[])
  nameWithType: ISaveODDataSeries<Single>.SaveMatrix(Single[])
  fullName: TMG.Input.ISaveODDataSeries<System.Single>.SaveMatrix(System.Single[])
  nameWithType.vb: ISaveODDataSeries(Of Single).SaveMatrix(Single())
  fullName.vb: TMG.Input.ISaveODDataSeries(Of System.Single).SaveMatrix(System.Single())
  name.vb: SaveMatrix(Single())
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries<Single>.SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries<System.Single>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries(Of Single).SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries(Of System.Single).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
  commentId: M:TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
  name: SaveMatrix(T[])
  nameWithType: ISaveODDataSeries<T>.SaveMatrix(T[])
  fullName: TMG.Input.ISaveODDataSeries<T>.SaveMatrix(T[])
  nameWithType.vb: ISaveODDataSeries(Of T).SaveMatrix(T())
  fullName.vb: TMG.Input.ISaveODDataSeries(Of T).SaveMatrix(T())
  name.vb: SaveMatrix(T())
  spec.csharp:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries<T>.SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries<T>.SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Input.ISaveODDataSeries`1.SaveMatrix(`0[])
    name: SaveMatrix
    nameWithType: ISaveODDataSeries(Of T).SaveMatrix
    fullName: TMG.Input.ISaveODDataSeries(Of T).SaveMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
