### YamlMime:ManagedReference
items:
- uid: TMG.NetworkEstimation.CombinationTally
  commentId: T:TMG.NetworkEstimation.CombinationTally
  id: CombinationTally
  parent: TMG.NetworkEstimation
  children:
  - TMG.NetworkEstimation.CombinationTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  - TMG.NetworkEstimation.CombinationTally.FirstTally
  - TMG.NetworkEstimation.CombinationTally.FirstWeight
  - TMG.NetworkEstimation.CombinationTally.Name
  - TMG.NetworkEstimation.CombinationTally.Progress
  - TMG.NetworkEstimation.CombinationTally.ProgressColour
  - TMG.NetworkEstimation.CombinationTally.RuntimeValidation(System.String@)
  - TMG.NetworkEstimation.CombinationTally.SecondTally
  - TMG.NetworkEstimation.CombinationTally.SecondWeight
  langs:
  - csharp
  - vb
  name: CombinationTally
  nameWithType: CombinationTally
  fullName: TMG.NetworkEstimation.CombinationTally
  type: Class
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: CombinationTally
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 25
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: 'public class CombinationTally : IErrorTally, IModule'
    content.vb: >-
      Public Class CombinationTally

          Implements IErrorTally, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.NetworkEstimation.IErrorTally
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.NetworkEstimation.CombinationTally.FirstTally
  commentId: F:TMG.NetworkEstimation.CombinationTally.FirstTally
  id: FirstTally
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: FirstTally
  nameWithType: CombinationTally.FirstTally
  fullName: TMG.NetworkEstimation.CombinationTally.FirstTally
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FirstTally
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 28
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [SubModelInformation(Description = "The first tally to compute.", Required = true)]

      public IErrorTally FirstTally
    return:
      type: TMG.NetworkEstimation.IErrorTally
    content.vb: >-
      <SubModelInformation(Description:="The first tally to compute.", Required:=True)>

      Public FirstTally As IErrorTally
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The first tally to compute.
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.CombinationTally.FirstWeight
  commentId: F:TMG.NetworkEstimation.CombinationTally.FirstWeight
  id: FirstWeight
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: FirstWeight
  nameWithType: CombinationTally.FirstWeight
  fullName: TMG.NetworkEstimation.CombinationTally.FirstWeight
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: FirstWeight
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 31
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("First Weight", 0.03F, "The weighting for the line tally.")]

      public float FirstWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("First Weight", 0.03F, "The weighting for the line tally.")>

      Public FirstWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: First Weight
    - type: System.Single
      value: 0.0299999993
    - type: System.String
      value: The weighting for the line tally.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.CombinationTally.SecondTally
  commentId: F:TMG.NetworkEstimation.CombinationTally.SecondTally
  id: SecondTally
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: SecondTally
  nameWithType: CombinationTally.SecondTally
  fullName: TMG.NetworkEstimation.CombinationTally.SecondTally
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SecondTally
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 34
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [SubModelInformation(Description = "The second tally to compute.", Required = true)]

      public IErrorTally SecondTally
    return:
      type: TMG.NetworkEstimation.IErrorTally
    content.vb: >-
      <SubModelInformation(Description:="The second tally to compute.", Required:=True)>

      Public SecondTally As IErrorTally
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The second tally to compute.
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.CombinationTally.SecondWeight
  commentId: F:TMG.NetworkEstimation.CombinationTally.SecondWeight
  id: SecondWeight
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: SecondWeight
  nameWithType: CombinationTally.SecondWeight
  fullName: TMG.NetworkEstimation.CombinationTally.SecondWeight
  type: Field
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SecondWeight
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 37
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: >-
      [RunParameter("Second Weight", 0.06F, "The weighting for the region tally.")]

      public float SecondWeight
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Second Weight", 0.06F, "The weighting for the region tally.")>

      Public SecondWeight As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Second Weight
    - type: System.Single
      value: 0.059999998700000001
    - type: System.String
      value: The weighting for the region tally.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.CombinationTally.Name
  commentId: P:TMG.NetworkEstimation.CombinationTally.Name
  id: Name
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CombinationTally.Name
  fullName: TMG.NetworkEstimation.CombinationTally.Name
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 39
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.NetworkEstimation.CombinationTally.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.NetworkEstimation.CombinationTally.Progress
  commentId: P:TMG.NetworkEstimation.CombinationTally.Progress
  id: Progress
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: CombinationTally.Progress
  fullName: TMG.NetworkEstimation.CombinationTally.Progress
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 45
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.NetworkEstimation.CombinationTally.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.CombinationTally.ProgressColour
  commentId: P:TMG.NetworkEstimation.CombinationTally.ProgressColour
  id: ProgressColour
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: CombinationTally.ProgressColour
  fullName: TMG.NetworkEstimation.CombinationTally.ProgressColour
  type: Property
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 50
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.NetworkEstimation.CombinationTally.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.NetworkEstimation.CombinationTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  commentId: M:TMG.NetworkEstimation.CombinationTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  id: ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: ComputeError(ParameterSetting[], TransitLine[], TransitLine[])
  nameWithType: CombinationTally.ComputeError(ParameterSetting[], TransitLine[], TransitLine[])
  fullName: TMG.NetworkEstimation.CombinationTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[], TMG.Emme.TransitLine[], TMG.Emme.TransitLine[])
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ComputeError
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 55
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public float ComputeError(ParameterSetting[] parameters, TransitLine[] truth, TransitLine[] predicted)
    parameters:
    - id: parameters
      type: TMG.NetworkEstimation.ParameterSetting[]
    - id: truth
      type: TMG.Emme.TransitLine[]
    - id: predicted
      type: TMG.Emme.TransitLine[]
    return:
      type: System.Single
    content.vb: Public Function ComputeError(parameters As ParameterSetting(), truth As TransitLine(), predicted As TransitLine()) As Single
  overload: TMG.NetworkEstimation.CombinationTally.ComputeError*
  implements:
  - TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  nameWithType.vb: CombinationTally.ComputeError(ParameterSetting(), TransitLine(), TransitLine())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.CombinationTally.ComputeError(TMG.NetworkEstimation.ParameterSetting(), TMG.Emme.TransitLine(), TMG.Emme.TransitLine())
  name.vb: ComputeError(ParameterSetting(), TransitLine(), TransitLine())
- uid: TMG.NetworkEstimation.CombinationTally.RuntimeValidation(System.String@)
  commentId: M:TMG.NetworkEstimation.CombinationTally.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.NetworkEstimation.CombinationTally
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: CombinationTally.RuntimeValidation(ref String)
  fullName: TMG.NetworkEstimation.CombinationTally.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/NetworkEstimation/CombinationTally.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/NetworkEstimation/CombinationTally.cs
    startLine: 62
  assemblies:
  - NetworkEstimation
  namespace: TMG.NetworkEstimation
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.NetworkEstimation.CombinationTally.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: CombinationTally.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.NetworkEstimation.CombinationTally.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.NetworkEstimation
  commentId: N:TMG.NetworkEstimation
  isExternal: false
  name: TMG.NetworkEstimation
  nameWithType: TMG.NetworkEstimation
  fullName: TMG.NetworkEstimation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.NetworkEstimation.IErrorTally
  commentId: T:TMG.NetworkEstimation.IErrorTally
  parent: TMG.NetworkEstimation
  isExternal: false
  name: IErrorTally
  nameWithType: IErrorTally
  fullName: TMG.NetworkEstimation.IErrorTally
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.NetworkEstimation.CombinationTally.Name*
  commentId: Overload:TMG.NetworkEstimation.CombinationTally.Name
  isExternal: false
  name: Name
  nameWithType: CombinationTally.Name
  fullName: TMG.NetworkEstimation.CombinationTally.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.NetworkEstimation.CombinationTally.Progress*
  commentId: Overload:TMG.NetworkEstimation.CombinationTally.Progress
  isExternal: false
  name: Progress
  nameWithType: CombinationTally.Progress
  fullName: TMG.NetworkEstimation.CombinationTally.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.NetworkEstimation.CombinationTally.ProgressColour*
  commentId: Overload:TMG.NetworkEstimation.CombinationTally.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: CombinationTally.ProgressColour
  fullName: TMG.NetworkEstimation.CombinationTally.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.CombinationTally.ComputeError*
  commentId: Overload:TMG.NetworkEstimation.CombinationTally.ComputeError
  isExternal: false
  name: ComputeError
  nameWithType: CombinationTally.ComputeError
  fullName: TMG.NetworkEstimation.CombinationTally.ComputeError
- uid: TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  commentId: M:TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
  parent: TMG.NetworkEstimation.IErrorTally
  isExternal: false
  name: ComputeError(ParameterSetting[], TransitLine[], TransitLine[])
  nameWithType: IErrorTally.ComputeError(ParameterSetting[], TransitLine[], TransitLine[])
  fullName: TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[], TMG.Emme.TransitLine[], TMG.Emme.TransitLine[])
  nameWithType.vb: IErrorTally.ComputeError(ParameterSetting(), TransitLine(), TransitLine())
  fullName.vb: TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting(), TMG.Emme.TransitLine(), TMG.Emme.TransitLine())
  name.vb: ComputeError(ParameterSetting(), TransitLine(), TransitLine())
  spec.csharp:
  - uid: TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
    name: ComputeError
    nameWithType: IErrorTally.ComputeError
    fullName: TMG.NetworkEstimation.IErrorTally.ComputeError
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.NetworkEstimation.IErrorTally.ComputeError(TMG.NetworkEstimation.ParameterSetting[],TMG.Emme.TransitLine[],TMG.Emme.TransitLine[])
    name: ComputeError
    nameWithType: IErrorTally.ComputeError
    fullName: TMG.NetworkEstimation.IErrorTally.ComputeError
  - name: (
    nameWithType: (
    fullName: (
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.NetworkEstimation.ParameterSetting[]
  name: ParameterSetting[]
  nameWithType: ParameterSetting[]
  fullName: TMG.NetworkEstimation.ParameterSetting[]
  nameWithType.vb: ParameterSetting()
  fullName.vb: TMG.NetworkEstimation.ParameterSetting()
  name.vb: ParameterSetting()
  spec.csharp:
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.NetworkEstimation.ParameterSetting
    name: ParameterSetting
    nameWithType: ParameterSetting
    fullName: TMG.NetworkEstimation.ParameterSetting
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.Emme.TransitLine[]
  name: TransitLine[]
  nameWithType: TransitLine[]
  fullName: TMG.Emme.TransitLine[]
  nameWithType.vb: TransitLine()
  fullName.vb: TMG.Emme.TransitLine()
  name.vb: TransitLine()
  spec.csharp:
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TMG.Emme.TransitLine
    name: TransitLine
    nameWithType: TransitLine
    fullName: TMG.Emme.TransitLine
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TMG.NetworkEstimation.CombinationTally.RuntimeValidation*
  commentId: Overload:TMG.NetworkEstimation.CombinationTally.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: CombinationTally.RuntimeValidation
  fullName: TMG.NetworkEstimation.CombinationTally.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
