### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  commentId: T:TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  id: DriveAccessGoStationUtility
  parent: TMG.GTAModel.DataResources
  children:
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AivttFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoCostFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoNetworkString
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.bfnew
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.BoardingFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ClosestStation
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWaitPerception
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWalkPerception
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GoTransitNetworkString
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.IvttFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MaximumAccessStations
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MinimumStationUtility
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ParkingFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Root
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation(System.String@)
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationInformationReader
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationZoneRange
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TimeOfDay
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TrainsFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitCostFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitNetworkString
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WaitTimeFactor
  - TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WalkTimeFactor
  langs:
  - csharp
  - vb
  name: DriveAccessGoStationUtility
  nameWithType: DriveAccessGoStationUtility
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  type: Class
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DriveAccessGoStationUtility
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 32
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: 'public class DriveAccessGoStationUtility : IDataSource<SparseTwinIndex<Tuple<IZone[], IZone[], float[]>>>, IDataSource, IModule'
    content.vb: >-
      Public Class DriveAccessGoStationUtility

          Implements IDataSource(Of SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single()))), IDataSource, IModule
  inheritance:
  - System.Object
  implements:
  - XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}
  - XTMF.IDataSource
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Root
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Root
  id: Root
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: DriveAccessGoStationUtility.Root
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Root
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Root
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public I4StepModel Root
    return:
      type: TMG.I4StepModel
    content.vb: Public Root As I4StepModel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TimeOfDay
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TimeOfDay
  id: TimeOfDay
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: TimeOfDay
  nameWithType: DriveAccessGoStationUtility.TimeOfDay
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TimeOfDay
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TimeOfDay
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Time of Day", "7:00AM", typeof (Time), "What time should we build the utilities for?")]

      public Time TimeOfDay
    return:
      type: XTMF.Time
    content.vb: >-
      <RunParameter("Time of Day", "7:00AM", GetType(Time), "What time should we build the utilities for?")>

      Public TimeOfDay As Time
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Time of Day
    - type: System.String
      value: 7:00AM
    - type: System.Type
      value: XTMF.Time
    - type: System.String
      value: What time should we build the utilities for?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationZoneRange
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationZoneRange
  id: StationZoneRange
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: StationZoneRange
  nameWithType: DriveAccessGoStationUtility.StationZoneRange
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationZoneRange
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationZoneRange
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Station Zone Range", "7000-7999", typeof (RangeSet), "The range of where subway station centroids are.")]

      public RangeSet StationZoneRange
    return:
      type: Datastructure.RangeSet
    content.vb: >-
      <RunParameter("Station Zone Range", "7000-7999", GetType(RangeSet), "The range of where subway station centroids are.")>

      Public StationZoneRange As RangeSet
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: Station Zone Range
    - type: System.String
      value: 7000-7999
    - type: System.Type
      value: Datastructure.RangeSet
    - type: System.String
      value: The range of where subway station centroids are.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GoTransitNetworkString
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GoTransitNetworkString
  id: GoTransitNetworkString
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: GoTransitNetworkString
  nameWithType: DriveAccessGoStationUtility.GoTransitNetworkString
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GoTransitNetworkString
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GoTransitNetworkString
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("GoTransit Network Name", "GoRail", "The name of the transit network to use for computing our transit travel times.")]

      public string GoTransitNetworkString
    return:
      type: System.String
    content.vb: >-
      <RunParameter("GoTransit Network Name", "GoRail", "The name of the transit network to use for computing our transit travel times.")>

      Public GoTransitNetworkString As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: GoTransit Network Name
    - type: System.String
      value: GoRail
    - type: System.String
      value: The name of the transit network to use for computing our transit travel times.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitNetworkString
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitNetworkString
  id: TransitNetworkString
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: TransitNetworkString
  nameWithType: DriveAccessGoStationUtility.TransitNetworkString
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitNetworkString
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TransitNetworkString
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Transit Network Name", "Transit", "The name of the transit network to use for computing our transit travel times.")]

      public string TransitNetworkString
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Transit Network Name", "Transit", "The name of the transit network to use for computing our transit travel times.")>

      Public TransitNetworkString As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transit Network Name
    - type: System.String
      value: Transit
    - type: System.String
      value: The name of the transit network to use for computing our transit travel times.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoNetworkString
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoNetworkString
  id: AutoNetworkString
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: AutoNetworkString
  nameWithType: DriveAccessGoStationUtility.AutoNetworkString
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoNetworkString
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoNetworkString
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Auto Network Name", "Auto", "The name of the Premium transit network to use for computing our transit travel times.")]

      public string AutoNetworkString
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Auto Network Name", "Auto", "The name of the Premium transit network to use for computing our transit travel times.")>

      Public AutoNetworkString As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto Network Name
    - type: System.String
      value: Auto
    - type: System.String
      value: The name of the Premium transit network to use for computing our transit travel times.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ClosestStation
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ClosestStation
  id: ClosestStation
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: ClosestStation
  nameWithType: DriveAccessGoStationUtility.ClosestStation
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ClosestStation
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ClosestStation
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Closest Station", 0F, "The constant to apply if it is the closest access station.")]

      public float ClosestStation
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Closest Station", 0F, "The constant to apply if it is the closest access station.")>

      Public ClosestStation As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Closest Station
    - type: System.Single
      value: 0
    - type: System.String
      value: The constant to apply if it is the closest access station.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AivttFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AivttFactor
  id: AivttFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: AivttFactor
  nameWithType: DriveAccessGoStationUtility.AivttFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AivttFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AivttFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 59
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Auto IVTT Factor", 0F, "The factor to apply to the auto in vehicle travel time.")]

      public float AivttFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Auto IVTT Factor", 0F, "The factor to apply to the auto in vehicle travel time.")>

      Public AivttFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto IVTT Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the auto in vehicle travel time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.IvttFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.IvttFactor
  id: IvttFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: IvttFactor
  nameWithType: DriveAccessGoStationUtility.IvttFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.IvttFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: IvttFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 62
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Ivtt Factor", 0F, "The factor to apply to the transit in vehicle travel time.")]

      public float IvttFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Ivtt Factor", 0F, "The factor to apply to the transit in vehicle travel time.")>

      Public IvttFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Ivtt Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the transit in vehicle travel time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WalkTimeFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WalkTimeFactor
  id: WalkTimeFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: WalkTimeFactor
  nameWithType: DriveAccessGoStationUtility.WalkTimeFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WalkTimeFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WalkTimeFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 65
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Walk Factor", 0F, "The factor to apply to the walk time.")]

      public float WalkTimeFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Walk Factor", 0F, "The factor to apply to the walk time.")>

      Public WalkTimeFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Walk Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the walk time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WaitTimeFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WaitTimeFactor
  id: WaitTimeFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: WaitTimeFactor
  nameWithType: DriveAccessGoStationUtility.WaitTimeFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.WaitTimeFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: WaitTimeFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 68
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Wait Factor", 0F, "The factor to apply to the wait time.")]

      public float WaitTimeFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Wait Factor", 0F, "The factor to apply to the wait time.")>

      Public WaitTimeFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Wait Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the wait time.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.BoardingFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.BoardingFactor
  id: BoardingFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: BoardingFactor
  nameWithType: DriveAccessGoStationUtility.BoardingFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.BoardingFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: BoardingFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 71
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Boarding Factor", 0F, "The factor to apply to the boardings.")]

      public float BoardingFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Boarding Factor", 0F, "The factor to apply to the boardings.")>

      Public BoardingFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Boarding Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the boardings.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoCostFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoCostFactor
  id: AutoCostFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: AutoCostFactor
  nameWithType: DriveAccessGoStationUtility.AutoCostFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.AutoCostFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AutoCostFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 74
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Auto Cost Factor", 0F, "The factor to apply to the cost of auto.")]

      public float AutoCostFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Auto Cost Factor", 0F, "The factor to apply to the cost of auto.")>

      Public AutoCostFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Auto Cost Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the cost of auto.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitCostFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitCostFactor
  id: TransitCostFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: TransitCostFactor
  nameWithType: DriveAccessGoStationUtility.TransitCostFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TransitCostFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TransitCostFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 77
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Transit Cost Factor", 0F, "The factor to apply to the cost of transit (Including GO/Premium/Local).")]

      public float TransitCostFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Transit Cost Factor", 0F, "The factor to apply to the cost of transit (Including GO/Premium/Local).")>

      Public TransitCostFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Transit Cost Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the cost of transit (Including GO/Premium/Local).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TrainsFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TrainsFactor
  id: TrainsFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: TrainsFactor
  nameWithType: DriveAccessGoStationUtility.TrainsFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.TrainsFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TrainsFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 80
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Trains Factor", 0F, "The factor to apply to the natural log of the number of trains that pass through the station.")]

      public float TrainsFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Trains Factor", 0F, "The factor to apply to the natural log of the number of trains that pass through the station.")>

      Public TrainsFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Trains Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the natural log of the number of trains that pass through the station.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ParkingFactor
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ParkingFactor
  id: ParkingFactor
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: ParkingFactor
  nameWithType: DriveAccessGoStationUtility.ParkingFactor
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ParkingFactor
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ParkingFactor
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 83
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Parking Factor", 0F, "The factor to apply to the natural log of the number of parking space available.")]

      public float ParkingFactor
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Parking Factor", 0F, "The factor to apply to the natural log of the number of parking space available.")>

      Public ParkingFactor As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Parking Factor
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor to apply to the natural log of the number of parking space available.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.bfnew
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.bfnew
  id: bfnew
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: bfnew
  nameWithType: DriveAccessGoStationUtility.bfnew
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.bfnew
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: bfnew
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 87
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("bfnew", 0F, "The factor applied to the go rail cost while computing the transit fare factor.  In DRM V2.5 2006, this parameter was set to 0, which ignores all rail cost.")]

      public float bfnew
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("bfnew", 0F, "The factor applied to the go rail cost while computing the transit fare factor.  In DRM V2.5 2006, this parameter was set to 0, which ignores all rail cost.")>

      Public bfnew As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: bfnew
    - type: System.Single
      value: 0
    - type: System.String
      value: The factor applied to the go rail cost while computing the transit fare factor.  In DRM V2.5 2006, this parameter was set to 0, which ignores all rail cost.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MaximumAccessStations
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MaximumAccessStations
  id: MaximumAccessStations
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: MaximumAccessStations
  nameWithType: DriveAccessGoStationUtility.MaximumAccessStations
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MaximumAccessStations
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MaximumAccessStations
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 90
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Maximum Access Stations", 5, "The number of access stations for each OD pair allowed.")]

      public int MaximumAccessStations
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Maximum Access Stations", 5, "The number of access stations for each OD pair allowed.")>

      Public MaximumAccessStations As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Maximum Access Stations
    - type: System.Int32
      value: 5
    - type: System.String
      value: The number of access stations for each OD pair allowed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWaitPerception
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWaitPerception
  id: EgressWaitPerception
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: EgressWaitPerception
  nameWithType: DriveAccessGoStationUtility.EgressWaitPerception
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWaitPerception
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EgressWaitPerception
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 93
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Egress Wait Perception", 2F, "The conversion between wait time for egress to in-vehicle-time units.")]

      public float EgressWaitPerception
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Egress Wait Perception", 2F, "The conversion between wait time for egress to in-vehicle-time units.")>

      Public EgressWaitPerception As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Egress Wait Perception
    - type: System.Single
      value: 2
    - type: System.String
      value: The conversion between wait time for egress to in-vehicle-time units.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWalkPerception
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWalkPerception
  id: EgressWalkPerception
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: EgressWalkPerception
  nameWithType: DriveAccessGoStationUtility.EgressWalkPerception
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.EgressWalkPerception
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EgressWalkPerception
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 96
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Egress Walk Perception", 2F, "The conversion between walk time for egress to in-vehicle-time units.")]

      public float EgressWalkPerception
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Egress Walk Perception", 2F, "The conversion between walk time for egress to in-vehicle-time units.")>

      Public EgressWalkPerception As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Egress Walk Perception
    - type: System.Single
      value: 2
    - type: System.String
      value: The conversion between walk time for egress to in-vehicle-time units.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationInformationReader
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationInformationReader
  id: StationInformationReader
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: StationInformationReader
  nameWithType: DriveAccessGoStationUtility.StationInformationReader
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.StationInformationReader
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: StationInformationReader
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 99
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [SubModelInformation(Description = "(Origin = Station Number, Destination = Parking Spots, Data = Number Of Trains)", Required = true)]

      public IReadODData<float> StationInformationReader
    return:
      type: TMG.Input.IReadODData{System.Single}
    content.vb: >-
      <SubModelInformation(Description:="(Origin = Station Number, Destination = Parking Spots, Data = Number Of Trains)", Required:=True)>

      Public StationInformationReader As IReadODData(Of Single)
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: (Origin = Station Number, Destination = Parking Spots, Data = Number Of Trains)
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MinimumStationUtility
  commentId: F:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MinimumStationUtility
  id: MinimumStationUtility
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: MinimumStationUtility
  nameWithType: DriveAccessGoStationUtility.MinimumStationUtility
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.MinimumStationUtility
  type: Field
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MinimumStationUtility
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 102
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: >-
      [RunParameter("Minimum Station Utility", -10F, "The minimum utility an access station can have.")]

      public float MinimumStationUtility
    return:
      type: System.Single
    content.vb: >-
      <RunParameter("Minimum Station Utility", -10F, "The minimum utility an access station can have.")>

      Public MinimumStationUtility As Single
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Minimum Station Utility
    - type: System.Single
      value: -10
    - type: System.String
      value: The minimum utility an access station can have.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData
  commentId: M:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData
  id: GiveData
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: GiveData()
  nameWithType: DriveAccessGoStationUtility.GiveData()
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: GiveData
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 124
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public SparseTwinIndex<Tuple<IZone[], IZone[], float[]>> GiveData()
    return:
      type: Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}
    content.vb: Public Function GiveData As SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single()))
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData*
  implements:
  - XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}.GiveData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded
  commentId: P:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded
  id: Loaded
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: DriveAccessGoStationUtility.Loaded
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded
  type: Property
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Loaded
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 129
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public bool Loaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Loaded As Boolean
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded*
  implements:
  - XTMF.IDataSource.Loaded
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData
  commentId: M:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData
  id: LoadData
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: LoadData()
  nameWithType: DriveAccessGoStationUtility.LoadData()
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: LoadData
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 136
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public void LoadData()
    content.vb: Public Sub LoadData
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData*
  implements:
  - XTMF.IDataSource.LoadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData
  commentId: M:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData
  id: UnloadData
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: UnloadData()
  nameWithType: DriveAccessGoStationUtility.UnloadData()
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData()
  type: Method
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnloadData
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 566
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public void UnloadData()
    content.vb: Public Sub UnloadData
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData*
  implements:
  - XTMF.IDataSource.UnloadData
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name
  commentId: P:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name
  id: Name
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DriveAccessGoStationUtility.Name
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 571
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress
  commentId: P:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress
  id: Progress
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: DriveAccessGoStationUtility.Progress
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 573
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour
  commentId: P:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: DriveAccessGoStationUtility.ProgressColour
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 578
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.DataResources.DriveAccessGoStationUtility
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: DriveAccessGoStationUtility.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/DataResources/DriveAccessGoStationUtility.cs
    startLine: 583
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel.DataResources
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: DriveAccessGoStationUtility.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
references:
- uid: TMG.GTAModel.DataResources
  commentId: N:TMG.GTAModel.DataResources
  isExternal: false
  name: TMG.GTAModel.DataResources
  nameWithType: TMG.GTAModel.DataResources
  fullName: TMG.GTAModel.DataResources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}
  commentId: T:XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}
  parent: XTMF
  definition: XTMF.IDataSource`1
  name: IDataSource<SparseTwinIndex<Tuple<IZone[], IZone[], Single[]>>>
  nameWithType: IDataSource<SparseTwinIndex<Tuple<IZone[], IZone[], Single[]>>>
  fullName: XTMF.IDataSource<Datastructure.SparseTwinIndex<System.Tuple<TMG.IZone[], TMG.IZone[], System.Single[]>>>
  nameWithType.vb: IDataSource(Of SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single())))
  fullName.vb: XTMF.IDataSource(Of Datastructure.SparseTwinIndex(Of System.Tuple(Of TMG.IZone(), TMG.IZone(), System.Single())))
  name.vb: IDataSource(Of SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single())))
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource
  commentId: T:XTMF.IDataSource
  parent: XTMF
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: XTMF.IDataSource
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.IDataSource`1
  commentId: T:XTMF.IDataSource`1
  isExternal: false
  name: IDataSource<T>
  nameWithType: IDataSource<T>
  fullName: XTMF.IDataSource<T>
  nameWithType.vb: IDataSource(Of T)
  fullName.vb: XTMF.IDataSource(Of T)
  name.vb: IDataSource(Of T)
  spec.csharp:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: TMG.I4StepModel
  commentId: T:TMG.I4StepModel
  parent: TMG
  isExternal: false
  name: I4StepModel
  nameWithType: I4StepModel
  fullName: TMG.I4StepModel
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF.Time
  commentId: T:XTMF.Time
  parent: XTMF
  isExternal: false
  name: Time
  nameWithType: Time
  fullName: XTMF.Time
- uid: Datastructure.RangeSet
  commentId: T:Datastructure.RangeSet
  parent: Datastructure
  isExternal: false
  name: RangeSet
  nameWithType: RangeSet
  fullName: Datastructure.RangeSet
- uid: Datastructure
  commentId: N:Datastructure
  isExternal: false
  name: Datastructure
  nameWithType: Datastructure
  fullName: Datastructure
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.Input.IReadODData{System.Single}
  commentId: T:TMG.Input.IReadODData{System.Single}
  parent: TMG.Input
  definition: TMG.Input.IReadODData`1
  name: IReadODData<Single>
  nameWithType: IReadODData<Single>
  fullName: TMG.Input.IReadODData<System.Single>
  nameWithType.vb: IReadODData(Of Single)
  fullName.vb: TMG.Input.IReadODData(Of System.Single)
  name.vb: IReadODData(Of Single)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input.IReadODData`1
  commentId: T:TMG.Input.IReadODData`1
  isExternal: false
  name: IReadODData<T>
  nameWithType: IReadODData<T>
  fullName: TMG.Input.IReadODData<T>
  nameWithType.vb: IReadODData(Of T)
  fullName.vb: TMG.Input.IReadODData(Of T)
  name.vb: IReadODData(Of T)
  spec.csharp:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TMG.Input.IReadODData`1
    name: IReadODData
    nameWithType: IReadODData
    fullName: TMG.Input.IReadODData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData
  isExternal: false
  name: GiveData
  nameWithType: DriveAccessGoStationUtility.GiveData
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.GiveData
- uid: XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}.GiveData
  commentId: M:XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}.GiveData
  parent: XTMF.IDataSource{Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}}
  definition: XTMF.IDataSource`1.GiveData
  name: GiveData()
  nameWithType: IDataSource<SparseTwinIndex<Tuple<IZone[], IZone[], Single[]>>>.GiveData()
  fullName: XTMF.IDataSource<Datastructure.SparseTwinIndex<System.Tuple<TMG.IZone[], TMG.IZone[], System.Single[]>>>.GiveData()
  nameWithType.vb: IDataSource(Of SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single()))).GiveData()
  fullName.vb: XTMF.IDataSource(Of Datastructure.SparseTwinIndex(Of System.Tuple(Of TMG.IZone(), TMG.IZone(), System.Single()))).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<SparseTwinIndex<Tuple<IZone[], IZone[], Single[]>>>.GiveData
    fullName: XTMF.IDataSource<Datastructure.SparseTwinIndex<System.Tuple<TMG.IZone[], TMG.IZone[], System.Single[]>>>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single()))).GiveData
    fullName: XTMF.IDataSource(Of Datastructure.SparseTwinIndex(Of System.Tuple(Of TMG.IZone(), TMG.IZone(), System.Single()))).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}
  commentId: T:Datastructure.SparseTwinIndex{System.Tuple{TMG.IZone[],TMG.IZone[],System.Single[]}}
  parent: Datastructure
  definition: Datastructure.SparseTwinIndex`1
  name: SparseTwinIndex<Tuple<IZone[], IZone[], Single[]>>
  nameWithType: SparseTwinIndex<Tuple<IZone[], IZone[], Single[]>>
  fullName: Datastructure.SparseTwinIndex<System.Tuple<TMG.IZone[], TMG.IZone[], System.Single[]>>
  nameWithType.vb: SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single()))
  fullName.vb: Datastructure.SparseTwinIndex(Of System.Tuple(Of TMG.IZone(), TMG.IZone(), System.Single()))
  name.vb: SparseTwinIndex(Of Tuple(Of IZone(), IZone(), Single()))
  spec.csharp:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.IZone
    name: IZone
    nameWithType: IZone
    fullName: TMG.IZone
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IDataSource`1.GiveData
  commentId: M:XTMF.IDataSource`1.GiveData
  isExternal: false
  name: GiveData()
  nameWithType: IDataSource<T>.GiveData()
  fullName: XTMF.IDataSource<T>.GiveData()
  nameWithType.vb: IDataSource(Of T).GiveData()
  fullName.vb: XTMF.IDataSource(Of T).GiveData()
  spec.csharp:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource<T>.GiveData
    fullName: XTMF.IDataSource<T>.GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource`1.GiveData
    name: GiveData
    nameWithType: IDataSource(Of T).GiveData
    fullName: XTMF.IDataSource(Of T).GiveData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Datastructure.SparseTwinIndex`1
  commentId: T:Datastructure.SparseTwinIndex`1
  isExternal: false
  name: SparseTwinIndex<T>
  nameWithType: SparseTwinIndex<T>
  fullName: Datastructure.SparseTwinIndex<T>
  nameWithType.vb: SparseTwinIndex(Of T)
  fullName.vb: Datastructure.SparseTwinIndex(Of T)
  name.vb: SparseTwinIndex(Of T)
  spec.csharp:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Datastructure.SparseTwinIndex`1
    name: SparseTwinIndex
    nameWithType: SparseTwinIndex
    fullName: Datastructure.SparseTwinIndex
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded
  isExternal: false
  name: Loaded
  nameWithType: DriveAccessGoStationUtility.Loaded
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Loaded
- uid: XTMF.IDataSource.Loaded
  commentId: P:XTMF.IDataSource.Loaded
  parent: XTMF.IDataSource
  isExternal: false
  name: Loaded
  nameWithType: IDataSource.Loaded
  fullName: XTMF.IDataSource.Loaded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData
  isExternal: false
  name: LoadData
  nameWithType: DriveAccessGoStationUtility.LoadData
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.LoadData
- uid: XTMF.IDataSource.LoadData
  commentId: M:XTMF.IDataSource.LoadData
  parent: XTMF.IDataSource
  isExternal: false
  name: LoadData()
  nameWithType: IDataSource.LoadData()
  fullName: XTMF.IDataSource.LoadData()
  spec.csharp:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.LoadData
    name: LoadData
    nameWithType: IDataSource.LoadData
    fullName: XTMF.IDataSource.LoadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData
  isExternal: false
  name: UnloadData
  nameWithType: DriveAccessGoStationUtility.UnloadData
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.UnloadData
- uid: XTMF.IDataSource.UnloadData
  commentId: M:XTMF.IDataSource.UnloadData
  parent: XTMF.IDataSource
  isExternal: false
  name: UnloadData()
  nameWithType: IDataSource.UnloadData()
  fullName: XTMF.IDataSource.UnloadData()
  spec.csharp:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IDataSource.UnloadData
    name: UnloadData
    nameWithType: IDataSource.UnloadData
    fullName: XTMF.IDataSource.UnloadData
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name
  isExternal: false
  name: Name
  nameWithType: DriveAccessGoStationUtility.Name
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress
  isExternal: false
  name: Progress
  nameWithType: DriveAccessGoStationUtility.Progress
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: DriveAccessGoStationUtility.ProgressColour
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: DriveAccessGoStationUtility.RuntimeValidation
  fullName: TMG.GTAModel.DataResources.DriveAccessGoStationUtility.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
