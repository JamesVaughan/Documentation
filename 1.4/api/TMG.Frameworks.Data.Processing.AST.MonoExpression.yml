### YamlMime:ManagedReference
items:
- uid: TMG.Frameworks.Data.Processing.AST.MonoExpression
  commentId: T:TMG.Frameworks.Data.Processing.AST.MonoExpression
  id: MonoExpression
  parent: TMG.Frameworks.Data.Processing.AST
  children:
  - TMG.Frameworks.Data.Processing.AST.MonoExpression.#ctor(System.Int32)
  - TMG.Frameworks.Data.Processing.AST.MonoExpression.InnerExpression
  langs:
  - csharp
  - vb
  name: MonoExpression
  nameWithType: MonoExpression
  fullName: TMG.Frameworks.Data.Processing.AST.MonoExpression
  type: Class
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Processing/AST/Expression.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: MonoExpression
    path: ../../XTMF/Code/TMG.Frameworks/Data/Processing/AST/Expression.cs
    startLine: 549
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Processing.AST
  syntax:
    content: 'public abstract class MonoExpression : Expression'
    content.vb: >-
      Public MustInherit Class MonoExpression

          Inherits Expression
  inheritance:
  - System.Object
  - TMG.Frameworks.Data.Processing.AST.AstNode
  - TMG.Frameworks.Data.Processing.AST.Expression
  derivedClasses:
  - TMG.Frameworks.Data.Processing.AST.Bracket
  - TMG.Frameworks.Data.Processing.AST.Negate
  inheritedMembers:
  - TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char[],System.Int32,System.Int32,TMG.Frameworks.Data.Processing.AST.Expression@,System.String@)
  - TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TMG.Frameworks.Data.Processing.AST.MonoExpression.InnerExpression
  commentId: F:TMG.Frameworks.Data.Processing.AST.MonoExpression.InnerExpression
  id: InnerExpression
  parent: TMG.Frameworks.Data.Processing.AST.MonoExpression
  langs:
  - csharp
  - vb
  name: InnerExpression
  nameWithType: MonoExpression.InnerExpression
  fullName: TMG.Frameworks.Data.Processing.AST.MonoExpression.InnerExpression
  type: Field
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Processing/AST/Expression.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InnerExpression
    path: ../../XTMF/Code/TMG.Frameworks/Data/Processing/AST/Expression.cs
    startLine: 551
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Processing.AST
  syntax:
    content: public Expression InnerExpression
    return:
      type: TMG.Frameworks.Data.Processing.AST.Expression
    content.vb: Public InnerExpression As Expression
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.Frameworks.Data.Processing.AST.MonoExpression.#ctor(System.Int32)
  commentId: M:TMG.Frameworks.Data.Processing.AST.MonoExpression.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: TMG.Frameworks.Data.Processing.AST.MonoExpression
  langs:
  - csharp
  - vb
  name: MonoExpression(Int32)
  nameWithType: MonoExpression.MonoExpression(Int32)
  fullName: TMG.Frameworks.Data.Processing.AST.MonoExpression.MonoExpression(System.Int32)
  type: Constructor
  source:
    remote:
      path: Code/TMG.Frameworks/Data/Processing/AST/Expression.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: .ctor
    path: ../../XTMF/Code/TMG.Frameworks/Data/Processing/AST/Expression.cs
    startLine: 553
  assemblies:
  - TMG.Frameworks
  namespace: TMG.Frameworks.Data.Processing.AST
  syntax:
    content: public MonoExpression(int start)
    parameters:
    - id: start
      type: System.Int32
    content.vb: Public Sub New(start As Integer)
  overload: TMG.Frameworks.Data.Processing.AST.MonoExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.Frameworks.Data.Processing.AST
  commentId: N:TMG.Frameworks.Data.Processing.AST
  isExternal: false
  name: TMG.Frameworks.Data.Processing.AST
  nameWithType: TMG.Frameworks.Data.Processing.AST
  fullName: TMG.Frameworks.Data.Processing.AST
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.Frameworks.Data.Processing.AST.AstNode
  commentId: T:TMG.Frameworks.Data.Processing.AST.AstNode
  parent: TMG.Frameworks.Data.Processing.AST
  isExternal: false
  name: AstNode
  nameWithType: AstNode
  fullName: TMG.Frameworks.Data.Processing.AST.AstNode
- uid: TMG.Frameworks.Data.Processing.AST.Expression
  commentId: T:TMG.Frameworks.Data.Processing.AST.Expression
  parent: TMG.Frameworks.Data.Processing.AST
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: TMG.Frameworks.Data.Processing.AST.Expression
- uid: TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char[],System.Int32,System.Int32,TMG.Frameworks.Data.Processing.AST.Expression@,System.String@)
  commentId: M:TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char[],System.Int32,System.Int32,TMG.Frameworks.Data.Processing.AST.Expression@,System.String@)
  parent: TMG.Frameworks.Data.Processing.AST.Expression
  isExternal: true
  name: Compile(Char[], Int32, Int32, Expression, String)
  nameWithType: Expression.Compile(Char[], Int32, Int32, Expression, String)
  fullName: TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char[], System.Int32, System.Int32, TMG.Frameworks.Data.Processing.AST.Expression, System.String)
  nameWithType.vb: Expression.Compile(Char(), Int32, Int32, Expression, String)
  fullName.vb: TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char(), System.Int32, System.Int32, TMG.Frameworks.Data.Processing.AST.Expression, System.String)
  name.vb: Compile(Char(), Int32, Int32, Expression, String)
  spec.csharp:
  - uid: TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char[],System.Int32,System.Int32,TMG.Frameworks.Data.Processing.AST.Expression@,System.String@)
    name: Compile
    nameWithType: Expression.Compile
    fullName: TMG.Frameworks.Data.Processing.AST.Expression.Compile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Frameworks.Data.Processing.AST.Expression
    name: Expression
    nameWithType: Expression
    fullName: TMG.Frameworks.Data.Processing.AST.Expression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Frameworks.Data.Processing.AST.Expression.Compile(System.Char[],System.Int32,System.Int32,TMG.Frameworks.Data.Processing.AST.Expression@,System.String@)
    name: Compile
    nameWithType: Expression.Compile
    fullName: TMG.Frameworks.Data.Processing.AST.Expression.Compile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TMG.Frameworks.Data.Processing.AST.Expression
    name: Expression
    nameWithType: Expression
    fullName: TMG.Frameworks.Data.Processing.AST.Expression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource[])
  commentId: M:TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource[])
  parent: TMG.Frameworks.Data.Processing.AST.AstNode
  isExternal: false
  name: Evaluate(IDataSource[])
  nameWithType: AstNode.Evaluate(IDataSource[])
  fullName: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource[])
  nameWithType.vb: AstNode.Evaluate(IDataSource())
  fullName.vb: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource())
  name.vb: Evaluate(IDataSource())
  spec.csharp:
  - uid: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource[])
    name: Evaluate
    nameWithType: AstNode.Evaluate
    fullName: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate(XTMF.IDataSource[])
    name: Evaluate
    nameWithType: AstNode.Evaluate
    fullName: TMG.Frameworks.Data.Processing.AST.AstNode.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG.Frameworks.Data.Processing.AST.MonoExpression.#ctor*
  commentId: Overload:TMG.Frameworks.Data.Processing.AST.MonoExpression.#ctor
  isExternal: false
  name: MonoExpression
  nameWithType: MonoExpression.MonoExpression
  fullName: TMG.Frameworks.Data.Processing.AST.MonoExpression.MonoExpression
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
