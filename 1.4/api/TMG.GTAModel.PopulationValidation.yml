### YamlMime:ManagedReference
items:
- uid: TMG.GTAModel.PopulationValidation
  commentId: T:TMG.GTAModel.PopulationValidation
  id: PopulationValidation
  parent: TMG.GTAModel
  children:
  - TMG.GTAModel.PopulationValidation.AgeReportFile
  - TMG.GTAModel.PopulationValidation.Demographics
  - TMG.GTAModel.PopulationValidation.DriversLicenseReportFile
  - TMG.GTAModel.PopulationValidation.EmploymentStatusReportFile
  - TMG.GTAModel.PopulationValidation.ExitRequest
  - TMG.GTAModel.PopulationValidation.InputBaseDirectory
  - TMG.GTAModel.PopulationValidation.Name
  - TMG.GTAModel.PopulationValidation.NetworkData
  - TMG.GTAModel.PopulationValidation.OccupationReportFile
  - TMG.GTAModel.PopulationValidation.OutputBaseDirectory
  - TMG.GTAModel.PopulationValidation.Population
  - TMG.GTAModel.PopulationValidation.Progress
  - TMG.GTAModel.PopulationValidation.ProgressColour
  - TMG.GTAModel.PopulationValidation.RuntimeValidation(System.String@)
  - TMG.GTAModel.PopulationValidation.Start
  - TMG.GTAModel.PopulationValidation.SyntheticPopulationFile
  - TMG.GTAModel.PopulationValidation.UnemployedEmploymentStatus
  - TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus
  - TMG.GTAModel.PopulationValidation.ZoneSystem
  langs:
  - csharp
  - vb
  name: PopulationValidation
  nameWithType: PopulationValidation
  fullName: TMG.GTAModel.PopulationValidation
  type: Class
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: PopulationValidation
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 31
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: 'public class PopulationValidation : ITravelDemandModel, IModelSystemTemplate, ISelfContainedModule, IModule'
    content.vb: >-
      Public Class PopulationValidation

          Implements ITravelDemandModel, IModelSystemTemplate, ISelfContainedModule, IModule
  inheritance:
  - System.Object
  implements:
  - TMG.ITravelDemandModel
  - XTMF.IModelSystemTemplate
  - XTMF.ISelfContainedModule
  - XTMF.IModule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  - XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TMG.GTAModel.PopulationValidation.AgeReportFile
  commentId: F:TMG.GTAModel.PopulationValidation.AgeReportFile
  id: AgeReportFile
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: AgeReportFile
  nameWithType: PopulationValidation.AgeReportFile
  fullName: TMG.GTAModel.PopulationValidation.AgeReportFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: AgeReportFile
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 38
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Age Zone Report", "AgeZoneReport.csv", "The location that the age report will be saved to.")]

      public string AgeReportFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Age Zone Report", "AgeZoneReport.csv", "The location that the age report will be saved to.")>

      Public AgeReportFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Age Zone Report
    - type: System.String
      value: AgeZoneReport.csv
    - type: System.String
      value: The location that the age report will be saved to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.Demographics
  commentId: F:TMG.GTAModel.PopulationValidation.Demographics
  id: Demographics
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: Demographics
  nameWithType: PopulationValidation.Demographics
  fullName: TMG.GTAModel.PopulationValidation.Demographics
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Demographics
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 41
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "The demographic information to compare to the synthetic population", Required = true)]

      public IDemographicsData Demographics
    return:
      type: TMG.IDemographicsData
    content.vb: >-
      <SubModelInformation(Description:="The demographic information to compare to the synthetic population", Required:=True)>

      Public Demographics As IDemographicsData
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The demographic information to compare to the synthetic population
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.DriversLicenseReportFile
  commentId: F:TMG.GTAModel.PopulationValidation.DriversLicenseReportFile
  id: DriversLicenseReportFile
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: DriversLicenseReportFile
  nameWithType: PopulationValidation.DriversLicenseReportFile
  fullName: TMG.GTAModel.PopulationValidation.DriversLicenseReportFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: DriversLicenseReportFile
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 44
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter(" Drivers License Report", "DriversLicenseReport.csv", typeof (FileFromOutputDirectory), "The location that the driver's license report will be saved to.")]

      public FileFromOutputDirectory DriversLicenseReportFile
    return:
      type: TMG.Input.FileFromOutputDirectory
    content.vb: >-
      <RunParameter(" Drivers License Report", "DriversLicenseReport.csv", GetType(FileFromOutputDirectory), "The location that the driver's license report will be saved to.")>

      Public DriversLicenseReportFile As FileFromOutputDirectory
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.String,System.Type,System.String)
    arguments:
    - type: System.String
      value: " Drivers License Report"
    - type: System.String
      value: DriversLicenseReport.csv
    - type: System.Type
      value: TMG.Input.FileFromOutputDirectory
    - type: System.String
      value: The location that the driver's license report will be saved to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.EmploymentStatusReportFile
  commentId: F:TMG.GTAModel.PopulationValidation.EmploymentStatusReportFile
  id: EmploymentStatusReportFile
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: EmploymentStatusReportFile
  nameWithType: PopulationValidation.EmploymentStatusReportFile
  fullName: TMG.GTAModel.PopulationValidation.EmploymentStatusReportFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: EmploymentStatusReportFile
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 47
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Employment Status Zone Report", "EmploymentStatusZoneReport.csv", "The location that the employment report will be saved to.")]

      public string EmploymentStatusReportFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Employment Status Zone Report", "EmploymentStatusZoneReport.csv", "The location that the employment report will be saved to.")>

      Public EmploymentStatusReportFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Employment Status Zone Report
    - type: System.String
      value: EmploymentStatusZoneReport.csv
    - type: System.String
      value: The location that the employment report will be saved to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.OccupationReportFile
  commentId: F:TMG.GTAModel.PopulationValidation.OccupationReportFile
  id: OccupationReportFile
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: OccupationReportFile
  nameWithType: PopulationValidation.OccupationReportFile
  fullName: TMG.GTAModel.PopulationValidation.OccupationReportFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OccupationReportFile
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 50
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Occupation Zone Report", "OccupationZoneReport.csv", "The location that the occupation report will be saved to.")]

      public string OccupationReportFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Occupation Zone Report", "OccupationZoneReport.csv", "The location that the occupation report will be saved to.")>

      Public OccupationReportFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Occupation Zone Report
    - type: System.String
      value: OccupationZoneReport.csv
    - type: System.String
      value: The location that the occupation report will be saved to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.Population
  commentId: F:TMG.GTAModel.PopulationValidation.Population
  id: Population
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: Population
  nameWithType: PopulationValidation.Population
  fullName: TMG.GTAModel.PopulationValidation.Population
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Population
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 53
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "The population type to use for reading in the synthetic population", Required = true)]

      public IPopulation Population
    return:
      type: TMG.IPopulation
    content.vb: >-
      <SubModelInformation(Description:="The population type to use for reading in the synthetic population", Required:=True)>

      Public Population As IPopulation
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The population type to use for reading in the synthetic population
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.SyntheticPopulationFile
  commentId: F:TMG.GTAModel.PopulationValidation.SyntheticPopulationFile
  id: SyntheticPopulationFile
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: SyntheticPopulationFile
  nameWithType: PopulationValidation.SyntheticPopulationFile
  fullName: TMG.GTAModel.PopulationValidation.SyntheticPopulationFile
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: SyntheticPopulationFile
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 56
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Synthetic Population File", "SyntheticPopulation.csv", "The location and name of the file that contains the synthetic population")]

      public string SyntheticPopulationFile
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Synthetic Population File", "SyntheticPopulation.csv", "The location and name of the file that contains the synthetic population")>

      Public SyntheticPopulationFile As String
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Synthetic Population File
    - type: System.String
      value: SyntheticPopulation.csv
    - type: System.String
      value: The location and name of the file that contains the synthetic population
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.UnemployedEmploymentStatus
  commentId: F:TMG.GTAModel.PopulationValidation.UnemployedEmploymentStatus
  id: UnemployedEmploymentStatus
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: UnemployedEmploymentStatus
  nameWithType: PopulationValidation.UnemployedEmploymentStatus
  fullName: TMG.GTAModel.PopulationValidation.UnemployedEmploymentStatus
  type: Field
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: UnemployedEmploymentStatus
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 59
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Unemployment Status", 0, "The number that co-responds with a person not being employed")]

      public int UnemployedEmploymentStatus
    return:
      type: System.Int32
    content.vb: >-
      <RunParameter("Unemployment Status", 0, "The number that co-responds with a person not being employed")>

      Public UnemployedEmploymentStatus As Integer
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Unemployment Status
    - type: System.Int32
      value: 0
    - type: System.String
      value: The number that co-responds with a person not being employed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.InputBaseDirectory
  commentId: P:TMG.GTAModel.PopulationValidation.InputBaseDirectory
  id: InputBaseDirectory
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: InputBaseDirectory
  nameWithType: PopulationValidation.InputBaseDirectory
  fullName: TMG.GTAModel.PopulationValidation.InputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: InputBaseDirectory
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 65
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [RunParameter("Input Directory", "../../Input", "The directory that our input is located in.")]

      public string InputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RunParameter("Input Directory", "../../Input", "The directory that our input is located in.")>

      Public Property InputBaseDirectory As String
  overload: TMG.GTAModel.PopulationValidation.InputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.InputBaseDirectory
  attributes:
  - type: XTMF.RunParameterAttribute
    ctor: XTMF.RunParameterAttribute.#ctor(System.String,System.Object,System.String)
    arguments:
    - type: System.String
      value: Input Directory
    - type: System.String
      value: ../../Input
    - type: System.String
      value: The directory that our input is located in.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.Name
  commentId: P:TMG.GTAModel.PopulationValidation.Name
  id: Name
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PopulationValidation.Name
  fullName: TMG.GTAModel.PopulationValidation.Name
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Name
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 72
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: TMG.GTAModel.PopulationValidation.Name*
  implements:
  - XTMF.IModule.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.NetworkData
  commentId: P:TMG.GTAModel.PopulationValidation.NetworkData
  id: NetworkData
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: NetworkData
  nameWithType: PopulationValidation.NetworkData
  fullName: TMG.GTAModel.PopulationValidation.NetworkData
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: NetworkData
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 78
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public IList<INetworkData> NetworkData { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{TMG.INetworkData}
    content.vb: Public ReadOnly Property NetworkData As IList(Of INetworkData)
  overload: TMG.GTAModel.PopulationValidation.NetworkData*
  implements:
  - TMG.ITravelDemandModel.NetworkData
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.PopulationValidation.OutputBaseDirectory
  commentId: P:TMG.GTAModel.PopulationValidation.OutputBaseDirectory
  id: OutputBaseDirectory
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: OutputBaseDirectory
  nameWithType: PopulationValidation.OutputBaseDirectory
  fullName: TMG.GTAModel.PopulationValidation.OutputBaseDirectory
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: OutputBaseDirectory
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 81
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public string OutputBaseDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputBaseDirectory As String
  overload: TMG.GTAModel.PopulationValidation.OutputBaseDirectory*
  implements:
  - XTMF.IModelSystemTemplate.OutputBaseDirectory
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.Progress
  commentId: P:TMG.GTAModel.PopulationValidation.Progress
  id: Progress
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: Progress
  nameWithType: PopulationValidation.Progress
  fullName: TMG.GTAModel.PopulationValidation.Progress
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Progress
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 87
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public float Progress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Progress As Single
  overload: TMG.GTAModel.PopulationValidation.Progress*
  implements:
  - XTMF.IModule.Progress
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.PopulationValidation.ProgressColour
  commentId: P:TMG.GTAModel.PopulationValidation.ProgressColour
  id: ProgressColour
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: ProgressColour
  nameWithType: PopulationValidation.ProgressColour
  fullName: TMG.GTAModel.PopulationValidation.ProgressColour
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ProgressColour
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 92
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public Tuple<byte, byte, byte> ProgressColour { get; }
    parameters: []
    return:
      type: System.Tuple{System.Byte,System.Byte,System.Byte}
    content.vb: Public ReadOnly Property ProgressColour As Tuple(Of Byte, Byte, Byte)
  overload: TMG.GTAModel.PopulationValidation.ProgressColour*
  implements:
  - XTMF.IModule.ProgressColour
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TMG.GTAModel.PopulationValidation.ZoneSystem
  commentId: P:TMG.GTAModel.PopulationValidation.ZoneSystem
  id: ZoneSystem
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: ZoneSystem
  nameWithType: PopulationValidation.ZoneSystem
  fullName: TMG.GTAModel.PopulationValidation.ZoneSystem
  type: Property
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ZoneSystem
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 97
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: >-
      [SubModelInformation(Description = "The zone system for the synthetic population", Required = true)]

      public IZoneSystem ZoneSystem { get; set; }
    parameters: []
    return:
      type: TMG.IZoneSystem
    content.vb: >-
      <SubModelInformation(Description:="The zone system for the synthetic population", Required:=True)>

      Public Property ZoneSystem As IZoneSystem
  overload: TMG.GTAModel.PopulationValidation.ZoneSystem*
  implements:
  - TMG.ITravelDemandModel.ZoneSystem
  attributes:
  - type: XTMF.SubModelInformation
    ctor: XTMF.SubModelInformation.#ctor
    arguments: []
    namedArguments:
    - name: Description
      type: System.String
      value: The zone system for the synthetic population
    - name: Required
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.ExitRequest
  commentId: M:TMG.GTAModel.PopulationValidation.ExitRequest
  id: ExitRequest
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: ExitRequest()
  nameWithType: PopulationValidation.ExitRequest()
  fullName: TMG.GTAModel.PopulationValidation.ExitRequest()
  type: Method
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ExitRequest
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 104
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public bool ExitRequest()
    return:
      type: System.Boolean
    content.vb: Public Function ExitRequest As Boolean
  overload: TMG.GTAModel.PopulationValidation.ExitRequest*
  implements:
  - XTMF.IModelSystemTemplate.ExitRequest
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.RuntimeValidation(System.String@)
  commentId: M:TMG.GTAModel.PopulationValidation.RuntimeValidation(System.String@)
  id: RuntimeValidation(System.String@)
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: RuntimeValidation(ref String)
  nameWithType: PopulationValidation.RuntimeValidation(ref String)
  fullName: TMG.GTAModel.PopulationValidation.RuntimeValidation(ref System.String)
  type: Method
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: RuntimeValidation
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 109
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public bool RuntimeValidation(ref string error)
    parameters:
    - id: error
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function RuntimeValidation(ByRef error As String) As Boolean
  overload: TMG.GTAModel.PopulationValidation.RuntimeValidation*
  implements:
  - XTMF.IModule.RuntimeValidation(System.String@)
  nameWithType.vb: PopulationValidation.RuntimeValidation(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TMG.GTAModel.PopulationValidation.RuntimeValidation(ByRef System.String)
  name.vb: RuntimeValidation(ByRef String)
- uid: TMG.GTAModel.PopulationValidation.Start
  commentId: M:TMG.GTAModel.PopulationValidation.Start
  id: Start
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: PopulationValidation.Start()
  fullName: TMG.GTAModel.PopulationValidation.Start()
  type: Method
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: Start
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 119
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: TMG.GTAModel.PopulationValidation.Start*
  implements:
  - XTMF.ISelfContainedModule.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus
  commentId: M:TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus
  id: ValidateEmploymentStatus
  parent: TMG.GTAModel.PopulationValidation
  langs:
  - csharp
  - vb
  name: ValidateEmploymentStatus()
  nameWithType: PopulationValidation.ValidateEmploymentStatus()
  fullName: TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus()
  type: Method
  source:
    remote:
      path: Code/GTAModel/PopulationValidation.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: ValidateEmploymentStatus
    path: ../../XTMF/Code/GTAModel/PopulationValidation.cs
    startLine: 141
  assemblies:
  - GTAModel
  namespace: TMG.GTAModel
  syntax:
    content: public void ValidateEmploymentStatus()
    content.vb: Public Sub ValidateEmploymentStatus
  overload: TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TMG.GTAModel
  commentId: N:TMG.GTAModel
  isExternal: false
  name: TMG.GTAModel
  nameWithType: TMG.GTAModel
  fullName: TMG.GTAModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TMG.ITravelDemandModel
  commentId: T:TMG.ITravelDemandModel
  parent: TMG
  isExternal: false
  name: ITravelDemandModel
  nameWithType: ITravelDemandModel
  fullName: TMG.ITravelDemandModel
- uid: XTMF.IModelSystemTemplate
  commentId: T:XTMF.IModelSystemTemplate
  parent: XTMF
  isExternal: false
  name: IModelSystemTemplate
  nameWithType: IModelSystemTemplate
  fullName: XTMF.IModelSystemTemplate
- uid: XTMF.ISelfContainedModule
  commentId: T:XTMF.ISelfContainedModule
  parent: XTMF
  isExternal: false
  name: ISelfContainedModule
  nameWithType: ISelfContainedModule
  fullName: XTMF.ISelfContainedModule
- uid: XTMF.IModule
  commentId: T:XTMF.IModule
  parent: XTMF
  isExternal: false
  name: IModule
  nameWithType: IModule
  fullName: XTMF.IModule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  name: EnsureExactlyOne(IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: XTMF.IModule.TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{{T}},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  parent: TMG.Functions.ModuleHelper
  definition: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  name: EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TMG
  commentId: N:TMG
  isExternal: false
  name: TMG
  nameWithType: TMG
  fullName: TMG
- uid: XTMF
  commentId: N:XTMF
  isExternal: false
  name: XTMF
  nameWithType: XTMF
  fullName: XTMF
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureExactlyOneAndOfSameType(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType<T>
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType<T>
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureExactlyOneAndOfSameType(Of T)
    nameWithType: ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOneAndOfSameType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper
  commentId: T:TMG.Functions.ModuleHelper
  parent: TMG.Functions
  isExternal: false
  name: ModuleHelper
  nameWithType: ModuleHelper
  fullName: TMG.Functions.ModuleHelper
- uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
  isExternal: true
  name: EnsureExactlyOne(IModule, IModule, IModule, String)
  nameWithType: ModuleHelper.EnsureExactlyOne(IModule, IModule, IModule, String)
  fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule, XTMF.IModule, XTMF.IModule, System.String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureExactlyOne(XTMF.IModule,XTMF.IModule,XTMF.IModule,System.String@)
    name: EnsureExactlyOne
    nameWithType: ModuleHelper.EnsureExactlyOne
    fullName: TMG.Functions.ModuleHelper.EnsureExactlyOne
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  commentId: M:TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
  isExternal: true
  name: EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  nameWithType: ModuleHelper.EnsureTypesMatch<T>(IModule, IDataSource<T>, IResource, String)
  fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>(XTMF.IModule, XTMF.IDataSource<T>, XTMF.IResource, System.String)
  nameWithType.vb: ModuleHelper.EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  fullName.vb: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)(XTMF.IModule, XTMF.IDataSource(Of T), XTMF.IResource, System.String)
  name.vb: EnsureTypesMatch(Of T)(IModule, IDataSource(Of T), IResource, String)
  spec.csharp:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch<T>
    nameWithType: ModuleHelper.EnsureTypesMatch<T>
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TMG.Functions.ModuleHelper.EnsureTypesMatch``1(XTMF.IModule,XTMF.IDataSource{``0},XTMF.IResource,System.String@)
    name: EnsureTypesMatch(Of T)
    nameWithType: ModuleHelper.EnsureTypesMatch(Of T)
    fullName: TMG.Functions.ModuleHelper.EnsureTypesMatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: XTMF.IModule
    name: IModule
    nameWithType: IModule
    fullName: XTMF.IModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IDataSource`1
    name: IDataSource
    nameWithType: IDataSource
    fullName: XTMF.IDataSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: XTMF.IResource
    name: IResource
    nameWithType: IResource
    fullName: XTMF.IResource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.Functions
  commentId: N:TMG.Functions
  isExternal: false
  name: TMG.Functions
  nameWithType: TMG.Functions
  fullName: TMG.Functions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TMG.IDemographicsData
  commentId: T:TMG.IDemographicsData
  parent: TMG
  isExternal: false
  name: IDemographicsData
  nameWithType: IDemographicsData
  fullName: TMG.IDemographicsData
- uid: TMG.Input.FileFromOutputDirectory
  commentId: T:TMG.Input.FileFromOutputDirectory
  parent: TMG.Input
  isExternal: false
  name: FileFromOutputDirectory
  nameWithType: FileFromOutputDirectory
  fullName: TMG.Input.FileFromOutputDirectory
- uid: TMG.Input
  commentId: N:TMG.Input
  isExternal: false
  name: TMG.Input
  nameWithType: TMG.Input
  fullName: TMG.Input
- uid: TMG.IPopulation
  commentId: T:TMG.IPopulation
  parent: TMG
  isExternal: false
  name: IPopulation
  nameWithType: IPopulation
  fullName: TMG.IPopulation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TMG.GTAModel.PopulationValidation.InputBaseDirectory*
  commentId: Overload:TMG.GTAModel.PopulationValidation.InputBaseDirectory
  isExternal: false
  name: InputBaseDirectory
  nameWithType: PopulationValidation.InputBaseDirectory
  fullName: TMG.GTAModel.PopulationValidation.InputBaseDirectory
- uid: XTMF.IModelSystemTemplate.InputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.InputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: InputBaseDirectory
  nameWithType: IModelSystemTemplate.InputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.InputBaseDirectory
- uid: TMG.GTAModel.PopulationValidation.Name*
  commentId: Overload:TMG.GTAModel.PopulationValidation.Name
  isExternal: false
  name: Name
  nameWithType: PopulationValidation.Name
  fullName: TMG.GTAModel.PopulationValidation.Name
- uid: XTMF.IModule.Name
  commentId: P:XTMF.IModule.Name
  parent: XTMF.IModule
  isExternal: false
  name: Name
  nameWithType: IModule.Name
  fullName: XTMF.IModule.Name
- uid: TMG.GTAModel.PopulationValidation.NetworkData*
  commentId: Overload:TMG.GTAModel.PopulationValidation.NetworkData
  isExternal: false
  name: NetworkData
  nameWithType: PopulationValidation.NetworkData
  fullName: TMG.GTAModel.PopulationValidation.NetworkData
- uid: TMG.ITravelDemandModel.NetworkData
  commentId: P:TMG.ITravelDemandModel.NetworkData
  parent: TMG.ITravelDemandModel
  isExternal: false
  name: NetworkData
  nameWithType: ITravelDemandModel.NetworkData
  fullName: TMG.ITravelDemandModel.NetworkData
- uid: System.Collections.Generic.IList{TMG.INetworkData}
  commentId: T:System.Collections.Generic.IList{TMG.INetworkData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<INetworkData>
  nameWithType: IList<INetworkData>
  fullName: System.Collections.Generic.IList<TMG.INetworkData>
  nameWithType.vb: IList(Of INetworkData)
  fullName.vb: System.Collections.Generic.IList(Of TMG.INetworkData)
  name.vb: IList(Of INetworkData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TMG.INetworkData
    name: INetworkData
    nameWithType: INetworkData
    fullName: TMG.INetworkData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TMG.GTAModel.PopulationValidation.OutputBaseDirectory*
  commentId: Overload:TMG.GTAModel.PopulationValidation.OutputBaseDirectory
  isExternal: false
  name: OutputBaseDirectory
  nameWithType: PopulationValidation.OutputBaseDirectory
  fullName: TMG.GTAModel.PopulationValidation.OutputBaseDirectory
- uid: XTMF.IModelSystemTemplate.OutputBaseDirectory
  commentId: P:XTMF.IModelSystemTemplate.OutputBaseDirectory
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: OutputBaseDirectory
  nameWithType: IModelSystemTemplate.OutputBaseDirectory
  fullName: XTMF.IModelSystemTemplate.OutputBaseDirectory
- uid: TMG.GTAModel.PopulationValidation.Progress*
  commentId: Overload:TMG.GTAModel.PopulationValidation.Progress
  isExternal: false
  name: Progress
  nameWithType: PopulationValidation.Progress
  fullName: TMG.GTAModel.PopulationValidation.Progress
- uid: XTMF.IModule.Progress
  commentId: P:XTMF.IModule.Progress
  parent: XTMF.IModule
  isExternal: false
  name: Progress
  nameWithType: IModule.Progress
  fullName: XTMF.IModule.Progress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TMG.GTAModel.PopulationValidation.ProgressColour*
  commentId: Overload:TMG.GTAModel.PopulationValidation.ProgressColour
  isExternal: false
  name: ProgressColour
  nameWithType: PopulationValidation.ProgressColour
  fullName: TMG.GTAModel.PopulationValidation.ProgressColour
- uid: XTMF.IModule.ProgressColour
  commentId: P:XTMF.IModule.ProgressColour
  parent: XTMF.IModule
  isExternal: false
  name: ProgressColour
  nameWithType: IModule.ProgressColour
  fullName: XTMF.IModule.ProgressColour
- uid: System.Tuple{System.Byte,System.Byte,System.Byte}
  commentId: T:System.Tuple{System.Byte,System.Byte,System.Byte}
  parent: System
  definition: System.Tuple`3
  name: Tuple<Byte, Byte, Byte>
  nameWithType: Tuple<Byte, Byte, Byte>
  fullName: System.Tuple<System.Byte, System.Byte, System.Byte>
  nameWithType.vb: Tuple(Of Byte, Byte, Byte)
  fullName.vb: System.Tuple(Of System.Byte, System.Byte, System.Byte)
  name.vb: Tuple(Of Byte, Byte, Byte)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullName.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.PopulationValidation.ZoneSystem*
  commentId: Overload:TMG.GTAModel.PopulationValidation.ZoneSystem
  isExternal: false
  name: ZoneSystem
  nameWithType: PopulationValidation.ZoneSystem
  fullName: TMG.GTAModel.PopulationValidation.ZoneSystem
- uid: TMG.ITravelDemandModel.ZoneSystem
  commentId: P:TMG.ITravelDemandModel.ZoneSystem
  parent: TMG.ITravelDemandModel
  isExternal: false
  name: ZoneSystem
  nameWithType: ITravelDemandModel.ZoneSystem
  fullName: TMG.ITravelDemandModel.ZoneSystem
- uid: TMG.IZoneSystem
  commentId: T:TMG.IZoneSystem
  parent: TMG
  isExternal: false
  name: IZoneSystem
  nameWithType: IZoneSystem
  fullName: TMG.IZoneSystem
- uid: TMG.GTAModel.PopulationValidation.ExitRequest*
  commentId: Overload:TMG.GTAModel.PopulationValidation.ExitRequest
  isExternal: false
  name: ExitRequest
  nameWithType: PopulationValidation.ExitRequest
  fullName: TMG.GTAModel.PopulationValidation.ExitRequest
- uid: XTMF.IModelSystemTemplate.ExitRequest
  commentId: M:XTMF.IModelSystemTemplate.ExitRequest
  parent: XTMF.IModelSystemTemplate
  isExternal: false
  name: ExitRequest()
  nameWithType: IModelSystemTemplate.ExitRequest()
  fullName: XTMF.IModelSystemTemplate.ExitRequest()
  spec.csharp:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModelSystemTemplate.ExitRequest
    name: ExitRequest
    nameWithType: IModelSystemTemplate.ExitRequest
    fullName: XTMF.IModelSystemTemplate.ExitRequest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TMG.GTAModel.PopulationValidation.RuntimeValidation*
  commentId: Overload:TMG.GTAModel.PopulationValidation.RuntimeValidation
  isExternal: false
  name: RuntimeValidation
  nameWithType: PopulationValidation.RuntimeValidation
  fullName: TMG.GTAModel.PopulationValidation.RuntimeValidation
- uid: XTMF.IModule.RuntimeValidation(System.String@)
  commentId: M:XTMF.IModule.RuntimeValidation(System.String@)
  parent: XTMF.IModule
  isExternal: true
  name: RuntimeValidation(String)
  nameWithType: IModule.RuntimeValidation(String)
  fullName: XTMF.IModule.RuntimeValidation(System.String)
  spec.csharp:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.IModule.RuntimeValidation(System.String@)
    name: RuntimeValidation
    nameWithType: IModule.RuntimeValidation
    fullName: XTMF.IModule.RuntimeValidation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.PopulationValidation.Start*
  commentId: Overload:TMG.GTAModel.PopulationValidation.Start
  isExternal: false
  name: Start
  nameWithType: PopulationValidation.Start
  fullName: TMG.GTAModel.PopulationValidation.Start
- uid: XTMF.ISelfContainedModule.Start
  commentId: M:XTMF.ISelfContainedModule.Start
  parent: XTMF.ISelfContainedModule
  isExternal: false
  name: Start()
  nameWithType: ISelfContainedModule.Start()
  fullName: XTMF.ISelfContainedModule.Start()
  spec.csharp:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: XTMF.ISelfContainedModule.Start
    name: Start
    nameWithType: ISelfContainedModule.Start
    fullName: XTMF.ISelfContainedModule.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus*
  commentId: Overload:TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus
  isExternal: false
  name: ValidateEmploymentStatus
  nameWithType: PopulationValidation.ValidateEmploymentStatus
  fullName: TMG.GTAModel.PopulationValidation.ValidateEmploymentStatus
