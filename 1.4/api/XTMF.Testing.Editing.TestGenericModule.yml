### YamlMime:ManagedReference
items:
- uid: XTMF.Testing.Editing.TestGenericModule
  commentId: T:XTMF.Testing.Editing.TestGenericModule
  id: TestGenericModule
  parent: XTMF.Testing.Editing
  children:
  - XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule
  - XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType
  - XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType
  langs:
  - csharp
  - vb
  name: TestGenericModule
  nameWithType: TestGenericModule
  fullName: XTMF.Testing.Editing.TestGenericModule
  type: Class
  source:
    remote:
      path: Code/XTMFCoreTesting/Editing/TestGenericModule.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestGenericModule
    path: ../../XTMF/Code/XTMFCoreTesting/Editing/TestGenericModule.cs
    startLine: 26
  assemblies:
  - XTMFCoreTesting
  namespace: XTMF.Testing.Editing
  syntax:
    content: >-
      [TestClass]

      public class TestGenericModule
    content.vb: >-
      <TestClass>

      Public Class TestGenericModule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule
  commentId: M:XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule
  id: TestAddingAGenericModule
  parent: XTMF.Testing.Editing.TestGenericModule
  langs:
  - csharp
  - vb
  name: TestAddingAGenericModule()
  nameWithType: TestGenericModule.TestAddingAGenericModule()
  fullName: XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule()
  type: Method
  source:
    remote:
      path: Code/XTMFCoreTesting/Editing/TestGenericModule.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestAddingAGenericModule
    path: ../../XTMF/Code/XTMFCoreTesting/Editing/TestGenericModule.cs
    startLine: 64
  assemblies:
  - XTMFCoreTesting
  namespace: XTMF.Testing.Editing
  syntax:
    content: >-
      [TestMethod]

      public void TestAddingAGenericModule()
    content.vb: >-
      <TestMethod>

      Public Sub TestAddingAGenericModule
  overload: XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType
  commentId: M:XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType
  id: TestGettingGenericType
  parent: XTMF.Testing.Editing.TestGenericModule
  langs:
  - csharp
  - vb
  name: TestGettingGenericType()
  nameWithType: TestGenericModule.TestGettingGenericType()
  fullName: XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType()
  type: Method
  source:
    remote:
      path: Code/XTMFCoreTesting/Editing/TestGenericModule.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestGettingGenericType
    path: ../../XTMF/Code/XTMFCoreTesting/Editing/TestGenericModule.cs
    startLine: 109
  assemblies:
  - XTMFCoreTesting
  namespace: XTMF.Testing.Editing
  syntax:
    content: >-
      [TestMethod]

      public void TestGettingGenericType()
    content.vb: >-
      <TestMethod>

      Public Sub TestGettingGenericType
  overload: XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType
  commentId: M:XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType
  id: TestGettingSpecificGenericType
  parent: XTMF.Testing.Editing.TestGenericModule
  langs:
  - csharp
  - vb
  name: TestGettingSpecificGenericType()
  nameWithType: TestGenericModule.TestGettingSpecificGenericType()
  fullName: XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType()
  type: Method
  source:
    remote:
      path: Code/XTMFCoreTesting/Editing/TestGenericModule.cs
      branch: dev-1.4
      repo: https://github.com/TravelModellingGroup/XTMF.git
    id: TestGettingSpecificGenericType
    path: ../../XTMF/Code/XTMFCoreTesting/Editing/TestGenericModule.cs
    startLine: 137
  assemblies:
  - XTMFCoreTesting
  namespace: XTMF.Testing.Editing
  syntax:
    content: >-
      [TestMethod]

      public void TestGettingSpecificGenericType()
    content.vb: >-
      <TestMethod>

      Public Sub TestGettingSpecificGenericType
  overload: XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: XTMF.Testing.Editing
  commentId: N:XTMF.Testing.Editing
  isExternal: false
  name: XTMF.Testing.Editing
  nameWithType: XTMF.Testing.Editing
  fullName: XTMF.Testing.Editing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule*
  commentId: Overload:XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule
  isExternal: false
  name: TestAddingAGenericModule
  nameWithType: TestGenericModule.TestAddingAGenericModule
  fullName: XTMF.Testing.Editing.TestGenericModule.TestAddingAGenericModule
- uid: XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType*
  commentId: Overload:XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType
  isExternal: false
  name: TestGettingGenericType
  nameWithType: TestGenericModule.TestGettingGenericType
  fullName: XTMF.Testing.Editing.TestGenericModule.TestGettingGenericType
- uid: XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType*
  commentId: Overload:XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType
  isExternal: false
  name: TestGettingSpecificGenericType
  nameWithType: TestGenericModule.TestGettingSpecificGenericType
  fullName: XTMF.Testing.Editing.TestGenericModule.TestGettingSpecificGenericType
